<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>获取并还原 Flutter Engine Crash 堆栈</title>
    <url>/2019/10/20/%E8%8E%B7%E5%8F%96%E5%B9%B6%E8%BF%98%E5%8E%9FFlutter-Engine-Crash%E5%A0%86%E6%A0%88/</url>
    <content><![CDATA[<p>&#x5BF9;&#x4E8E;Flutter&#x6765;&#x8BF4;&#xFF0C;&#x5927;&#x90E8;&#x5206;crash&#x5176;&#x5B9E;&#x53D1;&#x751F;&#x5728;flutter engine&#x4E2D;&#xFF0C;&#x5373;libflutter.so&#x4E2D;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;native crash&#xFF0C;&#x5BF9;&#x4E8E;&#x8FD9;&#x90E8;&#x5206;&#x5F02;&#x5E38;&#x7684;&#x5806;&#x6808;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x5982;&#x4F55;&#x8FDB;&#x884C;&#x8FD8;&#x539F;&#x5462;&#x3002;</p><a id="more"></a><p>&#x9996;&#x5148;&#x6211;&#x4EEC;&#x8981;&#x501F;&#x52A9;crash&#x6355;&#x83B7;&#x5DE5;&#x5177;&#x6355;&#x83B7;native crash&#xFF0C;&#x6BD4;&#x5982;&#x53EF;&#x4EE5;&#x501F;&#x52A9;bugly&#xFF0C;xcrash(<a href="https://github.com/iqiyi/xCrash" target="_blank" rel="noopener">https://github.com/iqiyi/xCrash</a>)&#xFF0C;&#x751A;&#x81F3;&#x662F;&#x7CFB;&#x7EDF;&#x7684;crash dump&#x65E5;&#x5FD7;&#xFF0C;&#x5047;&#x8BBE;&#x83B7;&#x53D6;&#x5230;&#x5982;&#x4E0B;&#x5806;&#x6808;&#xFF0C;&#x5E76;&#x5C06;&#x5176;&#x5185;&#x5BB9;&#x4FDD;&#x5B58;&#x5230;stacktrace.txt&#x6587;&#x4EF6;&#x4E2D;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">*** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***</span><br><span class="line">Build fingerprint: <span class="string">&apos;OnePlus/OnePlus6/OnePlus6:9/PKQ1.180716.001/1907302100:user/release-keys&apos;</span></span><br><span class="line">ABI: <span class="string">&apos;arm&apos;</span></span><br><span class="line">pid: <span class="number">1551</span>, tid: <span class="number">1551</span>, name: b_buyer.example  &gt;&gt;&gt; com.vdian.flutter.wdb_buyer.example &lt;&lt;&lt;</span><br><span class="line">signal <span class="number">6</span> (SIGABRT), code <span class="number">-6</span> (SI_TKILL), fault addr --------</span><br><span class="line">Abort message: <span class="string">&apos;[FATAL:flutter/shell/platform/android/platform_view_android_jni.cc(76)] Check failed: CheckException(env).  &apos;</span></span><br><span class="line">    r0  <span class="number">00000000</span>  r1  <span class="number">0000060f</span>  r2  <span class="number">00000006</span>  r3  <span class="number">00000008</span></span><br><span class="line">    r4  <span class="number">0000060f</span>  r5  <span class="number">0000060f</span>  r6  ffd6774c  r7  <span class="number">0000010</span>c</span><br><span class="line">    r8  ffd67834  r9  <span class="number">0000020</span>e  r10 e6123a8c  r11 <span class="number">00000085</span></span><br><span class="line">    ip  ffd676e8  sp  ffd67738  lr  e7d64fe9  pc  e7d5ce36</span><br><span class="line"></span><br><span class="line">backtrace:</span><br><span class="line">    #<span class="number">00</span> pc <span class="number">0001</span>ce36  /system/lib/libc.so (abort+<span class="number">58</span>)</span><br><span class="line">    #<span class="number">01</span> pc <span class="number">0014053</span>b  /data/app/com.vdian.flutter.wdb_buyer.example-da2lXUv43cG8AaX3DYe5RQ==/lib/arm/libflutter.so (offset <span class="number">0x11d000</span>)</span><br><span class="line">    #<span class="number">02</span> pc <span class="number">00137551</span>  /data/app/com.vdian.flutter.wdb_buyer.example-da2lXUv43cG8AaX3DYe5RQ==/lib/arm/libflutter.so (offset <span class="number">0x11d000</span>)</span><br><span class="line">    #<span class="number">03</span> pc <span class="number">00136319</span>  /data/app/com.vdian.flutter.wdb_buyer.example-da2lXUv43cG8AaX3DYe5RQ==/lib/arm/libflutter.so (offset <span class="number">0x11d000</span>)</span><br><span class="line">    #<span class="number">04</span> pc <span class="number">0016741</span>d  /data/app/com.vdian.flutter.wdb_buyer.example-da2lXUv43cG8AaX3DYe5RQ==/lib/arm/libflutter.so (offset <span class="number">0x11d000</span>)</span><br><span class="line">    #<span class="number">05</span> pc <span class="number">00140</span>bcb  /data/app/com.vdian.flutter.wdb_buyer.example-da2lXUv43cG8AaX3DYe5RQ==/lib/arm/libflutter.so (offset <span class="number">0x11d000</span>)</span><br><span class="line">    #<span class="number">06</span> pc <span class="number">0014389</span>d  /data/app/com.vdian.flutter.wdb_buyer.example-da2lXUv43cG8AaX3DYe5RQ==/lib/arm/libflutter.so (offset <span class="number">0x11d000</span>)</span><br><span class="line">    #<span class="number">07</span> pc <span class="number">0000f</span>239  /system/lib/libutils.so (_ZN7android6Looper9pollInnerEi+<span class="number">632</span>)</span><br><span class="line">    #<span class="number">08</span> pc <span class="number">0000</span>ef43  /system/lib/libutils.so (_ZN7android6Looper8pollOnceEiPiS1_PPv+<span class="number">26</span>)</span><br><span class="line">    #<span class="number">09</span> pc <span class="number">000</span>b928b  /system/lib/libandroid_runtime.so (_ZN7androidL38android_os_MessageQueue_nativePollOnceEP7_JNIEnvP8_jobjectxi+<span class="number">24</span>)</span><br><span class="line">    #<span class="number">10</span> pc <span class="number">003</span>c4215  /system/framework/arm/boot-framework.oat (android.media.MediaExtractor.seekTo [DEDUPED]+<span class="number">92</span>)</span><br><span class="line">    #<span class="number">11</span> pc <span class="number">0092f</span>8a5  /system/framework/arm/boot-framework.oat (android.os.MessageQueue.next+<span class="number">204</span>)</span><br><span class="line">    #<span class="number">12</span> pc <span class="number">0092</span>d955  /system/framework/arm/boot-framework.oat (android.os.Looper.loop+<span class="number">548</span>)</span><br><span class="line">    #<span class="number">13</span> pc <span class="number">007784</span>a3  /system/framework/arm/boot-framework.oat (android.app.ActivityThread.main+<span class="number">674</span>)</span><br><span class="line">    #<span class="number">14</span> pc <span class="number">0040</span>dd75  /system/lib/libart.so (art_quick_invoke_stub_internal+<span class="number">68</span>)</span><br><span class="line">    #<span class="number">15</span> pc <span class="number">003e735f</span>  /system/lib/libart.so (art_quick_invoke_static_stub+<span class="number">222</span>)</span><br><span class="line">    #<span class="number">16</span> pc <span class="number">000</span>a1027  /system/lib/libart.so (_ZN3art9ArtMethod6InvokeEPNS_6ThreadEPjjPNS_6JValueEPKc+<span class="number">154</span>)</span><br><span class="line">    #<span class="number">17</span> pc <span class="number">00347e25</span>  /system/lib/libart.so (_ZN3art12_GLOBAL__N_118InvokeWithArgArrayERKNS_33ScopedObjectAccessAlreadyRunnableEPNS_9ArtMethodEPNS0_8ArgArrayEPNS_6JValueEPKc+<span class="number">52</span>)</span><br><span class="line">    #<span class="number">18</span> pc <span class="number">00349275</span>  /system/lib/libart.so (_ZN3art12InvokeMethodERKNS_33ScopedObjectAccessAlreadyRunnableEP8_jobjectS4_S4_j+<span class="number">1024</span>)</span><br><span class="line">    #<span class="number">19</span> pc <span class="number">002f</span>b36d  /system/lib/libart.so (_ZN3artL13Method_invokeEP7_JNIEnvP8_jobjectS3_P13_jobjectArray+<span class="number">40</span>)</span><br><span class="line">    #<span class="number">20</span> pc <span class="number">0011326f</span>  /system/framework/arm/boot-core-oj.oat (java.lang.Class.getDeclaredMethodInternal [DEDUPED]+<span class="number">110</span>)</span><br><span class="line">    #<span class="number">21</span> pc <span class="number">00</span>a2b5e3  /system/framework/arm/boot-framework.oat (com.android.<span class="built_in">int</span>ernal.os.RuntimeInit$MethodAndArgsCaller.run+<span class="number">114</span>)</span><br><span class="line">    #<span class="number">22</span> pc <span class="number">00</span>a314cd  /system/framework/arm/boot-framework.oat (com.android.<span class="built_in">int</span>ernal.os.ZygoteInit.main+<span class="number">2836</span>)</span><br><span class="line">    #<span class="number">23</span> pc <span class="number">0040</span>dd75  /system/lib/libart.so (art_quick_invoke_stub_internal+<span class="number">68</span>)</span><br><span class="line">    #<span class="number">24</span> pc <span class="number">003e735f</span>  /system/lib/libart.so (art_quick_invoke_static_stub+<span class="number">222</span>)</span><br><span class="line">    #<span class="number">25</span> pc <span class="number">000</span>a1027  /system/lib/libart.so (_ZN3art9ArtMethod6InvokeEPNS_6ThreadEPjjPNS_6JValueEPKc+<span class="number">154</span>)</span><br><span class="line">    #<span class="number">26</span> pc <span class="number">00347e25</span>  /system/lib/libart.so (_ZN3art12_GLOBAL__N_118InvokeWithArgArrayERKNS_33ScopedObjectAccessAlreadyRunnableEPNS_9ArtMethodEPNS0_8ArgArrayEPNS_6JValueEPKc+<span class="number">52</span>)</span><br><span class="line">    #<span class="number">27</span> pc <span class="number">00347</span>c4f  /system/lib/libart.so (_ZN3art17InvokeWithVarArgsERKNS_33ScopedObjectAccessAlreadyRunnableEP8_jobjectP10_jmethodIDSt9__va_list+<span class="number">310</span>)</span><br><span class="line">    #<span class="number">28</span> pc <span class="number">0028</span>eb11  /system/lib/libart.so (_ZN3art3JNI21CallStaticVoidMethodVEP7_JNIEnvP7_jclassP10_jmethodIDSt9__va_list+<span class="number">444</span>)</span><br><span class="line">    #<span class="number">29</span> pc <span class="number">0006</span>dcf3  /system/lib/libandroid_runtime.so (_ZN7_JNIEnv20CallStaticVoidMethodEP7_jclassP10_jmethodIDz+<span class="number">30</span>)</span><br><span class="line">    #<span class="number">30</span> pc <span class="number">0006f</span>fd1  /system/lib/libandroid_runtime.so (_ZN7android14AndroidRuntime5startEPKcRKNS_6VectorINS_7String8EEEb+<span class="number">592</span>)</span><br><span class="line">    #<span class="number">31</span> pc <span class="number">00001</span>b1b  /system/bin/app_process32 (main+<span class="number">882</span>)</span><br><span class="line">    #<span class="number">32</span> pc <span class="number">0008</span>af6d  /system/lib/libc.so (__libc_init+<span class="number">48</span>)</span><br><span class="line">    #<span class="number">33</span> pc <span class="number">00001767</span>  /system/bin/app_process32 (_start_main+<span class="number">38</span>)</span><br><span class="line">    #<span class="number">34</span> pc <span class="number">00000306</span>  &lt;anonymous:ea2ab000&gt;</span><br></pre></td></tr></table></figure><p>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x4FDD;&#x5B58;&#x5806;&#x6808;&#x65F6;&#xFF0C;&#x4E00;&#x5B9A;&#x8981;&#x5C06;&#x5E26;&#x7B2C;&#x4E00;&#x884C;&#x5E26;&#x661F;&#x53F7;&#x7684;&#x5185;&#x5BB9;&#x4FDD;&#x7559;&#xFF0C;&#x56E0;&#x4E3A;&#x5806;&#x6808;&#x8FD8;&#x539F;&#x65F6;&#x4F1A;&#x5BF9;&#x8BE5;&#x884C;&#x8FDB;&#x884C;&#x8BC6;&#x522B;&#xFF0C;&#x518D;&#x8FDB;&#x884C;&#x8FD8;&#x539F;&#x7684;&#x3002;</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">*** **</span><span class="bullet">* *</span><span class="strong">** **</span><span class="bullet">* *</span><span class="strong">** **</span><span class="bullet">* *</span><span class="strong">** **</span><span class="bullet">* *</span><span class="strong">** **</span><span class="bullet">* *</span><span class="strong">** **</span><span class="bullet">* *</span><span class="strong">** **</span><span class="bullet">* *</span><span class="strong">** **</span>*</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x9700;&#x8981;&#x83B7;&#x53D6;&#x5BF9;&#x4E8E;App&#x7248;&#x672C;&#x6784;&#x5EFA;&#x65F6;&#x4F7F;&#x7528;&#x7684;engine&#x7684;revision&#xFF0C;&#x81F3;&#x4E8E;&#x8FD9;&#x4E2A;revision&#xFF0C;&#x6211;&#x5EFA;&#x8BAE;&#x5728;&#x6253;&#x5305;&#x7684;&#x65F6;&#x5019;&#x76F4;&#x63A5;&#x6253;&#x5165;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C;&#x5728;crash&#x7684;&#x65F6;&#x5019;&#x5C06;&#x5176;&#x9644;&#x52A0;&#x5230;&#x989D;&#x5916;&#x4FE1;&#x606F;&#x4E2D;&#x8FDB;&#x884C;&#x4E0A;&#x62A5;&#xFF0C;&#x6BD4;&#x5982;&#x653E;&#x5728;BuildConfig&#x4E2D;&#xFF0C;&#x4EA6;&#x6216;&#x662F;&#x6254;&#x5230;resources&#x4E2D;&#xFF0C;&#x600E;&#x4E48;&#x5904;&#x7406;&#x65B9;&#x4FBF;&#x600E;&#x4E48;&#x6765;&#xFF0C;&#x6BD4;&#x5982;&#x8FD9;&#x91CC;&#x63D0;&#x4F9B;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x6CE8;&#x5165;&#x3002;</p><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">android {</span><br><span class="line">    buildTypes {</span><br><span class="line">        release {</span><br><span class="line">            <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>engine revision&#x7684;&#x503C;</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             */</span></span></span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//BuildConfig&#x65B9;&#x5F0F;&#x6CE8;&#x5165;</span></span><br><span class="line">            buildConfigField(<span class="string">&quot;String&quot;</span>, <span class="string">&quot;FLUTTER_REVISION&quot;</span>, <span class="string">&quot;\&quot;<span class="subst">${revision}</span>\&quot;&quot;</span>)</span><br><span class="line">            <span class="comment">//&#x8D44;&#x6E90;&#x65B9;&#x5F0F;&#x6CE8;&#x5165;</span></span><br><span class="line">            resValue(<span class="string">&quot;string&quot;</span>, <span class="string">&quot;FLUTTER_REVISION&quot;</span>, <span class="string">&quot;<span class="subst">${revision}</span>&quot;</span>)</span><br><span class="line">        }</span><br><span class="line">        debug {</span><br><span class="line">            <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>engine revision&#x7684;&#x503C;</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             */</span></span></span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//BuildConfig&#x65B9;&#x5F0F;&#x6CE8;&#x5165;</span></span><br><span class="line">            buildConfigField <span class="string">&quot;String&quot;</span>, <span class="string">&quot;FLUTTER_REVISION&quot;</span>, <span class="string">&quot;\&quot;<span class="subst">${revision}</span>\&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//&#x8D44;&#x6E90;&#x65B9;&#x5F0F;&#x6CE8;&#x5165;</span></span><br><span class="line">            resValue(<span class="string">&quot;string&quot;</span>, <span class="string">&quot;FLUTTER_REVISION&quot;</span>, <span class="string">&quot;<span class="subst">${revision}</span>&quot;</span>)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>flutter engine revision&#x7684;&#x503C;&#x4F4D;&#x4E8E;&#x8BE5;&#x6587;&#x4EF6;&#x4E2D;</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">/<span class="type">path</span>/<span class="keyword">to</span>/flutter/bin/<span class="type">internal</span>/engine.<span class="keyword">version</span></span><br></pre></td></tr></table></figure><p>&#x5047;&#x8BBE;&#x6B64;&#x65F6;&#x8BE5;&#x6587;&#x4EF6;&#x7684;&#x5185;&#x5BB9;&#x4E3A;</p><figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">b<span class="number">863200</span><span class="keyword">c</span><span class="number">37</span>df<span class="number">4</span>ed<span class="number">378042</span>de<span class="number">11</span><span class="keyword">c</span><span class="number">4e9</span>ff<span class="number">34e4</span>e<span class="number">58</span><span class="keyword">c</span><span class="number">9</span></span><br></pre></td></tr></table></figure><p>&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5982;&#x4E0B;url&#x6D4F;&#x89C8;&#x8BE5;revision&#x4E0B;&#x7684;&#x76F8;&#x5173;&#x6587;&#x4EF6;</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">https:<span class="regexp">//</span>console.cloud.google.com<span class="regexp">/storage/</span>browser<span class="regexp">/flutter_infra/</span>flutter<span class="regexp">/b863200c37df4ed378042de11c4e9ff34e4e58c9</span></span><br></pre></td></tr></table></figure><p>&#x901A;&#x8FC7;&#x5982;&#x4E0B;url&#x76F4;&#x63A5;&#x4E0B;&#x8F7D;&#x5BF9;&#x5E94;&#x7684;&#x5E26;&#x7B26;&#x53F7;&#x8868;&#x7684;libflutter.so&#x6587;&#x4EF6;<br></p><figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">https://storage.cloud.google.com/flutter_infra/flutter/b<span class="number">863200</span><span class="keyword">c</span><span class="number">37</span>df<span class="number">4</span>ed<span class="number">378042</span>de<span class="number">11</span><span class="keyword">c</span><span class="number">4e9</span>ff<span class="number">34e4</span>e<span class="number">58</span><span class="keyword">c</span><span class="number">9</span>/android-arm-<span class="keyword">release</span>/symbols.zip</span><br></pre></td></tr></table></figure><p></p><p>&#x8FD9;&#x91CC;&#x6CE8;&#x610F;&#xFF0C;android-arm&#x662F;debug&#x6784;&#x5EFA;&#x65F6;&#x5BF9;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#xFF0C;android-arm-profile&#x662F;&#x5BF9;&#x5E94;&#x7684;&#x6027;&#x80FD;&#x68C0;&#x6D4B;&#x6784;&#x5EFA;&#x65F6;&#x7684;&#x6587;&#x4EF6;&#xFF0C;android-arm-release&#x662F;release&#x6784;&#x5EFA;&#x65F6;&#x5BF9;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5BF9;&#x4E8E;&#x7EBF;&#x4E0A;&#x7248;&#x672C;&#xFF0C;&#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x9009;&#x62E9;android-arm-release&#x4E0B;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x5982;&#x679C;&#x662F;arm64&#x7684;&#xFF0C;&#x5219;&#x5E94;&#x8BE5;&#x9009;&#x62E9;&#x5BF9;&#x5E94;cpu abi&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5982;android-arm64-release</p><p>&#x4E0B;&#x8F7D;symblos.zip&#x6587;&#x4EF6;&#x5E76;&#x5C06;&#x4FDD;&#x5B58;&#x4E3A;symbols.zip&#x6587;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x5176;&#x89E3;&#x538B;</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">cd <span class="regexp">/path/</span>to<span class="regexp">/symbols.zip/</span>&#x7236;&#x76EE;&#x5F55;</span><br><span class="line">mkdir -p .<span class="regexp">/symbols/</span>armeabi-v7a</span><br><span class="line">unzip symbols.zip -d .<span class="regexp">/symbols/</span>armeabi-v7a</span><br></pre></td></tr></table></figure><p>&#x5229;&#x7528;ndk-stack&#x5C06;&#x5806;&#x6808;&#x8FDB;&#x884C;&#x8FD8;&#x539F;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/path/</span>to<span class="regexp">/android-ndk-r16b/</span>ndk-stack -sym <span class="regexp">/path/</span>to<span class="regexp">/symbols/</span>armeabi-v7a -<span class="keyword">dump</span> <span class="regexp">/path/</span>to<span class="regexp">/stacktrace.txt</span></span><br></pre></td></tr></table></figure><p>&#x5F97;&#x5230;&#x5982;&#x4E0B;&#x5806;&#x6808;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x53D1;&#x751F;crash&#x7684;&#x4EE3;&#x7801;&#x884C;&#x6570;&#x5DF2;&#x7ECF;&#x5F88;&#x6E05;&#x695A;&#x7684;&#x5C55;&#x73B0;&#x51FA;&#x6765;&#x4E86;&#x3002;</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">********** Crash dump: **********</span><br><span class="line">Build fingerprin<span class="variable">t:</span> <span class="string">&apos;OnePlus/OnePlus6/OnePlus6:9/PKQ1.180716.001/1907302100:user/release-keys&apos;</span></span><br><span class="line">pid: <span class="number">1551</span>, tid: <span class="number">1551</span>, name: b_buyer.example  &gt;&gt;&gt; <span class="keyword">com</span>.vdian.flutter.wdb_buyer.example &lt;&lt;&lt;</span><br><span class="line">signal <span class="number">6</span> (SIGABRT), code -<span class="number">6</span> (SI_TKILL), fault addr --------</span><br><span class="line">Stack frame #<span class="number">00</span> <span class="keyword">pc</span> <span class="number">0001</span>ce36  /<span class="built_in">system</span>/lib/libc.<span class="keyword">so</span> (abort+<span class="number">58</span>)</span><br><span class="line">Stack frame #<span class="number">01</span> <span class="keyword">pc</span> <span class="number">0014053</span><span class="keyword">b</span>  /data/app/<span class="keyword">com</span>.vdian.flutter.wdb_buyer.example-da2lXUv43cG8AaX3DYe5RQ==/lib/arm/libflutter.<span class="keyword">so</span> (offset <span class="number">0</span>x11d000): Routine ~LogMessage at /<span class="keyword">b</span>/s/<span class="keyword">w</span>/ir/<span class="keyword">k</span>/src/out/android_release/../../flutter/fml/logging.<span class="keyword">cc</span>:<span class="number">92</span></span><br><span class="line">Stack frame #<span class="number">02</span> <span class="keyword">pc</span> <span class="number">00137551</span>  /data/app/<span class="keyword">com</span>.vdian.flutter.wdb_buyer.example-da2lXUv43cG8AaX3DYe5RQ==/lib/arm/libflutter.<span class="keyword">so</span> (offset <span class="number">0</span>x11d000): Routine flutter::FlutterViewHandlePlatformMessage(_JNIEnv*, _jobject*, _jstring*, _jobject*, <span class="keyword">int</span>) at /<span class="keyword">b</span>/s/<span class="keyword">w</span>/ir/<span class="keyword">k</span>/src/out/android_release/../../flutter/<span class="keyword">shell</span>/platform/android/platform_view_android_jni.<span class="keyword">cc</span>:<span class="number">76</span></span><br><span class="line">Stack frame #<span class="number">03</span> <span class="keyword">pc</span> <span class="number">00136319</span>  /data/app/<span class="keyword">com</span>.vdian.flutter.wdb_buyer.example-da2lXUv43cG8AaX3DYe5RQ==/lib/arm/libflutter.<span class="keyword">so</span> (offset <span class="number">0</span>x11d000): Routine flutter::PlatformViewAndroid::HandlePlatformMessage(fm<span class="variable">l:</span>:RefPtr&lt;flutter::PlatformMessage&gt;) at /<span class="keyword">b</span>/s/<span class="keyword">w</span>/ir/<span class="keyword">k</span>/src/out/android_release/../../flutter/<span class="keyword">shell</span>/platform/android/platform_view_android.<span class="keyword">cc</span>:<span class="number">183</span></span><br><span class="line">Stack frame #<span class="number">04</span> <span class="keyword">pc</span> <span class="number">0016741</span>d  /data/app/<span class="keyword">com</span>.vdian.flutter.wdb_buyer.example-da2lXUv43cG8AaX3DYe5RQ==/lib/arm/libflutter.<span class="keyword">so</span> (offset <span class="number">0</span>x11d000): Routine operator() at /<span class="keyword">b</span>/s/<span class="keyword">w</span>/ir/<span class="keyword">k</span>/src/out/android_release/../../flutter/<span class="keyword">shell</span>/common/<span class="keyword">shell</span>.<span class="keyword">cc</span>:<span class="number">931</span></span><br><span class="line">Stack frame #<span class="number">05</span> <span class="keyword">pc</span> <span class="number">00140</span>bcb  /data/app/<span class="keyword">com</span>.vdian.flutter.wdb_buyer.example-da2lXUv43cG8AaX3DYe5RQ==/lib/arm/libflutter.<span class="keyword">so</span> (offset <span class="number">0</span>x11d000): Routine std::__1::<span class="function"><span class="keyword">function</span>&lt;<span class="title">void</span> <span class="params">()</span>&gt;::<span class="title">operator</span><span class="params">()</span><span class="params">()</span> <span class="title">const</span> <span class="title">at</span> /<span class="title">b</span>/<span class="title">s</span>/<span class="title">w</span>/<span class="title">ir</span>/<span class="title">k</span>/<span class="title">src</span>/<span class="title">out</span>/<span class="title">android_release</span>/../../<span class="title">third_party</span>/<span class="title">libcxx</span>/<span class="title">include</span>/<span class="title">functional</span>:2419</span></span><br><span class="line">Stack frame #<span class="number">06</span> <span class="keyword">pc</span> <span class="number">0014389</span>d  /data/app/<span class="keyword">com</span>.vdian.flutter.wdb_buyer.example-da2lXUv43cG8AaX3DYe5RQ==/lib/arm/libflutter.<span class="keyword">so</span> (offset <span class="number">0</span>x11d000): Routine fm<span class="variable">l:</span>:MessageLoopAndroid::OnEventFired() at /<span class="keyword">b</span>/s/<span class="keyword">w</span>/ir/<span class="keyword">k</span>/src/out/android_release/../../flutter/fml/platform/android/message_loop_android.<span class="keyword">cc</span>:<span class="number">92</span></span><br><span class="line">Stack frame #<span class="number">07</span> <span class="keyword">pc</span> <span class="number">0000</span>f239  /<span class="built_in">system</span>/lib/libutils.<span class="keyword">so</span> (_ZN7android6Looper9pollInnerEi+<span class="number">632</span>)</span><br><span class="line">Stack frame #<span class="number">08</span> <span class="keyword">pc</span> <span class="number">0000</span>ef43  /<span class="built_in">system</span>/lib/libutils.<span class="keyword">so</span> (_ZN7android6Looper8pollOnceEiPiS1_PPv+<span class="number">26</span>)</span><br><span class="line">Stack frame #<span class="number">09</span> <span class="keyword">pc</span> <span class="number">000</span>b928b  /<span class="built_in">system</span>/lib/libandroid_runtime.<span class="keyword">so</span> (_ZN7androidL38android_os_MessageQueue_nativePollOnceEP7_JNIEnvP8_jobjectxi+<span class="number">24</span>)</span><br><span class="line">Stack frame #<span class="number">10</span> <span class="keyword">pc</span> <span class="number">003</span>c4215  /<span class="built_in">system</span>/framework/arm/boot-framework.oat (android.media.MediaExtractor.seekTo [DEDUPED]+<span class="number">92</span>)</span><br><span class="line">Stack frame #<span class="number">11</span> <span class="keyword">pc</span> <span class="number">0092</span>f8a5  /<span class="built_in">system</span>/framework/arm/boot-framework.oat (android.os.MessageQueue.<span class="keyword">next</span>+<span class="number">204</span>)</span><br><span class="line">Stack frame #<span class="number">12</span> <span class="keyword">pc</span> <span class="number">0092</span>d955  /<span class="built_in">system</span>/framework/arm/boot-framework.oat (android.os.Looper.loop+<span class="number">548</span>)</span><br><span class="line">Stack frame #<span class="number">13</span> <span class="keyword">pc</span> <span class="number">007784</span>a3  /<span class="built_in">system</span>/framework/arm/boot-framework.oat (android.app.ActivityThread.main+<span class="number">674</span>)</span><br><span class="line">Stack frame #<span class="number">14</span> <span class="keyword">pc</span> <span class="number">0040</span>dd75  /<span class="built_in">system</span>/lib/libart.<span class="keyword">so</span> (art_quick_invoke_stub_internal+<span class="number">68</span>)</span><br><span class="line">Stack frame #<span class="number">15</span> <span class="keyword">pc</span> <span class="number">003</span>e735f  /<span class="built_in">system</span>/lib/libart.<span class="keyword">so</span> (art_quick_invoke_static_stub+<span class="number">222</span>)</span><br><span class="line">Stack frame #<span class="number">16</span> <span class="keyword">pc</span> <span class="number">000</span>a1027  /<span class="built_in">system</span>/lib/libart.<span class="keyword">so</span> (_ZN3art9ArtMethod6InvokeEPNS_6ThreadEPjjPNS_6JValueEPKc+<span class="number">154</span>)</span><br><span class="line">Stack frame #<span class="number">17</span> <span class="keyword">pc</span> <span class="number">00347</span>e25  /<span class="built_in">system</span>/lib/libart.<span class="keyword">so</span> (_ZN3art12_GLOBAL__N_118InvokeWithArgArrayERKNS_33ScopedObjectAccessAlreadyRunnableEPNS_9ArtMethodEPNS0_8ArgArrayEPNS_6JValueEPKc+<span class="number">52</span>)</span><br><span class="line">Stack frame #<span class="number">18</span> <span class="keyword">pc</span> <span class="number">00349275</span>  /<span class="built_in">system</span>/lib/libart.<span class="keyword">so</span> (_ZN3art12InvokeMethodERKNS_33ScopedObjectAccessAlreadyRunnableEP8_jobjectS4_S4_j+<span class="number">1024</span>)</span><br><span class="line">Stack frame #<span class="number">19</span> <span class="keyword">pc</span> <span class="number">002</span>fb36d  /<span class="built_in">system</span>/lib/libart.<span class="keyword">so</span> (_ZN3artL13Method_invokeEP7_JNIEnvP8_jobjectS3_P13_jobjectArray+<span class="number">40</span>)</span><br><span class="line">Stack frame #<span class="number">20</span> <span class="keyword">pc</span> <span class="number">0011326</span><span class="keyword">f</span>  /<span class="built_in">system</span>/framework/arm/boot-core-oj.oat (java.lang.Class.getDeclaredMethodInternal [DEDUPED]+<span class="number">110</span>)</span><br><span class="line">Stack frame #<span class="number">21</span> <span class="keyword">pc</span> <span class="number">00</span>a2b5e3  /<span class="built_in">system</span>/framework/arm/boot-framework.oat (<span class="keyword">com</span>.android.internal.os.RuntimeInit$MethodAndArgsCaller.run+<span class="number">114</span>)</span><br><span class="line">Stack frame #<span class="number">22</span> <span class="keyword">pc</span> <span class="number">00</span>a314cd  /<span class="built_in">system</span>/framework/arm/boot-framework.oat (<span class="keyword">com</span>.android.internal.os.ZygoteInit.main+<span class="number">2836</span>)</span><br><span class="line">Stack frame #<span class="number">23</span> <span class="keyword">pc</span> <span class="number">0040</span>dd75  /<span class="built_in">system</span>/lib/libart.<span class="keyword">so</span> (art_quick_invoke_stub_internal+<span class="number">68</span>)</span><br><span class="line">Stack frame #<span class="number">24</span> <span class="keyword">pc</span> <span class="number">003</span>e735f  /<span class="built_in">system</span>/lib/libart.<span class="keyword">so</span> (art_quick_invoke_static_stub+<span class="number">222</span>)</span><br><span class="line">Stack frame #<span class="number">25</span> <span class="keyword">pc</span> <span class="number">000</span>a1027  /<span class="built_in">system</span>/lib/libart.<span class="keyword">so</span> (_ZN3art9ArtMethod6InvokeEPNS_6ThreadEPjjPNS_6JValueEPKc+<span class="number">154</span>)</span><br><span class="line">Stack frame #<span class="number">26</span> <span class="keyword">pc</span> <span class="number">00347</span>e25  /<span class="built_in">system</span>/lib/libart.<span class="keyword">so</span> (_ZN3art12_GLOBAL__N_118InvokeWithArgArrayERKNS_33ScopedObjectAccessAlreadyRunnableEPNS_9ArtMethodEPNS0_8ArgArrayEPNS_6JValueEPKc+<span class="number">52</span>)</span><br><span class="line">Stack frame #<span class="number">27</span> <span class="keyword">pc</span> <span class="number">00347</span>c4f  /<span class="built_in">system</span>/lib/libart.<span class="keyword">so</span> (_ZN3art17InvokeWithVarArgsERKNS_33ScopedObjectAccessAlreadyRunnableEP8_jobjectP10_jmethodIDSt9__va_list+<span class="number">310</span>)</span><br><span class="line">Stack frame #<span class="number">28</span> <span class="keyword">pc</span> <span class="number">0028</span>eb11  /<span class="built_in">system</span>/lib/libart.<span class="keyword">so</span> (_ZN3art3JNI21CallStaticVoidMethodVEP7_JNIEnvP7_jclassP10_jmethodIDSt9__va_list+<span class="number">444</span>)</span><br><span class="line">Stack frame #<span class="number">29</span> <span class="keyword">pc</span> <span class="number">0006</span>dcf3  /<span class="built_in">system</span>/lib/libandroid_runtime.<span class="keyword">so</span> (_ZN7_JNIEnv20CallStaticVoidMethodEP7_jclassP10_jmethodIDz+<span class="number">30</span>)</span><br><span class="line">Stack frame #<span class="number">30</span> <span class="keyword">pc</span> <span class="number">0006</span>ffd1  /<span class="built_in">system</span>/lib/libandroid_runtime.<span class="keyword">so</span> (_ZN7android14AndroidRuntime5startEPKcRKNS_6VectorINS_7String8EEEb+<span class="number">592</span>)</span><br><span class="line">Stack frame #<span class="number">31</span> <span class="keyword">pc</span> <span class="number">00001</span>b1b  /<span class="built_in">system</span>/bin/app_process32 (main+<span class="number">882</span>)</span><br><span class="line">Stack frame #<span class="number">32</span> <span class="keyword">pc</span> <span class="number">0008</span>af6d  /<span class="built_in">system</span>/lib/libc.<span class="keyword">so</span> (__libc_init+<span class="number">48</span>)</span><br><span class="line">Stack frame #<span class="number">33</span> <span class="keyword">pc</span> <span class="number">00001767</span>  /<span class="built_in">system</span>/bin/app_process32 (_start_main+<span class="number">38</span>)</span><br><span class="line">Stack frame #<span class="number">34</span> <span class="keyword">pc</span> <span class="number">00000306</span>  &lt;anonymou<span class="variable">s:ea2ab000</span>&gt;</span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x4F60;&#x53EA;&#x60F3;&#x83B7;&#x53D6;&#x5806;&#x6808;&#x4E2D;&#x67D0;&#x4E00;&#x884C;&#x8C03;&#x7528;&#x7684;&#x4EE3;&#x7801;&#x884C;&#x6570;&#xFF0C;&#x6BD4;&#x5982;</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">#<span class="number">01</span> pc <span class="number">0014053</span>b  /data/app/com<span class="selector-class">.vdian</span><span class="selector-class">.flutter</span><span class="selector-class">.wdb_buyer</span><span class="selector-class">.example-da2lXUv43cG8AaX3DYe5RQ</span>==/lib/arm/libflutter<span class="selector-class">.so</span> (offset <span class="number">0</span>x11d000)</span><br></pre></td></tr></table></figure><p>&#x53EF;&#x4EE5;&#x4F7F;&#x7528;addr2line&#x547D;&#x4EE4;&#x83B7;&#x53D6;&#xFF0C;&#x9996;&#x5148;&#x5F97;&#x5230;pc&#x7684;&#x503C;0014053b&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;addr2line&#x547D;&#x4EE4;&#x8FDB;&#x884C;&#x83B7;&#x53D6;</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/path/</span>to<span class="regexp">/android-ndk-r16b/</span>toolchains<span class="regexp">/arm-linux-androideabi-4.9/</span>prebuilt<span class="regexp">/darwin-x86_64/</span>bin<span class="regexp">/arm-linux-androideabi-addr2line -f -e /</span>path<span class="regexp">/to/</span>symbols<span class="regexp">/armeabi-v7a/</span>libflutter.so <span class="number">0014053</span>b</span><br></pre></td></tr></table></figure><p>&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x8F93;&#x51FA;&#x5185;&#x5BB9;</p><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">~LogMessage</span><br><span class="line">/b/<span class="regexp">s/w/ir/k</span><span class="regexp">/src/out</span><span class="regexp">/android_release/</span>../../flutter/fml/logging.cc:<span class="number">92</span></span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x4F60;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x81EA;&#x5DF1;&#x6784;&#x5EFA;&#x7684;engine&#x5F15;&#x64CE;&#x4EE3;&#x7801;&#xFF0C;&#x90A3;&#x4E48;&#x5728;&#x6784;&#x5EFA;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x8BF7;&#x52A1;&#x5FC5;&#x4FDD;&#x7559;&#x5E26;&#x7B26;&#x53F7;&#x7684;libflutter.so&#x6587;&#x4EF6;&#xFF0C;&#x5426;&#x5219;&#x5C06;&#x65E0;&#x6CD5;&#x8FD8;&#x539F;&#x5806;&#x6808;&#x3002;</p><p>&#x5982;&#x679C;&#x4F60;&#x4F7F;&#x7528;bugly&#x8FDB;&#x884C;native crash&#x6355;&#x83B7;&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x501F;&#x52A9;bugly&#x7684;&#x7B26;&#x53F7;&#x8868;&#x4E0A;&#x4F20;&#x8FDB;&#x884C;&#x81EA;&#x52A8;&#x8FD8;&#x539F;&#xFF0C;&#x89C1; <a href="https://bugly.qq.com/docs/user-guide/symbol-configuration-android/" target="_blank" rel="noopener">https://bugly.qq.com/docs/user-guide/symbol-configuration-android/</a></p>]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
        <tag>Crash</tag>
        <tag>Backtrace</tag>
        <tag>Stacktrace</tag>
      </tags>
  </entry>
  <entry>
    <title>治治这个 google 一年没修的 agp transform bug</title>
    <url>/2019/06/28/%E6%B2%BB%E6%B2%BB%E8%BF%99%E4%B8%AAgoogle%E4%B8%80%E5%B9%B4%E6%B2%A1%E4%BF%AE%E7%9A%84agp-transform-bug/</url>
    <content><![CDATA[<p>&#x968F;&#x7740;android gradle plugin(&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;agp)&#x7248;&#x672C;&#x7684;&#x8FED;&#x4EE3;&#xFF0C;&#x88AB;google&#x5E26;&#x8FDB;&#x6765;&#x7684;bug&#x4E5F;&#x8D8A;&#x6765;&#x8D8A;&#x591A;&#x3002;&#x76EE;&#x524D;&#x6574;&#x4F53;&#x6765;&#x770B;&#xFF0C;agp 3.1.4&#x662F;&#x6BD4;&#x8F83;&#x7A33;&#x5B9A;&#x7684;&#x4E00;&#x4E2A;&#x7248;&#x672C;&#xFF0C;&#x5176;&#x4E4B;&#x540E;&#x7684;&#x7248;&#x672C;&#x591A;&#x591A;&#x5C11;&#x5C11;&#x90FD;&#x6709;&#x70B9;&#x95EE;&#x9898;&#xFF08;&#x5982; agp3.2.0-3.5.0&#x7684;&#x7248;&#x672C;R8&#xFF0C;multidex&#x90FD;&#x6709;&#x95EE;&#x9898;&#x7B49;&#x7B49;&#xFF09;&#xFF0C;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x4E3B;&#x8981;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B;&#x4E00;&#x4E2A;&#x5728;2018&#x5E74;5&#x6708;&#x4EFD;&#x88AB;google&#x5E26;&#x8FDB;&#x6765;&#x7684;bug&#x4EE5;&#x53CA;&#x5982;&#x4F55;&#x4FEE;&#x590D;&#x5B83;&#x3002;&#x8BE5;bug&#x4ECE;agp 3.2.0&#x5F00;&#x59CB;&#x5B58;&#x5728;&#xFF0C;&#x76F4;&#x5230;&#x76EE;&#x524D;&#x4E3A;&#x6B62; agp 3.5.0 &#x4E2D;&#x4F9D;&#x65E7;&#x672A;&#x4FEE;&#x590D;&#x8BE5;&#x95EE;&#x9898;&#x3002;&#x8BE5;&#x95EE;&#x9898;&#x4F1A;&#x76F4;&#x63A5;&#x5F71;&#x54CD;&#x7F16;&#x8BD1;&#x901F;&#x5EA6;&#xFF0C;&#x539F;&#x672C;&#x80FD;&#x591F;&#x6784;&#x5EFA;&#x6210;&#x529F;&#x7684;&#x4E00;&#x6B21;&#x589E;&#x91CF;&#x6784;&#x5EFA;&#xFF0C;&#x56E0;&#x4E3A;&#x8BE5;&#x95EE;&#x9898;&#xFF0C;&#x5FC5;&#x987B;clean&#x540E;&#x518D;&#x8FDB;&#x884C;&#x5168;&#x91CF;&#x6784;&#x5EFA;&#xFF0C;&#x6D6A;&#x8D39;&#x7F16;&#x8BD1;&#x65F6;&#x95F4;&#xFF0C;&#x8FDB;&#x800C;&#x964D;&#x4F4E;&#x5F00;&#x53D1;&#x6548;&#x7387;&#x3002;</p><p>&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x6BD4;&#x8F83;&#x7ED5;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x628A;&#x4F60;&#x7ED5;&#x6655;&#xFF0C;&#x5982;&#x679C;&#x628A;&#x4F60;&#x7ED5;&#x6655;&#x4E86;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x62C9;&#x5230;&#x6700;&#x540E;&#x9762;&#x770B;&#x5F00;&#x7BB1;&#x5373;&#x7528;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x3002;</p><a id="more"></a><h3 id="&#x95EE;&#x9898;&#x63CF;&#x8FF0;"><a href="#&#x95EE;&#x9898;&#x63CF;&#x8FF0;" class="headerlink" title="&#x95EE;&#x9898;&#x63CF;&#x8FF0;"></a>&#x95EE;&#x9898;&#x63CF;&#x8FF0;</h3><p>&#x5728;agp 3.2.0&#x4EE5;&#x4E0A;&#x7248;&#x672C;&#xFF0C;&#x589E;&#x91CF;&#x7F16;&#x8BD1;&#x65F6;&#x5982;&#x679C;&#x4E4B;&#x524D;&#x5DF2;&#x7ECF;&#x53C2;&#x4E0E;&#x8FC7;&#x7F16;&#x8BD1;&#x7684;&#x4F9D;&#x8D56;&#x53D1;&#x751F;&#x4E86;&#x6539;&#x53D8;&#xFF0C;&#x5219;&#x4F1A;&#x51FA;&#x73B0;&#x7C7B;&#x91CD;&#x590D;&#xFF0C;&#x5178;&#x578B;&#x7684;&#x4E24;&#x4E2A;&#x573A;&#x666F;&#x5982;&#x4E0B;&#xFF1A;</p><p>&#x524D;&#x7F6E;&#x6761;&#x4EF6;&#xFF1A;A&#x6A21;&#x5757;&#x6709;&#x81F3;&#x5C11;&#x6CE8;&#x518C;&#x4E86;&#x4E24;&#x4E2A;transform&#xFF0C;&#x5E76;&#x4E14;&#x90FD;&#x652F;&#x6301;&#x589E;&#x91CF;&#x7F16;&#x8BD1;</p><ul><li>A&#x6A21;&#x5757;&#x4EE5;project&#x65B9;&#x5F0F;&#x4F9D;&#x8D56;B&#x6A21;&#x5757;&#xFF0C;&#x9996;&#x5148;&#x5BF9;A&#x6A21;&#x5757;&#x8FDB;&#x884C;clean&#x540E;&#x5168;&#x91CF;&#x6784;&#x5EFA;&#xFF0C;&#x7136;&#x540E;&#x5C06;B&#x6A21;&#x5757;&#x53D1;&#x5E03;&#x6210;&#x8FDC;&#x7A0B;aar&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x518D;&#x5C06;A&#x6A21;&#x5757;&#x4E2D;&#x5BF9;B&#x6A21;&#x5757;&#x7684;project&#x4F9D;&#x8D56;&#x4FEE;&#x6539;&#x6210;aar&#x8FDC;&#x7A0B;&#x4F9D;&#x8D56;&#xFF0C;&#x4E0D;&#x8FDB;&#x884C;clean&#x518D;&#x5BF9;A&#x6A21;&#x5757;&#x8FDB;&#x884C;&#x589E;&#x91CF;&#x6784;&#x5EFA;&#xFF0C;&#x6B64;&#x65F6;&#x4F1A;&#x51FA;&#x73B0;&#x7C7B;&#x91CD;&#x590D;&#x3002;</li><li>A&#x6A21;&#x5757;&#x4EE5;aar&#x65B9;&#x5F0F;&#x4F9D;&#x8D56;B&#x6A21;&#x5757;&#xFF0C;&#x9996;&#x5148;&#x5BF9;A&#x6A21;&#x5757;&#x8FDB;&#x884C;clean&#x540E;&#x5168;&#x91CF;&#x6784;&#x5EFA;&#xFF0C;&#x518D;&#x66F4;&#x65B0;B&#x6A21;&#x5757;&#x4EE3;&#x7801;&#x91CD;&#x65B0;&#x53D1;&#x5E03;&#x5230;&#x8FDC;&#x7A0B;&#xFF0C;&#x4E0D;&#x8FDB;&#x884C;clean&#x518D;&#x5BF9;A&#x6A21;&#x5757;&#x8FDB;&#x884C;&#x589E;&#x91CF;&#x6784;&#x5EFA;&#xFF0C;&#x6B64;&#x65F6;&#x4F1A;&#x51FA;&#x73B0;&#x7C7B;&#x91CD;&#x590D;&#x3002;</li></ul><h3 id="Transform&#x7684;&#x589E;&#x91CF;&#x7F16;&#x8BD1;&#x6D45;&#x6790;"><a href="#Transform&#x7684;&#x589E;&#x91CF;&#x7F16;&#x8BD1;&#x6D45;&#x6790;" class="headerlink" title="Transform&#x7684;&#x589E;&#x91CF;&#x7F16;&#x8BD1;&#x6D45;&#x6790;"></a>Transform&#x7684;&#x589E;&#x91CF;&#x7F16;&#x8BD1;&#x6D45;&#x6790;</h3><p>&#x5BF9;&#x4E8E;&#x5168;&#x91CF;&#x7F16;&#x8BD1;&#xFF0C;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x95EE;&#x9898;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x4E3B;&#x8981;&#x5206;&#x6790;&#x4E00;&#x4E0B;&#x589E;&#x91CF;&#x7F16;&#x8BD1;&#x7684;&#x5173;&#x952E;&#x6D41;&#x7A0B;&#x3002;</p><p>&#x9996;&#x5148;&#x4E86;&#x89E3;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;__content__.json&#x6587;&#x4EF6;&#xFF0C;&#x8BE5;&#x6587;&#x4EF6;&#x5B58;&#x5728;&#x4E8E;&#x6BCF;&#x4E2A;transform&#x4EFB;&#x52A1;&#x7684;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x5939;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x91CC;&#x9762;&#x8BB0;&#x5F55;&#x4E86;&#x8BE5;transform&#x7684;&#x8F93;&#x5165;&#x6D41;&#x5386;&#x53F2;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#xFF0C;&#x6BCF;&#x4E2A;transform&#x6784;&#x5EFA;&#x5B8C;&#x6210;&#x540E;&#x8BE5;&#x6587;&#x4EF6;&#x4F1A;&#x88AB;&#x751F;&#x6210;&#x6216;&#x5185;&#x5BB9;&#x88AB;&#x8986;&#x76D6;&#xFF0C;&#x4E00;&#x4E9B;&#x8F93;&#x5165;&#x6D41;&#x7684;&#x4FE1;&#x606F;&#x4F1A;&#x88AB;&#x5E8F;&#x5217;&#x5316;&#xFF0C;&#x4E0B;&#x6B21;&#x6784;&#x5EFA;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x6587;&#x4EF6;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x4F1A;&#x5C06;&#x8BE5;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x8FDB;&#x884C;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x751F;&#x6210;Collection&lt;SubStream&gt;&#x5BF9;&#x8C61;&#xFF0C;&#x540C;&#x65F6;&#x4F1A;&#x6821;&#x9A8C;&#x5BF9;&#x5E94;&#x6587;&#x4EF6;&#x662F;&#x5426;&#x5B58;&#x5728;&#xFF0C;&#x4F53;&#x73B0;&#x5728;present&#x5B57;&#x6BB5;&#x4E0A;&#xFF0C;&#x5982;&#x679C;present&#x4E3A;false&#x5219;&#x8868;&#x793A;&#x4E4B;&#x524D;&#x53C2;&#x4E0E;&#x7F16;&#x8BD1;&#x8FC7;&#x7684;&#x6587;&#x4EF6;&#x73B0;&#x5728;&#x88AB;&#x79FB;&#x9664;&#x4E86;&#xFF0C;&#x8FDB;&#x800C;&#x89E6;&#x53D1;REMOVED&#x4E8B;&#x4EF6;&#x3002;</p><p>&#x8BE5;&#x6587;&#x4EF6;&#x7684;&#x5185;&#x5BB9;&#x5927;&#x81F4;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  {</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;io.github.lizhangqu:library:1.0.0-SNAPSHOT:20190628.005304-2&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;index&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">&quot;scopes&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;EXTERNAL_LIBRARIES&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;types&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;CLASSES&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;format&quot;</span>: <span class="string">&quot;JAR&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;present&quot;</span>: <span class="literal">true</span></span><br><span class="line">  },</span><br><span class="line">  {</span><br><span class="line">    <span class="attr">&quot;name&quot;</span>: <span class="string">&quot;2dfc24fed878febc33c1205ca066312b4cf393b0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;index&quot;</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">&quot;scopes&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;PROJECT&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;types&quot;</span>: [</span><br><span class="line">      <span class="string">&quot;CLASSES&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">&quot;format&quot;</span>: <span class="string">&quot;DIRECTORY&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;present&quot;</span>: <span class="literal">true</span></span><br><span class="line">  }</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>&#x53EF;&#x4EE5;&#x91CD;&#x70B9;&#x770B;&#x4E00;&#x4E0B;&#x8FD9;&#x4E2A;json&#x4E2D;&#x7684;index&#x5B57;&#x6BB5;&#xFF0C;&#x8BE5;&#x5B57;&#x6BB5;&#x51B3;&#x5B9A;&#x8BE5;&#x8F93;&#x5165;&#x6D41;&#x5BF9;&#x5E94;&#x7684;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x540D;&#xFF0C;&#x5982;&#x679C;&#x662F;format&#x662F;JAR&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x6587;&#x4EF6;&#x540D;&#x4E3A;index&#x503C;.jar&#xFF0C;&#x5982;0.jar&#xFF0C;&#x5982;&#x679C;format&#x662F;DIRECTORY&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x6587;&#x4EF6;&#x540D;&#x4E3A;index&#x503C;&#xFF0C;&#x5982;1&#x3002;</p><p>&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x8F93;&#x51FA;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x662F;&#x600E;&#x4E48;&#x6765;&#x7684;&#x5462;&#xFF1F;&#x6211;&#x4EEC;&#x4E00;&#x822C;&#x662F;&#x901A;&#x8FC7;&#x8C03;&#x7528;getContentLocation&#x51FD;&#x6570;&#x7684;&#x65B9;&#x5F0F;&#x83B7;&#x53D6;&#x8F93;&#x51FA;&#x7684;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">transformInvocation</span><span class="selector-class">.getOutputProvider</span>()<span class="selector-class">.getContentLocation</span>(<span class="selector-tag">it</span><span class="selector-class">.getName</span>(), <span class="selector-tag">it</span><span class="selector-class">.contentTypes</span>, <span class="selector-tag">it</span><span class="selector-class">.scopes</span>, <span class="selector-tag">Format</span><span class="selector-class">.JAR</span>)</span><br><span class="line"><span class="selector-tag">transformInvocation</span><span class="selector-class">.getOutputProvider</span>()<span class="selector-class">.getContentLocation</span>(<span class="selector-tag">it</span><span class="selector-class">.getName</span>(), <span class="selector-tag">it</span><span class="selector-class">.contentTypes</span>, <span class="selector-tag">it</span><span class="selector-class">.scopes</span>, <span class="selector-tag">Format</span><span class="selector-class">.DIRECTORY</span>)</span><br></pre></td></tr></table></figure><p>&#x6700;&#x7EC8;&#x4F1A;&#x8C03;&#x7528;&#x5230;&#x5982;&#x4E0B;&#x51FD;&#x6570;&#x4E2D;</p><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> synchronized File getContentLocation(</span><br><span class="line">        @NonNull <span class="keyword">String</span> name,</span><br><span class="line">        @NonNull Set&lt;ContentType&gt; types,</span><br><span class="line">        @NonNull Set&lt;? <span class="keyword">super</span> Scope&gt; scopes,</span><br><span class="line">        @NonNull Format format) {</span><br><span class="line"></span><br><span class="line">    <span class="comment">// search for an existing matching substream.</span></span><br><span class="line">    <span class="keyword">for</span> (SubStream subStream : <span class="type">subStreams</span>) {</span><br><span class="line">        <span class="comment">// look for an existing match. This means same name, types, scopes, and format.</span></span><br><span class="line">        <span class="keyword">if</span> (name.equals(subStream.getName())</span><br><span class="line">                &amp;&amp; types.equals(subStream.getTypes())</span><br><span class="line">                &amp;&amp; scopes.equals(subStream.getScopes())</span><br><span class="line">                &amp;&amp; format == subStream.getFormat()) {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">File</span>(rootFolder, subStream.getFilename());</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// didn&apos;t find a matching output. create the new output</span></span><br><span class="line">    SubStream <span class="keyword">new</span><span class="type">SubStream</span> = <span class="keyword">new</span> <span class="type">SubStream</span>(name, nextIndex++, scopes, types, format, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    subStreams.add(<span class="keyword">new</span><span class="type">SubStream</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">File</span>(rootFolder, <span class="keyword">new</span><span class="type">SubStream</span>.getFilename());</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>subStreams&#x6700;&#x539F;&#x59CB;&#x7684;&#x503C;&#x6765;&#x81EA;__content__.json&#x6587;&#x4EF6;&#x7684;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#xFF0C;&#x4E4B;&#x540E;&#x4F1A;&#x8FDB;&#x884C;&#x4E00;&#x5B9A;&#x7684;&#x66F4;&#x65B0;&#x64CD;&#x4F5C;&#xFF0C;&#x5982;&#x679C;subStreams&#x7F13;&#x5B58;&#x4E2D;&#x6709;&#x5339;&#x914D;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x5339;&#x914D;&#x7684;&#x5185;&#x5BB9;&#x5BF9;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5339;&#x914D;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x5219;&#x91CD;&#x65B0;new&#x4E00;&#x4E2A;SubStream&#x5E76;&#x4E14;index&#x8FDB;&#x884C;&#x9012;&#x589E;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x5168;&#x91CF;&#x6784;&#x5EFA;&#x65F6;&#xFF0C;&#x6BCF;&#x6B21;&#x8C03;&#x7528;getContentLocation&#x57FA;&#x672C;&#x4E0A;&#x90FD;&#x662F;&#x6CA1;&#x6709;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x7684;SubStream&#xFF0C;&#x6240;&#x4EE5;&#x6BCF;&#x6B21;&#x90FD;&#x662F;&#x8D70;&#x4ECE;0&#x5F00;&#x59CB;&#x7684;&#x9012;&#x589E;&#x903B;&#x8F91;&#x3002;</p><p>&#x4F46;&#x662F;&#x5BF9;&#x5E94;&#x589E;&#x91CF;&#x6784;&#x5EFA;&#xFF0C;&#x7531;&#x4E8E;&#x4E4B;&#x524D;&#x6784;&#x5EFA;&#x4EA7;&#x751F;&#x4E86;__content__.json&#x6587;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x6267;&#x884C;transform&#x524D;&#x4F1A;&#x5148;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#xFF0C;&#x5C06;&#x8BE5;&#x6587;&#x4EF6;&#x4E2D;&#x6700;&#x5927;&#x7684;index+1&#x4F5C;&#x4E3A;nextIndex&#x7684;&#x8D77;&#x59CB;&#x9012;&#x589E;&#x503C;&#xFF0C;&#x5373;&#x5047;&#x5982;__content__.json&#x6587;&#x4EF6;&#x4E2D;&#x6709;n&#x4E2A;index&#xFF0C;&#x4F46;&#x662F;&#x6700;&#x5927;&#x7684;index&#x662F;5&#xFF0C;&#x5219;&#x6211;&#x4EEC;&#x8C03;&#x7528;getContentLocation&#x4E0D;&#x518D;&#x4ECE;0&#x5F00;&#x59CB;&#x9012;&#x589E;&#xFF0C;&#x800C;&#x662F;&#x4ECE;6&#x5F00;&#x59CB;&#x9012;&#x589E;&#x3002;<strong>&#x5C24;&#x5176;&#x6CE8;&#x610F;&#x8FD9;&#x4E00;&#x4E2A;&#x5730;&#x65B9;&#x7684;&#x7279;&#x5F81;&#xFF0C;&#x589E;&#x91CF;&#x7F16;&#x8BD1;&#x4E0D;&#x4E00;&#x5B9A;&#x662F;&#x4ECE;0&#x5F00;&#x59CB;&#x9012;&#x589E;&#x6587;&#x4EF6;&#x540D;</strong>&#x3002;</p><p>&#x6211;&#x4EEC;&#x518D;&#x6765;&#x770B;&#x4E00;&#x6BB5;&#x5F88;&#x666E;&#x901A;&#x4E0D;&#x8FC7;&#x7684;transform&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5355;&#x7EAF;&#x7684;&#x6267;&#x884C;&#x62F7;&#x8D1D;&#x64CD;&#x4F5C;&#x5E76;&#x8F93;&#x51FA;&#x5404;&#x6587;&#x4EF6;&#x7684;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#x3002;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line">void transform(TransformInvocation transformInvocation) throws TransformException, InterruptedException, IOException {</span><br><span class="line">    super.transform(transformInvocation)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!transformInvocation.is<span class="constructor">Incremental()</span>) {</span><br><span class="line">        transformInvocation.get<span class="constructor">OutputProvider()</span>.delete<span class="constructor">All()</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    transformInvocation.inputs.each {</span><br><span class="line">        it.jarInputs.each {</span><br><span class="line">            File dest = transformInvocation.get<span class="constructor">OutputProvider()</span>.get<span class="constructor">ContentLocation(<span class="params">it</span>.<span class="params">getName</span>()</span>, it.contentTypes, it.scopes, Format.JAR)</span><br><span class="line">            <span class="keyword">if</span> (transformInvocation.is<span class="constructor">Incremental()</span>) {</span><br><span class="line">                switch (it.get<span class="constructor">Status()</span>) {</span><br><span class="line">                    case Status.NOTCHANGED:</span><br><span class="line">                        project.logger.error <span class="string">&quot;NOTCHANGED input is: ${it} dest: ${dest}&quot;</span></span><br><span class="line">                        break;</span><br><span class="line">                    case Status.CHANGED:</span><br><span class="line">                    case Status.ADDED:</span><br><span class="line">                        project.logger.error <span class="string">&quot;${it.getStatus()} input is: ${it} dest: ${dest}&quot;</span></span><br><span class="line">                        <span class="module-access"><span class="module"><span class="identifier">GFileUtils</span>.</span></span>copy<span class="constructor">File(<span class="params">it</span>.<span class="params">file</span>, <span class="params">dest</span>)</span></span><br><span class="line">                        break;</span><br><span class="line">                    case Status.REMOVED:</span><br><span class="line">                        project.logger.error <span class="string">&quot;REMOVED input is: ${it} dest: ${dest}&quot;</span></span><br><span class="line">                        <span class="module-access"><span class="module"><span class="identifier">GFileUtils</span>.</span></span>delete<span class="constructor">Quietly(<span class="params">dest</span>)</span></span><br><span class="line">                        break;</span><br><span class="line">                }</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                project.logger.error <span class="string">&quot;no incremental: ${it}  dest: ${dest}&quot;</span></span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">GFileUtils</span>.</span></span>copy<span class="constructor">File(<span class="params">it</span>.<span class="params">file</span>, <span class="params">dest</span>)</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        it.directoryInputs.each {</span><br><span class="line">            File inputDir = it.get<span class="constructor">File()</span></span><br><span class="line">            File outputDir = transformInvocation.outputProvider.get<span class="constructor">ContentLocation(<span class="params">it</span>.<span class="params">getName</span>()</span>, it.contentTypes, it.scopes, Format.DIRECTORY)</span><br><span class="line">            <span class="keyword">if</span> (transformInvocation.is<span class="constructor">Incremental()</span>) {</span><br><span class="line">                for (Map.Entry&lt;File, Status&gt; changedInput : it.get<span class="constructor">ChangedFiles()</span>.entry<span class="constructor">Set()</span>) {</span><br><span class="line">                    File inputFile = changedInput.get<span class="constructor">Key()</span></span><br><span class="line">                    String relativePath = com.android.utils.<span class="module-access"><span class="module"><span class="identifier">FileUtils</span>.</span></span>relative<span class="constructor">PossiblyNonExistingPath(<span class="params">inputFile</span>, <span class="params">inputDir</span>)</span></span><br><span class="line">                    File outputFile = <span class="keyword">new</span> <span class="constructor">File(<span class="params">outputDir</span>, <span class="params">relativePath</span>)</span></span><br><span class="line">                    switch (changedInput.get<span class="constructor">Value()</span>) {</span><br><span class="line">                        case Status.NOTCHANGED:</span><br><span class="line">                            project.logger.error <span class="string">&quot;NOTCHANGED input is: ${it} dest: ${outputFile}&quot;</span></span><br><span class="line">                            break;</span><br><span class="line">                        case Status.REMOVED:</span><br><span class="line">                            project.logger.error <span class="string">&quot;REMOVED input is: ${it} dest: ${outputFile}&quot;</span></span><br><span class="line">                            <span class="module-access"><span class="module"><span class="identifier">GFileUtils</span>.</span></span>delete<span class="constructor">Quietly(<span class="params">outputFile</span>)</span></span><br><span class="line">                            break</span><br><span class="line">                        case Status.ADDED:</span><br><span class="line">                        case Status.CHANGED:</span><br><span class="line">                            project.logger.error <span class="string">&quot;${changedInput.getValue()} input is: ${it} dest: ${outputFile}&quot;</span></span><br><span class="line">                            <span class="keyword">if</span> (inputFile.is<span class="constructor">File()</span><span class="operator"> &amp;&amp; </span>!inputFile.is<span class="constructor">Directory()</span>) {</span><br><span class="line">                                <span class="module-access"><span class="module"><span class="identifier">GFileUtils</span>.</span></span>delete<span class="constructor">Quietly(<span class="params">outputFile</span>)</span></span><br><span class="line">                                <span class="module-access"><span class="module"><span class="identifier">FileUtils</span>.</span></span>copy<span class="constructor">File(<span class="params">inputFile</span>, <span class="params">outputFile</span>)</span></span><br><span class="line">                            }</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                project.logger.error <span class="string">&quot;no incremental: ${it} dest: ${outputDir}&quot;</span></span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">GFileUtils</span>.</span></span>delete<span class="constructor">Quietly(<span class="params">outputDir</span>)</span></span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">FileUtils</span>.</span></span>copy<span class="constructor">Directory(<span class="params">inputDir</span>, <span class="params">outputDir</span>)</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#x6211;&#x4EEC;&#x662F;&#x901A;&#x8FC7;&#x8C03;&#x7528;getContentLocation&#x51FD;&#x6570;&#x6765;&#x83B7;&#x53D6;&#x5F53;&#x524D;transform&#x7684;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x540D;&#xFF0C;&#x5B83;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5165;&#x53C2;&#xFF0C;&#x6211;&#x4EEC;&#x90FD;&#x662F;&#x4F20;&#x9012;&#x4E86;it.getName()&#xFF0C;&#x90A3;&#x4E48;&#xFF0C;&#x8FD9;&#x4E2A;getName()&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x4EC0;&#x4E48;&#x503C;&#x5462;&#xFF1F;</p><p>&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x4F9D;&#x8D56;&#x662F;aar&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;getName()&#x8FD4;&#x56DE;&#x7684;&#x5C31;&#x662F;&#x8BE5;&#x4F9D;&#x8D56;&#x7684;maven&#x5750;&#x6807;&#x663E;&#x793A;&#x503C;&#xFF1B;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x4F9D;&#x8D56;&#x662F;project&#xFF0C;&#x5219;getName()&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x8BE5;project&#x7684;path&#x540D;&#xFF1B;&#x5982;&#x679C;&#x662F;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#xFF0C;&#x6BD4;&#x5982;src/main/java&#x7F16;&#x8BD1;&#x4EA7;&#x751F;&#x7684;class&#x76EE;&#x5F55;&#xFF0C;&#x5219;getName()&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x8BE5;&#x76EE;&#x5F55;&#x8DEF;&#x5F84;&#x7684;&#x54C8;&#x5E0C;&#x503C;&#x3002;&#x5982;&#x679C;&#x524D;&#x9762;&#x83B7;&#x53D6;&#x7684;&#x540D;&#x5B57;&#x4E0E;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x7684;&#x540D;&#x5B57;&#x5B58;&#x5728;&#x51B2;&#x7A81;&#xFF0C;&#x5219;&#x672B;&#x5C3E;&#x4F1A;&#x8FDB;&#x884C;&#x8FFD;&#x52A0;&#x4E00;&#x5B9A;&#x7684;&#x5185;&#x5BB9;&#x9632;&#x6B62;&#x51B2;&#x7A81;&#x3002;&#x540D;&#x5B57;&#x751F;&#x6210;&#x89C4;&#x5219;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x5982;&#x4E0B;&#x4E24;&#x4E2A;&#x51FD;&#x6570;</p><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="meta">@NonNull</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">String</span> getArtifactName(</span><br><span class="line">        <span class="meta">@NonNull</span> ResolvedArtifactResult artifactResult,</span><br><span class="line">        <span class="meta">@NonNull</span> Map&lt;ComponentIdentifier, Integer&gt; deduplicationMap) {</span><br><span class="line">    ComponentIdentifier id = artifactResult.getId().getComponentIdentifier();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">String</span> baseName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (id <span class="keyword">instanceof</span> ProjectComponentIdentifier) {</span><br><span class="line">        baseName = ((ProjectComponentIdentifier) id).getProjectPath();</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (id <span class="keyword">instanceof</span> ModuleComponentIdentifier) {</span><br><span class="line">        baseName = id.getDisplayName();</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="comment">// this is a local jar</span></span><br><span class="line">        File artifactFile = artifactResult.getFile();</span><br><span class="line"></span><br><span class="line">        baseName =</span><br><span class="line">                LOCAL_JAR_GROUPID</span><br><span class="line">                        + artifactFile.getName()</span><br><span class="line">                        + <span class="string">&quot;:&quot;</span></span><br><span class="line">                        + Hashing.sha1()</span><br><span class="line">                                .hashString(artifactFile.getPath(), Charsets.UTF_16LE)</span><br><span class="line">                                .toString();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// check if a previous artifact use the same name. This can happen for instance in case</span></span><br><span class="line">    <span class="comment">// of an AAR with local Jars.</span></span><br><span class="line">    <span class="comment">// In that case happen an index to the name.</span></span><br><span class="line">    final Integer zero = <span class="number">0</span>;</span><br><span class="line">    Integer i =</span><br><span class="line">            deduplicationMap.compute(</span><br><span class="line">                    id,</span><br><span class="line">                    (componentIdentifier, value) -&gt; {</span><br><span class="line">                        <span class="keyword">if</span> (value == <span class="literal">null</span>) {</span><br><span class="line">                            <span class="keyword">return</span> zero;</span><br><span class="line">                        }</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">return</span> value + <span class="number">1</span>;</span><br><span class="line">                    });</span><br><span class="line">    <span class="keyword">if</span> (!zero.equals(i)) {</span><br><span class="line">        <span class="keyword">return</span> baseName + <span class="string">&quot;::&quot;</span> + i;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> baseName;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@NonNull</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">String</span> getUniqueInputName(<span class="meta">@NonNull</span> File file) {</span><br><span class="line">    <span class="keyword">return</span> Hashing.sha1().hashString(file.getPath(), Charsets.UTF_16LE).toString();</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>getName()&#x8FD4;&#x56DE;&#x503C;&#x793A;&#x4F8B;&#x5982;&#x4E0B;&#xFF0C;&#x5178;&#x578B;&#x7684;&#x4E09;&#x79CD;&#x547D;&#x540D;&#xFF1A;</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">io</span><span class="selector-class">.github</span><span class="selector-class">.lizhangqu</span><span class="selector-pseudo">:library</span><span class="selector-pseudo">:1.0.0-SNAPSHOT</span><span class="selector-pseudo">:20190628.005304-2</span></span><br><span class="line"></span><br><span class="line"><span class="selector-pseudo">:library</span></span><br><span class="line"></span><br><span class="line">2<span class="selector-tag">dfc24fed878febc33c1205ca066312b4cf393b0</span></span><br></pre></td></tr></table></figure><p>&#x540C;&#x65F6;&#x6240;&#x6709;transform&#x4E2D;&#x8F93;&#x5165;&#x6D41;&#x7684;getName()&#x8FD4;&#x56DE;&#x503C;&#x4E0E;&#x5176;&#x4ED6;transform&#x4E2D;&#x8FD4;&#x56DE;&#x7684;&#x90FD;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x8FD9;&#x4E00;&#x70B9;&#x4E5F;&#x8981;&#x5C24;&#x5176;&#x6CE8;&#x610F;&#x3002;</p><p>&#x6BD4;&#x5982;&#x67D0;&#x4E2A;&#x4F9D;&#x8D56;&#x6839;&#x636E;&#x5982;&#x4E0A;&#x547D;&#x540D;&#x89C4;&#x5219;&#x8FD4;&#x56DE;&#x7684;getName()&#x662F;2dfc24fed878febc33c1205ca066312b4cf393b0&#xFF0C;&#x90A3;&#x4E48;&#x5728;ATransform&#x4E2D;&#x8BE5;&#x4F9D;&#x8D56;&#x7684;getName()&#x8FD4;&#x56DE;&#x7684;&#x662F;2dfc24fed878febc33c1205ca066312b4cf393b0&#xFF0C;BTransform&#x4E2D;&#x8BE5;&#x4F9D;&#x8D56;&#x7684;getName()&#x8FD4;&#x56DE;&#x7684;&#x4E5F;&#x662F;2dfc24fed878febc33c1205ca066312b4cf393b0&#xFF0C;CTransform&#x4E2D;&#x8BE5;&#x4F9D;&#x8D56;&#x7684;getName()&#x8FD4;&#x56DE;&#x7684;&#x540C;&#x6837;&#x662F;2dfc24fed878febc33c1205ca066312b4cf393b0&#xFF0C;&#x5373;&#x540C;&#x4E00;&#x4E2A;&#x4F9D;&#x8D56;&#x5728;&#x6570;&#x636E;&#x6D41;&#x5411;&#x8FC7;&#x7A0B;&#x4E2D;&#x5176;getName()&#x8FD4;&#x56DE;&#x503C;&#x4FDD;&#x6301;&#x4E86;&#x552F;&#x4E00;&#x6027;&#x3002;</p><p>&#x4E86;&#x89E3;&#x4E86;&#x4EE5;&#x4E0A;&#x5185;&#x5BB9;&#x540E;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x4E86;&#x89E3;&#x4E00;&#x4E2A;&#x5F88;&#x5173;&#x952E;&#x7684;&#x5185;&#x5BB9;&#x3002;</p><p>&#x5982;&#x679C;&#x589E;&#x91CF;&#x7F16;&#x8BD1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E00;&#x4E2A;&#x4F9D;&#x8D56;&#x6587;&#x4EF6;&#x88AB;&#x79FB;&#x9664;&#x4E86;&#xFF0C;&#x5E76;&#x4E14;&#x8BE5;&#x4F9D;&#x8D56;&#x662F;OriginalStream&#x7C7B;&#x578B;&#xFF0C;&#x7531;&#x4E8E;&#x8BE5;transform&#x6D88;&#x8D39;&#x4E86;OriginalStream&#xFF0C;&#x5373;&#x6D88;&#x8D39;&#x4E86;&#x4E0D;&#x662F;&#x7531;transform&#x4EA7;&#x751F;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x800C;&#x662F;&#x6700;&#x539F;&#x59CB;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x90A3;&#x4E48;&#xFF0C;&#x5373;&#x4F7F;&#x8BE5;transform&#x652F;&#x6301;&#x589E;&#x91CF;&#x7F16;&#x8BD1;&#xFF0C;&#x4E5F;&#x4F1A;&#x88AB;&#x5224;&#x65AD;&#x6210;&#x5FC5;&#x987B;&#x8FDB;&#x884C;&#x5168;&#x91CF;&#x7F16;&#x8BD1;&#x3002;</p><p>&#x4E3E;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF0C;&#x5047;&#x5982;&#x6211;&#x6CE8;&#x518C;&#x4E86;&#x4E24;&#x4E2A;Transform&#xFF0C;&#x4E00;&#x4E2A;&#x53EB;FirstTransform&#xFF0C;&#x4E00;&#x4E2A;&#x53EB;SecondTransform&#xFF0C;&#x5168;&#x91CF;&#x6784;&#x5EFA;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x6211;&#x5347;&#x7EA7;&#x4E86;&#x5176;&#x4E2D;&#x67D0;&#x4E00;&#x4E2A;aar&#x518D;&#x8FDB;&#x884C;&#x589E;&#x91CF;&#x6784;&#x5EFA;&#xFF0C;&#x8FD9;&#x5C31;&#x4F1A;&#x5BFC;&#x81F4;gradle&#x8BA4;&#x4E3A;&#x65B0;&#x589E;&#x4E86;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x4E14;&#x540C;&#x65F6;&#x65E7;&#x7248;&#x672C;&#x7684;&#x6587;&#x4EF6;&#x88AB;&#x79FB;&#x9664;&#x4E86;&#xFF0C;&#x5F53;&#x6267;&#x884C;&#x5230;FirstTransform&#x65F6;&#xFF0C;&#x56E0;&#x4E3A;&#x4EA7;&#x751F;&#x4E86;&#x4E00;&#x4E2A;&#x88AB;&#x79FB;&#x9664;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x4E14;&#x8BE5;&#x6587;&#x4EF6;&#x4E0D;&#x662F;&#x7531;transform&#x4EA7;&#x751F;&#x7684;&#xFF0C;&#x5373;&#x5339;&#x914D;&#x4E0D;&#x5230;&#x76F8;&#x5173;&#x6587;&#x4EF6;&#xFF0C;&#x89E6;&#x53D1;FirstTransform&#x8FDB;&#x884C;&#x5168;&#x91CF;&#x7F16;&#x8BD1;&#xFF0C;&#x4F46;&#x662F;&#x7B49;SecondTransform&#x8FDB;&#x884C;&#x6784;&#x5EFA;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E5F;&#x4F1A;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x65B0;&#x589E;&#x6587;&#x4EF6;&#x548C;&#x4E00;&#x4E2A;&#x88AB;&#x79FB;&#x9664;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x4F46;&#x662F;&#x8BE5;&#x88AB;&#x79FB;&#x9664;&#x7684;&#x6587;&#x4EF6;&#x662F;&#x4E0A;&#x4E00;&#x4E2A;FirstTransform&#x4EA7;&#x751F;&#x7684;&#xFF0C;&#x5373;&#x4E0D;&#x662F;OriginalStream&#x5374;&#x662F;IntermediateStream&#xFF0C;&#x6240;&#x4EE5;SecondTransform&#x5728;&#x5176;&#x4ED6;&#x6761;&#x4EF6;&#x90FD;&#x6EE1;&#x8DB3;&#x589E;&#x91CF;&#x7F16;&#x8BD1;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6B64;&#x65F6;&#x4F1A;&#x89E6;&#x53D1;&#x589E;&#x91CF;&#x7F16;&#x8BD1;&#x3002;</p><h3 id="Bug&#x518D;&#x73B0;"><a href="#Bug&#x518D;&#x73B0;" class="headerlink" title="Bug&#x518D;&#x73B0;"></a>Bug&#x518D;&#x73B0;</h3><p>&#x6709;&#x4E86;&#x4EE5;&#x4E0A;&#x7406;&#x8BBA;&#x57FA;&#x7840;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x518D;&#x6765;&#x770B;&#x770B;&#x600E;&#x4E48;&#x590D;&#x73B0;&#x8FD9;&#x4E2A;bug&#x3002;</p><p>&#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x770B;3.1.4&#x7684;&#x903B;&#x8F91;&#xFF0C;&#x5373;&#x5B8C;&#x5168;&#x6CA1;&#x95EE;&#x9898;&#x7684;&#x6D41;&#x7A0B;&#xFF1A;</p><p>&#x6211;&#x4EEC;&#x6709;&#x4E00;&#x4E9B;&#x524D;&#x7F6E;&#x6761;&#x4EF6;&#xFF1A;&#x73B0;&#x6709;A&#x5DE5;&#x7A0B;&#x548C;B&#x5DE5;&#x7A0B;&#xFF0C;&#x5E76;&#x4E14;A&#x5DE5;&#x7A0B;apply&#x4E86;&#x4E00;&#x4E2A;gradle&#x63D2;&#x4EF6;&#xFF0C;&#x8BE5;gradle&#x63D2;&#x4EF6;&#x4E2D;&#x6CE8;&#x518C;&#x4E86;&#x4E24;&#x4E2A;Transform&#xFF0C;&#x4E00;&#x4E2A;&#x53EB;FirstTransform&#xFF0C;&#x4E00;&#x4E2A;&#x53EB;SecondTransform&#xFF0C;&#x9996;&#x5148;&#x8BA9;A&#x5DE5;&#x7A0B;&#x4EE5;project&#x4F9D;&#x8D56;&#x7684;&#x5F62;&#x5F0F;&#x8FDB;&#x884C;&#x4F9D;&#x8D56;&#xFF0C;&#x6267;&#x884C;&#x5168;&#x91CF;&#x6784;&#x5EFA;</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">./gradlew <span class="symbol">:A</span><span class="symbol">:clean</span> <span class="symbol">:A</span><span class="symbol">:assembleDebug</span></span><br></pre></td></tr></table></figure><p>&#x7531;&#x4E8E;&#x662F;&#x5168;&#x91CF;&#x6784;&#x5EFA;&#xFF0C;&#x6240;&#x4EE5;__content__.json&#x90FD;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5F53;&#x8C03;&#x7528;getContentLocation&#x83B7;&#x53D6;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6587;&#x4EF6;&#x540D;&#x547D;&#x540D;&#x89C4;&#x5219;&#x4ECE;0&#x5F00;&#x59CB;&#x9012;&#x589E;&#xFF0C;&#x5047;&#x8BBE;&#x6B64;&#x65F6;&#x6709;&#x4E24;&#x4E2A;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x4E14;&#x4E00;&#x4E2A;jar&#x6587;&#x4EF6;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x76EE;&#x5F55;&#xFF0C;&#x90A3;&#x4E48;FirstTransform&#x6B63;&#x5E38;&#x6765;&#x8BF4;&#x4F1A;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;jar&#x6587;&#x4EF6;&#x548C;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#xFF0C;&#x5206;&#x522B;&#x4E3A;first/0.jar&#x548C;first/1&#xFF0C;&#x5047;&#x5982;&#x6B64;&#x65F6;B&#x5DE5;&#x7A0B;&#x5BF9;&#x5E94;&#x7684;&#x8F93;&#x51FA;&#x4E3A;first/0.jar&#x6587;&#x4EF6;&#xFF0C;&#x5F53;&#x6267;&#x884C;&#x5230;SecondTransform&#x65F6;&#xFF0C;&#x548C;&#x524D;&#x9762;&#x4E00;&#x6837;&#xFF0C;&#x4E5F;&#x4F1A;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;jar&#x6587;&#x4EF6;&#x548C;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#xFF0C;&#x5206;&#x522B;&#x662F;second/0.jar&#x548C;second/1&#xFF0C;&#x6B64;&#x65F6;B&#x5DE5;&#x7A0B;&#x5BF9;&#x5E94;&#x7684;&#x8F93;&#x51FA;&#x4E3A;second/0.jar&#x3002;&#x6CE8;&#x610F;&#x6784;&#x5EFA;&#x8FC7;&#x7A0B;&#x4E2D;B&#x5DE5;&#x7A0B;&#x7684;getName()&#x8FD4;&#x56DE;&#x7684;&#x4E00;&#x76F4;&#x662F;B&#x5DE5;&#x7A0B;&#x7684;project path&#x540D;&#x3002;</p><p>&#x6784;&#x5EFA;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;B&#x5DE5;&#x7A0B;&#x53D1;&#x5E03;&#x6210;&#x8FDC;&#x7A0B;aar&#x7684;&#x5F62;&#x5F0F;&#xFF0C;&#x7136;&#x540E;&#x5C06;A&#x5DE5;&#x7A0B;&#x5BF9;B&#x5DE5;&#x7A0B;&#x7684;project&#x4F9D;&#x8D56;&#x4FEE;&#x6539;&#x6210;aar&#x4F9D;&#x8D56;&#xFF0C;&#x6267;&#x884C;&#x589E;&#x91CF;&#x6784;&#x5EFA;</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">./gradlew <span class="symbol">:A</span><span class="symbol">:assembleDebug</span></span><br></pre></td></tr></table></figure><p>&#x7531;&#x4E8E;&#x662F;&#x589E;&#x91CF;&#x6784;&#x5EFA;&#xFF0C;&#x6240;&#x4EE5;&#x4E0A;&#x4E00;&#x6B21;&#x6784;&#x5EFA;&#x4EA7;&#x751F;&#x7684;__content__.json&#x6587;&#x4EF6;&#x5B58;&#x5728;&#xFF0C;&#x4F1A;&#x8FDB;&#x884C;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#xFF0C;&#x7531;&#x4E8E;&#x4E4B;&#x524D;&#x4EA7;&#x751F;&#x4E86;&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x6B64;&#x65F6;&#x5982;&#x679C;index&#x4F1A;&#x4ECE;2&#x5F00;&#x59CB;&#x9012;&#x589E;&#x3002;&#x518D;&#x52A0;&#x4E0A;FirstTransform&#x662F;&#x7B2C;&#x4E00;&#x4E2A;transform&#x5E76;&#x4E14;&#x4EA7;&#x751F;&#x4E86;&#x4E00;&#x4E2A;&#x65B0;&#x589E;&#x7684;&#x4F9D;&#x8D56;&#xFF0C;&#x5373;B&#x7684;aar&#x4F9D;&#x8D56;&#xFF0C;&#x6B64;&#x65F6;B&#x7684;aar&#x4F9D;&#x8D56;getName()&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x8BE5;&#x4F9D;&#x8D56;&#x7684;maven&#x5750;&#x6807;&#x663E;&#x793A;&#x503C;&#xFF1B;&#x540C;&#x65F6;&#x79FB;&#x9664;&#x4E86;&#x4E00;&#x4E2A;&#x65E7;&#x7684;&#x4F9D;&#x8D56;&#xFF0C;&#x5373;B&#x7684;project&#x4F9D;&#x8D56;&#xFF0C;&#x5176;getName()&#x8FD4;&#x56DE;&#x7684;&#x662F;B&#x5DE5;&#x7A0B;&#x7684;project path&#x540D;&#x3002;&#x6B64;&#x65F6;FirstTransform&#x4F1A;&#x5F3A;&#x5236;&#x89E6;&#x53D1;&#x5168;&#x91CF;&#x7F16;&#x8BD1;&#xFF0C;&#x4F46;&#x662F;&#x6B64;&#x65F6;&#x65B0;&#x589E;&#x7684;aar&#x4F9D;&#x8D56;&#x901A;&#x8FC7;getContentLocation&#x8FD4;&#x56DE;&#x7684;&#x5C31;&#x662F;first/2.jar&#xFF0C;&#x800C;&#x4E0D;&#x518D;&#x662F;first/0.jar&#x6216;&#x8005;first/1&#xFF0C;&#x56E0;&#x4E3A;&#x7F13;&#x5B58;&#x4E2D;&#x5E76;&#x6CA1;&#x6709;B&#x7684;aar&#x4F9D;&#x8D56;&#x5BF9;&#x5E94;&#x7684;SubStream&#xFF0C;&#x6240;&#x4EE5;&#x6587;&#x4EF6;&#x540D;&#x8FDB;&#x884C;&#x4E86;&#x9012;&#x589E;&#x64CD;&#x4F5C;&#x3002;&#x5047;&#x5982;B&#x7684;project&#x4F9D;&#x8D56;&#x4E4B;&#x524D;&#x4EA7;&#x751F;&#x7684;&#x662F;first/0.jar&#xFF0C;&#x90A3;&#x4E48;&#x6B64;&#x65F6;FirstTransform&#x4F1A;&#x4EA7;&#x751F;&#x4E24;&#x4E2A;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#xFF0C;&#x5373;first/1&#x548C;first/2.jar&#xFF0C;&#x800C;first/0.jar&#x7531;&#x4E8E;&#x662F;&#x5168;&#x91CF;&#x6784;&#x5EFA;&#xFF0C;&#x4F1A;&#x88AB;&#x5220;&#x9664;&#x3002;</p><p>&#x5F53;&#x6267;&#x884C;&#x5230;SecondTransform&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E5F;&#x4F1A;&#x6709;&#x4E00;&#x4E2A;&#x65B0;&#x589E;&#x6587;&#x4EF6;&#x548C;&#x4E00;&#x4E2A;&#x5220;&#x9664;&#x6587;&#x4EF6;&#xFF0C;&#x5373;first/2.jar&#x662F;&#x65B0;&#x589E;&#x6587;&#x4EF6;&#xFF0C;first/0.jar&#x662F;&#x5220;&#x9664;&#x6587;&#x4EF6;&#xFF0C;&#x5BF9;&#x5E94;&#x7684;&#x7531;&#x4E8E;&#x8BE5;transform&#x4E0A;&#x4E00;&#x6B21;&#x6784;&#x5EFA;&#x4EA7;&#x751F;&#x7684;__content__.json&#x6587;&#x4EF6;&#x5B58;&#x5728;&#xFF0C;&#x4F1A;&#x8FDB;&#x884C;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#xFF0C;&#x6240;&#x4EE5;&#x6B64;&#x65F6;index&#x4F1A;&#x4ECE;2&#x5F00;&#x59CB;&#x9012;&#x589E;&#x3002;&#x56E0;&#x6B64;&#x65B0;&#x589E;&#x6587;&#x4EF6;first/2.jar&#x83B7;&#x53D6;&#x5230;&#x7684;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x4E3A;second/2.jar&#xFF0C;&#x56E0;&#x4E3A;first/2.jar&#x5BF9;&#x5E94;B&#x6A21;&#x5757;&#x7684;aar&#x4F9D;&#x8D56;&#xFF0C;&#x5176;getName()&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x5176;maven&#x5750;&#x6807;&#x663E;&#x793A;&#x503C;&#xFF0C;&#x6CA1;&#x6709;&#x7F13;&#x5B58;&#x7684;SubStream&#x4E0E;&#x5176;&#x5339;&#x914D;&#xFF0C;&#x6240;&#x4EE5;&#x547D;&#x540D;&#x89C4;&#x5219;&#x8FDB;&#x884C;&#x4E86;&#x9012;&#x589E;&#xFF0C;&#x5373;second/2.jar&#xFF0C;&#x800C;&#x5220;&#x9664;&#x6587;&#x4EF6;first/0.jar&#x83B7;&#x53D6;&#x5230;&#x7684;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x4E3A;second/0.jar&#x662F;&#x56E0;&#x4E3A;&#x6709;&#x5DF2;&#x5B58;&#x5728;&#x7684;SubStream&#x4E0E;&#x5176;&#x5339;&#x914D;&#xFF0C;&#x8FD4;&#x56DE;&#x5176;&#x539F;&#x5148;&#x7684;&#x6587;&#x4EF6;&#x540D;&#xFF0C;&#x8BE5;&#x6587;&#x4EF6;&#x7531;&#x4E8E;&#x88AB;&#x6807;&#x8BB0;&#x6210;&#x5220;&#x9664;&#xFF0C;&#x6240;&#x4EE5;&#x4F1A;&#x88AB;&#x6211;&#x4EEC;&#x5220;&#x6389;&#x3002;</p><p>&#x53EF;&#x80FD;&#x6BD4;&#x8F83;&#x62BD;&#x8C61;&#xFF0C;&#x6211;&#x4EEC;&#x8D34;&#x4E00;&#x4E0B;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#x4F1A;&#x6BD4;&#x8F83;&#x597D;&#x7406;&#x89E3;</p><p>&#x5168;&#x91CF;&#x6784;&#x5EFA;&#x7684;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">&gt; <span class="string">Task :</span><span class="string">app:</span>transformClassesWithFirstForDebug</span><br><span class="line">no <span class="string">incremental:</span> </span><br><span class="line">ImmutableJarInput{</span><br><span class="line">	name=:library, <span class="comment">//&#x6CE8;&#x610F;name&#x552F;&#x4E00;&#x503C;</span></span><br><span class="line">	file=<span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/library/</span>build<span class="regexp">/intermediates/</span>intermediate-jars<span class="regexp">/debug/</span>classes.jar, <span class="comment">//&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span></span><br><span class="line">	contentTypes=CLASSES, </span><br><span class="line">	scopes=SUB_PROJECTS, </span><br><span class="line">	status=NOTCHANGED}  </span><br><span class="line"><span class="symbol">	dest:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/first/</span>debug<span class="regexp">/0.jar /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line"></span><br><span class="line">no <span class="string">incremental:</span> </span><br><span class="line">ImmutableDirectoryInput{</span><br><span class="line">	name=<span class="number">2</span>dfc24fed878febc33c1205ca066312b4cf393b0, <span class="comment">//&#x6CE8;&#x610F;name&#x552F;&#x4E00;&#x503C;</span></span><br><span class="line">	file=<span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>classes<span class="regexp">/debug, /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line">	contentTypes=CLASSES, </span><br><span class="line">	scopes=PROJECT, </span><br><span class="line">	changedFiles={}},</span><br><span class="line"><span class="symbol">	dest:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/first/</span>debug<span class="regexp">/1 /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line"></span><br><span class="line">&gt; <span class="string">Task :</span><span class="string">app:</span>transformClassesWithSecondForDebug</span><br><span class="line">no <span class="string">incremental:</span> </span><br><span class="line">ImmutableJarInput{</span><br><span class="line">	name=:library, <span class="comment">//&#x6CE8;&#x610F;name&#x552F;&#x4E00;&#x503C;</span></span><br><span class="line">	file=<span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/first/</span>debug<span class="regexp">/0.jar, /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line">	contentTypes=CLASSES, </span><br><span class="line">	scopes=SUB_PROJECTS, </span><br><span class="line">	status=NOTCHANGED}  </span><br><span class="line"><span class="symbol">	dest:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/second/</span>debug<span class="regexp">/0.jar /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line"></span><br><span class="line">no <span class="string">incremental:</span> </span><br><span class="line">ImmutableDirectoryInput{</span><br><span class="line">	name=<span class="number">2</span>dfc24fed878febc33c1205ca066312b4cf393b0, <span class="comment">//&#x6CE8;&#x610F;name&#x552F;&#x4E00;&#x503C;</span></span><br><span class="line">	file=<span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/first/</span>debug<span class="regexp">/1, /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line">	contentTypes=CLASSES, </span><br><span class="line">	scopes=PROJECT, </span><br><span class="line">	changedFiles={}},</span><br><span class="line"><span class="symbol">	dest:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/second/</span>debug<span class="regexp">/1 /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br></pre></td></tr></table></figure><p>&#x589E;&#x91CF;&#x6784;&#x5EFA;&#x7684;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">&gt; <span class="string">Task :</span><span class="string">app:</span>transformClassesWithFirstForDebug</span><br><span class="line">no <span class="string">incremental:</span> </span><br><span class="line">ImmutableJarInput{</span><br><span class="line">	name=io.github.<span class="string">lizhangqu:</span><span class="string">library:</span><span class="number">1.0</span><span class="number">.0</span>-<span class="string">SNAPSHOT:</span><span class="number">20190628.005304</span><span class="number">-2</span>, <span class="comment">//&#x6CE8;&#x610F;name&#x552F;&#x4E00;&#x503C;</span></span><br><span class="line">	file=<span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/transforms-2/</span>files<span class="number">-2.1</span><span class="regexp">/a2f8c54095c8cb773914a91454ca0aea/</span>jars<span class="regexp">/classes.jar, /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line">	contentTypes=CLASSES, </span><br><span class="line">	scopes=EXTERNAL_LIBRARIES, </span><br><span class="line">	status=NOTCHANGED}  </span><br><span class="line"><span class="symbol">	dest:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/first/</span>debug<span class="regexp">/2.jar /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;&#x662F;<span class="number">2.</span>jar</span><br><span class="line"></span><br><span class="line">no <span class="string">incremental:</span> </span><br><span class="line">ImmutableDirectoryInput{</span><br><span class="line">	name=<span class="number">2</span>dfc24fed878febc33c1205ca066312b4cf393b0, <span class="comment">//&#x6CE8;&#x610F;name&#x552F;&#x4E00;&#x503C;</span></span><br><span class="line">	file=<span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>classes<span class="regexp">/debug, /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line">	contentTypes=CLASSES, </span><br><span class="line">	scopes=PROJECT, changedFiles={}} </span><br><span class="line"><span class="symbol">	dest:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/first/</span>debug<span class="regexp">/1 /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line"></span><br><span class="line">&gt; <span class="string">Task :</span><span class="string">app:</span>transformClassesWithSecondForDebug</span><br><span class="line"></span><br><span class="line">REMOVED input <span class="string">is:</span> </span><br><span class="line">ImmutableJarInput{<span class="comment">//&#x6CE8;&#x610F;&#x6B64;&#x72B6;&#x6001;&#x88AB;&#x6807;&#x8BB0;&#x6210;&#x5220;&#x9664;</span></span><br><span class="line">	name=:library, <span class="comment">//&#x6CE8;&#x610F;name&#x552F;&#x4E00;&#x503C;</span></span><br><span class="line">	file=<span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/first/</span>debug<span class="regexp">/0.jar, /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line">	contentTypes=CLASSES, </span><br><span class="line">	scopes=SUB_PROJECTS, </span><br><span class="line">	status=REMOVED} </span><br><span class="line"><span class="symbol">	dest:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/second/</span>debug<span class="regexp">/0.jar /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line"></span><br><span class="line">ADDED input <span class="string">is:</span> </span><br><span class="line">ImmutableJarInput{<span class="comment">//&#x6CE8;&#x610F;&#x6B64;&#x72B6;&#x6001;&#x88AB;&#x6807;&#x8BB0;&#x6210;&#x65B0;&#x589E;</span></span><br><span class="line">	name=io.github.<span class="string">lizhangqu:</span><span class="string">library:</span><span class="number">1.0</span><span class="number">.0</span>-<span class="string">SNAPSHOT:</span><span class="number">20190628.005304</span><span class="number">-2</span>, <span class="comment">//&#x6CE8;&#x610F;&#x6CE8;&#x610F;name&#x552F;&#x4E00;&#x503C;</span></span><br><span class="line">	file=<span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/first/</span>debug<span class="regexp">/2.jar, /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;&#x662F;<span class="number">2.</span>jar</span><br><span class="line">	contentTypes=CLASSES, </span><br><span class="line">	scopes=EXTERNAL_LIBRARIES, </span><br><span class="line">	status=ADDED} </span><br><span class="line"><span class="symbol">	dest:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/second/</span>debug<span class="regexp">/2.jar /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;&#x662F;<span class="number">2.</span>jar</span><br></pre></td></tr></table></figure><p>&#x4F46;&#x662F;&#x4EE5;&#x4E0A;&#x903B;&#x8F91;&#x5728;agp 3.2.0&#x4EE5;&#x4E0A;&#x7248;&#x672C;&#x5E76;&#x4E0D;&#x6210;&#x7ACB;&#xFF0C;&#x5728;2018&#x5E74;5&#x6708;14&#x65E5;&#x7684;&#x65F6;&#x5019;&#x4EA7;&#x751F;&#x4E86;&#x4E00;&#x4E2A;&#x63D0;&#x4EA4;&#xFF0C;&#x5982;&#x4E0B;</p><p><img src="/2019/06/28/%E6%B2%BB%E6%B2%BB%E8%BF%99%E4%B8%AAgoogle%E4%B8%80%E5%B9%B4%E6%B2%A1%E4%BF%AE%E7%9A%84agp-transform-bug/bug-commit.png" alt="bug-commit.png"></p><p>&#x5373;</p><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="meta">@NonNull</span></span><br><span class="line"><span class="function">TransformOutputProvider <span class="title">asOutput</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> TransformOutputProviderImpl(folderUtils);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x88AB;&#x4FEE;&#x6539;&#x6210;&#x4E86;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">@NonNull</span><br><span class="line">TransformOutputProvider <span class="keyword">as</span><span class="constructor">Output(<span class="params">boolean</span> <span class="params">isIncremental</span>)</span> throws IOException {</span><br><span class="line">    <span class="keyword">if</span> (!isIncremental) {</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">FileUtils</span>.</span></span>delete<span class="constructor">IfExists(<span class="params">new</span> File(<span class="params">getRootLocation</span>()</span>, SubStream.FN_FOLDER_CONTENT));</span><br><span class="line">    }</span><br><span class="line">    init<span class="literal">()</span>;</span><br><span class="line">    return <span class="keyword">new</span> <span class="constructor">TransformOutputProviderImpl(<span class="params">folderUtils</span>)</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4F1A;&#x9020;&#x6210;&#x4EC0;&#x4E48;&#x95EE;&#x9898;&#x5462;&#xFF1F;</p><p>&#x6211;&#x4EEC;&#x524D;&#x9762;&#x8BF4;&#x8FC7;&#x5F53;&#x589E;&#x91CF;&#x7F16;&#x8BD1;&#x65F6;&#xFF0C;&#x79FB;&#x9664;&#x4E86;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x4E14;&#x8BE5;&#x6587;&#x4EF6;&#x4E0D;&#x662F;transform&#x4EA7;&#x751F;&#x800C;&#x662F;&#x539F;&#x59CB;&#x6587;&#x4EF6;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x80FD;&#x4F1A;&#x89E6;&#x53D1;&#x5168;&#x91CF;&#x7F16;&#x8BD1;&#xFF0C;&#x5F53;&#x89E6;&#x53D1;&#x5168;&#x91CF;&#x7F16;&#x8BD1;&#x540E;&#xFF0C;&#x5728;agp 3.2.0&#x4EE5;&#x4E0A;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x7531;&#x4E8E;&#x52A0;&#x4E86;&#x5982;&#x4E0A;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;FirstTransform&#x7684;__content__.json&#x6587;&#x4EF6;&#x88AB;&#x5220;&#x9664;&#xFF0C;&#x4E0D;&#x4F1A;&#x8FDB;&#x884C;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#xFF0C;&#x6B64;&#x65F6;FirstTransform&#x4E2D;&#x6587;&#x4EF6;&#x540D;&#x547D;&#x540D;&#x89C4;&#x5219;&#x5F52;0&#x8FDB;&#x884C;&#x9012;&#x589E;&#x3002;&#x5373;&#x5F53;&#x6267;&#x884C;&#x5230;FirstTransform&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8F93;&#x51FA;&#x7684;&#x4F9D;&#x65E7;&#x662F;first/0.jar&#x548C;first/1&#xFF0C;&#x5BF9;&#x4E8E;SecondTransform&#x6765;&#x8BF4;&#xFF0C;gradle&#x611F;&#x77E5;&#x5230;&#x7684;&#x53EA;&#x6709;&#x6587;&#x4EF6;&#x53D8;&#x5316;&#x3002;&#x4F9D;&#x65E7;&#x662F;&#x589E;&#x91CF;&#x7F16;&#x8BD1;&#xFF0C;&#x6240;&#x4EE5;__content__.json&#x6587;&#x4EF6;&#x4E0D;&#x4F1A;&#x88AB;&#x5220;&#x9664;&#xFF0C;&#x4F1A;&#x88AB;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x3002;&#x56E0;&#x4E3A;&#x6B64;&#x65F6;B&#x5DE5;&#x7A0B;&#x7684;aar&#x4F9D;&#x8D56;&#x8FD4;&#x56DE;&#x7684;getName()&#x4E0E;&#x5176;project&#x4F9D;&#x8D56;&#x8FD4;&#x56DE;&#x7684;getName()&#x503C;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x6240;&#x4EE5;&#x6B64;&#x65F6;SecondTransform&#x83B7;&#x53D6;&#x7684;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x540D;&#x4F1A;&#x4ECE;2&#x5F00;&#x59CB;&#x9012;&#x589E;&#x3002;&#x4F46;&#x662F;&#x5176;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x540D;&#x5E76;&#x6CA1;&#x6709;&#x53D1;&#x751F;&#x6539;&#x53D8;&#xFF0C;&#x5373;first/0.jar&#x548C;first/1&#xFF0C;&#x56E0;&#x4E3A;&#x6587;&#x4EF6;&#x540D;&#x90FD;&#x6CA1;&#x53D8;&#x5316;&#xFF0C;&#x6240;&#x4EE5;&#x6B64;&#x65F6;ADD&#x548C;REMOVED&#x90FD;&#x4E0D;&#x4F1A;&#x89E6;&#x53D1;&#xFF0C;&#x53EA;&#x4F1A;&#x89E6;&#x53D1;first/0.jar&#x7684;CHANGED&#x4E8B;&#x4EF6;&#xFF0C;&#x90A3;&#x4E48;&#x5176;&#x5BF9;&#x5E94;&#x7684;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x540D;&#x662F;second/0.jar&#x548C;second/1&#x5417;&#xFF1F;&#x95EE;&#x9898;&#x5C31;&#x5728;&#x8FD9;&#xFF0C;&#x5F88;&#x660E;&#x786E;&#x7684;&#x544A;&#x8BC9;&#x4F60;&#xFF0C;&#x5982;&#x679C;getContentLocation&#x4F20;&#x9012;&#x4E86;it.getName()&#xFF0C;&#x90A3;&#x4E48;&#x6B64;&#x65F6;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x662F;second/1&#x548C;second/2.jar&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x662F;second/0.jar&#x548C;second/1&#x5462;&#xFF0C;&#x56E0;&#x4E3A;&#x6B64;&#x65F6;&#x4F9D;&#x8D56;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;&#xFF0C;getName()&#x81EA;&#x7136;&#x4F1A;&#x53D1;&#x751F;&#x53D8;&#x5316;&#xFF0C;&#x7F13;&#x5B58;&#x4E2D;&#x627E;&#x4E0D;&#x5230;&#x8BE5;name&#x5BF9;&#x5E94;&#x7684;SubStream&#xFF0C;&#x5C31;&#x4F1A;&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#xFF0C;&#x8FDB;&#x884C;index&#x9012;&#x589E;&#x3002;</p><p>&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;&#xFF1F;&#x6CA1;&#x9519;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x539F;&#x5148;&#x7684;second/0.jar&#x6587;&#x4EF6;&#x65E2;&#x6CA1;&#x6709;REMOVED&#x4E8B;&#x4EF6;&#xFF0C;&#x4E5F;&#x6CA1;&#x6709;&#x88AB;agp&#x5220;&#x9664;&#xFF0C;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;second/0.jar&#x548C;second/2.jar&#x5171;&#x5B58;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x4E24;&#x4E2A;jar&#x4E2D;&#x6709;&#x76F8;&#x540C;&#x7684;&#x7C7B;&#xFF01;&#xFF01;&#xFF01;&#x589E;&#x91CF;&#x6784;&#x5EFA;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;&#x7C7B;&#x91CD;&#x590D;&#xFF01;&#xFF01;&#xFF01;</p><p>&#x6211;&#x4EEC;&#x8FD8;&#x662F;&#x6765;&#x770B;&#x4E00;&#x4E0B;agp 3.2.0+&#x7684;&#x65E5;&#x5FD7;</p><p>&#x5168;&#x91CF;&#x6784;&#x5EFA;&#x7684;&#x65E5;&#x5FD7;</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">&gt; <span class="string">Task :</span><span class="string">app:</span>transformClassesWithFirstForDebug</span><br><span class="line">no <span class="string">incremental:</span> </span><br><span class="line">ImmutableJarInput{</span><br><span class="line">	name=:library, <span class="comment">//&#x6CE8;&#x610F;name&#x552F;&#x4E00;&#x503C;</span></span><br><span class="line">	file=<span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/library/</span>build<span class="regexp">/intermediates/</span>intermediate-jars<span class="regexp">/debug/</span>classes.jar, <span class="comment">//&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span></span><br><span class="line">	contentTypes=CLASSES, </span><br><span class="line">	scopes=SUB_PROJECTS, </span><br><span class="line">	status=NOTCHANGED}  </span><br><span class="line"><span class="symbol">	dest:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/first/</span>debug<span class="regexp">/0.jar /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line">no <span class="string">incremental:</span> </span><br><span class="line">ImmutableDirectoryInput{</span><br><span class="line">	name=a27851442c2ece1ee6b26af1b09d88e2bbc785d0, <span class="comment">//&#x6CE8;&#x610F;name&#x552F;&#x4E00;&#x503C;</span></span><br><span class="line">	file=<span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>javac<span class="regexp">/debug/</span>compileDebugJavaWithJavac<span class="regexp">/classes, /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line">	contentTypes=CLASSES, </span><br><span class="line">	scopes=PROJECT, </span><br><span class="line">	changedFiles={}} </span><br><span class="line"><span class="symbol">	dest:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/first/</span>debug<span class="regexp">/1 /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line"></span><br><span class="line">&gt; <span class="string">Task :</span><span class="string">app:</span>transformClassesWithSecondForDebug</span><br><span class="line"></span><br><span class="line">no <span class="string">incremental:</span></span><br><span class="line"> ImmutableJarInput{</span><br><span class="line"> 	name=:library, <span class="comment">//&#x6CE8;&#x610F;name&#x552F;&#x4E00;&#x503C;</span></span><br><span class="line"> 	file=<span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/first/</span>debug<span class="regexp">/0.jar, /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line"> 	contentTypes=CLASSES, </span><br><span class="line"> 	scopes=SUB_PROJECTS, </span><br><span class="line"> 	status=NOTCHANGED}  </span><br><span class="line"><span class="symbol"> 	dest:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/second/</span>debug<span class="regexp">/0.jar /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line">no <span class="string">incremental:</span> </span><br><span class="line">ImmutableDirectoryInput{</span><br><span class="line">	name=a27851442c2ece1ee6b26af1b09d88e2bbc785d0, <span class="comment">//&#x6CE8;&#x610F;name&#x552F;&#x4E00;&#x503C;</span></span><br><span class="line">	file=<span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/first/</span>debug<span class="regexp">/1, /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line">	contentTypes=CLASSES, </span><br><span class="line">	scopes=PROJECT, </span><br><span class="line">	changedFiles={}} </span><br><span class="line"><span class="symbol">	dest:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/second/</span>debug<span class="regexp">/1 /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br></pre></td></tr></table></figure><p>&#x589E;&#x91CF;&#x6784;&#x5EFA;&#x7684;&#x65E5;&#x5FD7;</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">&gt; <span class="string">Task :</span><span class="string">app:</span>transformClassesWithFirstForDebug</span><br><span class="line"></span><br><span class="line">no <span class="string">incremental:</span> </span><br><span class="line">ImmutableJarInput{</span><br><span class="line">	name=io.github.<span class="string">lizhangqu:</span><span class="string">library:</span><span class="number">1.0</span><span class="number">.0</span>-<span class="string">SNAPSHOT:</span><span class="number">20190628.005304</span><span class="number">-2</span>, <span class="comment">//&#x6CE8;&#x610F;name&#x552F;&#x4E00;&#x503C;</span></span><br><span class="line">	file=<span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/transforms-2/</span>files<span class="number">-2.1</span><span class="regexp">/e7d910ca0ea82c5ab31e6f41b3d86629/</span>jars<span class="regexp">/classes.jar, /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line">	contentTypes=CLASSES, </span><br><span class="line">	scopes=EXTERNAL_LIBRARIES, </span><br><span class="line">	status=NOTCHANGED}  </span><br><span class="line"><span class="symbol">	dest:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/first/</span>debug<span class="regexp">/0.jar /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line"></span><br><span class="line">no <span class="string">incremental:</span> </span><br><span class="line">ImmutableDirectoryInput{</span><br><span class="line">	name=a27851442c2ece1ee6b26af1b09d88e2bbc785d0, <span class="comment">//&#x6CE8;&#x610F;name&#x552F;&#x4E00;&#x503C;</span></span><br><span class="line">	file=<span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>javac<span class="regexp">/debug/</span>compileDebugJavaWithJavac<span class="regexp">/classes, /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line">	contentTypes=CLASSES, </span><br><span class="line">	scopes=PROJECT, </span><br><span class="line">	changedFiles={}} </span><br><span class="line"><span class="symbol">	dest:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/first/</span>debug<span class="regexp">/1 /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line"></span><br><span class="line">&gt; <span class="string">Task :</span><span class="string">app:</span>transformClassesWithSecondForDebug</span><br><span class="line"></span><br><span class="line">CHANGED input <span class="string">is:</span> </span><br><span class="line">ImmutableJarInput{</span><br><span class="line">	name=io.github.<span class="string">lizhangqu:</span><span class="string">library:</span><span class="number">1.0</span><span class="number">.0</span>-<span class="string">SNAPSHOT:</span><span class="number">20190628.005304</span><span class="number">-2</span>, <span class="comment">//&#x6CE8;&#x610F;name&#x552F;&#x4E00;&#x503C;</span></span><br><span class="line">	file=<span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/first/</span>debug<span class="regexp">/0.jar, /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;</span><br><span class="line">	contentTypes=CLASSES, </span><br><span class="line">	scopes=EXTERNAL_LIBRARIES, </span><br><span class="line">	status=CHANGED} </span><br><span class="line"><span class="symbol">	dest:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/second/</span>debug<span class="regexp">/2.jar /</span>/&#x6CE8;&#x610F;&#x6587;&#x4EF6;&#x540D;&#x662F;<span class="number">2.</span>jar&#x800C;&#x4E0D;&#x662F;<span class="number">0.</span>jar</span><br></pre></td></tr></table></figure><p>&#x7F16;&#x8BD1;&#x62A5;&#x9519;</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">java.lang.<span class="string">RuntimeException:</span> java.lang.<span class="string">RuntimeException:</span> com.android.builder.dexing.<span class="string">DexArchiveMergerException:</span> Error <span class="keyword">while</span> merging dex <span class="string">archives:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/dexBuilder/</span>debug<span class="regexp">/0, /</span>Users<span class="regexp">/lizhangqu/</span>Desktop<span class="regexp">/android-gradle-plugin-transform-patch/</span>app<span class="regexp">/build/</span>intermediates<span class="regexp">/transforms/</span>dexBuilder<span class="regexp">/debug/</span><span class="number">4.</span>jar, <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>android-gradle-plugin-transform-patch<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>transforms<span class="regexp">/dexBuilder/</span>debug/<span class="number">2.</span>jar</span><br><span class="line">Learn how to resolve the issue at <span class="string">https:</span><span class="comment">//developer.android.com/studio/build/dependencies#duplicate_classes.</span></span><br><span class="line">Program type already <span class="string">present:</span> &#x67D0;&#x67D0;&#x67D0;&#x7C7B;</span><br></pre></td></tr></table></figure><p>&#x540C;&#x7406;&#xFF0C;&#x5BF9;&#x4E8E;&#x7B2C;&#x4E8C;&#x4E2A;&#x573A;&#x666F;&#xFF0C;&#x5347;&#x7EA7;aar&#x7684;&#x7248;&#x672C;&#x6216;&#x8005;SNAPSHOT&#x7248;&#x672C;&#x53D1;&#x751F;&#x6539;&#x53D8;&#xFF0C;&#x5176;getName()&#x8FD4;&#x56DE;&#x7684;maven&#x5750;&#x6807;&#x663E;&#x793A;&#x503C;&#x4E5F;&#x662F;&#x4F1A;&#x8DDF;&#x7740;&#x6539;&#x53D8;&#x7684;&#xFF0C;&#x8FD9;&#x91CC;&#x6CE8;&#x610F;SNAPSHOPT&#x7248;&#x672C;&#x5176;getName()&#x8FD4;&#x56DE;&#x7684;&#x503C;&#x540E;&#x4F1A;&#x8DDF;&#x968F;&#x5FEB;&#x7167;&#x7248;&#x672C;&#x7684;&#x65E5;&#x671F;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x540C;&#x7684;SNAPSHOT&#x7248;&#x672C;&#x5176;getName()&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x4E00;&#x65E6;&#x5347;&#x7EA7;aar&#x6216;&#x8005;&#x66F4;&#x65B0;SNAPSHOT&#xFF0C;&#x589E;&#x91CF;&#x7F16;&#x8BD1;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;&#x7C7B;&#x91CD;&#x590D;&#x3002;</p><h3 id="&#x5982;&#x4F55;&#x4FEE;&#x590D;"><a href="#&#x5982;&#x4F55;&#x4FEE;&#x590D;" class="headerlink" title="&#x5982;&#x4F55;&#x4FEE;&#x590D;"></a>&#x5982;&#x4F55;&#x4FEE;&#x590D;</h3><p>&#x6211;&#x4EEC;&#x77E5;&#x9053;&#xFF0C;&#x4EA7;&#x751F;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x672C;&#x8D28;&#x539F;&#x56E0;&#x662F;&#x56E0;&#x4E3A;&#x76F8;&#x540C;&#x7684;&#x7C7B;&#xFF0C;&#x5176;&#x5F52;&#x5C5E;&#x7684;&#x4F9D;&#x8D56;&#x8FD4;&#x56DE;&#x7684;getName()&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;&#xFF0C;&#x800C;&#x6211;&#x4EEC;&#x5C06;&#x5176;getName()&#x4F20;&#x7ED9;&#x4E86;getContentLocation&#x51FD;&#x6570;&#xFF0C;&#x56E0;&#x4E3A;&#x503C;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;&#xFF0C;&#x6240;&#x4EE5;&#x6587;&#x4EF6;&#x540D;&#x8FDB;&#x884C;&#x4E86;&#x9012;&#x589E;&#xFF0C;&#x5339;&#x914D;&#x4E0D;&#x5230;&#x539F;&#x5148;&#x7684;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#xFF0C;&#x5220;&#x9664;&#x4E0D;&#x4E86;&#x88AB;&#x79FB;&#x9664;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x540C;&#x65F6;&#x53C8;&#x4EA7;&#x751F;&#x4E86;&#x4E00;&#x4E2A;&#x65B0;&#x6587;&#x4EF6;&#xFF0C;&#x51FA;&#x73B0;&#x7C7B;&#x91CD;&#x590D;&#xFF0C;&#x90A3;&#x4E48;&#x6709;&#x6CA1;&#x6709;&#x529E;&#x6CD5;&#x5C06;getContentLocation&#x8FD4;&#x56DE;&#x503C;&#x5339;&#x914D;&#x5230;&#x7684;&#x6587;&#x4EF6;&#x53D8;&#x5F97;&#x548C;&#x5168;&#x91CF;&#x7F16;&#x8BD1;&#x7684;&#x65F6;&#x5019;&#x4E00;&#x6837;&#x5462;&#xFF1F;&#x7B54;&#x6848;&#x662F;&#x53EF;&#x4EE5;&#x7684;&#x3002;</p><p>&#x5BF9;&#x4E8E;FirstTransform&#x6765;&#x8BB2;&#xFF0C;&#x65E0;&#x8BBA;&#x5168;&#x91CF;&#x7F16;&#x8BD1;&#x548C;&#x589E;&#x91CF;&#x7F16;&#x8BD1;&#xFF0C;&#x5176;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x90FD;&#x662F;first/0.jar&#x548C;first/1&#xFF0C;&#x90A3;&#x4E48;&#x6B64;&#x65F6;&#x5BF9;&#x4E8E;SecondTransform&#x6765;&#x8BB2;&#xFF0C;__content__.json&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x540E;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x5C06;getName()&#x4F20;&#x9012;&#x7ED9;getContentLocation&#xFF0C;&#x7531;&#x4E8E;getName()&#x8FD4;&#x56DE;&#x4E86;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x4E1C;&#x897F;&#xFF0C;SubStream&#x7F13;&#x5B58;&#x4E2D;&#x6CA1;&#x6709;&#x5339;&#x914D;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x6240;&#x4EE5;&#x547D;&#x540D;&#x5FC5;&#x7136;&#x4F1A;&#x8FDB;&#x884C;&#x9012;&#x589E;&#x3002;&#x6240;&#x4EE5;&#x6B64;&#x65F6;&#x6211;&#x4EEC;&#x4E0D;&#x80FD;&#x5C06;getName()&#x4F20;&#x9012;&#x7ED9;&#x5B83;&#xFF0C;&#x6B64;&#x65F6;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x5C06;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x7684;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x4F20;&#x9012;&#x7ED9;&#x5B83;&#x5373;&#x53EF;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;first/0.jar&#x5C31;&#x4F1A;&#x5BF9;&#x5E94;&#x5230;second/0.jar&#x800C;&#x4E0D;&#x518D;&#x662F;second/2.jar&#x4E0A;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;&#x56E0;&#x4E3A;&#x7528;&#x4E86;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#xFF0C;&#x5168;&#x91CF;&#x6784;&#x5EFA;&#x65F6;&#xFF0C;&#x5176;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x7684;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x548C;&#x589E;&#x91CF;&#x6784;&#x5EFA;&#x65F6;&#x662F;&#x4E00;&#x81F4;&#x7684;&#xFF0C;&#x90FD;&#x662F;first/0.jar&#x7684;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#xFF0C;&#x53EA;&#x662F;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;&#xFF0C;&#x524D;&#x540E;&#x4FDD;&#x6301;&#x4E86;&#x552F;&#x4E00;&#x6027;&#xFF0C;&#x7531;&#x4E8E;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x7F13;&#x5B58;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x53D6;&#x5230;&#x7684;&#x540D;&#x5B57;&#x5C31;&#x662F;second/0.jar&#x4E86;&#x3002;</p><p>&#x6240;&#x4EE5;&#x5BF9;&#x4E8E;aar&#x5347;&#x7EA7;&#x51FA;&#x73B0;&#x7684;&#x7C7B;&#x91CD;&#x590D;&#x95EE;&#x9898;&#xFF0C;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#x5C06;getName()&#x4F20;&#x53C2;&#x4FEE;&#x6539;&#x4E3A;&#x6587;&#x4EF6;&#x7684;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#xFF0C;&#x5373;</p><p>&#x5C06;</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">transformInvocation</span><span class="selector-class">.getOutputProvider</span>()<span class="selector-class">.getContentLocation</span>(<span class="selector-tag">it</span><span class="selector-class">.getName</span>(), <span class="selector-tag">it</span><span class="selector-class">.contentTypes</span>, <span class="selector-tag">it</span><span class="selector-class">.scopes</span>, <span class="selector-tag">Format</span><span class="selector-class">.JAR</span>)</span><br><span class="line"><span class="selector-tag">transformInvocation</span><span class="selector-class">.getOutputProvider</span>()<span class="selector-class">.getContentLocation</span>(<span class="selector-tag">it</span><span class="selector-class">.getName</span>(), <span class="selector-tag">it</span><span class="selector-class">.contentTypes</span>, <span class="selector-tag">it</span><span class="selector-class">.scopes</span>, <span class="selector-tag">Format</span><span class="selector-class">.DIRECTORY</span>)</span><br></pre></td></tr></table></figure><p>&#x4FEE;&#x6539;&#x4E3A;</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">transformInvocation</span><span class="selector-class">.getOutputProvider</span>()<span class="selector-class">.getContentLocation</span>(<span class="selector-tag">it</span><span class="selector-class">.getFile</span>()<span class="selector-class">.toString</span>, <span class="selector-tag">it</span><span class="selector-class">.contentTypes</span>, <span class="selector-tag">it</span><span class="selector-class">.scopes</span>, <span class="selector-tag">Format</span><span class="selector-class">.JAR</span>)</span><br><span class="line"><span class="selector-tag">transformInvocation</span><span class="selector-class">.getOutputProvider</span>()<span class="selector-class">.getContentLocation</span>(<span class="selector-tag">it</span><span class="selector-class">.getFile</span>()<span class="selector-class">.toString</span>, <span class="selector-tag">it</span><span class="selector-class">.contentTypes</span>, <span class="selector-tag">it</span><span class="selector-class">.scopes</span>, <span class="selector-tag">Format</span><span class="selector-class">.DIRECTORY</span>)</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x6709;&#x4EC0;&#x4E48;&#x5F0A;&#x7AEF;&#x5417;&#xFF1F;&#x5F53;&#x7136;&#x6709;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x7684;&#x5DE5;&#x7A0B;&#x4E2D;&#x4F7F;&#x7528;&#x4E86;n&#x4E2A;transform&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;n&#x4E2A;transform&#x90FD;&#x5F97;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#xFF0C;&#x5426;&#x5219;&#x7167;&#x6837;&#x4F1A;&#x51FA;&#x73B0;&#x7C7B;&#x91CD;&#x590D;&#x3002;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;&#x6B64;&#x65B9;&#x6CD5;&#x5BF9;&#x4E8E;project&#x5207;&#x6362;&#x6210;aar&#x4F9D;&#x8D56;&#x4E5F;&#x65E0;&#x6548;&#xFF0C;&#x4E5F;&#x7167;&#x6837;&#x4F1A;&#x51FA;&#x73B0;&#x7C7B;&#x91CD;&#x590D;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x63A8;&#x8350;&#x4F7F;&#x7528;&#x6B64;&#x65B9;&#x6CD5;&#x3002;</p><p>&#x5F53;&#x7136;&#xFF0C;&#x5728;android gradle plugin&#x4E2D;&#xFF0C;&#x5185;&#x7F6E;&#x7684;transform&#x57FA;&#x672C;&#x90FD;&#x5DF2;&#x7ECF;&#x4FEE;&#x6539;&#x6210;&#x4F20;&#x9012;&#x8F93;&#x5165;&#x6587;&#x4EF6;&#x7684;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x4E86;&#x3002;&#x5F88;&#x597D;&#x5947;&#x4E3A;&#x4EC0;&#x4E48;&#x6CA1;&#x6709;&#x4EBA;&#x53D1;&#x73B0;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x662F;&#x53BB;&#x4FEE;&#x6539;getContentLocation&#x7684;&#x4F20;&#x53C2;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x4E2A;bug&#x6301;&#x7EED;&#x4E86;&#x4E00;&#x5E74;&#x591A;&#x90FD;&#x6CA1;&#x6709;&#x4FEE;&#x590D;&#x3002;</p><p>&#x90A3;&#x4E48;&#x8FD8;&#x6709;&#x4EC0;&#x4E48;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x4FEE;&#x590D;&#x5417;&#xFF1F;</p><p>&#x5F53;&#x7136;&#x9700;&#x8981;&#x7528;&#x4E00;&#x70B9;&#x70B9;&#x7684;&#x9ED1;&#x79D1;&#x6280;&#xFF0C;&#x90A3;&#x6BB5;&#x5BFC;&#x81F4;bug&#x7684;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">@NonNull</span><br><span class="line">TransformOutputProvider <span class="keyword">as</span><span class="constructor">Output(<span class="params">boolean</span> <span class="params">isIncremental</span>)</span> throws IOException {</span><br><span class="line">    <span class="keyword">if</span> (!isIncremental) {</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">FileUtils</span>.</span></span>delete<span class="constructor">IfExists(<span class="params">new</span> File(<span class="params">getRootLocation</span>()</span>, SubStream.FN_FOLDER_CONTENT));</span><br><span class="line">    }</span><br><span class="line">    init<span class="literal">()</span>;</span><br><span class="line">    return <span class="keyword">new</span> <span class="constructor">TransformOutputProviderImpl(<span class="params">folderUtils</span>)</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8BE5;&#x51FD;&#x6570;&#x5B58;&#x5728;IntermediateStream&#x4E2D;&#xFF0C;&#x901A;&#x8FC7;&#x67E5;&#x770B;&#x6E90;&#x7801;&#x53D1;&#x73B0;&#xFF0C;&#x5728;agp 3.2.0&#x53CA;&#x4E4B;&#x540E;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x8BE5;&#x7C7B;&#x90FD;&#x6CA1;&#x6709;&#x53D1;&#x751F;&#x8FC7;&#x53D8;&#x5316;&#x3002;</p><p>&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x5C06;&#x8BE5;&#x7C7B;&#x5B9E;&#x73B0;&#x62F7;&#x51FA;&#x6765;&#xFF0C;&#x5C06;&#x5BFC;&#x81F4;bug&#x7684;&#x4EE3;&#x7801;&#x6CE8;&#x91CA;&#x6389;&#xFF0C;&#x5982;&#x4E0B;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">@NonNull</span><br><span class="line">TransformOutputProvider <span class="keyword">as</span><span class="constructor">Output(<span class="params">boolean</span> <span class="params">isIncremental</span>)</span> throws IOException {</span><br><span class="line">    <span class="comment">//if (!isIncremental) {</span></span><br><span class="line">    <span class="comment">//    FileUtils.deleteIfExists(new File(getRootLocation(), SubStream.FN_FOLDER_CONTENT));</span></span><br><span class="line">    <span class="comment">//}</span></span><br><span class="line">    init<span class="literal">()</span>;</span><br><span class="line">    return <span class="keyword">new</span> <span class="constructor">TransformOutputProviderImpl(<span class="params">folderUtils</span>)</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x5355;&#x72EC;&#x5C06;&#x8BE5;&#x7C7B;&#x72EC;&#x7ACB;&#x7F16;&#x8BD1;&#x6210;&#x4E00;&#x4E2A;jar&#x6587;&#x4EF6;&#x3002;</p><p>&#x901A;&#x8FC7;&#x7F16;&#x5199;&#x4E00;&#x4E2A;gradle&#x63D2;&#x4EF6;&#xFF0C;&#x5C06;&#x8BE5;jar&#x6587;&#x4EF6;&#x6CE8;&#x5165;&#x5230;classloader&#x4E2D;&#xFF0C;&#x8BA9;&#x5176;&#x4F18;&#x5148;&#x67E5;&#x627E;&#x6211;&#x4EEC;&#x7684;&#x8865;&#x4E01;jar&#x4E2D;&#x7684;&#x7C7B;&#x5B8C;&#x6210;&#x4FEE;&#x590D;&#xFF0C;&#x600E;&#x4E48;&#x6837;&#xFF0C;&#x662F;&#x4E0D;&#x662F;&#x6709;android hotpatch&#x7684;&#x611F;&#x89C9;&#x3002;</p><p>&#x4E00;&#x5F00;&#x59CB;&#x51C6;&#x5907;&#x91C7;&#x7528;&#x66FF;&#x6362;classloader&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4F46;&#x662F;&#x6D4B;&#x8BD5;&#x8FC7;&#x540E;&#x53D1;&#x73B0;gradle&#x8C8C;&#x4F3C;&#x5BF9;classloader&#x8FDB;&#x884C;&#x4E86;&#x54C8;&#x5E0C;&#x6821;&#x9A8C;&#xFF0C;&#x884C;&#x4E0D;&#x901A;&#xFF0C;&#x56E0;&#x6B64;&#x53EA;&#x80FD;&#x5BF9;&#x5DF2;&#x6709;&#x7684;classloader&#x91C7;&#x53D6;&#x70B9;&#x624B;&#x6BB5;&#x3002;</p><p>gradle&#x4F7F;&#x7528;&#x7684;classloader&#x662F;VisitableURLClassLoader&#xFF0C;&#x5B83;&#x662F;URLClassLoader&#x7684;&#x5B50;&#x7C7B;&#xFF0C;URLClassLoader&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x662F;ucp&#xFF0C;&#x5B83;&#x662F;URLClassPath&#x7C7B;&#x578B;&#xFF0C;&#x8D1F;&#x8D23;&#x7C7B;&#x548C;&#x8D44;&#x6E90;&#x7684;&#x67E5;&#x627E;&#xFF0C;&#x800C;URLClassPath&#x5BF9;&#x8C61;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;loaders&#x6210;&#x5458;&#x53D8;&#x91CF;&#xFF0C;&#x5B83;&#x662F;&#x4E2A;ArrayList&#xFF0C;&#x6CDB;&#x578B;&#x662F;URLClassPath.Loader&#xFF0C;&#x67E5;&#x627E;&#x903B;&#x8F91;&#x662F;&#x5728;ArrayList&#x524D;&#x9762;&#x7684;&#x4F1A;&#x8FDB;&#x884C;&#x4F18;&#x5148;&#x67E5;&#x627E;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x5C06;&#x8FD9;&#x4E2A;patch&#x6587;&#x4EF6;&#x63D2;&#x5165;&#x5230;&#x8BE5;list&#x6700;&#x524D;&#x9762;&#x5373;&#x53EF;&#xFF0C;&#x5F53;&#x7136;&#x5982;&#x679C;&#x4E4B;&#x524D;&#x5DF2;&#x7ECF;&#x52A0;&#x8F7D;&#x8FC7;&#x8BE5;&#x7C7B;&#xFF0C;&#x6211;&#x4EEC;&#x518D;&#x63D2;&#x5165;&#x4E5F;&#x662F;&#x65E0;&#x6548;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x5C24;&#x5176;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x5C31;&#x662F;&#x5B88;&#x62A4;&#x8FDB;&#x7A0B;&#xFF0C;&#x56E0;&#x4E3A;&#x5B88;&#x62A4;&#x8FDB;&#x7A0B;&#x8BE5;&#x7C7B;&#x4E4B;&#x524D;&#x88AB;&#x63D0;&#x524D;&#x52A0;&#x8F7D;&#x8FC7;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x6D4B;&#x8BD5;&#x524D;&#x5E94;&#x8BE5;&#x5C06;&#x4E4B;&#x524D;&#x7684;&#x5B88;&#x62A4;&#x8FDB;&#x7A0B;&#x5168;&#x90E8;&#x6740;&#x6B7B;&#x3002;</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="string">./gradlew</span> <span class="params">--stop</span></span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x7684;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * agp transform patch when use agp 3.2.0+</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public <span class="keyword">class</span> AGPTransformPatch {</span><br><span class="line">    public static boolean should<span class="constructor">ApplyPatch()</span> {</span><br><span class="line">        String version = get<span class="constructor">AndroidGradlePluginVersionCompat()</span>;</span><br><span class="line">        <span class="keyword">if</span> (version<span class="operator"> == </span>null) {</span><br><span class="line">            return <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        String<span class="literal">[]</span> splitVersions = version.split(<span class="string">&quot;\\.&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (splitVersions<span class="operator"> == </span>null<span class="operator"> || </span>splitVersions.length &lt; <span class="number">3</span>) {</span><br><span class="line">            return <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="built_in">int</span> major = <span class="module-access"><span class="module"><span class="identifier">Integer</span>.</span></span>parse<span class="constructor">Int(<span class="params">splitVersions</span>[0])</span>;</span><br><span class="line">        <span class="built_in">int</span> minor = <span class="module-access"><span class="module"><span class="identifier">Integer</span>.</span></span>parse<span class="constructor">Int(<span class="params">splitVersions</span>[1])</span>;</span><br><span class="line">        <span class="comment">//only agp 3.2.0+ need to apply patch</span></span><br><span class="line">        <span class="keyword">if</span> (major &lt; <span class="number">3</span><span class="operator"> || </span>(major<span class="operator"> == </span><span class="number">3</span><span class="operator"> &amp;&amp; </span>minor &lt; <span class="number">2</span>)) {</span><br><span class="line">            return <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        return <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public static void apply<span class="constructor">AGPTransformPatch(Project <span class="params">project</span>, URL <span class="params">url</span>)</span> {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="keyword">if</span> (!should<span class="constructor">ApplyPatch()</span>) {</span><br><span class="line">                return</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//why not replace classloader ?</span></span><br><span class="line">            <span class="comment">//because there are some problems when replace it.</span></span><br><span class="line">            <span class="comment">//so we add the file to ucp&apos;s loader at first.</span></span><br><span class="line">            ClassLoader originalClassloader = <span class="module-access"><span class="module"><span class="identifier">AGPTransformPatch</span>.</span></span><span class="keyword">class</span>.get<span class="constructor">ClassLoader()</span>;</span><br><span class="line">            Field ucpField = <span class="module-access"><span class="module"><span class="identifier">URLClassLoader</span>.</span></span><span class="keyword">class</span>.get<span class="constructor">DeclaredField(<span class="string">&quot;ucp&quot;</span>)</span>;</span><br><span class="line">            ucpField.set<span class="constructor">Accessible(<span class="params">true</span>)</span>;</span><br><span class="line">            Object ucp = ucpField.get(originalClassloader);</span><br><span class="line">            Class ucpClass = ucp.get<span class="constructor">Class()</span>;</span><br><span class="line">            Field loadersField = ucpClass.get<span class="constructor">DeclaredField(<span class="string">&quot;loaders&quot;</span>)</span>;</span><br><span class="line">            loadersField.set<span class="constructor">Accessible(<span class="params">true</span>)</span>;</span><br><span class="line">            List&lt;Object&gt; loaders = (List&lt;Object&gt;) loadersField.get(ucp);</span><br><span class="line">            Method getLoaderMethod = ucpClass.get<span class="constructor">DeclaredMethod(<span class="string">&quot;getLoader&quot;</span>, URL.<span class="params">class</span>)</span>;</span><br><span class="line">            getLoaderMethod.set<span class="constructor">Accessible(<span class="params">true</span>)</span>;</span><br><span class="line">            Object loader = getLoaderMethod.invoke(ucp, url);</span><br><span class="line">            <span class="keyword">if</span> (!loaders.first<span class="literal">()</span>.get<span class="constructor">BaseURL()</span>.equals(loader.get<span class="constructor">BaseURL()</span>)) {</span><br><span class="line">                loaders.add(<span class="number">0</span>, loader);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                loaders.set(<span class="number">0</span>, loader);</span><br><span class="line">            }</span><br><span class="line">        } catch (Exception e) {</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">            throw <span class="keyword">new</span> <span class="constructor">GradleException(<span class="string">&quot;Apply agp transform patch failed, please report it.&quot;</span>)</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    static String get<span class="constructor">AndroidGradlePluginVersionCompat()</span> {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            Class versionModel = <span class="module-access"><span class="module"><span class="identifier">Class</span>.</span></span>for<span class="constructor">Name(<span class="string">&quot;com.android.builder.model.Version&quot;</span>)</span>;</span><br><span class="line">            Field versionFiled = versionModel.get<span class="constructor">DeclaredField(<span class="string">&quot;ANDROID_GRADLE_PLUGIN_VERSION&quot;</span>)</span>;</span><br><span class="line">            versionFiled.set<span class="constructor">Accessible(<span class="params">true</span>)</span>;</span><br><span class="line">            return (String) versionFiled.get(null);</span><br><span class="line">        } catch (Exception e) {</span><br><span class="line">            <span class="comment">//ignore</span></span><br><span class="line">        }</span><br><span class="line">        return null;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8C03;&#x7528;AGPTransformPatch.applyAGPTransformPatch&#x5C06;patch&#x6587;&#x4EF6;&#x7684;URL&#x5BF9;&#x8C61;&#x4F20;&#x5165;&#x5373;&#x53EF;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="module-access"><span class="module"><span class="identifier">AGPTransformPatch</span>.</span></span>should<span class="constructor">ApplyPatch()</span>) {</span><br><span class="line">    File patchFile</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        Dependency dependency = project.get<span class="constructor">Dependencies()</span>.create(<span class="string">&quot;io.github.lizhangqu:android-gradle-plugin-transform-patch:1.0.0&quot;</span>)</span><br><span class="line">        Configuration configuration = project.get<span class="constructor">Configurations()</span>.detached<span class="constructor">Configuration(<span class="params">dependency</span>)</span></span><br><span class="line">        configuration.set<span class="constructor">Transitive(<span class="params">false</span>)</span></span><br><span class="line">        configuration.resolutionStrategy.cache<span class="constructor">DynamicVersionsFor(5, &apos;<span class="params">minutes</span>&apos;)</span></span><br><span class="line">        configuration.resolutionStrategy.cache<span class="constructor">ChangingModulesFor(0, &apos;<span class="params">seconds</span>&apos;)</span></span><br><span class="line">        patchFile = configuration.get<span class="constructor">SingleFile()</span></span><br><span class="line">    } catch (Exception e) {</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (patchFile<span class="operator"> == </span>null) {</span><br><span class="line">        project.logger.error(<span class="string">&quot;can&apos;t get transform patch&apos;s patchFile&quot;</span>)</span><br><span class="line">        return</span><br><span class="line">    }</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">AGPTransformPatch</span>.</span></span>apply<span class="constructor">AGPTransformPatch(<span class="params">project</span>, <span class="params">patchFile</span>.<span class="params">toURI</span>()</span>.<span class="keyword">to</span><span class="constructor">URL()</span>)</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x5E94;&#x7528;&#x7F16;&#x5199;&#x597D;&#x7684;gradle&#x63D2;&#x4EF6;&#x5373;&#x53EF;</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">apply <span class="string">plugin:</span> <span class="string">&apos;agp-transform-patch&apos;</span></span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x4E0D;&#x751F;&#x6548;&#xFF0C;&#x4E0D;&#x59A8;&#x8BD5;&#x8BD5;&#x5C06;&#x5B88;&#x62A4;&#x8FDB;&#x7A0B;&#x6740;&#x6389;&#xFF01;&#xFF01;&#xFF01;</p><h3 id="&#x67F3;&#x6697;&#x82B1;&#x660E;"><a href="#&#x67F3;&#x6697;&#x82B1;&#x660E;" class="headerlink" title="&#x67F3;&#x6697;&#x82B1;&#x660E;"></a>&#x67F3;&#x6697;&#x82B1;&#x660E;</h3><p>&#x6216;&#x8BB8;&#x4F60;&#x89C9;&#x5F97;&#x4E0A;&#x9762;&#x7684;&#x65B9;&#x5F0F;&#x6709;&#x70B9;&#x91CD;&#xFF0C;&#x4E0D;&#x60F3;hook classloader&#xFF0C;&#x90A3;&#x4E48;&#x6709;&#x6CA1;&#x6709;&#x5176;&#x4ED6;&#x4FEE;&#x590D;&#x65B9;&#x5F0F;&#x5462;&#xFF1F;&#x7231;&#x5947;&#x827A;&#x7684;&#x540C;&#x5B66;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5728;__content__.json&#x6587;&#x4EF6;&#x88AB;&#x5220;&#x9664;&#x524D;&#xFF0C;&#x5C06;&#x5176;&#x8FDB;&#x884C;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x3002;__content__.json&#x662F;&#x5728;asOutput&#x51FD;&#x6570;&#x4E2D;init&#x4E4B;&#x524D;&#x88AB;&#x5220;&#x9664;&#xFF0C;&#x5982;&#x4E0B;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">TransformOutputProvider <span class="keyword">as</span><span class="constructor">Output(<span class="params">boolean</span> <span class="params">isIncremental</span>)</span> throws IOException {</span><br><span class="line">    <span class="keyword">if</span> (!isIncremental) {</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">FileUtils</span>.</span></span>delete<span class="constructor">IfExists(<span class="params">new</span> File(<span class="params">getRootLocation</span>()</span>, SubStream.FN_FOLDER_CONTENT));</span><br><span class="line">    }</span><br><span class="line">    init<span class="literal">()</span>;</span><br><span class="line">    return <span class="keyword">new</span> <span class="constructor">TransformOutputProviderImpl(<span class="params">folderUtils</span>)</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x5728;delete&#x524D;&#xFF0C;&#x63D0;&#x524D;&#x8C03;&#x7528;init&#x51FD;&#x6570;&#x8FDB;&#x884C;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x5373;&#x53EF;&#xFF0C;&#x90A3;&#x4E48;&#x4EC0;&#x4E48;&#x65F6;&#x673A;&#x5408;&#x9002;&#x5462;&#xFF1F;&#x5C31;&#x662F;task&#x6267;&#x884C;&#x524D;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x901A;&#x8FC7;&#x63D0;&#x524D;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x5728;__content__.json&#x6587;&#x4EF6;&#x88AB;&#x5220;&#x9664;&#x524D;&#x8FDB;&#x884C;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#xFF0C;&#x8FBE;&#x5230;&#x4FEE;&#x590D;&#x76EE;&#x7684;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> AGPTransformPatchByPreInitPlugin <span class="keyword">implements</span> Plugin&lt;<span class="keyword">Project</span>&gt; {</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">void</span> apply(<span class="keyword">Project</span> <span class="keyword">project</span>) {</span><br><span class="line">        <span class="keyword">if</span> (AGPTransformPatch.shouldApplyPatch()) {</span><br><span class="line">            <span class="keyword">project</span>.gradle.addListener(<span class="keyword">new</span> TaskExecutionListener() {</span><br><span class="line">                @Override</span><br><span class="line">                <span class="keyword">void</span> beforeExecute(<span class="keyword">Task</span> <span class="keyword">task</span>) {</span><br><span class="line">                    <span class="comment">//&#x4E0D;&#x662F;&#x5F53;&#x524D;project&#x4E0D;&#x63D0;&#x524D;&#x521D;&#x59CB;&#x5316;</span></span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">task</span>.getProject() != <span class="keyword">project</span>) {</span><br><span class="line">                        <span class="keyword">return</span></span><br><span class="line">                    }</span><br><span class="line">                    <span class="comment">//noinspection GroovyAccessibility</span></span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">task</span> <span class="keyword">instanceof</span> TransformTask &amp;&amp; <span class="keyword">task</span>.outputStream != <span class="keyword">null</span>) {</span><br><span class="line">                        <span class="comment">//noinspection GroovyAccessibility</span></span><br><span class="line">                        <span class="keyword">task</span>.outputStream.init()</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">                @Override</span><br><span class="line">                <span class="keyword">void</span> afterExecute(<span class="keyword">Task</span> <span class="keyword">task</span>, TaskState taskState) {</span><br><span class="line"></span><br><span class="line">                }</span><br><span class="line">            })</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7B80;&#x5355;&#x7684;&#x51E0;&#x53E5;&#x4EE3;&#x7801;&#x4E5F;&#x53EF;&#x4EE5;&#x8FBE;&#x5230;&#x4FEE;&#x590D;&#x4F5C;&#x7528;&#xFF0C;&#x800C;&#x4E14;&#x6BD4;&#x8F83;&#x8F7B;&#x91CF;&#xFF0C;&#x4EC5;&#x4EC5;&#x662F;&#x8C03;&#x7528;&#x4E86;&#x4E00;&#x4E2A;protected&#x8BBF;&#x95EE;&#x7B26;&#x7684;outputStream&#x7684;init&#x51FD;&#x6570;&#x3002;</p><p>&#x5728;&#x5BF9;&#x5E94;&#x6A21;&#x5757;&#x4E2D;&#x5E94;&#x7528;&#x8BE5;&#x63D2;&#x4EF6;</p><figure class="highlight coq"><table><tr><td class="code"><pre><span class="line"><span class="built_in">apply</span> plugin: &apos;agp-transform-patch-<span class="built_in">by</span>-pre-init&apos;</span><br></pre></td></tr></table></figure><h3 id="&#x5F00;&#x7BB1;&#x5373;&#x7528;"><a href="#&#x5F00;&#x7BB1;&#x5373;&#x7528;" class="headerlink" title="&#x5F00;&#x7BB1;&#x5373;&#x7528;"></a>&#x5F00;&#x7BB1;&#x5373;&#x7528;</h3><p>&#x8FD9;&#x91CC;&#x6211;&#x5DF2;&#x7ECF;&#x5C06;&#x5176;&#x5C01;&#x88C5;&#x6210;&#x4E00;&#x4E2A;gradle&#x63D2;&#x4EF6;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;</p><p>&#x5BF9;&#x4E8E;&#x5DE5;&#x7A0B;&#x76EE;&#x5F55;&#x4E2D;&#x6CA1;&#x6709;buildSrc&#x6A21;&#x5757;&#x7684;&#x5DE5;&#x7A0B;&#xFF0C;&#x53EF;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#x65B9;&#x5F0F;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">buildscript</span> {</span><br><span class="line">    <span class="keyword">repositories</span> {</span><br><span class="line">        jcenter()</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">dependencies</span> {</span><br><span class="line">        <span class="keyword">classpath</span>(<span class="string">&apos;io.github.lizhangqu:plugin-agp-transform-patch:1.0.4&apos;</span>)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5728;&#x5BF9;&#x5E94;&#x6A21;&#x5757;&#x4E2D;&#x5E94;&#x7528;&#x63D2;&#x4EF6;</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">apply <span class="string">plugin:</span> <span class="string">&apos;agp-transform-patch&apos;</span></span><br></pre></td></tr></table></figure><p>&#x6216;&#x8005;&#x4F7F;&#x7528;&#x63D0;&#x524D;&#x521D;&#x59CB;&#x5316;&#x4FEE;&#x590D;&#x65B9;&#x5F0F;&#x7684;&#x63D2;&#x4EF6;</p><figure class="highlight coq"><table><tr><td class="code"><pre><span class="line"><span class="built_in">apply</span> plugin: &apos;agp-transform-patch-<span class="built_in">by</span>-pre-init&apos;</span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x5DE5;&#x7A0B;&#x76EE;&#x5F55;&#x4E2D;&#x6709;buildSrc&#x6A21;&#x5757;&#xFF0C;&#x8BF7;&#x4E0D;&#x8981;&#x4F7F;&#x7528;&#x5982;&#x4E0A;&#x7684;buildscript&#x65B9;&#x5F0F;&#xFF0C;&#x800C;&#x662F;&#x5C06;&#x4F9D;&#x8D56;&#x6DFB;&#x52A0;&#x5230;buildSrc&#x5DE5;&#x7A0B;&#x7684;&#x4F9D;&#x8D56;&#x4E2D;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> {</span><br><span class="line">    <span class="keyword">compile</span>(<span class="string">&apos;io.github.lizhangqu:plugin-agp-transform-patch:1.0.4&apos;</span>) {</span><br><span class="line">        changing = <span class="keyword">true</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">compile</span> <span class="string">&quot;com.android.tools.build:gradle:3.2.1&quot;</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x5728;&#x5BF9;&#x5E94;&#x6A21;&#x5757;&#x4E2D;&#x5E94;&#x7528;&#x63D2;&#x4EF6;</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">apply <span class="string">plugin:</span> <span class="string">&apos;agp-transform-patch&apos;</span></span><br></pre></td></tr></table></figure><p>&#x6216;&#x8005;&#x4F7F;&#x7528;&#x63D0;&#x524D;&#x521D;&#x59CB;&#x5316;&#x4FEE;&#x590D;&#x65B9;&#x5F0F;&#x7684;&#x63D2;&#x4EF6;</p><figure class="highlight coq"><table><tr><td class="code"><pre><span class="line"><span class="built_in">apply</span> plugin: &apos;agp-transform-patch-<span class="built_in">by</span>-pre-init&apos;</span><br></pre></td></tr></table></figure><p>&#x91CD;&#x8981;&#x7684;&#x4E8B;&#x60C5;&#x518D;&#x8BF4;&#x4E00;&#x904D;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x751F;&#x6548;&#xFF0C;&#x8BF7;&#x5C06;&#x5B88;&#x62A4;&#x8FDB;&#x7A0B;&#x6740;&#x6389;&#xFF0C;&#x56E0;&#x4E3A;&#x5B88;&#x62A4;&#x8FDB;&#x7A0B;&#x4E2D;&#x8BE5;&#x7C7B;&#x5DF2;&#x7ECF;&#x88AB;&#x52A0;&#x8F7D;&#xFF0C;&#x63D2;&#x5165;patch&#x540E;&#x7531;&#x4E8E;&#x7F13;&#x5B58;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x8FD8;&#x662F;&#x4F7F;&#x7528;&#x7684;&#x539F;&#x6765;&#x7684;&#x7C7B;&#x3002;</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="string">./gradlew</span> <span class="params">--stop</span></span><br></pre></td></tr></table></figure><p>&#x5BF9;&#x5E94;&#x7684;&#x5DE5;&#x7A0B;&#x89C1; <a href="https://github.com/lizhangqu/android-gradle-plugin-transform-patch" target="_blank" rel="noopener">https://github.com/lizhangqu/android-gradle-plugin-transform-patch</a></p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Gradle</tag>
        <tag>Transform</tag>
      </tags>
  </entry>
  <entry>
    <title>R8 踩坑记</title>
    <url>/2019/05/28/R8-%E8%B8%A9%E5%9D%91%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>&#x6700;&#x8FD1;&#x8C03;&#x7814;&#x4E86;&#x4E0B;&#x5347;&#x7EA7;android gradle plugin&#x7684;&#x53EF;&#x884C;&#x6027;&#xFF0C;&#x5728;&#x8C03;&#x7814;&#x8FC7;&#x7A0B;&#x4E2D;&#x53D1;&#x73B0;&#x4E86;R8&#x7684;&#x51E0;&#x4E2A;&#x5751;&#xFF0C;&#x8BB0;&#x5F55;&#x4E0B;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x3002;</p><a id="more"></a><h3 id="&#x5347;&#x7EA7;Android-Gradle-Plugin"><a href="#&#x5347;&#x7EA7;Android-Gradle-Plugin" class="headerlink" title="&#x5347;&#x7EA7;Android Gradle Plugin"></a>&#x5347;&#x7EA7;Android Gradle Plugin</h3><p>&#x9996;&#x5148;&#x9700;&#x8981;&#x5347;&#x7EA7;android gradle plugin &#x5230; 3.4.1</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">buildscript</span> {</span><br><span class="line">    <span class="keyword">dependencies</span> {</span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">&quot;com.android.tools.build:gradle:3.4.1&quot;</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x5C06;&#x9879;&#x76EE;&#x4E2D;&#x6240;&#x6709;&#x7981;&#x7528;&#x9009;&#x9879;&#x79FB;&#x9664;&#xFF0C;&#x5982;d8&#xFF0C;r8&#xFF0C;&#x5982;&#x4E0B;</p><figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line">#android.enableR8=<span class="literal">false</span></span><br><span class="line">#android.enableD8=<span class="literal">false</span></span><br><span class="line">#android.enableIncrementalDesugaring=<span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="ClassNotFoundException"><a href="#ClassNotFoundException" class="headerlink" title="ClassNotFoundException"></a>ClassNotFoundException</h3><p>&#x5C1D;&#x8BD5;&#x5347;&#x7EA7;&#x540E;&#x9047;&#x5230;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x5C31;&#x662F;R8&#x5F00;&#x542F;&#x540E;&#x5728;multidex&#x542F;&#x7528;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4E14;minSdkVerison&lt;21&#x65F6;&#xFF0C;&#x5728;Dalvik&#x4E0A;&#x542F;&#x52A8;&#x53D1;&#x751F;crash&#xFF0C;&#x51FA;&#x73B0;ClassNotFoundException&#x3002;</p><p>&#x901A;&#x8FC7;&#x9605;&#x8BFB;android gradle plugin&#x6E90;&#x7801;&#x53D1;&#x73B0;&#xFF0C;&#x6784;&#x5EFA;R8Transform&#x65F6;&#xFF0C;&#x4F20;&#x9012;&#x7ED9;R8Transform&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;multidex keep proguard&#x6587;&#x4EF6;&#x672A;&#x5C06;&#x6784;&#x5EFA;&#x65F6;aapt&#x8BA1;&#x7B97;&#x4EA7;&#x751F;&#x7684;manifest multidex proguard file&#x4F20;&#x9012;&#x8FDB;&#x53BB;&#xFF0C;&#x5BFC;&#x81F4;&#x5F88;&#x591A;&#x5E94;&#x8BE5;&#x51FA;&#x73B0;&#x5728;maindex&#x4E2D;&#x7684;&#x7C7B;&#x5B9E;&#x9645;&#x4E0A;&#x8DD1;&#x5230;&#x4E86;second dex&#x4E2D;&#x53BB;&#x4E86;&#xFF0C;&#x5728;Daivik&#x4E0A;&#x51FA;&#x73B0;&#x542F;&#x52A8;crash&#x7684;&#x95EE;&#x9898;&#x3002;</p><p>&#x5177;&#x4F53;&#x5173;&#x952E;&#x6E90;&#x7801;&#x5982;&#x4E0B;&#xFF1A;<br></p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">@NonNull</span><br><span class="line"><span class="keyword">private</span> Optional&lt;TaskProvider&lt;TransformTask&gt;&gt; createR8Transform(</span><br><span class="line">        @NonNull VariantScope variantScope,</span><br><span class="line">        @Nullable FileCollection mappingFileCollection,</span><br><span class="line">        @Nullable ProGuardTransformCallback callback) {</span><br><span class="line">    <span class="keyword">final</span> BaseVariantData testedVariantData = variantScope.getTestedVariantData();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">File</span> multiDexKeepProguard =</span><br><span class="line">            variantScope.getVariantConfiguration().getMultiDexKeepProguard();</span><br><span class="line">    FileCollection userMainDexListProguardRules;</span><br><span class="line">    <span class="keyword">if</span> (multiDexKeepProguard != <span class="keyword">null</span>) {</span><br><span class="line">        userMainDexListProguardRules = <span class="keyword">project</span>.files(multiDexKeepProguard);</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        userMainDexListProguardRules = <span class="keyword">project</span>.files();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">File</span> multiDexKeepFile = variantScope.getVariantConfiguration().getMultiDexKeepFile();</span><br><span class="line">    FileCollection userMainDexListFiles;</span><br><span class="line">    <span class="keyword">if</span> (multiDexKeepFile != <span class="keyword">null</span>) {</span><br><span class="line">        userMainDexListFiles = <span class="keyword">project</span>.files(multiDexKeepFile);</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        userMainDexListFiles = <span class="keyword">project</span>.files();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    FileCollection inputProguardMapping;</span><br><span class="line">    <span class="keyword">if</span> (testedVariantData != <span class="keyword">null</span></span><br><span class="line">            &amp;&amp; testedVariantData.getScope().getArtifacts().hasArtifact(APK_MAPPING)) {</span><br><span class="line">        inputProguardMapping =</span><br><span class="line">                testedVariantData</span><br><span class="line">                        .getScope()</span><br><span class="line">                        .getArtifacts()</span><br><span class="line">                        .getFinalArtifactFiles(APK_MAPPING)</span><br><span class="line">                        .get();</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        inputProguardMapping = MoreObjects.firstNonNull(mappingFileCollection, <span class="keyword">project</span>.files());</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    R8Transform transform =</span><br><span class="line">            <span class="keyword">new</span> R8Transform(</span><br><span class="line">                    variantScope,</span><br><span class="line">                    userMainDexListFiles,</span><br><span class="line">                    userMainDexListProguardRules,</span><br><span class="line">                    inputProguardMapping,</span><br><span class="line">                    variantScope.getOutputProguardMappingFile());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> applyProguardRules(</span><br><span class="line">            variantScope,</span><br><span class="line">            inputProguardMapping,</span><br><span class="line">            variantScope.getOutputProguardMappingFile(),</span><br><span class="line">            testedVariantData,</span><br><span class="line">            transform,</span><br><span class="line">            callback);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p></p><p>&#x5BF9;&#x4E8E;&#x8BE5;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x7684;hook&#x4E0B;R8Transform&#x4E2D;&#x7684;mainDexRulesFiles&#x5B57;&#x6BB5;&#x8FDB;&#x884C;&#x4FEE;&#x590D;&#xFF0C;&#x5224;&#x65AD;mainDexRulesFiles&#x4E2D;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x6709;manifest multidex proguard file, &#x5982;&#x679C;&#x6CA1;&#x6709;&#xFF0C;&#x5219;&#x5C06;&#x8BE5;&#x6587;&#x4EF6;&#x6DFB;&#x52A0;&#x8FDB;&#x53BB;&#x5E76;&#x66FF;&#x6362;mainDexRulesFiles&#x5B57;&#x6BB5;&#x3002;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">android.applicationVariants.all {variant -&gt;</span><br><span class="line">    <span class="keyword">def</span> r8Task = getR8Task(<span class="keyword">project</span>, variant)</span><br><span class="line">    <span class="keyword">if</span> (r8Task != <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">def</span> r8Transform = r8Task.getTransform()</span><br><span class="line">        <span class="comment">//R8 maybe forget to add multidex keep proguard file in agp 3.4.0, it&apos;s an agp&apos;s bug!</span></span><br><span class="line">        <span class="comment">//If we don&apos;t do it, some classes will not keep in maindex so crash will happened in Dalvik.</span></span><br><span class="line">        <span class="keyword">if</span> (r8Transform.metaClass.hasProperty(r8Transform, <span class="string">&quot;mainDexRulesFiles&quot;</span>)) {</span><br><span class="line">            <span class="keyword">File</span> manifestMultiDexKeepProguard = getManifestMultiDexKeepProguard(variant)</span><br><span class="line">            <span class="keyword">if</span> (manifestMultiDexKeepProguard != <span class="keyword">null</span>) {</span><br><span class="line">                <span class="comment">//see difference between mainDexRulesFiles and mainDexListFiles in https://developer.android.com/studio/build/multidex?hl=zh-cn</span></span><br><span class="line">                FileCollection originalFiles = r8Transform.metaClass.getProperty(r8Transform, <span class="string">&apos;mainDexRulesFiles&apos;</span>)</span><br><span class="line">                <span class="keyword">if</span> (!originalFiles.contains(manifestMultiDexKeepProguard)) {</span><br><span class="line">                    FileCollection replacedFiles = <span class="keyword">project</span>.files(originalFiles, manifestMultiDexKeepProguard)</span><br><span class="line">                    <span class="keyword">project</span>.logger.error(<span class="string">&quot;R8Transform original mainDexRulesFiles: ${originalFiles.files}&quot;</span>)</span><br><span class="line">                    <span class="keyword">project</span>.logger.error(<span class="string">&quot;R8Transform replaced mainDexRulesFiles: ${replacedFiles.files}&quot;</span>)</span><br><span class="line">                    <span class="comment">//it&apos;s final, use reflect to replace it.</span></span><br><span class="line">                    replaceFinalField(r8Transform.getClass(), <span class="string">&quot;mainDexRulesFiles&quot;</span>, r8Transform, replacedFiles)</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> replaceFinalField(<span class="keyword">Class</span> clazz, String filedName, Object instance, Object fieldValue) {</span><br><span class="line">    <span class="keyword">def</span> field = clazz.getDeclaredField(filedName)</span><br><span class="line">    <span class="comment">//noinspection UnnecessaryQualifiedReference</span></span><br><span class="line">    <span class="keyword">def</span> modifiersField = java.lang.reflect.Field.<span class="keyword">class</span>.getDeclaredField(<span class="string">&quot;modifiers&quot;</span>)</span><br><span class="line">    modifiersField.setAccessible(<span class="keyword">true</span>)</span><br><span class="line">    <span class="comment">//noinspection UnnecessaryQualifiedReference</span></span><br><span class="line">    modifiersField.setInt(field, field.getModifiers() &amp; ~java.lang.reflect.Modifier.<span class="keyword">FINAL</span>)</span><br><span class="line">    field.setAccessible(<span class="keyword">true</span>)</span><br><span class="line">    field.set(instance, fieldValue)</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">Task</span> getR8Task(<span class="keyword">Project</span> <span class="keyword">project</span>, <span class="keyword">def</span> variant) {</span><br><span class="line">    String r8TaskName = <span class="string">&quot;transformClassesAndResourcesWithR8For${variant.name.capitalize()}&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">project</span>.tasks.findByName(r8TaskName)</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">File</span> getManifestMultiDexKeepProguard(<span class="keyword">def</span> applicationVariant) {</span><br><span class="line">    <span class="keyword">File</span> multiDexKeepProguard = <span class="keyword">null</span></span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="keyword">def</span> buildableArtifact = applicationVariant.getVariantData().getScope().getArtifacts().getFinalArtifactFiles(</span><br><span class="line">                <span class="keyword">Class</span>.forName(<span class="string">&quot;com.android.build.gradle.internal.scope.InternalArtifactType&quot;</span>)</span><br><span class="line">                        .getDeclaredField(<span class="string">&quot;LEGACY_MULTIDEX_AAPT_DERIVED_PROGUARD_RULES&quot;</span>)</span><br><span class="line">                        .get(<span class="keyword">null</span>)</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">        <span class="comment">//noinspection GroovyUncheckedAssignmentOfMemberOfRawType,UnnecessaryQualifiedReference</span></span><br><span class="line">        multiDexKeepProguard = com.google.common.<span class="keyword">collect</span>.Iterators.getOnlyElement(buildableArtifact.iterator())</span><br><span class="line">    } <span class="keyword">catch</span> (Throwable e) {</span><br><span class="line">        e.printStackTrace()</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> multiDexKeepProguard</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5173;&#x4E8E;mainDexRulesFiles&#x548C;mainDexListFiles&#x7684;&#x533A;&#x522B;&#xFF0C;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x6587;&#x6863;&#xFF1A;<a href="https://developer.android.com/studio/build/multidex?hl=zh-cn" target="_blank" rel="noopener">https://developer.android.com/studio/build/multidex?hl=zh-cn</a></p><p>mainDexRulesFiles&#x5BF9;&#x5E94;&#x4E8E;multiDexKeepProguard&#x5C5E;&#x6027;&#xFF0C;&#x8BE5;&#x6587;&#x4EF6;&#x4F7F;&#x7528;&#x4E0E;proguard&#x76F8;&#x540C;&#x7684;&#x683C;&#x5F0F;&#xFF0C;&#x5E76;&#x4E14;&#x652F;&#x6301;&#x6574;&#x4E2A;proguard&#x8BED;&#x6CD5;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;gradle&#x4E2D;&#x624B;&#x52A8;&#x914D;&#x7F6E;&#x8BE5;&#x6587;&#x4EF6;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">android {</span><br><span class="line">    buildTypes {</span><br><span class="line">        release {</span><br><span class="line">            multi<span class="constructor">DexKeepProguard(&apos;<span class="params">multidex</span>-<span class="params">config</span>.<span class="params">pro</span>&apos;)</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>mainDexListFiles&#x5BF9;&#x5E94;&#x4E8E;multiDexKeepFile&#x5C5E;&#x6027;&#xFF0C;&#x8BE5;&#x6587;&#x4EF6;&#x5E94;&#x8BE5;&#x6BCF;&#x4E00;&#x884C;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x7C7B;&#xFF0C;&#x5E76;&#x4E14;&#x91C7;&#x7528;/&#x6765;&#x5206;&#x5272;&#x5305;&#x8DEF;&#x5F84;&#xFF0C;&#x5982;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">com/example/<span class="module-access"><span class="module"><span class="identifier">MyClass</span>.</span></span><span class="keyword">class</span></span><br><span class="line">com/example/<span class="module-access"><span class="module"><span class="identifier">MyOtherClass</span>.</span></span><span class="keyword">class</span></span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;gradle&#x4E2D;&#x624B;&#x52A8;&#x914D;&#x7F6E;&#x8BE5;&#x6587;&#x4EF6;</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">android</span> {</span><br><span class="line">    <span class="section">buildTypes</span> {</span><br><span class="line">        <span class="section">release</span> {</span><br><span class="line">            <span class="attribute">multiDexKeepFile</span> file(<span class="string">&apos;multidex-config.txt&apos;</span>)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x81F3;&#x6B64;maindex&#x7684;&#x95EE;&#x9898;&#x5DF2;&#x7ECF;&#x89E3;&#x51B3;&#x3002;</p><p>&#x5173;&#x4E8E;tinker R8&#x7684;&#x652F;&#x6301;&#xFF0C;&#x53EF;&#x4EE5;&#x89C1; PR <a href="https://github.com/Tencent/tinker/pull/1112" target="_blank" rel="noopener">https://github.com/Tencent/tinker/pull/1112</a></p><h3 id="Illegal-invoke-super-to-&#x67D0;&#x67D0;&#x67D0;&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x503C;-&#x67D0;&#x67D0;&#x67D0;&#x65B9;&#x6CD5;&#x540D;-from-class-&#x67D0;&#x67D0;&#x67D0;&#x7C7B;"><a href="#Illegal-invoke-super-to-&#x67D0;&#x67D0;&#x67D0;&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x503C;-&#x67D0;&#x67D0;&#x67D0;&#x65B9;&#x6CD5;&#x540D;-from-class-&#x67D0;&#x67D0;&#x67D0;&#x7C7B;" class="headerlink" title="Illegal invoke-super to &#x67D0;&#x67D0;&#x67D0;&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x503C; &#x67D0;&#x67D0;&#x67D0;&#x65B9;&#x6CD5;&#x540D;() from class &#x67D0;&#x67D0;&#x67D0;&#x7C7B;"></a>Illegal invoke-super to &#x67D0;&#x67D0;&#x67D0;&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x503C; &#x67D0;&#x67D0;&#x67D0;&#x65B9;&#x6CD5;&#x540D;() from class &#x67D0;&#x67D0;&#x67D0;&#x7C7B;</h3><p>&#x89E3;&#x51B3;&#x5B8C;maindex&#x7684;&#x95EE;&#x9898;&#x540E;&#x53D1;&#x73B0;&#x53C8;&#x9047;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5F53;&#x6784;&#x5EFA;patch&#x65F6;&#xFF0C;&#x4F1A;apply&#x57FA;&#x7EBF;&#x7684;mappping&#x6587;&#x4EF6;&#xFF0C;&#x6B64;&#x65F6;&#xFF0C;&#x5982;&#x679C;R8&#x5F00;&#x542F;&#xFF0C;&#x5C31;&#x4F1A;&#x62A5;&#x5982;&#x4E0B;&#x9519;&#x8BEF;</p><figure class="highlight smali"><table><tr><td class="code"><pre><span class="line">Illegal<span class="built_in"> invoke-super </span>to &#x67D0;&#x67D0;&#x67D0;&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x503C; &#x67D0;&#x67D0;&#x67D0;&#x65B9;&#x6CD5;&#x540D;() from class &#x67D0;&#x67D0;&#x67D0;&#x7C7B;</span><br></pre></td></tr></table></figure><p>&#x7ECF;&#x8FC7;&#x6D4B;&#x8BD5;&#x53D1;&#x73B0;&#xFF0C;Android Gradle Plugin 3.5.0-beta02&#x5DF2;&#x7ECF;&#x4FEE;&#x590D;&#x4E86;&#x8BE5;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x662F;&#x5BF9;&#x4E8E;Android Gradle Plugin 3.4.0-3.4.1&#x8BE5;&#x95EE;&#x9898;&#x4F9D;&#x65E7;&#x5B58;&#x5728;&#xFF0C;&#x90A3;&#x4E48;&#x662F;&#x5426;&#x5C31;&#x65E0;&#x89E3;&#x5462;&#xFF1F;&#x5176;&#x5B9E;&#x4E0D;&#x662F;&#x7684;&#xFF0C;Google&#x6B64;&#x5904;&#x7559;&#x4E86;&#x4E00;&#x4E2A;&#x5C0F;&#x540E;&#x95E8;&#xFF0C;&#x53EF;&#x4EE5;&#x72EC;&#x7ACB;&#x66F4;&#x65B0;R8&#x3002;</p><p>&#x9996;&#x5148;&#x6709;&#x4E2A;&#x524D;&#x63D0;&#x6761;&#x4EF6;&#xFF0C;&#x5C31;&#x662F;R8&#x662F;&#x88AB;&#x6253;&#x5305;&#x5728;android gradle plugin&#x63D2;&#x4EF6;&#x4E2D;&#x7684;&#xFF0C;&#x5E76;&#x975E;&#x4F7F;&#x7528;&#x7684;&#x8FDC;&#x7A0B;&#x4F9D;&#x8D56;&#x3002;R8&#x7684;&#x6240;&#x6709;&#x76F8;&#x5173;&#x7C7B;&#x88AB;&#x6253;&#x5165;&#x4E86;&#x5982;&#x4E0B;&#x4F9D;&#x8D56;&#x4E2D;&#xFF1A;</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">com</span><span class="selector-class">.android</span><span class="selector-class">.tools</span><span class="selector-class">.build</span><span class="selector-pseudo">:builder</span><span class="selector-pseudo">:3.4.1</span></span><br></pre></td></tr></table></figure><p>&#x800C;&#x8BE5;&#x4F9D;&#x8D56;&#x662F;&#x88AB;&#x5982;&#x4E0B;&#x4F9D;&#x8D56;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#x7684;&#xFF1A;</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">com</span><span class="selector-class">.android</span><span class="selector-class">.tools</span><span class="selector-class">.build</span><span class="selector-pseudo">:gradle</span><span class="selector-pseudo">:3.4.1</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x51B3;&#x5F97;&#x4ECE;gradle&#x7684;classloader&#x673A;&#x5236;&#x8BF4;&#x8D77;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x660E;&#x786E;&#x5982;&#x4E0B;&#x6982;&#x5FF5;&#x5373;&#x53EF;&#xFF1A;</p><ul><li>buildscript&#x4E2D;classpath&#x58F0;&#x660E;&#x7684;&#x4E00;&#x7EA7;&#x4F9D;&#x8D56;&#xFF0C;&#x58F0;&#x660E;&#x5728;&#x524D;&#x7684;&#xFF0C;classloader&#x4F1A;&#x4F18;&#x5148;&#x67E5;&#x627E;</li><li>buildscript&#x4E2D;classpath&#x58F0;&#x660E;&#x7684;&#x4E00;&#x7EA7;&#x4F9D;&#x8D56;&#xFF0C;&#x5176;&#x4F18;&#x5148;&#x7EA7;&#x9AD8;&#x4E8E;&#x4EFB;&#x4F55;&#x4F20;&#x9012;&#x4F9D;&#x8D56;</li></ul><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7528;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#x6253;&#x5370;&#x4E00;&#x4E0B;&#x52A0;&#x8F7D;R8&#x76F8;&#x5173;&#x7C7B;&#x7684;classloader&#x4E2D;&#x76F8;&#x5173;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">project.afterEvaluate {</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">Class</span>.</span></span>for<span class="constructor">Name(<span class="string">&quot;com.android.tools.r8.R8&quot;</span>)</span>?.get<span class="constructor">ClassLoader()</span>?.get<span class="constructor">URLs()</span>?.each {</span><br><span class="line">        project.logger.error(<span class="string">&quot;url: ${it}&quot;</span>)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5047;&#x8BBE;&#x6211;&#x4EEC;classpath&#x4F9D;&#x8D56;&#x6709;&#x5982;&#x4E0B;&#x4F9D;&#x8D56;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">buildscript</span> {</span><br><span class="line">    <span class="keyword">dependencies</span> {</span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">&quot;com.android.tools.build:gradle:3.4.1&quot;</span></span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">&quot;org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.31&quot;</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8F93;&#x51FA;&#x5982;&#x4E0B;</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools.build/</span>gradle<span class="regexp">/3.1.4/</span><span class="number">8</span>f9a726f69c0c8fa3f447566717a21e6b394ed9/gradle<span class="number">-3.1</span><span class="number">.4</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/org.jetbrains.kotlin/</span>kotlin-gradle-plugin<span class="regexp">/1.3.31/</span><span class="number">4</span>fcdcfc17948d6ccc730551d313852de8d008eab/kotlin-gradle-plugin<span class="number">-1.3</span><span class="number">.31</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools.build/</span>gradle-core<span class="regexp">/3.1.4/</span><span class="number">4</span>c846d065331c2a11ed605619613833a842a7b8d/gradle-core<span class="number">-3.1</span><span class="number">.4</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools.build/</span>bundletool<span class="regexp">/0.1.0-alpha01/</span>f7c303e37818223bd98566fcbea29aa0964c4d06/bundletool<span class="number">-0.1</span><span class="number">.0</span>-alpha01.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/org.jetbrains.kotlin/</span>kotlin-gradle-plugin-api<span class="regexp">/1.3.31/</span>a120b7f0c7b5981aab41c51aa9d6229484835681/kotlin-gradle-plugin-api<span class="number">-1.3</span><span class="number">.31</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/org.jetbrains.kotlin/</span>kotlin-gradle-plugin-model<span class="regexp">/1.3.31/</span><span class="number">29</span>f635dd4f9669e237f9d9d478605e7c2049129e/kotlin-gradle-plugin-model<span class="number">-1.3</span><span class="number">.31</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/org.jetbrains.kotlin/</span>kotlin-native-utils<span class="regexp">/1.3.31/</span><span class="number">23</span>f0ac1ae03ef42ca952ca45de1d99213ce8f5bd/kotlin-native-utils<span class="number">-1.3</span><span class="number">.31</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/org.jetbrains.kotlin/</span>kotlin-annotation-processing-gradle<span class="regexp">/1.3.31/</span>e6e76345392e660078aaf08a5f2886be4d1f6a2/kotlin-annotation-processing-gradle<span class="number">-1.3</span><span class="number">.31</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/org.jetbrains.kotlin/</span>kotlin-android-extensions<span class="regexp">/1.3.31/</span><span class="number">57</span>bdeb88c9265052448a7a8422ed64ad92e9b262/kotlin-android-extensions<span class="number">-1.3</span><span class="number">.31</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/org.jetbrains.kotlin/</span>kotlin-compiler-embeddable<span class="regexp">/1.3.31/</span><span class="number">965</span>ef6d9abe1555cc5d0a34dd24ce93b49123e7c/kotlin-compiler-embeddable<span class="number">-1.3</span><span class="number">.31</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools.build/</span>builder<span class="regexp">/3.1.4/</span>afbcd4b7002c61fe898b1b4c50ed9e62386125d8/builder<span class="number">-3.1</span><span class="number">.4</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools.lint/</span>lint-gradle-api<span class="regexp">/26.1.4/</span>cbc00782604b7d0ad50e9c50b84b074af79394f0/lint-gradle-api<span class="number">-26.1</span><span class="number">.4</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools.build/</span>gradle-api<span class="regexp">/3.1.4/</span>eb41dfb5596afd8933c804595ca8596952fad450/gradle-api<span class="number">-3.1</span><span class="number">.4</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.databinding/</span>compilerCommon<span class="regexp">/3.1.4/</span><span class="number">11005423</span>fee93309c0cd512a8783647702c20c27/compilerCommon<span class="number">-3.1</span><span class="number">.4</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools.build/</span>manifest-merger<span class="regexp">/26.1.4/</span>ddb4dcb3bb44c7053fa583967dfa9030f43f1c01/manifest-merger<span class="number">-26.1</span><span class="number">.4</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools/</span>sdk-common<span class="regexp">/26.1.4/</span><span class="number">5</span>dbdefb2dc6cb5ba1b4b059bf11c964a830c5755/sdk-common<span class="number">-26.1</span><span class="number">.4</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools/</span>sdklib<span class="regexp">/26.1.4/</span><span class="number">7424640</span>f2bd3ca3faccb6f656e29547430cd464a/sdklib<span class="number">-26.1</span><span class="number">.4</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools/</span>repository<span class="regexp">/26.1.4/</span><span class="number">349</span>dfc72ae53dedc32a17f5d47440838fe2527f1/repository<span class="number">-26.1</span><span class="number">.4</span>.jar</span><br></pre></td></tr></table></figure><p>&#x4ECE;&#x65E5;&#x5FD7;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x4E00;&#x7EA7;&#x4F9D;&#x8D56;&#xFF0C;&#x5148;&#x58F0;&#x660E;&#x7684;&#x4F1A;&#x4F18;&#x5148;&#x8FDB;&#x884C;&#x67E5;&#x627E;&#xFF0C;&#x4EFB;&#x4F55;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#xFF0C;&#x90FD;&#x4F4D;&#x4E8E;&#x4E00;&#x7EA7;&#x4F9D;&#x8D56;&#x4E4B;&#x540E;&#x3002;</p><p>&#x6709;&#x4E86;&#x4EE5;&#x4E0A;&#x7406;&#x8BBA;&#x77E5;&#x8BC6;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x4FEE;&#x590D;&#x8BE5;&#x95EE;&#x9898;&#x4E86;&#x3002;</p><p>google&#x4E3A;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x4E86;R8&#x7684;&#x8FDC;&#x7A0B;&#x4F9D;&#x8D56;&#xFF0C;&#x5C06; <a href="http://storage.googleapis.com/r8-releases/raw" target="_blank" rel="noopener">http://storage.googleapis.com/r8-releases/raw</a> &#x6DFB;&#x52A0;&#x5230;maven&#x4E2D;&#x5E76;&#x58F0;&#x660E;r8&#x8FDC;&#x7A0B;&#x4F9D;&#x8D56;&#xFF08;com.android.tools:r8:1.5.37&#xFF09; &#x4E3A;&#x4E00;&#x7EA7;&#x4F9D;&#x8D56;</p><figure class="highlight roboconf"><table><tr><td class="code"><pre><span class="line">buildscript {</span><br><span class="line">    <span class="attribute">repositories {</span></span><br><span class="line"><span class="attribute">        maven {</span></span><br><span class="line"><span class="attribute">            url &quot;https</span>://maven<span class="variable">.google</span><span class="variable">.com</span>&quot;</span><br><span class="line">        }</span><br><span class="line">        maven {</span><br><span class="line">            url &apos;http://storage<span class="variable">.googleapis</span><span class="variable">.com</span>/r8-releases/raw&apos;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    dependencies {</span><br><span class="line">        classpath &quot;com<span class="variable">.android</span><span class="variable">.tools</span><span class="variable">.build</span>:gradle:3.4.1&quot;</span><br><span class="line">        classpath &apos;com<span class="variable">.android</span><span class="variable">.tools</span>:r8:1.5.34&apos;</span><br><span class="line">        classpath &quot;org<span class="variable">.jetbrains</span><span class="variable">.kotlin</span>:kotlin-gradle-plugin:1.3.31&quot;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x518D;&#x8F93;&#x51FA;classloader&#x4E2D;&#x7684;url</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools.build/</span>gradle<span class="regexp">/3.4.1/</span><span class="number">195</span>bd39d36b255d333d6493dcac0d542258d2a3d/gradle<span class="number">-3.4</span><span class="number">.1</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools/</span>r8<span class="regexp">/1.5.34/</span>bbbc00e9fe01795284cee43b7696dcd1156caead/r8<span class="number">-1.5</span><span class="number">.34</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/org.jetbrains.kotlin/</span>kotlin-gradle-plugin<span class="regexp">/1.3.31/</span><span class="number">4</span>fcdcfc17948d6ccc730551d313852de8d008eab/kotlin-gradle-plugin<span class="number">-1.3</span><span class="number">.31</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools.build/</span>builder<span class="regexp">/3.4.1/</span><span class="number">5</span>fd3cae600dcbda8adaf1791c0e844e585ac0d3d/builder<span class="number">-3.4</span><span class="number">.1</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools.analytics-library/</span>tracker<span class="regexp">/26.4.1/</span><span class="number">2574526</span>ca59f2ddf4bd0ed6c3f77ecd89b51512d/tracker<span class="number">-26.4</span><span class="number">.1</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools.analytics-library/</span>shared<span class="regexp">/26.4.1/</span><span class="number">8</span>b6f40928c3aecc2e08125a2e3baf3c2228244a2/shared<span class="number">-26.4</span><span class="number">.1</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools.analytics-library/</span>crash<span class="regexp">/26.4.1/</span><span class="number">4019</span>df9bc90acb3abc94fcf0c790bf1df799cb77/crash<span class="number">-26.4</span><span class="number">.1</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools.lint/</span>lint-gradle-api<span class="regexp">/26.4.1/</span>f9dc1f1fba2b9b51f04e42497af0932119ea8c9b/lint-gradle-api<span class="number">-26.4</span><span class="number">.1</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools.build/</span>gradle-api<span class="regexp">/3.4.1/</span><span class="number">26</span>d1d2ccf5b8580669d52cb21a9b7c846b78180b/gradle-api<span class="number">-3.4</span><span class="number">.1</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/androidx.databinding/</span>databinding-compiler-common<span class="regexp">/3.4.1/</span>f18b37dd0306f680e4ebec6f508beb66bc10f5f8/databinding-compiler-common<span class="number">-3.4</span><span class="number">.1</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools.build/</span>manifest-merger<span class="regexp">/26.4.1/</span><span class="number">653712</span>f9996c0cb1f6b721a7712c2084b9dc28eb/manifest-merger<span class="number">-26.4</span><span class="number">.1</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools/</span>sdk-common<span class="regexp">/26.4.1/</span>c1bff8a9ff4684cce461d28fa0ff6380bdad8aa6/sdk-common<span class="number">-26.4</span><span class="number">.1</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools.build/</span>builder-test-api<span class="regexp">/3.4.1/</span><span class="number">54</span>d24a8d74dfdc087c40854fef6adcdad059285e/builder-test-api<span class="number">-3.4</span><span class="number">.1</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools.ddms/</span>ddmlib<span class="regexp">/26.4.1/</span><span class="number">3</span>da8e5681c69f932e598a9fed1ca8508e069481a/ddmlib<span class="number">-26.4</span><span class="number">.1</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools/</span>sdklib<span class="regexp">/26.4.1/</span><span class="number">5</span>df176d7cd2064c23006f63dce8cee12abff0f7c/sdklib<span class="number">-26.4</span><span class="number">.1</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools.layoutlib/</span>layoutlib-api<span class="regexp">/26.4.1/</span>d8c42109324425b0997efa35ed842f84a435908/layoutlib-api<span class="number">-26.4</span><span class="number">.1</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools/</span>dvlib<span class="regexp">/26.4.1/</span><span class="number">389</span>d5879b2602e3de5b91ad38588be5dbd57276c/dvlib<span class="number">-26.4</span><span class="number">.1</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools/</span>repository<span class="regexp">/26.4.1/</span><span class="number">614275977</span>f26ff273fcab4b2e67f872868a9af95/repository<span class="number">-26.4</span><span class="number">.1</span>.jar</span><br><span class="line"><span class="string">url:</span> <span class="string">file:</span><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/.gradle/</span>caches<span class="regexp">/modules-2/</span>files<span class="number">-2.1</span><span class="regexp">/com.android.tools/</span>common<span class="regexp">/26.4.1/</span>d14471b3a2c7c21a705c67980fae4d3d3a8ca4eb/common<span class="number">-26.4</span><span class="number">.1</span>.jar</span><br></pre></td></tr></table></figure><p>&#x4ECE;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#x518D;&#x6B21;&#x9A8C;&#x8BC1;&#x4E86;&#x6211;&#x4EEC;&#x7684;&#x7ED3;&#x8BBA;</p><ul><li>buildscript&#x4E2D;classpath&#x58F0;&#x660E;&#x7684;&#x4E00;&#x7EA7;&#x4F9D;&#x8D56;&#xFF0C;&#x58F0;&#x660E;&#x5728;&#x524D;&#x7684;&#xFF0C;classloader&#x4F1A;&#x4F18;&#x5148;&#x67E5;&#x627E;</li><li>buildscript&#x4E2D;classpath&#x58F0;&#x660E;&#x7684;&#x4E00;&#x7EA7;&#x4F9D;&#x8D56;&#xFF0C;&#x5176;&#x4F18;&#x5148;&#x7EA7;&#x9AD8;&#x4E8E;&#x4EFB;&#x4F55;&#x4F20;&#x9012;&#x4F9D;&#x8D56;</li></ul><p>&#x5982;&#x679C;&#x5BF9;R8&#x6E90;&#x7801;&#x611F;&#x5174;&#x8DA3;&#xFF0C;&#x53EF;&#x4EE5;&#x89C1;&#x4EE3;&#x7801;&#x5E93;&#xFF1A;<a href="https://r8.googlesource.com/r8/" target="_blank" rel="noopener">https://r8.googlesource.com/r8/</a></p><p>&#x8FD9;&#x91CC;&#x6CE8;&#x610F;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x76EE;&#x524D;&#x53EF;&#x7528;&#x7684;r8&#x8FDC;&#x7A0B;&#x4F9D;&#x8D56;&#x7248;&#x672C;&#x6709;&#x5F88;&#x591A;&#xFF0C;android gradle plugin 3.4.1&#x6253;&#x5305;&#x7684;&#x7248;&#x672C;&#x4E3A;1.4.94&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x7684;&#x8FDC;&#x7A0B;&#x4F9D;&#x8D56;&#x5FC5;&#x987B;&#x9AD8;&#x4E8E;&#x8FD9;&#x4E2A;&#x7248;&#x672C;&#xFF0C;&#x6D4B;&#x8BD5;&#x4E0B;&#x6765;&#xFF0C;1.5.25&#x3001;1.5.26&#x3001;1.5.27&#x3001;1.5.33&#x3001;1.5.34&#x8FD9;&#x51E0;&#x4E2A;&#x7248;&#x672C;&#x662F;&#x6B63;&#x5E38;&#x7684;&#xFF0C;1.5.36&#x3001;1.5.36&#x3001;1.5.37&#x53CA;&#x4EE5;&#x4E0A;&#x7248;&#x672C;&#x4F1A;&#x5361;&#x6B7B;&#x5728;R8Tranform&#x4EFB;&#x52A1;&#x4E0A;&#xFF0C;&#x4F7F;&#x7528;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x7559;&#x610F;&#x3002;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#x7C7B;&#x4F3C;&#x4EE3;&#x7801;&#x8FDB;&#x884C;&#x7EA6;&#x675F;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">buildscript</span> {</span><br><span class="line">    <span class="keyword">dependencies</span> {</span><br><span class="line">        <span class="keyword">def</span> androidGradlePluginVersion = <span class="string">&quot;3.4.0&quot;</span></span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">&quot;com.android.tools.build:gradle:${androidGradlePluginVersion}&quot;</span></span><br><span class="line">        <span class="keyword">if</span> (androidGradlePluginVersion &gt;= <span class="string">&quot;3.4.0&quot;</span> &amp;&amp; androidGradlePluginVersion &lt; <span class="string">&quot;3.5.0&quot;</span>) {</span><br><span class="line">            <span class="comment">//agp 3.4.0-3.4.1&#x7684;r8&#x6709;bug&#xFF0C;apply mapping&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x51FA;&#x73B0;&#x7F16;&#x8BD1;&#x9519;&#x8BEF;&#xFF0C;&#x56E0;&#x6B64;&#x4F7F;&#x7528;&#x72EC;&#x7ACB;&#x4F9D;&#x8D56;</span></span><br><span class="line">            <span class="keyword">classpath</span> <span class="string">&apos;com.android.tools:r8:1.5.34&apos;</span></span><br><span class="line">            </span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x90A3;&#x4E3A;&#x4EC0;&#x4E48;android gradle plugin 3.5.0-beta02&#x6CA1;&#x6709;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5462;&#xFF1F;&#x56E0;&#x4E3A;3.5.0&#x7528;&#x7684;R8&#x7248;&#x672C;&#x5C31;&#x662F;1.5.34&#xFF0C;&#x8BE5;&#x7248;&#x672C;&#x5728;android gradle plugi 3.4.1&#x4E0A;&#x7ECF;&#x8FC7;&#x9A8C;&#x8BC1;&#x786E;&#x5B9E;&#x6CA1;&#x95EE;&#x9898;&#x3002;</p><h3 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h3><p>R8&#x7684;&#x5751;&#x8FD8;&#x5F88;&#x591A;&#xFF0C;&#x76EE;&#x524D;&#x4E0D;&#x5EFA;&#x8BAE;&#x542F;&#x7528;&#xFF0C;&#x4F46;&#x53EF;&#x4EE5;&#x8E29;&#x8E29;&#x5751;&#x5148;&#xFF0C;&#x770B;&#x770B;&#x6709;&#x4EC0;&#x4E48;&#x672A;&#x77E5;&#x95EE;&#x9898;&#xFF0C;&#x63D0;&#x524D;&#x8FDB;&#x884C;&#x89E3;&#x51B3;&#x3002;&#x76EE;&#x524D;&#x5EFA;&#x8BAE;&#x5728;gradle.properties&#x4E2D;&#x52A0;&#x5165;&#x5982;&#x4E0B;&#x914D;&#x7F6E;&#x8FDB;&#x884C;&#x7981;&#x7528;</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">android.enableR8</span>=<span class="literal">false</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>R8</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Gradle</tag>
        <tag>R8</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Q BaseDexClassLoader 变动</title>
    <url>/2019/04/04/Android-Q-BaseDexClassLoader%E5%8F%98%E5%8A%A8/</url>
    <content><![CDATA[<p>&#x4E0A;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;&#x8BB2;&#x5230;&#x4E00;&#x4E2A;&#x6709;&#x610F;&#x601D;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x89C1; <a href="/2019/04/03/%E8%B0%88%E8%B0%88Android-P%E8%A1%8C%E4%B8%BA%E5%8F%98%E6%9B%B4%E4%B8%8E%E5%86%85%E8%81%94%E4%BC%98%E5%8C%96/">&#x8C08;&#x8C08;Android P&#x884C;&#x4E3A;&#x53D8;&#x66F4;&#x4E0E;&#x5185;&#x8054;&#x4F18;&#x5316;</a> &#x6587;&#x7AE0;&#x8BF4;&#x5230;&#xFF0C;&#x5728;Andorid Q&#x4E0A;&#x52A0;&#x8F7D;org.apache.http.legacy.boot.jar&#x548C;Android P&#x6709;&#x70B9;&#x4E0D;&#x540C;&#xFF0C;Android P&#x4E0A;&#x662F;&#x63D2;&#x5165;&#x5230;App&#x7684;PathClassLoader&#x7684;pathList&#x4E2D;&#x7684;dexElements&#x5B8C;&#x6210;&#x52A0;&#x8F7D;&#x7684;&#xFF0C;&#x800C;Android Q&#x4E0A;&#x52A0;&#x8F7D;org.apache.http.legacy.boot.jar&#x7684;&#x5374;&#x662F;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x7684;PathClassLoader&#x5BF9;&#x8C61;&#xFF0C;&#x4F46;&#x662F;&#x548C;App&#x7684;PathClassLoader&#x5C5E;&#x4E8E;&#x4E0D;&#x540C;&#x7684;ClassLoader&#x5B9E;&#x4F8B;&#xFF0C;&#x5947;&#x602A;&#x7684;&#x662F;&#x5176;&#x7236;&#x7C7B;&#x90FD;&#x662F;BootClassLoader&#xFF0C;&#x6839;&#x636E;&#x53CC;&#x4EB2;&#x59D4;&#x6258;&#x673A;&#x5236;&#xFF0C;&#x8FD9;&#x4E2A;&#x7C7B;&#x67E5;&#x627E;&#x663E;&#x5F97;&#x6709;&#x70B9;&#x9006;&#x5929;&#xFF0C;&#x6240;&#x4EE5;&#x6252;&#x4E86;&#x4E0B;Android Q&#x7684;&#x6E90;&#x7801;&#xFF0C;&#x53D1;&#x73B0;&#x662F;BaseDexClassLoader&#x91CC;&#x505A;&#x4E86;&#x4E00;&#x70B9;&#x6539;&#x52A8;&#x3002;</p><a id="more"></a><p>Android Q&#x7684;BaseDexClassLoader&#x6E90;&#x7801;&#x53EF;&#x4EE5;&#x53C2;&#x8003; <a href="https://android.googlesource.com/platform/libcore/+/refs/tags/android-q-preview-1/dalvik/src/main/java/dalvik/system/BaseDexClassLoader.java" target="_blank" rel="noopener">BaseDexClassLoader.java</a></p><p>&#x53EF;&#x4EE5;&#x4ECE;&#x6E90;&#x7801;&#x4E2D;&#x53D1;&#x73B0;&#x4E00;&#x70B9;&#x732B;&#x817B;&#xFF0C;Android Q&#x4E2D;&#x8BE5;&#x7C7B;&#x591A;&#x4E86;&#x51E0;&#x4E2A;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x4E14;&#x591A;&#x4E86;&#x4E00;&#x4E2A;&#x5341;&#x5206;&#x91CD;&#x8981;&#x7684;&#x5B57;&#x6BB5;sharedLibraryLoaders&#xFF0C;&#x8BE5;&#x5B57;&#x6BB5;&#x662F;&#x4E00;&#x4E2A;ClassLoader&#x6570;&#x7EC4;</p><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>Array of ClassLoaders that can be used to load classes and resources that </span>the<span class="markdown"> code in</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>{@code pathList} may depend on. This is used to implement Android&apos;s</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span><span class="xml"><span class="tag">&lt;</span></span></span>a<span class="markdown"><span class="xml"> href=https://developer.android.com/guide/topics/manifest/uses-library-element&gt;</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>shared libraries<span class="xml"><span class="tag">&lt;/</span></span></span>a<span class="markdown"><span class="xml">&gt;</span> feature.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>The shared library loaders </span>are<span class="markdown"> always checked before </span>the<span class="markdown"> {@code pathList} when looking</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>up classes and resources.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> *</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>{@code null} if </span>the<span class="markdown"> class loader has no shared library.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> *</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@hide</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> */</span></span></span><br><span class="line">protected <span class="keyword">final</span> ClassLoader[] sharedLibraryLoaders;</span><br></pre></td></tr></table></figure><p>&#x5728;findClass&#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;&#x7C7B;&#x67E5;&#x627E;&#x90FD;&#x4F1A;&#x5148;&#x4ECE;sharedLibraryLoaders&#x4E2D;&#x8FDB;&#x884C;&#x67E5;&#x627E;&#xFF0C;&#x627E;&#x4E0D;&#x5230;&#x518D;&#x4ECE;&#x81EA;&#x5DF1;&#x7684;pathList&#x4E2D;&#x8FDB;&#x884C;&#x67E5;&#x627E;&#xFF0C;&#x5176;&#x903B;&#x8F91;&#x5982;&#x4E0B;</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line">protected <span class="keyword">Class</span>&lt;?&gt; findClass(String <span class="type">name</span>) throws ClassNotFoundException {</span><br><span class="line">// First, <span class="keyword">check</span> whether the <span class="keyword">class</span> <span class="keyword">is</span> present <span class="keyword">in</span> our shared libraries.</span><br><span class="line"><span class="keyword">if</span> (sharedLibraryLoaders != <span class="keyword">null</span>) {</span><br><span class="line">    <span class="keyword">for</span> (ClassLoader loader : sharedLibraryLoaders) {</span><br><span class="line">        try {</span><br><span class="line">            <span class="keyword">return</span> loader.loadClass(<span class="type">name</span>);</span><br><span class="line">        } catch (ClassNotFoundException ignored) {</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">// <span class="keyword">Check</span> whether the <span class="keyword">class</span> <span class="keyword">in</span> question <span class="keyword">is</span> present <span class="keyword">in</span> the dexPath that</span><br><span class="line">// this classloader operates <span class="keyword">on</span>.</span><br><span class="line">List&lt;Throwable&gt; suppressedExceptions = <span class="built_in">new</span> ArrayList&lt;Throwable&gt;();</span><br><span class="line"><span class="keyword">Class</span> c = pathList.findClass(<span class="type">name</span>, suppressedExceptions);</span><br><span class="line"><span class="keyword">if</span> (c == <span class="keyword">null</span>) {</span><br><span class="line">    ClassNotFoundException cnfe = <span class="built_in">new</span> ClassNotFoundException(</span><br><span class="line">            &quot;Didn&apos;t find class \&quot;&quot; + name + &quot;\&quot; on path: &quot; + pathList);</span><br><span class="line">    <span class="keyword">for</span> (Throwable t : suppressedExceptions) {</span><br><span class="line">        cnfe.addSuppressed(t);</span><br><span class="line">    }</span><br><span class="line">    throw cnfe;</span><br><span class="line">}</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x90A3;&#x4E48;sharedLibraryLoaders&#x662F;&#x4ECE;&#x54EA;&#x91CC;&#x6765;&#x5462;&#xFF0C;&#x5176;&#x5B9E;&#x5B83;&#x662F;&#x6765;&#x81EA;&#x5176;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x8BE5;&#x6784;&#x9020;&#x51FD;&#x6570;&#x662F;hide&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x662F;&#x65E0;&#x6CD5;&#x76F4;&#x63A5;&#x8C03;&#x7528;&#x5230;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x5728;Android Q&#x4E0A;&#x6211;&#x4EEC;new&#x4E00;&#x4E2A;PathClassLoader&#x540E;&#xFF0C;&#x5982;&#x679C;&#x4F7F;&#x7528;new&#x51FA;&#x6765;&#x7684;&#x5B9E;&#x4F8B;&#x67E5;&#x627E;org.apache.http.legacy.boot.jar&#x4E2D;&#x7684;&#x7C7B;&#x662F;&#x65E0;&#x6CD5;&#x627E;&#x5230;&#x7684;&#xFF0C;&#x8FD9;&#x4E00;&#x70B9;&#x548C;Android P&#x6709;&#x6240;&#x533A;&#x522B;&#xFF0C;Android P&#x7531;&#x4E8E;&#x662F;&#x5C06;&#x5B83;&#x63D2;&#x5165;&#x5230;pathList&#x7684;dexElements&#xFF0C;&#x6240;&#x4EE5;&#x5728;Android P&#x4E0A;&#x662F;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x7684;&#x3002;</p><p>&#x56E0;&#x4E3A;&#x8FD9;&#x4E2A;&#x7279;&#x6027;&#xFF0C;&#x5728;Android P&#x4E0A;&#xFF0C;&#x4F7F;&#x7528;&#x975E;&#x6807;&#x51C6;ClassLoader&#x52A0;&#x8F7D;org.apache.http.legacy.boot.jar&#x4E2D;&#x7684;&#x7C7B;&#xFF0C;&#x53EF;&#x80FD;&#x51FA;&#x73B0;org.apache.http.legacy.boot.jar&#x4E2D;&#x7684;&#x7C7B;&#x88AB;&#x4E0D;&#x540C;&#x7684;ClassLoader&#x52A0;&#x8F7D;&#xFF0C;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x5185;&#x8054;&#xFF0C;&#x5C31;&#x53EF;&#x80FD;&#x4F1A;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#x3002;&#x4F46;&#x662F;&#x5728;Android Q&#x4E0A;&#xFF0C;&#x53EA;&#x8981;&#x6211;&#x4EEC;&#x4E0D;&#x4F7F;&#x7528;&#x5E26;sharedLibraryLoaders&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x5B57;&#x6BB5;&#x5C31;&#x4F1A;&#x662F;null&#xFF0C;&#x67E5;&#x627E;&#x7C7B;&#x5C31;&#x4F1A;&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x53EA;&#x6709;App&#x7684;PathClassLoader&#x624D;&#x80FD;&#x627E;&#x5230;org.apache.http.legacy.boot.jar&#x4E2D;&#x7684;&#x7C7B;&#xFF0C;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x4F7F;&#x7528;&#x516C;&#x5171;&#x6784;&#x9020;&#x51FD;&#x6570;&#x521B;&#x5EFA;&#x7684;PathClassLoader&#x90FD;&#x5C06;&#x67E5;&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x675C;&#x7EDD;&#x5185;&#x8054;abort&#x98CE;&#x9669;&#x3002;</p><p>BaseDexClassLoader&#x7684;&#x5E26;sharedLibraryLoaders&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x548C;PathClassLoader&#x7684;&#x5E26;sharedLibraryLoaders&#x6784;&#x9020;&#x51FD;&#x6570;&#x5982;&#x4E0B;</p><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>BaseDexClassLoader implements </span>the<span class="markdown"> Android</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span><span class="xml"><span class="tag">&lt;</span></span></span>a<span class="markdown"><span class="xml"> href=https://developer.android.com/guide/topics/manifest/uses-library-element&gt;</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>shared libraries<span class="xml"><span class="tag">&lt;/</span></span></span>a<span class="markdown"><span class="xml">&gt;</span> feature by changing </span>the<span class="markdown"> typical parent delegation mechanism</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>of class loaders.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span> Each shared library is associated with its own class loader, which is added to </span>a<span class="markdown"> list of</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>class loaders this BaseDexClassLoader tries to load from in order, immediately checking</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>after </span>the<span class="markdown"> parent.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>The shared library loaders </span>are<span class="markdown"> always checked before </span>the<span class="markdown"> {@code pathList} when looking</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>up classes and resources.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> *</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>@hide</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> */</span></span></span><br><span class="line">public BaseDexClassLoader(<span class="built_in">String</span> dexPath,</span><br><span class="line">        <span class="built_in">String</span> librarySearchPath, ClassLoader parent, ClassLoader[] sharedLibraryLoaders,</span><br><span class="line">        boolean isTrusted) {</span><br><span class="line">}</span><br></pre></td></tr></table></figure><figure class="highlight qml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @hide</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@libcore.api.CorePlatformApi</span><br><span class="line">public PathClassLoader(</span><br><span class="line">        <span class="built_in">String</span> dexPath, <span class="built_in">String</span> librarySearchPath, ClassLoader <span class="built_in">parent</span>,</span><br><span class="line">        ClassLoader[] sharedLibraryLoaders) {</span><br><span class="line">    <span class="keyword">super</span>(dexPath, librarySearchPath, <span class="built_in">parent</span>, sharedLibraryLoaders);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7CFB;&#x7EDF;&#x521B;&#x5EFA;App&#x7684;PathClassLoader&#x6765;&#x81EA;ClassLoaderFactory&#x5BF9;&#x8C61;&#xFF0C;&#x89C1; <a href="https://android.googlesource.com/platform/frameworks/base/+/refs/tags/android-q-preview-1/core/java/com/android/internal/os/ClassLoaderFactory.java" target="_blank" rel="noopener">ClassLoaderFactory.java</a></p><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Same as {@code createClassLoader} below, except that no associated namespace</span></span><br><span class="line"><span class="comment"> * is created.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ClassLoader createClassLoader(<span class="keyword">String</span> dexPath,</span><br><span class="line">        <span class="keyword">String</span> librarySearchPath, ClassLoader parent, <span class="keyword">String</span> classloaderName,</span><br><span class="line">        List&lt;ClassLoader&gt; sharedLibraries) {</span><br><span class="line">    ClassLoader[] arrayOfSharedLibraries = (sharedLibraries == <span class="literal">null</span>)</span><br><span class="line">            ? <span class="literal">null</span></span><br><span class="line">            : <span class="type">sharedLibraries</span>.toArray(<span class="keyword">new</span> <span class="type">ClassLoader</span>[sharedLibraries.size()]);</span><br><span class="line">    <span class="keyword">if</span> (isPathClassLoaderName(classloaderName)) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">PathClassLoader</span>(dexPath, librarySearchPath, parent, arrayOfSharedLibraries);</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (isDelegateLastClassLoaderName(classloaderName)) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">DelegateLastClassLoader</span>(dexPath, librarySearchPath, parent,</span><br><span class="line">                arrayOfSharedLibraries);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">AssertionError</span>(<span class="string">&quot;Invalid classLoaderName: &quot;</span> + classloaderName);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x800C;&#x8C03;&#x7528;ClassLoaderFactory.createClassLoader&#x7684;&#x65B9;&#x6CD5;&#x6765;&#x81EA;ApplicationLoaders&#x7C7B;&#xFF0C;&#x6E90;&#x7801;&#x89C1; <a href="https://android.googlesource.com/platform/frameworks/base/+/refs/tags/android-q-preview-1/core/java/android/app/ApplicationLoaders.java" target="_blank" rel="noopener">ApplicationLoaders.java</a></p><p>&#x5982;&#x679C;&#x4F7F;&#x7528;&#x4E86;&#x5E26;sharedLibraries&#x7684;PathClassLoader&#xFF0C;&#x90A3;&#x4E48;&#x4F7F;&#x7528;&#x7684;&#x5C31;&#x662F;ApplicationLoaders.getDefault().getClassLoaderWithSharedLibraries()&#x65B9;&#x6CD5;&#xFF0C;&#x5176;&#x8C03;&#x7528;&#x6765;&#x6E90;&#x6765;&#x81EA;LoadedApk&#xFF0C;&#x6E90;&#x7801;&#x89C1; <a href="https://android.googlesource.com/platform/frameworks/base/+/refs/tags/android-q-preview-1/core/java/android/app/LoadedApk.java" target="_blank" rel="noopener">LoadedApk.java</a>&#xFF0C;&#x5173;&#x952E;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF0C;&#x7528;&#x4E86;&#x4E00;&#x4E2A;&#x9012;&#x5F52;&#x64CD;&#x4F5C;&#x5C06;&#x6240;&#x6709;SharedClassLoader&#x4E32;&#x4E86;&#x8D77;&#x6765;&#xFF1A;</p><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//&#x521B;&#x5EFA;sharedLibrariesClassLoader</span></span><br><span class="line"><span class="built_in">List</span>&lt;ClassLoader&gt; sharedLibraries = createSharedLibrariesLoaders(</span><br><span class="line">        mApplicationInfo.sharedLibraryInfos, isBundledApp, librarySearchPath,</span><br><span class="line">        libraryPermittedPath);</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x521B;&#x5EFA;App&#x7684;ClassLoader</span></span><br><span class="line">mDefaultClassLoader = ApplicationLoaders.getDefault().getClassLoaderWithSharedLibraries(</span><br><span class="line">        zip, mApplicationInfo.targetSdkVersion, isBundledApp, librarySearchPath,</span><br><span class="line">        libraryPermittedPath, mBaseClassLoader,</span><br><span class="line">        mApplicationInfo.classLoaderName, sharedLibraries);</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>Create </span>a<span class="markdown"> class loader for </span>the<span class="markdown"> {@code sharedLibrary}. Shared libraries </span>are<span class="markdown"> canonicalized,</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span></span>so<span class="markdown"> if we already created </span>a<span class="markdown"> class loader with that shared library, we return it.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> *</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>Implementation notes: </span>the<span class="markdown"> canonicalization of shared libraries is something dex2oat</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>also does.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> */</span></span></span><br><span class="line">ClassLoader createSharedLibraryLoader(SharedLibraryInfo sharedLibrary,</span><br><span class="line">        boolean isBundledApp, <span class="built_in">String</span> librarySearchPath, <span class="built_in">String</span> libraryPermittedPath) {</span><br><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; paths = sharedLibrary.getAllCodePaths();</span><br><span class="line">    <span class="built_in">List</span>&lt;ClassLoader&gt; sharedLibraries = createSharedLibrariesLoaders(</span><br><span class="line">            sharedLibrary.getDependencies(), isBundledApp, librarySearchPath,</span><br><span class="line">            libraryPermittedPath);</span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">String</span> jars = (paths.size() == <span class="number">1</span>) ? paths.<span class="keyword">get</span>(<span class="number">0</span>) :</span><br><span class="line">            TextUtils.join(File.pathSeparator, paths);</span><br><span class="line">    <span class="comment">// Shared libraries get a null parent: this has the side effect of having canonicalized</span></span><br><span class="line">    <span class="comment">// shared libraries using ApplicationLoaders cache, which is the behavior we want.</span></span><br><span class="line">    <span class="keyword">return</span> ApplicationLoaders.getDefault().getClassLoaderWithSharedLibraries(jars,</span><br><span class="line">                mApplicationInfo.targetSdkVersion, isBundledApp, librarySearchPath,</span><br><span class="line">                libraryPermittedPath, <span class="comment">/* parent */</span> <span class="keyword">null</span>,</span><br><span class="line">                <span class="comment">/* classLoaderName */</span> <span class="keyword">null</span>, sharedLibraries);</span><br><span class="line">}</span><br><span class="line">private <span class="built_in">List</span>&lt;ClassLoader&gt; createSharedLibrariesLoaders(<span class="built_in">List</span>&lt;SharedLibraryInfo&gt; sharedLibraries,</span><br><span class="line">        boolean isBundledApp, <span class="built_in">String</span> librarySearchPath, <span class="built_in">String</span> libraryPermittedPath) {</span><br><span class="line">    <span class="keyword">if</span> (sharedLibraries == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">List</span>&lt;ClassLoader&gt; loaders = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (SharedLibraryInfo info : sharedLibraries) {</span><br><span class="line">        loaders.add(createSharedLibraryLoader(</span><br><span class="line">                info, isBundledApp, librarySearchPath, libraryPermittedPath));</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> loaders;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6CE8;&#x610F;&#x6B64;&#x5904;ClassLoader&#x7684;parent&#x5BF9;&#x8C61;&#x4F20;&#x9012;&#x7684;&#x662F;null&#xFF0C;&#x8FD9;&#x5C31;&#x89E3;&#x91CA;&#x4E86;&#x4E3A;&#x4EC0;&#x4E48;&#x7528;&#x4E86;&#x72EC;&#x7ACB;&#x7684;PathClassLoader&#xFF0C;&#x4F46;&#x662F;&#x5176;&#x7236;&#x4EB2;ClassLoader&#x548C;App&#x7684;PathClassLoader&#x7684;&#x7236;&#x4EB2;&#x90FD;&#x662F;BootClassLoader&#x7684;&#x539F;&#x56E0;&#x3002;</p><p>&#x800C;List<sharedlibraryinfo>sharedLibraries&#x5219;&#x6765;&#x81EA;ApplicationInfo&#x4E2D;&#x7684;sharedLibraryInfos&#xFF0C;&#x6E90;&#x7801;&#x89C1; <a href="https://android.googlesource.com/platform/frameworks/base/+/refs/tags/android-q-preview-1/core/java/android/content/pm/ApplicationInfo.java#828" target="_blank" rel="noopener">ApplicationInfo.java#828</a></sharedlibraryinfo></p><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">/**</span><br><span class="line"> * List <span class="keyword">of</span> all shared libraries this <span class="built_in">application</span> <span class="keyword">is</span> linked <span class="keyword">against</span>.  This</span><br><span class="line"> * field <span class="keyword">is</span> only <span class="keyword">set</span> <span class="keyword">if</span> <span class="keyword">the</span> {@link PackageManager<span class="comment">#GET_SHARED_LIBRARY_FILES</span></span><br><span class="line"> * PackageManager.GET_SHARED_LIBRARY_FILES} flag was used when retrieving</span><br><span class="line"> * <span class="keyword">the</span> structure.</span><br><span class="line"> *</span><br><span class="line"> * {@hide}</span><br><span class="line"> */</span><br><span class="line">public List&lt;SharedLibraryInfo&gt; sharedLibraryInfos;</span><br></pre></td></tr></table></figure><p>&#x8BE5;&#x5B57;&#x6BB5;&#x4E5F;&#x662F;Android Q&#x4E2D;&#x65B0;&#x589E;&#x7684;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;&#xFF0C;&#x5176;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x53EF;&#x4EE5;&#x53C2;&#x8003;<a href="https://android.googlesource.com/platform/frameworks/base/+/refs/tags/android-q-preview-1/core/java/android/content/pm/SharedLibraryInfo.java" target="_blank" rel="noopener">SharedLibraryInfo.java</a>&#x3002;</p><p>&#x6839;&#x636E;&#x4EE5;&#x4E0A;&#x6E90;&#x7801;&#x5206;&#x6790;&#x5C31;&#x53EF;&#x4EE5;&#x5B8C;&#x5168;&#x89E3;&#x91CA;&#x4E3A;&#x4EC0;&#x4E48;&#x5728;Android Q&#x4E0A;&#x4E0E;Android P&#x4E0A;org.apache.http.legacy.boot.jar&#x7684;&#x52A0;&#x8F7D;&#x73B0;&#x8C61;&#x4E0D;&#x4E00;&#x81F4;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x4ECE;&#x4EE3;&#x7801;&#x4E2D;&#x4E5F;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x8FD9;&#x4E2A;&#x64CD;&#x4F5C;&#x53EF;&#x4EE5;&#x675C;&#x7EDD;Andorid P&#x4E0A;org.apache.http.legacy.boot.jar&#x5185;&#x8054;abort&#x95EE;&#x9898;&#x7684;&#x53D1;&#x751F;&#x3002;</p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>BaseDexClassLoader</tag>
      </tags>
  </entry>
  <entry>
    <title>谈谈 Android P 行为变更与内联优化</title>
    <url>/2019/04/03/%E8%B0%88%E8%B0%88Android-P%E8%A1%8C%E4%B8%BA%E5%8F%98%E6%9B%B4%E4%B8%8E%E5%86%85%E8%81%94%E4%BC%98%E5%8C%96/</url>
    <content><![CDATA[<p>&#x6700;&#x8FD1;&#x9047;&#x5230;&#x4E86;&#x51E0;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x4E0E;Android P&#x884C;&#x4E3A;&#x53D8;&#x66F4;&#x4E0E;&#x5185;&#x8054;&#x4F18;&#x5316;&#x76F8;&#x5173;&#xFF0C;&#x5E76;&#x4E14;&#x57FA;&#x672C;&#x90FD;&#x662F;&#x5728;OnePlus 5/5T/6/6T H2O 9.0.1&#x4E0A;&#x53EF;&#x590D;&#x73B0;&#x3002;</p><a id="more"></a><h3 id="Android-P&#x884C;&#x4E3A;&#x53D8;&#x66F4;"><a href="#Android-P&#x884C;&#x4E3A;&#x53D8;&#x66F4;" class="headerlink" title="Android P&#x884C;&#x4E3A;&#x53D8;&#x66F4;"></a>Android P&#x884C;&#x4E3A;&#x53D8;&#x66F4;</h3><p>&#x4ECE;Android P&#x5F00;&#x59CB;&#xFF0C;Apache HttpClient&#x5C06;&#x88AB;&#x5F03;&#x7528;&#xFF0C;&#x5BF9;&#x4E8E;&#x91C7;&#x7528;&#x975E;&#x6807;&#x51C6;ClassLoader&#x7684;&#x573A;&#x666F;&#x4E0B;&#xFF0C;&#x4F1A;&#x4EA7;&#x751F;&#x5F71;&#x54CD;&#xFF0C;&#x6BD4;&#x5982;&#x70ED;&#x4FEE;&#x590D;&#xFF0C;&#x63D2;&#x4EF6;&#x5316;&#x3002;</p><p>&#x5BF9;&#x4E8E;Target&lt;9.0&#x7684;&#x5E94;&#x7528;&#x6765;&#x8BF4;&#xFF0C;org.apache.http.legacy.boot.jar&#x5C06;&#x4ECE;bootclasspath&#x4E2D;&#x79FB;&#x9664;&#xFF0C;&#x79FB;&#x9664;&#x540E;&#x8BE5;jar&#x6587;&#x4EF6;&#x5C06;&#x88AB;&#x6DFB;&#x52A0;&#x5230;App&#x7684;ClassLoader&#xFF0C;&#x5373;PathClassLoader&#x7684;pathList&#x4E2D;&#x53BB;&#xFF0C;&#x6CE8;&#x610F;&#x6B64;&#x65F6;&#x63D2;&#x5165;&#x5230;&#x7684;&#x662F;pathList&#x7684;dexElements&#x7684;&#x6700;&#x524D;&#x9762;&#xFF0C;&#x5982;&#x56FE;&#x6240;&#x793A;&#xFF1A;</p><p><img src="/2019/04/03/%E8%B0%88%E8%B0%88Android-P%E8%A1%8C%E4%B8%BA%E5%8F%98%E6%9B%B4%E4%B8%8E%E5%86%85%E8%81%94%E4%BC%98%E5%8C%96/oneplus_less_than_p.png" alt="oneplus_less_than_p.png"></p><p>&#x5982;&#x679C;&#x91C7;&#x7528;&#x7684;&#x662F;&#x6807;&#x51C6;ClassLoader&#x52A0;&#x8F7D;&#xFF0C;&#x90A3;&#x4E48;&#x6B64;&#x9879;&#x53D8;&#x52A8;&#x5BF9;&#x4E8E;Target&lt;9.0&#x7684;&#x5E94;&#x7528;&#x51E0;&#x4E4E;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x5F71;&#x54CD;&#xFF0C;&#x4F46;&#x662F;&#x5982;&#x679C;&#x91C7;&#x7528;&#x975E;&#x6807;&#x51C6;ClassLoader&#x52A0;&#x8F7D;&#xFF0C;&#x5982;&#x70ED;&#x4FEE;&#x590D;&#xFF0C;&#x90A3;&#x4E48;&#x6B64;&#x9879;&#x4FEE;&#x6539;&#x52A0;&#x4E0A;Android 9.0&#x7684;&#x5185;&#x8054;&#x4F18;&#x5316;&#x53D8;&#x52A8;&#xFF0C;&#x5C06;&#x4F1A;&#x5BFC;&#x81F4;&#x5E94;&#x7528;&#x6709;abort&#x7684;&#x98CE;&#x9669;&#x3002;</p><p>&#x5BF9;&#x4E8E;Target&gt;=9.0&#x7684;&#x5E94;&#x7528;&#x6765;&#x8BF4;&#xFF0C;org.apache.http.legacy.boot.jar&#x4ECE;bootclasspath&#x79FB;&#x9664;&#x540E;&#xFF0C;&#x5E76;&#x4E14;&#x4E0D;&#x4F1A;&#x518D;&#x6DFB;&#x52A0;&#x5230;App&#x7684;ClassLoader&#x4E2D;&#xFF0C;&#x5982;&#x56FE;&#x6240;&#x793A;&#xFF1A;</p><p><img src="/2019/04/03/%E8%B0%88%E8%B0%88Android-P%E8%A1%8C%E4%B8%BA%E5%8F%98%E6%9B%B4%E4%B8%8E%E5%86%85%E8%81%94%E4%BC%98%E5%8C%96/pixel_p.png" alt="pixel_p.png"></p><p>&#x4EE4;&#x4EBA;&#x5341;&#x5206;&#x60CA;&#x8BB6;&#x7684;&#x662F;&#xFF0C;&#x4E00;&#x52A0;&#x7684;9.0&#x7CFB;&#x7EDF;&#xFF0C;&#x7ADF;&#x7136;&#x4E0D;&#x9075;&#x5FAA;Android P&#x884C;&#x4E3A;&#x53D8;&#x66F4;&#xFF0C;&#x5BF9;&#x4E8E;Target&gt;=9.0&#x7684;&#x5E94;&#x7528;&#xFF0C;org.apache.http.legacy.boot.jar&#x867D;&#x7136;&#x4ECE;bootclasspath&#x4E2D;&#x79FB;&#x9664;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x8FD8;&#x662F;&#x5C06;&#x5176;&#x52A0;&#x5230;&#x4E86;App&#x7684;ClassLoader&#x4E2D;&#x53BB;&#xFF0C;&#x4F46;&#x662F;&#x6B64;&#x65F6;&#x662F;&#x52A0;&#x5230;pathList&#x7684;dexElements&#x7684;&#x6700;&#x540E;&#x9762;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x6700;&#x524D;&#x9762;&#xFF0C;&#x5982;&#x56FE;&#x6240;&#x793A;&#xFF1A;</p><p><img src="/2019/04/03/%E8%B0%88%E8%B0%88Android-P%E8%A1%8C%E4%B8%BA%E5%8F%98%E6%9B%B4%E4%B8%8E%E5%86%85%E8%81%94%E4%BC%98%E5%8C%96/oneplus_bigger_than_p.png" alt="oneplus_bigger_than_p.png"></p><p>&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5BF9;&#x4E8E;Target&gt;=9.0&#x7684;&#x5E94;&#x7528;&#x6765;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x4E86;org.apache.http.legacy.boot.jar&#x4E2D;&#x7684;&#x7C7B;&#xFF0C;&#x90A3;&#x4E48;&#x5728;&#x7C7B;&#x67E5;&#x627E;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F1A;&#x629B;&#x51FA;NoClassDefFoundError&#x7684;&#x5F02;&#x5E38;&#xFF0C;&#x5F53;&#x7136;&#x4E86;&#xFF0C;&#x7531;&#x4E8E;&#x4E00;&#x52A0;&#x8FD8;&#x662F;&#x5C06;&#x5176;&#x52A0;&#x5230;&#x4E86;App&#x7684;ClassLoader&#x4E2D;&#x53BB;&#xFF0C;&#x6240;&#x4EE5;&#x5E76;&#x4E0D;&#x4F1A;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x662F;&#x5BF9;&#x4E8E;&#x5176;&#x4ED6;&#x975E;&#x4E00;&#x52A0;&#x624B;&#x673A;&#x6765;&#x8BF4;&#xFF0C;&#x4E00;&#x65E6;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x4E86;&#x5176;&#x4E2D;&#x7684;&#x7C7B;&#xFF0C;&#x5C31;&#x4F1A;&#x4EA7;&#x751F;crash&#xFF0C;&#x5982;&#x56FE;&#x6240;&#x793A;&#xFF1A;</p><p><img src="/2019/04/03/%E8%B0%88%E8%B0%88Android-P%E8%A1%8C%E4%B8%BA%E5%8F%98%E6%9B%B4%E4%B8%8E%E5%86%85%E8%81%94%E4%BC%98%E5%8C%96/crash.png" alt="crash.png"></p><p>&#x5BF9;&#x4E8E;Target&gt;=9.0&#x7684;&#x5E94;&#x7528;&#x6765;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x60F3;&#x7EE7;&#x7EED;&#x4F7F;&#x7528;org.apache.http.legacy.boot.jar&#x4E2D;&#x7684;&#x7C7B;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;AndroidManifest.xml&#x4E2D;&#x52A0;&#x5165;&#x5982;&#x4E0B;&#x58F0;&#x660E;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;uses-library android:<span class="attribute">name</span>=<span class="string">&quot;org.apache.http.legacy&quot;</span> android:<span class="attribute">required</span>=<span class="string">&quot;false&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p>&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x5BF9;&#x4E8E;minSdkVersion&lt;=23&#x7684;&#x5E94;&#x7528;&#x6765;&#x8BF4;&#xFF0C;&#x9700;&#x8981;&#x52A0;&#x4E0A; android:required=&#x201D;false&#x201D;&#x5C5E;&#x6027;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;API&#x7EA7;&#x522B;&#x4F4E;&#x4E8E;24&#x7684;&#x8BBE;&#x5907;&#x4E0A;&#xFF0C;org.apache.http.legacy&#x5E93;&#x4E0D;&#x53EF;&#x7528;&#xFF0C;&#x8BE5;&#x5E93;&#x4E2D;&#x7684;&#x7C7B;&#x5168;&#x90E8;&#x5728;bootclasspath&#x4E2D;&#x63D0;&#x4F9B;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x8BBE;&#x7F6E;&#x8BE5;&#x5C5E;&#x6027;&#x503C;&#x4E3A;false&#xFF08;&#x9ED8;&#x8BA4;&#x662F;true&#xFF09;&#xFF0C;&#x90A3;&#x4E48;&#x5728;API&#x7EA7;&#x522B;&#x4F4E;&#x4E8E;24&#x7684;&#x8BBE;&#x5907;&#x4E0A;&#x5B89;&#x88C5;App&#x65F6;&#xFF0C;&#x5C06;&#x4F1A;&#x51FA;&#x73B0;&#x5982;&#x4E0B;&#x9519;&#x8BEF;</p><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Failure </span>[INSTALL_FAILED_MISSING_SHARED_LIBRARY]</span><br></pre></td></tr></table></figure><p>&#x5BF9;&#x4E8E;Android 9.0&#x7CFB;&#x7EDF;&#x6765;&#x8BF4;&#xFF0C;&#x8FD9;&#x6837;&#x6DFB;&#x52A0;&#x4E4B;&#x540E;&#xFF0C;org.apache.http.legacy.boot.jar&#x4E2D;&#x7684;&#x7C7B;&#x548C;App&#x7684;&#x7C7B;&#x5219;&#x90FD;&#x662F;&#x7531;App&#x7684;PathClassLoader&#x52A0;&#x8F7D;&#xFF0C;&#x5373;&#x8868;&#x73B0;&#x548C;Target&lt;=9.0&#x662F;&#x4E00;&#x81F4;&#x7684;&#xFF0C;org.apache.http.legacy.boot.jar&#x5C06;&#x88AB;&#x6DFB;&#x52A0;&#x5230;PathClassLoader&#x4E2D;pathList&#x7684;dexElements&#x7684;&#x6700;&#x524D;&#x9762;</p><p>&#x6709;&#x8DA3;&#x7684;&#x662F;&#xFF0C;&#x4F60;&#x4F1A;&#x53D1;&#x73B0;&#xFF0C;&#x8FD9;&#x6837;&#x6DFB;&#x52A0;&#x4E86;&#x4E4B;&#x540E;&#xFF0C;&#x5728;Android Q&#x4E0A;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;org.apache.http.legacy.boot.jar&#x4E2D;&#x7684;&#x7C7B;&#x662F;&#x7531;&#x53E6;&#x4E00;&#x4E2A;PathClassLoader&#x52A0;&#x8F7D;&#xFF0C;&#x800C;&#x4E0D;&#x662F;App&#x7684;PathClassLoader&#xFF0C;&#x4F46;&#x662F;&#x4ED6;&#x4EEC;&#x7684;parent&#x90FD;&#x662F;BootClassLoader&#xFF0C;&#x5982;&#x56FE;&#x6240;&#x793A;&#xFF0C;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#x7684;&#x4E24;&#x4E2A;ClassLoader&#x7684;&#x622A;&#x56FE;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5176;&#x54C8;&#x5E0C;&#x503C;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x3002;</p><p><img src="/2019/04/03/%E8%B0%88%E8%B0%88Android-P%E8%A1%8C%E4%B8%BA%E5%8F%98%E6%9B%B4%E4%B8%8E%E5%86%85%E8%81%94%E4%BC%98%E5%8C%96/appclassloader.png" alt="appclassloader.png"><br><img src="/2019/04/03/%E8%B0%88%E8%B0%88Android-P%E8%A1%8C%E4%B8%BA%E5%8F%98%E6%9B%B4%E4%B8%8E%E5%86%85%E8%81%94%E4%BC%98%E5%8C%96/apacheclassloader.png" alt="apacheclassloader.png"></p><p>Andorid 9.0&#x7684;&#x6B64;&#x9879;&#x884C;&#x4E3A;&#x53D8;&#x66F4;&#x4E5F;&#x5C31;&#x610F;&#x5473;&#x7740;&#xFF0C;&#x6211;&#x4EEC;&#x6BCF;&#x6B21;&#x521B;&#x5EFA;PathClassLoader&#x5BF9;&#x8C61;&#x65F6;&#xFF0C;org.apache.http.legacy.boot.jar&#x90FD;&#x4F1A;&#x968F;&#x4E4B;&#x6DFB;&#x52A0;&#x5230;PathClassLoader&#x4E2D;pathList&#x7684;dexElements&#x4E2D;&#x53BB;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x610F;&#x5473;&#x7740;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x591A;&#x4E2A;ClassLoader&#x52A0;&#x8F7D;org.apache.http.legacy.boot.jar&#x4E2D;&#x7684;&#x7C7B;&#x3002;</p><h3 id="Android-P&#x5185;&#x8054;&#x4F18;&#x5316;&#x65B0;&#x589E;&#x68C0;&#x6D4B;&#x9879;"><a href="#Android-P&#x5185;&#x8054;&#x4F18;&#x5316;&#x65B0;&#x589E;&#x68C0;&#x6D4B;&#x9879;" class="headerlink" title="Android P&#x5185;&#x8054;&#x4F18;&#x5316;&#x65B0;&#x589E;&#x68C0;&#x6D4B;&#x9879;"></a>Android P&#x5185;&#x8054;&#x4F18;&#x5316;&#x65B0;&#x589E;&#x68C0;&#x6D4B;&#x9879;</h3><p>Google&#x5728;Android P&#x4E2D;&#x6DFB;&#x52A0;&#x4E86;&#x65B0;&#x7684;&#x68C0;&#x6D4B;&#x9879;&#xFF0C;&#x5BF9;&#x56FD;&#x5185;&#x5927;&#x591A;&#x6570;&#x5E94;&#x7528;&#x9020;&#x6210;&#x4E86;&#x4E25;&#x91CD;&#x5F71;&#x54CD;&#xFF1A;&#x5728;&#x8C03;&#x7528;resolve inline method&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x68C0;&#x6D4B;&#x5230;caller&#x4E0E;callee&#x5904;&#x4E8E;&#x4E0D;&#x540C;&#x7684;dex file&#xFF0C;&#x4F1A;&#x4E3B;&#x52A8;&#x53D1;&#x8D77;abort&#xFF08;inline&#x4E0D;&#x5141;&#x8BB8;&#x8DE8;dex&#x6587;&#x4EF6;&#xFF09;&#xFF0C;&#x5BFC;&#x81F4;&#x5E94;&#x7528;&#x51FA;&#x73B0;&#x95EA;&#x9000;&#x7B49;&#x5F02;&#x5E38;&#x95EE;&#x9898;&#x3002;</p><p>&#x4E3B;&#x8981;&#x6709;&#x4E24;&#x4E2A;&#x573A;&#x666F;</p><ul><li>&#x5E94;&#x7528;&#x539F;&#x59CB;apk&#x4E2D;&#x7684;dex A&#x548C;&#x4ECE;&#x5E94;&#x7528;&#x670D;&#x52A1;&#x7AEF;&#x4E0B;&#x8F7D;&#x7684;&#x70ED;&#x4FEE;&#x590D;dex B&#x5B58;&#x5728;&#x91CD;&#x590D;&#x7C7B;&#xFF0C;&#x89E6;&#x53D1;&#x70ED;&#x4FEE;&#x590D;&#x4E14;&#x7CFB;&#x7EDF;&#x540E;&#x53F0;&#x4F18;&#x5316;inline&#x7F16;&#x8BD1;&#x540E;&#xFF0C;&#x4FBF;&#x4F1A;&#x51FA;&#x73B0;&#x6B64;&#x95EE;&#x9898;&#x3002;</li><li>&#x7531; classloader A &#x52A0;&#x8F7D;&#x7684; class1 &#x8C03;&#x7528;&#x4E00;&#x4E2A;&#x7531; classloader B &#x52A0;&#x8F7D;&#x7684; class2&#x91CC;&#x7684;&#x67D0;&#x4E2A; inline &#x65B9;&#x6CD5;&#xFF0C;&#x5C06;&#x5BFC;&#x81F4;&#x5E94;&#x7528;&#x95EA;&#x9000;&#x3002;</li></ul><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7528;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#x5F3A;&#x5236;&#x89E6;&#x53D1;&#x5185;&#x8054;</p><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">adb shell cmd <span class="keyword">package</span> <span class="title">compile &#x2013;m speed &#x2013;f &#x5305;&#x540D;</span></span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x63A7;&#x5236;&#x53F0;&#x51FA;&#x73B0;&#x5982;&#x4E0B;&#x65E5;&#x5FD7;&#xFF0C;&#x57FA;&#x672C;&#x5C31;&#x662F;&#x5185;&#x8054;&#x65B0;&#x589E;&#x68C0;&#x6D4B;&#x9879;&#x5BFC;&#x81F4;&#x7684;</p><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">This must be due <span class="keyword">to</span> duplicate classes <span class="keyword">or</span> playing wrongly <span class="keyword">with</span> <span class="class"><span class="keyword">class</span> <span class="title">loaders</span></span></span><br></pre></td></tr></table></figure><p>&#x5177;&#x4F53;&#x4EE3;&#x7801;&#x89C1; <a href="https://android.googlesource.com/platform/art/+/android-9.0.0_r16/runtime/entrypoints/entrypoint_utils-inl.h#94" target="_blank" rel="noopener">entrypoint_utils-inl.h#94</a></p><p>&#x8BE6;&#x60C5;&#x53EF;&#x4EE5;&#x53C2;&#x8003; <a href="https://mp.weixin.qq.com/s?__biz=MzI0MjgxMjU0Mg==&amp;mid=2247488357&amp;idx=1&amp;sn=d393bd028dfbf87998b80e06ca24bc94&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">https://mp.weixin.qq.com/s?__biz=MzI0MjgxMjU0Mg==&amp;mid=2247488357&amp;idx=1&amp;sn=d393bd028dfbf87998b80e06ca24bc94&amp;scene=21#wechat_redirect</a></p><h3 id="&#x5185;&#x8054;&#x6761;&#x4EF6;"><a href="#&#x5185;&#x8054;&#x6761;&#x4EF6;" class="headerlink" title="&#x5185;&#x8054;&#x6761;&#x4EF6;"></a>&#x5185;&#x8054;&#x6761;&#x4EF6;</h3><ul><li>App&#x4E0D;&#x662F;Debug&#x7248;&#x672C;&#x7684;</li><li>App&#x4E0D;&#x662F;&#x4F7F;&#x7528;vmSafeMode=true&#x542F;&#x52A8;&#x7684;</li><li>&#x88AB;&#x8C03;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x6240;&#x5728;&#x7684;&#x7C7B;&#x4E0E;&#x8C03;&#x7528;&#x8005;&#x6240;&#x5728;&#x7684;&#x7C7B;&#x4F4D;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;Dex&#xFF1B;&#xFF08;&#x6CE8;&#x610F;&#xFF0C;&#x7B26;&#x5408;Class N&#x547D;&#x540D;&#x89C4;&#x5219;&#x7684;&#x591A;&#x4E2A;Dex&#x8981;&#x770B;&#x6210;&#x540C;&#x4E00;&#x4E2A;Dex&#xFF09;</li><li>&#x88AB;&#x8C03;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x7684;&#x5B57;&#x8282;&#x7801;&#x6761;&#x6570;&#x4E0D;&#x8D85;&#x8FC7;dex2oat&#x901A;&#x8FC7;&#x2013;inline-max-code-units&#x6307;&#x5B9A;&#x7684;&#x503C;&#xFF0C;6.x&#x9ED8;&#x8BA4;&#x4E3A;100&#xFF0C;7.x&#x9ED8;&#x8BA4;&#x4E3A;32&#xFF1B;</li><li>&#x88AB;&#x8C03;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x4E0D;&#x542B;try&#x5757;&#xFF1B;</li><li>&#x88AB;&#x8C03;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x4E0D;&#x542B;&#x975E;&#x6CD5;&#x5B57;&#x8282;&#x7801;&#xFF1B;</li><li>&#x5BF9;&#x4E8E;7.x&#x7248;&#x672C;&#xFF0C;&#x88AB;&#x8C03;&#x7528;&#x65B9;&#x6CD5;&#x8FD8;&#x4E0D;&#x80FD;&#x5305;&#x542B;&#x5BF9;&#x63A5;&#x53E3;&#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528;&#x3002;&#xFF08;invoke-interface&#x6307;&#x4EE4;&#xFF09;</li></ul><p>&#x5177;&#x4F53;&#x53EF;&#x4EE5;&#x53C2;&#x8003; <a href="https://github.com/WeMobileDev/article/blob/master/ART%E4%B8%8B%E7%9A%84%E6%96%B9%E6%B3%95%E5%86%85%E8%81%94%E7%AD%96%E7%95%A5%E5%8F%8A%E5%85%B6%E5%AF%B9Android%E7%83%AD%E4%BF%AE%E5%A4%8D%E6%96%B9%E6%A1%88%E7%9A%84%E5%BD%B1%E5%93%8D%E5%88%86%E6%9E%90.md" target="_blank" rel="noopener">ART&#x4E0B;&#x7684;&#x65B9;&#x6CD5;&#x5185;&#x8054;&#x7B56;&#x7565;&#x53CA;&#x5176;&#x5BF9;Android&#x70ED;&#x4FEE;&#x590D;&#x65B9;&#x6848;&#x7684;&#x5F71;&#x54CD;&#x5206;&#x6790;</a></p><p>&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x77E5;&#x9053;&#x5982;&#x4E0B;&#x51E0;&#x4E2A;&#x6982;&#x5FF5;&#x5373;&#x53EF;&#xFF1A;</p><ul><li>&#x5982;&#x679C;&#x60F3;&#x8981;&#x65B9;&#x6CD5;&#x4E0D;&#x88AB;&#x5185;&#x8054;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5F3A;&#x5236;&#x52A0;&#x4E0A;try&#x5757;&#xFF0C;&#x4F7F;&#x5176;&#x4E0D;&#x88AB;&#x5185;&#x8054;</li><li>&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x5728;debug&#x6A21;&#x5F0F;&#x4E0B;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#xFF0C;&#x5728;release&#x60C5;&#x51B5;&#x4E0B;&#x51FA;&#x73B0;&#x4E86;&#xFF0C;&#x5E76;&#x4E14;&#x6392;&#x9664;&#x4E86;&#x6DF7;&#x6DC6;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x4E14;&#x51FA;&#x73B0;&#x4E86;native&#x5F02;&#x5E38;&#xFF0C;&#x53EF;&#x4EE5;&#x9002;&#x5F53;&#x8003;&#x8651;&#x4E00;&#x4E0B;&#x5185;&#x8054;&#x5BFC;&#x81F4;&#x7684;</li><li>&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x5728;vmSafeMode=true&#x4E0B;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#xFF0C;&#x5728;vmSafeMode=false&#x60C5;&#x51B5;&#x4E0B;&#x51FA;&#x73B0;&#x4E86;&#xFF0C;&#x4E14;&#x51FA;&#x73B0;&#x4E86;native&#x5F02;&#x5E38;&#xFF0C;&#x53EF;&#x4EE5;&#x9002;&#x5F53;&#x8003;&#x8651;&#x4E00;&#x4E0B;&#x5185;&#x8054;&#x5BFC;&#x81F4;&#x7684;</li></ul><h3 id="&#x573A;&#x666F;&#x518D;&#x73B0;"><a href="#&#x573A;&#x666F;&#x518D;&#x73B0;" class="headerlink" title="&#x573A;&#x666F;&#x518D;&#x73B0;"></a>&#x573A;&#x666F;&#x518D;&#x73B0;</h3><p>&#x5F88;&#x4E45;&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x7EBF;&#x4E0A;&#x62A5;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x4E00;&#x52A0;9.0&#x7CFB;&#x7EDF;&#x7684;&#x5185;&#x8054;&#x95EE;&#x9898;&#xFF0C;&#x8BE5;&#x95EE;&#x9898;&#x53EA;&#x4F1A;&#x5B58;&#x5728;&#x4E8E;&#x4E00;&#x52A0;5/5T/6/6T&#x7684;H2OS&#x7CFB;&#x7EDF;&#x7248;&#x672C;&#x7684;9.0.1&#x4EE5;&#x4E0B;&#x7248;&#x672C;&#xFF0C;&#x5E76;&#x4E14;debug&#x7248;&#x672C;&#x4E0D;&#x5B58;&#x5728;&#x8BE5;&#x95EE;&#x9898;&#xFF0C;vmSafeMode=true&#x65F6;&#x4E0D;&#x5B58;&#x5728;&#x8BE5;&#x95EE;&#x9898;&#xFF0C;&#x5E76;&#x4E14;&#x53EA;&#x6709;&#x4E0B;&#x53D1;patch&#x540E;&#x624D;&#x4F1A;&#x89E6;&#x53D1;&#xFF0C;&#x5177;&#x4F53;&#x8868;&#x73B0;&#x662F;&#x542F;&#x52A8;&#x5C31;crash&#xFF0C;&#x539F;&#x56E0;&#x5927;&#x81F4;&#x5982;&#x4E0B;&#xFF1A;</p><ul><li>&#x7531;&#x4E8E;&#x53CD;&#x5C04;&#x66FF;&#x6362;application&#x65F6;&#x6CA1;&#x6709;&#x5C06;loader&#x7C7B;&#x548C;&#x975E;loader&#x9694;&#x79BB;&#x5E72;&#x51C0;&#xFF0C;&#x9519;&#x8BEF;&#x7684;&#x5C06;&#x4E00;&#x90E8;&#x5206;&#x672C;&#x5E94;&#x5C5E;&#x4E8E;&#x975E;loader&#x7C7B;&#x914D;&#x7F6E;&#x6210;loader&#x7C7B;&#xFF0C;&#x5BFC;&#x81F4;&#x539F;&#x672C;&#x5E94;&#x8BE5;&#x9694;&#x79BB;&#x5E72;&#x51C0;&#x7684;&#x7C7B;&#x53D8;&#x6210;&#x4E86;&#x672A;&#x9694;&#x79BB;&#x5E72;&#x51C0;&#x3002;</li><li>&#x7531;&#x4E8E;&#x672A;&#x9694;&#x79BB;&#x5E72;&#x51C0;&#xFF0C;&#x5BFC;&#x81F4;loader&#x7C7B;&#x4E2D;&#x7684;&#x7C7B;A&#x8C03;&#x7528;&#x4E86;&#x975E;loader&#x4E2D;&#x7684;&#x7C7B;B&#xFF0C;&#x5F3A;&#x5236;&#x6267;&#x884C;&#x5185;&#x8054;&#x7F16;&#x8BD1;&#x540E;&#xFF0C;&#x90E8;&#x5206;&#x65B9;&#x6CD5;&#x88AB;&#x5185;&#x8054;&#x4F18;&#x5316;&#x3002;</li><li>&#x4E0B;&#x53D1;&#x70ED;&#x4FEE;&#x590D;&#x540E;&#xFF0C;patch&#x5305;&#x4E2D;&#x4E0D;&#x4F1A;&#x5305;&#x542B;loader&#x7C7B;&#xFF0C;loader&#x4E2D;&#x7684;&#x7C7B;&#x7531;&#x539F;&#x6709;classloader&#x4ECE;&#x5B89;&#x88C5;&#x7684;apk&#x4E2D;&#x52A0;&#x8F7D;&#xFF0C;&#x975E;loader&#x7C7B;&#x7531;patch&#x7684;classloader&#x52A0;&#x8F7D;&#xFF0C;&#x51FA;&#x73B0;&#x4E86;&#x5185;&#x8054;&#x4F18;&#x5316;&#x7684;&#x65B9;&#x6CD5;&#x8C03;&#x7528;&#x5206;&#x6563;&#x5728;&#x4E0D;&#x540C;&#x7684;classloader&#x4E2D;&#xFF0C;&#x5373;&#x7531; classloader A &#x52A0;&#x8F7D;&#x7684; class1 &#x8C03;&#x7528;&#x4E00;&#x4E2A;&#x7531; classloader B &#x52A0;&#x8F7D;&#x7684; class2&#x91CC;&#x7684;&#x67D0;&#x4E2A; inline &#x65B9;&#x6CD5;&#xFF0C;&#x5C06;&#x89E6;&#x53D1;&#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#x5BFC;&#x81F4;&#x5E94;&#x7528;&#x95EA;&#x9000;&#x3002;</li></ul><p>&#x5947;&#x602A;&#x7684;&#x662F;&#xFF0C;&#x4E00;&#x52A0;&#x7684;H2OS&#x5728;9.0.2&#x4E4B;&#x540E;&#x4FEE;&#x590D;&#x4E86;&#x8BE5;&#x95EE;&#x9898;&#xFF0C;&#x4ECE;AOSP&#x6E90;&#x7801;&#x4E0A;&#x6765;&#x770B;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5E94;&#x8BE5;&#x662F;9.0&#x5FC5;&#x73B0;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x540E;&#x7EED;&#x7248;&#x672C;&#x4E00;&#x52A0;&#x53EF;&#x80FD;&#x53BB;&#x6389;&#x4E86;&#x8FD9;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#xFF0C;&#x624D;&#x6CA1;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#x3002;</p><p>&#x6700;&#x8FD1;&#x6211;&#x4EEC;&#x53C8;&#x53D1;&#x73B0;&#x4E86;&#x56E0;&#x4E3A;apache httpclient&#x5185;&#x8054;&#x4F18;&#x5316;&#x5BFC;&#x81F4;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5177;&#x4F53;&#x8868;&#x73B0;&#x662F;&#x542F;&#x52A8;&#x51E0;&#x6B21;App&#x540E;&#xFF0C;&#x51FA;&#x73B0;&#x5185;&#x8054;abort&#x89E6;&#x53D1;native&#x5F02;&#x5E38;&#x5BFC;&#x81F4;App ANR&#x65E0;&#x54CD;&#x5E94;&#x3002;</p><p>&#x8BE5;&#x95EE;&#x9898;&#x6E90;&#x81EA;&#x6211;&#x4EEC;&#x7684;&#x63D2;&#x4EF6;&#x5316;&#x65B9;&#x6848;&#x7684;classloader&#x67B6;&#x6784;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x591A;classloader&#x65B9;&#x5F0F;&#xFF0C;&#x5982;&#x56FE;&#x6240;&#x793A;&#xFF1A;</p><p><img src="/2019/04/03/%E8%B0%88%E8%B0%88Android-P%E8%A1%8C%E4%B8%BA%E5%8F%98%E6%9B%B4%E4%B8%8E%E5%86%85%E8%81%94%E4%BC%98%E5%8C%96/classloader.png" alt="classloader.png"></p><p>&#x901A;&#x8FC7;&#x4FEE;&#x6539;&#x7C7B;&#x7684;&#x7236;&#x5B50;&#x5173;&#x7CFB;&#x6210;&#x529F;&#x5730;&#x628A;DispatchClassLoader&#x63D2;&#x5165;&#x5230;&#x7C7B;&#x7684;&#x52A0;&#x8F7D;&#x94FE;&#x4E2D;&#xFF0C;DispatchClassLoader&#x672C;&#x8EAB;&#x5E76;&#x4E0D;&#x8D1F;&#x8D23;&#x771F;&#x6B63;&#x7C7B;&#x7684;&#x52A0;&#x8F7D;&#xFF0C;&#x53EA;&#x662F;&#x7C7B;&#x52A0;&#x8F7D;&#x7684;&#x4E00;&#x4E2A;&#x5206;&#x53D1;&#x5668;&#xFF0C;DispatchClassLoader&#x6301;&#x6709;&#x5BBF;&#x4E3B;&#x53CA;&#x6240;&#x6709;Bundle&#x7684;ClassLoader&#x3002;</p><p>&#x7279;&#x522B;&#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x91CC;DispatchClassLoader&#x548C;BundleClassLoader&#x90FD;&#x662F;&#x76F4;&#x63A5;&#x7EE7;&#x627F;&#x81EA;ClassLoader&#x7C7B;&#x3002;</p><p>DispatchClassLoader&#x7684;&#x7C7B;&#x67E5;&#x627E;&#x903B;&#x8F91;&#x5982;&#x4E0B;</p><ul><li>&#x5148;&#x8C03;&#x7528;super.loadClass&#x8FDB;&#x884C;&#x52A0;&#x8F7D;&#xFF0C;&#x5982;&#x679C;&#x627E;&#x5230;&#x5219;&#x8FD4;&#x56DE;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x627E;&#x5230;&#xFF0C;&#x5219;&#x6267;&#x884C;&#x4E0B;&#x4E00;&#x6B65;</li><li>&#x518D;&#x4ECE;App&#x7684;PathClassLoader&#x4E2D;&#x67E5;&#x627E;&#xFF0C;&#x5982;&#x679C;&#x627E;&#x5230;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x627E;&#x5230;&#xFF0C;&#x5219;&#x6267;&#x884C;&#x4E0B;&#x4E00;&#x6B65;</li><li>&#x904D;&#x5386;&#x5404;&#x4E2A;&#x63D2;&#x4EF6;&#xFF0C;&#x4ECE;&#x63D2;&#x4EF6;BundleClassLoader&#x4E2D;&#x67E5;&#x627E;&#x7C7B;&#xFF0C;&#x5982;&#x679C;&#x627E;&#x5230;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x627E;&#x5230;&#xFF0C;&#x629B;&#x5F02;&#x5E38;</li></ul><p>BundleClassLoader&#x7684;&#x7C7B;&#x67E5;&#x627E;&#x903B;&#x8F91;&#x5982;&#x4E0B;</p><ul><li>&#x5148;&#x8C03;&#x7528;&#x81EA;&#x8EAB;&#x6301;&#x6709;&#x7684;DexFile&#x8FDB;&#x884C;&#x67E5;&#x627E;&#xFF0C;&#x5982;&#x679C;&#x627E;&#x5230;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#xFF0C;&#x5982;&#x679C;&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x5219;&#x6267;&#x884C;&#x4E0B;&#x4E00;&#x6B65;</li><li>&#x518D;&#x8C03;&#x7528;&#x7CFB;&#x7EDF;&#x7684;BootClassLoader&#x8FDB;&#x884C;&#x52A0;&#x8F7D;&#xFF0C;&#x5982;&#x679C;&#x627E;&#x5230;&#x5219;&#x8FD4;&#x56DE;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x627E;&#x5230;&#xFF0C;&#x5219;&#x6267;&#x884C;&#x4E0B;&#x4E00;&#x6B65;</li><li>&#x518D;&#x4ECE;App&#x7684;PathClassLoader&#x4E2D;&#x67E5;&#x627E;&#xFF0C;&#x5982;&#x679C;&#x627E;&#x5230;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x627E;&#x5230;&#xFF0C;&#x629B;&#x5F02;&#x5E38;</li><li>&#x904D;&#x5386;&#x5404;&#x4E2A;&#x63D2;&#x4EF6;&#xFF0C;&#x4ECE;&#x63D2;&#x4EF6;BundleClassLoader&#x4E2D;&#x67E5;&#x627E;&#x7C7B;</li></ul><p>&#x4ECE;&#x67D0;&#x4E2A;&#x7248;&#x672C;&#x5F00;&#x59CB;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;DispatchClassLoader&#x7684;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#x8FDB;&#x884C;&#x4E86;&#x4FEE;&#x6539;&#xFF0C;&#x7531;&#x76F4;&#x63A5;&#x7EE7;&#x627F;ClassLoader&#x4FEE;&#x6539;&#x6210;&#x4E86;&#x7EE7;&#x627F;PathClassLoader</p><p>&#x539F;&#x6765;&#x7684;&#x7248;&#x672C;&#x5982;&#x4E0B;<br></p><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">DispatchClassLoader</span> <span class="keyword">extends</span> <span class="title">ClassLoader</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="type">DispatchClassLoader</span>(<span class="type">Context</span> context) {</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p></p><p>&#x4FEE;&#x6539;&#x540E;&#x7684;&#x7248;&#x672C;&#x5982;&#x4E0B;</p><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">DispatchClassLoader</span> <span class="keyword">extends</span> <span class="title">PathClassLoader</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="type">DispatchClassLoader</span>(<span class="type">Context</span> context) {</span><br><span class="line">        <span class="keyword">super</span>(<span class="string">&quot;&quot;</span>, context.getClassLoader().getParent());</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x505A;&#x6B64;&#x9879;&#x4FEE;&#x6539;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x5934;&#x6761;&#x7684;&#x6280;&#x672F;&#x535A;&#x5BA2; <a href="https://www.jianshu.com/p/422454c1bf40" target="_blank" rel="noopener">Android&#x81EA;&#x5B9A;&#x4E49;ClassLoader&#x8017;&#x65F6;&#x95EE;&#x9898;&#x8FFD;&#x67E5;</a></p><p>&#x6B63;&#x662F;&#x56E0;&#x4E3A;&#x8FD9;&#x9879;&#x4FEE;&#x6539;&#xFF0C;&#x4ECE;&#x6B64;&#x57CB;&#x4E0B;&#x4E86;&#x4E00;&#x4E2A;&#x5751;&#x3002;</p><p>&#x6211;&#x4EEC;&#x6765;&#x56DE;&#x987E;&#x4E00;&#x4E0B;Android 9.0&#x7684;&#x884C;&#x4E3A;&#x53D8;&#x66F4;&#xFF0C;&#x4E00;&#x65E6;&#x7EE7;&#x627F;&#x4E86;PathClassLoader&#x540E;&#xFF0C;&#x90A3;&#x4E48;DispatchClassLoader&#x4E2D;&#x5C31;&#x4F1A;&#x5B58;&#x5728;org.apache.http.legacy.boot.jar&#x3002;</p><p>&#x5982;&#x679C;&#x6211;&#x4EEC;&#x7684;app&#x4E2D;&#x7528;&#x4E86;apache httpclient&#x7684;&#x7C7B;&#xFF0C;&#x63D2;&#x4EF6;&#x4E2D;&#x4E5F;&#x7528;&#x4E86;apache httpclient&#x7684;&#x7C7B;&#xFF0C;&#x5E76;&#x4E14;&#x4E00;&#x90E8;&#x5206;&#x7C7B;&#x7531;app&#x7684;PathClassLoader&#x52A0;&#x8F7D;&#xFF0C;&#x4E00;&#x90E8;&#x5206;&#x7C7B;&#x7531;DispatchClassLoader&#x4E2D;&#x7684;org.apache.http.legacy.boot.jar&#x52A0;&#x8F7D;&#xFF0C;&#x5E76;&#x4E14;&#x5185;&#x8054;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#x3002;</p><p>&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x73B0;&#x5728;&#x5728;&#x5BBF;&#x4E3B;&#x4E2D;&#x52A0;&#x8F7D;org.apache.http.message.AbstractHttpMessage&#x7C7B;&#xFF0C;&#x6839;&#x636E;&#x7C7B;&#x67E5;&#x627E;&#x903B;&#x8F91;&#xFF0C;&#x4F1A;&#x6709;&#x5982;&#x4E0B;&#x51E0;&#x6B65;</p><ul><li>&#x4F1A;&#x5148;&#x8C03;&#x7528;DispatchClassLoader&#x7684;super.loadClass&#xFF0C;&#x5373;PathClassLoader&#x7684;loadClass</li><li>PathClassLoader&#x4F1A;&#x5148;&#x4ECE;BootClassLoader&#x4E2D;&#x52A0;&#x8F7D;&#xFF0C;&#x6B64;&#x65F6;org.apache.http.legacy.boot.jar&#x5DF2;&#x7ECF;&#x4ECE;bootclasspath&#x4E2D;&#x79FB;&#x9664;&#xFF0C;&#x6240;&#x4EE5;&#x627E;&#x4E0D;&#x5230;</li><li>&#x518D;&#x4ECE;PathClassLoader&#x4E2D;&#x7684;pathList&#x67E5;&#x627E;&#xFF0C;&#x6B64;&#x65F6;org.apache.http.legacy.boot.jar&#x5B58;&#x5728;&#xFF0C;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7C7B;&#x8FD4;&#x56DE;</li></ul><p>&#x6240;&#x4EE5;org.apache.http.message.AbstractHttpMessage&#x5C06;&#x4F1A;&#x88AB;DispatchClassLoader&#x7EE7;&#x627F;&#x7684;PathClassLoader&#x52A0;&#x8F7D;&#xFF0C;&#x800C;&#x975E;&#x5BBF;&#x4E3B;&#x7684;PathClassLoader&#x52A0;&#x8F7D;</p><p>&#x6B64;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x63D2;&#x4EF6;&#x4E2D;&#x52A0;&#x8F7D;&#x4E86;org.apache.http.message.BasicHttpResponse&#x7C7B;&#xFF0C;&#x6839;&#x636E;&#x7C7B;&#x67E5;&#x627E;&#x903B;&#x8F91;&#xFF0C;&#x4F1A;&#x6709;&#x5982;&#x4E0B;&#x51E0;&#x6B65;</p><ul><li>&#x7531;&#x4E8E;&#x63D2;&#x4EF6;&#x7684;BundleClassLoader&#x81EA;&#x8EAB;&#x6301;&#x6709;&#x7684;DexFile&#x4E0D;&#x5B58;&#x5728;&#x8BE5;&#x7C7B;&#xFF0C;&#x6240;&#x4EE5;&#x63D2;&#x4EF6;&#x4E2D;&#x627E;&#x4E0D;&#x5230;&#x8BE5;&#x7C7B;</li><li>&#x63A5;&#x7740;&#x518D;&#x4ECE;&#x7CFB;&#x7EDF;&#x7684;BootClassLoader&#x4E2D;&#x67E5;&#x627E;&#xFF0C;&#x6B64;&#x65F6;org.apache.http.legacy.boot.jar&#x5DF2;&#x7ECF;&#x4ECE;bootclasspath&#x4E2D;&#x79FB;&#x9664;&#xFF0C;&#x6240;&#x4EE5;&#x627E;&#x4E0D;&#x5230;</li><li>&#x518D;&#x4ECE;App&#x7684;ClassLoader&#x4E2D;&#x52A0;&#x8F7D;&#xFF0C;&#x6B64;&#x65F6;org.apache.http.legacy.boot.jar&#x5B58;&#x5728;&#xFF0C;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7C7B;&#x8FD4;&#x56DE;</li></ul><p>&#x6240;&#x4EE5;org.apache.http.message.BasicHttpResponse&#x5C06;&#x4F1A;&#x88AB;App&#x7684;ClassLoader&#x52A0;&#x8F7D;&#xFF0C;&#x5373;&#x5BBF;&#x4E3B;&#x539F;&#x6765;&#x88AB;DispatchClassLoader&#x66FF;&#x6362;&#x7684;PathClassLoader&#x52A0;&#x8F7D;</p><p>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x7C7B;&#x90FD;&#x662F;&#x7531;PathClassLoader&#x52A0;&#x8F7D;&#xFF0C;&#x4F46;&#x662F;&#x6765;&#x81EA;&#x4E0D;&#x540C;&#x7684;PathClassLoader&#x3002;</p><p>&#x5982;&#x679C;&#x6B64;&#x65F6;org.apache.http.message.BasicHttpResponse&#x5185;&#x8054;&#x4E86;org.apache.http.message.AbstractHttpMessage&#x7C7B;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;&#x5982;&#x4E0A;&#x6240;&#x8BF4;&#x7684;&#x95EE;&#x9898;&#x3002;</p><p>&#x6700;&#x7EC8;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;&#x5982;&#x4E0B;&#x5F02;&#x5E38;&#xFF0C;&#x4ECE;&#x800C;&#x89E6;&#x53D1;abort&#x4FE1;&#x53F7;&#x91CF;&#xFF0C;&#x5F3A;&#x5236;&#x9000;&#x51FA;&#x5E94;&#x7528;&#x3002;</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">Inlined method resolution crossed dex file boundary: </span><br><span class="line">from void org<span class="selector-class">.apache</span><span class="selector-class">.http</span><span class="selector-class">.message</span><span class="selector-class">.BasicHttpResponse</span>.&lt;init&gt;(org<span class="selector-class">.apache</span><span class="selector-class">.http</span><span class="selector-class">.StatusLine</span>, org<span class="selector-class">.apache</span><span class="selector-class">.http</span><span class="selector-class">.ReasonPhraseCatalog</span>, java<span class="selector-class">.util</span><span class="selector-class">.Locale</span>) </span><br><span class="line"><span class="keyword">in</span> /system/framework/org<span class="selector-class">.apache</span><span class="selector-class">.http</span><span class="selector-class">.legacy</span><span class="selector-class">.boot</span><span class="selector-class">.jar</span>/<span class="number">0</span>xe73a3f80 </span><br><span class="line">to void org<span class="selector-class">.apache</span><span class="selector-class">.http</span><span class="selector-class">.message</span><span class="selector-class">.AbstractHttpMessage</span>.&lt;init&gt;() </span><br><span class="line"><span class="keyword">in</span> /system/framework/org<span class="selector-class">.apache</span><span class="selector-class">.http</span><span class="selector-class">.legacy</span><span class="selector-class">.boot</span><span class="selector-class">.jar</span>/<span class="number">0</span>xe73a56b0. </span><br><span class="line">This must be due to duplicate classes or playing wrongly with class loaders</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4FEE;&#x590D;&#x5176;&#x5B9E;&#x4E5F;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x4E3B;&#x8981;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x6CD5;</p><ul><li>&#x628A;DispatchClassLoader&#x7684;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#x7531;PathClassLoader&#x6539;&#x56DE;ClassLoader&#xFF0C;&#x4F46;&#x662F;&#x51FA;&#x4E8E;&#x6027;&#x80FD;&#x8003;&#x8651;&#xFF0C;&#x4E0D;&#x8FD9;&#x4E48;&#x505A;</li><li>&#x5BF9;&#x4E8E;apache httpclient&#x4E2D;&#x7684;&#x7C7B;&#xFF0C;&#x7EDF;&#x4E00;&#x4ECE;App&#x7684;PathClassLoader&#x4E2D;&#x8FDB;&#x884C;&#x52A0;&#x8F7D;</li></ul><p>&#x65B9;&#x6CD5;&#x4E8C;&#x53EA;&#x9700;&#x8981;&#x5728;DispatchClassLoader&#x7684;loadClass&#x65B9;&#x6CD5;&#x67E5;&#x627E;&#x903B;&#x8F91;&#x7684;&#x6700;&#x524D;&#x9762;&#x52A0;&#x5165;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#x5373;&#x53EF;&#x3002;</p><figure class="highlight mel"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">28</span> &amp;&amp; (</span><br><span class="line">            className.<span class="keyword">startsWith</span>(<span class="string">&quot;org.apache.commons.codec.&quot;</span>) ||</span><br><span class="line">                    className.<span class="keyword">startsWith</span>(<span class="string">&quot;org.apache.commons.logging.&quot;</span>) ||</span><br><span class="line">                    className.<span class="keyword">startsWith</span>(<span class="string">&quot;org.apache.http.&quot;</span>)</span><br><span class="line">    )) {</span><br><span class="line">        <span class="comment">// Android 9.0&#x884C;&#x4E3A;&#x53D8;&#x66F4;&#xFF0C;apache httpclient&#x4ECE;bootclasspath&#x79FB;&#x9664;&#xFF0C;&#x653E;&#x5230;&#x4E86;App ClassLoader</span></span><br><span class="line">        <span class="comment">// &#x907F;&#x514D;&#x51FA;&#x73B0;&#x5404;&#x79CD;&#x95EE;&#x9898;&#xFF0C;&#x6B64;&#x5904;apache httpclient&#x76F8;&#x5173;&#x7C7B;&#x6700;&#x597D;&#x4ECE;&#x540C;&#x4E00;&#x4E2A;ClassLoader&#x4E2D;&#x67E5;&#x627E;&#xFF0C;&#x56E0;&#x6B64;&#x4F18;&#x5148;&#x4ECE;&#x5BBF;&#x4E3B;ClassLoader&#x4E2D;&#x67E5;&#x627E;</span></span><br><span class="line">        <span class="comment">// TODO &#x8FD9;&#x91CC;&#x505A;&#x4ECE;App&#x7684;PathClassLoader&#x52A0;&#x8F7D;</span></span><br><span class="line">    }</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5728;Tinker&#x4E2D;&#x9488;&#x5BF9;&#x8BE5;&#x95EE;&#x9898;&#x4E5F;&#x505A;&#x4E86;&#x4FEE;&#x590D;&#x64CD;&#x4F5C;&#xFF0C;&#x89C1;&#x63D0;&#x4EA4; <a href="https://github.com/Tencent/tinker/commit/edddb2564de4d3d616c4d41fb5cc620daf946dcf" target="_blank" rel="noopener">[tinker] bugfix: crash leads by conflicts of org.apache.http library.</a>&#xFF0C;&#x5176;&#x63D0;&#x4EA4;&#x5185;&#x5BB9;&#x5982;&#x4E0B;</p><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span> (name != <span class="keyword">null</span> &amp;&amp; name.startsWith(<span class="string">&quot;org.apache.http.&quot;</span>)) {</span><br><span class="line">    <span class="comment">// Here&apos;s the whole story:</span></span><br><span class="line">    <span class="comment">//   Some app use apache wrapper library to access Apache utilities. Classes in apache wrapper</span></span><br><span class="line">    <span class="comment">//   library may be conflict with those preloaded in BootClassLoader.</span></span><br><span class="line">    <span class="comment">//   So with the build option:</span></span><br><span class="line">    <span class="comment">//       useLibrary &apos;org.apache.http.legacy&apos;</span></span><br><span class="line">    <span class="comment">//   appears, the Android Framework will inject a jar called &apos;org.apache.http.legacy.boot.jar&apos;</span></span><br><span class="line">    <span class="comment">//   in front of the path of user&apos;s apk. After that, PathList in app&apos;s PathClassLoader should</span></span><br><span class="line">    <span class="comment">//   look like this:</span></span><br><span class="line">    <span class="comment">//       [&quot;/system/framework/org.apache.http.legacy.boot.jar&quot;, &quot;path-to-user-apk&quot;, &quot;path-to-other-preload-jar&quot;]</span></span><br><span class="line">    <span class="comment">//   When app runs to the code refer to Apache classes, the referred classes in the first</span></span><br><span class="line">    <span class="comment">//   jar override those in user&apos;s app, which avoids any conflicts and crashes.</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//   When it comes to Tinker, to block the cached instances in class table of app&apos;s</span></span><br><span class="line">    <span class="comment">//   PathClassLoader we use this AndroidNClassLoader to replace the original PathClassLoader.</span></span><br><span class="line">    <span class="comment">//   At the beginning it&apos;s fine to imitate system&apos;s behavior and construct the PathList in AndroidNClassLoader</span></span><br><span class="line">    <span class="comment">//   like below:</span></span><br><span class="line">    <span class="comment">//       [&quot;/system/framework/org.apache.http.legacy.boot.jar&quot;, &quot;path-to-new-dexes&quot;, &quot;path-to-other-preload-jar&quot;]</span></span><br><span class="line">    <span class="comment">//   However, the ART VM of Android P adds a new feature that checks whether the inlined class is loaded by the same</span></span><br><span class="line">    <span class="comment">//   ClassLoader that loads the callsite&apos;s class. If any Apache classes is inlined in old dex(oat), after we replacing</span></span><br><span class="line">    <span class="comment">//   the App&apos;s ClassLoader we will receive an assert since the Apache classes is loaded by another ClassLoader now.</span></span><br><span class="line">    <span class="function"><span class="keyword">return</span> originClassLoader.<span class="title">loadClass</span><span class="params">(name)</span></span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4F46;&#x662F;&#x4E0D;&#x5E78;&#x7684;&#x662F;org.apache.http.legacy.boot.jar&#x4E2D;&#x7684;&#x5305;&#x540D;&#x4E0D;&#x4EC5;&#x4EC5;&#x662F;org.apache.http.&#xFF0C;&#x8FD8;&#x6709;org.apache.commons.codec.&#x548C;org.apache.commons.logging.&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x4E2A;&#x4FEE;&#x6539;&#x5E76;&#x4E0D;&#x5B8C;&#x6574;&#xFF0C;&#x5E94;&#x8BE5;&#x8981;&#x628A;else if&#x4FEE;&#x6539;&#x6210;&#x5982;&#x4E0B;&#x903B;&#x8F91;</p><figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">else if (<span class="name">name</span> != null <span class="symbol">&amp;&amp;</span>  (<span class="name">name</span>.startsWith(<span class="string">&quot;org.apache.commons.codec.&quot;</span>) </span><br><span class="line">                                     || name.startsWith(<span class="string">&quot;org.apache.commons.logging.&quot;</span>)</span><br><span class="line">                                     || name.startsWith(<span class="string">&quot;org.apache.http.&quot;</span>)))</span><br></pre></td></tr></table></figure><p>org.apache.http.legacy.boot.jar&#x7684;&#x5305;&#x7ED3;&#x6784;&#x53C2;&#x8003;&#x5982;&#x4E0B;</p><p><img src="/2019/04/03/%E8%B0%88%E8%B0%88Android-P%E8%A1%8C%E4%B8%BA%E5%8F%98%E6%9B%B4%E4%B8%8E%E5%86%85%E8%81%94%E4%BC%98%E5%8C%96/apache_jar.png" alt="apache_jar.png"></p><p>Flurry&#x662F;&#x56FD;&#x5916;&#x4E00;&#x5BB6;&#x4E13;&#x95E8;&#x4E3A;&#x79FB;&#x52A8;&#x5E94;&#x7528;&#x63D0;&#x4F9B;&#x6570;&#x636E;&#x7EDF;&#x8BA1;&#x548C;&#x5206;&#x6790;&#x7684;&#x516C;&#x53F8;&#xFF0C;&#x4ED6;&#x4EEC;&#x7684;SDK&#x4E2D;&#x4E5F;&#x7528;&#x4E86;apache httpclient&#x4E2D;&#x7684;&#x7C7B;&#xFF0C;&#x5E76;&#x4E14;&#x8BE5;SDK&#x4E5F;&#x89E6;&#x53D1;&#x4E86;&#x8FD9;&#x4E2A;&#x5185;&#x8054;&#x6761;&#x4EF6;&#xFF0C;&#x5373;org.apache.http&#x5305;&#x4E0B;&#x7684;&#x7C7B;&#x5185;&#x8054;&#x4E86;org.apache.commons.logging&#x4E0B;&#x7684;&#x7C7B;&#xFF0C;&#x5BF9;&#x5E94;&#x7684;&#x9519;&#x8BEF;&#x5982;&#x4E0B;</p><p><img src="/2019/04/03/%E8%B0%88%E8%B0%88Android-P%E8%A1%8C%E4%B8%BA%E5%8F%98%E6%9B%B4%E4%B8%8E%E5%86%85%E8%81%94%E4%BC%98%E5%8C%96/apache_inline.png" alt="apache_inline.png"></p><p>&#x817E;&#x8BAF;&#x5168;&#x5BB6;&#x6876;SDK&#x4E2D;&#x4E5F;&#x5927;&#x91CF;&#x7684;&#x4F7F;&#x7528;&#x4E86;apache httpclient&#x4E2D;&#x7684;&#x7C7B;&#xFF0C;&#x5982;X5&#xFF0C;&#x5FAE;&#x4FE1;&#x652F;&#x4ED8;&#xFF0C;&#x5FAE;&#x4FE1;&#x5206;&#x4EAB;&#x7B49;&#x7B49;SDK&#xFF0C;&#x652F;&#x4ED8;&#x5B9D;&#x7684;&#x652F;&#x4ED8;SDK&#xFF0C;&#x94F6;&#x8054;&#x7684;&#x94F6;&#x8054;&#x652F;&#x4ED8;SDK&#x90FD;&#x5927;&#x91CF;&#x7684;&#x4F7F;&#x7528;&#x4E86;&#x8FD9;&#x4E9B;API&#x3002;</p><h3 id="&#x601D;&#x8003;"><a href="#&#x601D;&#x8003;" class="headerlink" title="&#x601D;&#x8003;"></a>&#x601D;&#x8003;</h3><p>&#x524D;&#x9762;&#x8BF4;&#x5230;&#xFF0C;Target&gt;=9.0&#x65F6;&#xFF0C;&#x5728;Android Q&#x4E0A;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;org.apache.http.legacy.boot.jar&#x4E2D;&#x7684;&#x7C7B;&#x662F;&#x7531;&#x53E6;&#x4E00;&#x4E2A;PathClassLoader&#x52A0;&#x8F7D;&#xFF0C;&#x800C;&#x4E0D;&#x662F;App&#x7684;PathClassLoader&#xFF0C;&#x4F46;&#x662F;&#x4ED6;&#x4EEC;&#x7684;parent&#x90FD;&#x662F;BootClassLoader&#xFF0C;&#x6240;&#x4EE5;&#x6B63;&#x5E38;&#x6765;&#x8BF4;&#xFF0C;&#x5728;Android Q&#x4E0A;&#xFF0C;&#x7C7B;&#x67E5;&#x627E;&#x903B;&#x8F91;&#x8FD8;&#x662F;&#x9700;&#x8981;&#x518D;&#x8FDB;&#x884C;&#x4E00;&#x756A;&#x53D8;&#x5316;&#xFF0C;&#x5177;&#x4F53;&#x53EF;&#x4EE5;&#x7B49;Android Q release&#x540E;&#x518D;&#x770B;&#x4E0B;&#x3002;</p><h3 id="apache-httpclient-&#x7C7B;&#x68C0;&#x6D4B;"><a href="#apache-httpclient-&#x7C7B;&#x68C0;&#x6D4B;" class="headerlink" title="apache httpclient &#x7C7B;&#x68C0;&#x6D4B;"></a>apache httpclient &#x7C7B;&#x68C0;&#x6D4B;</h3><p>&#x6240;&#x4EE5;&#x675C;&#x7EDD;&#x6B64;&#x7C7B;&#x95EE;&#x9898;&#x7684;&#x6839;&#x672C;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x662F;&#x4E0D;&#x7528;&#x70ED;&#x4FEE;&#x590D;&#xFF0C;&#x4E0D;&#x7528;&#x63D2;&#x4EF6;&#x5316;&#xFF0C;&#x8FD9;&#x663E;&#x7136;&#x77ED;&#x671F;&#x5185;&#x662F;&#x4E0D;&#x53EF;&#x80FD;&#x7684;&#xFF0C;&#x867D;&#x7136;&#x6211;&#x4EEC;&#x652F;&#x6301;&#x96F6;&#x6210;&#x672C;&#x964D;&#x7EA7;&#x63D2;&#x4EF6;&#x5316;&#x4E3A;aar&#x8FDB;&#x884C;&#x96C6;&#x6210;&#xFF0C;&#x4F46;&#x662F;&#x8003;&#x8651;&#x5230;&#x52A8;&#x6001;&#x6027;&#xFF0C;&#x76EE;&#x524D;&#x8FD8;&#x662F;&#x4F1A;&#x7EE7;&#x7EED;&#x4F7F;&#x7528;&#x3002;&#x6240;&#x4EE5;&#x9000;&#x800C;&#x6C42;&#x5176;&#x6B21;&#x7684;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#x79FB;&#x9664;apache httpclient&#x7684;&#x7C7B;&#x8C03;&#x7528;&#xFF0C;&#x6240;&#x4EE5;&#x5FC5;&#x987B;&#x68C0;&#x6D4B;&#x51FA;&#x54EA;&#x4E9B;SDK&#x4F7F;&#x7528;&#x4E86;apache httpclient&#x4E2D;&#x7684;&#x7C7B;&#xFF0C;&#x8FD9;&#x91CC;&#x7528;gradle&#x63D2;&#x4EF6;&#x7ED3;&#x5408;javassist&#x5199;&#x4E86;&#x4E2A;&#x63D2;&#x4EF6;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x53EF;&#x4EE5;&#x89C1; <a href="https://github.com/lizhangqu/plugin-apache-httpclient-detect" target="_blank" rel="noopener">https://github.com/lizhangqu/plugin-apache-httpclient-detect</a></p><p>&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> Map&lt;String, ClassPool&gt; classPoolMap = <span class="keyword">new</span> HashMap&lt;&gt;<span class="literal">()</span></span><br><span class="line"><span class="keyword">private</span> ClassPool apacheLegacyClassPool</span><br><span class="line">@Override</span><br><span class="line">void accept(String variantName, String path, InputStream inputStream, OutputStream outputStream) {</span><br><span class="line">    ClassPool classPool = classPoolMap.get(variantName)</span><br><span class="line">    <span class="keyword">if</span> (classPool<span class="operator"> == </span>null) {</span><br><span class="line">        classPool = <span class="keyword">new</span> <span class="constructor">ClassPool(<span class="params">true</span>)</span></span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">TransformHelper</span>.</span></span>update<span class="constructor">ClassPath(<span class="params">classPool</span>, <span class="params">project</span>, <span class="params">variantName</span>)</span></span><br><span class="line">        classPoolMap.put(variantName, classPool)</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (apacheLegacyClassPool<span class="operator"> == </span>null) {</span><br><span class="line">        File apacheJarFile = get<span class="constructor">ApacheLegacyJarFile()</span></span><br><span class="line">        project.logger.info(<span class="string">&quot;insertClassPath org.apache.http.legacy.jar ${apacheJarFile}&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> (apacheJarFile != null) {</span><br><span class="line">            apacheLegacyClassPool = <span class="keyword">new</span> <span class="constructor">ClassPool()</span></span><br><span class="line">            apacheLegacyClassPool.insert<span class="constructor">ClassPath(<span class="params">apacheJarFile</span>.<span class="params">getAbsolutePath</span>()</span>)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (apacheLegacyClassPool<span class="operator"> == </span>null) {</span><br><span class="line">        return</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    CtClass ctClass = classPool.make<span class="constructor">Class(<span class="params">inputStream</span>, <span class="params">false</span>)</span></span><br><span class="line">    <span class="keyword">if</span> (ctClass.is<span class="constructor">Frozen()</span>) {</span><br><span class="line">        ctClass.defrost<span class="literal">()</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    detect(path, ctClass)</span><br><span class="line"></span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">TransformHelper</span>.</span></span>copy(<span class="keyword">new</span> <span class="constructor">ByteArrayInputStream(<span class="params">ctClass</span>.<span class="params">toBytecode</span>()</span>), outputStream)</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">@<span class="constructor">SuppressWarnings(<span class="string">&quot;GrMethodMayBeStatic&quot;</span>)</span></span><br><span class="line">File get<span class="constructor">ApacheLegacyJarFile()</span> {</span><br><span class="line">    String jarPath = <span class="string">&quot;jar/org.apache.http.legacy.jar&quot;</span></span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="comment">//&#x5BF9;&#x5E94;&#x8DEF;&#x5F84;&#x5982;&#x679C;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;</span></span><br><span class="line">        URL url = <span class="module-access"><span class="module"><span class="identifier">ApacheHttpClientDetectPlugin</span>.</span></span><span class="keyword">class</span>.get<span class="constructor">ClassLoader()</span>.get<span class="constructor">Resource(<span class="params">jarPath</span>)</span></span><br><span class="line">        <span class="keyword">if</span> (url != null) {</span><br><span class="line">            File apacheJarFile = <span class="keyword">new</span> <span class="constructor">File(<span class="params">url</span>.<span class="params">getFile</span>()</span>)</span><br><span class="line">            <span class="keyword">if</span> (apacheJarFile.is<span class="constructor">File()</span><span class="operator"> &amp;&amp; </span>apacheJarFile.exists<span class="literal">()</span>) {</span><br><span class="line">                return apacheJarFile</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//&#x53D6;jar&#x5305;&#x4E2D;&#x7684;&#x6587;&#x4EF6;</span></span><br><span class="line">            URL jarUrl = <span class="module-access"><span class="module"><span class="identifier">ApacheHttpClientDetectPlugin</span>.</span></span><span class="keyword">class</span>.get<span class="constructor">ProtectionDomain()</span>.get<span class="constructor">CodeSource()</span>.get<span class="constructor">Location()</span></span><br><span class="line">            <span class="keyword">if</span> (jarUrl != null) {</span><br><span class="line">                File jarFile = <span class="keyword">new</span> <span class="constructor">File(<span class="params">jarUrl</span>.<span class="params">getFile</span>()</span>)</span><br><span class="line">                File jarFolder = <span class="keyword">new</span> <span class="constructor">File(<span class="params">jarFile</span>.<span class="params">getParentFile</span>()</span>,</span><br><span class="line">                        <span class="module-access"><span class="module"><span class="identifier">FilenameUtils</span>.</span></span>get<span class="constructor">BaseName(<span class="params">jarFile</span>.<span class="params">getName</span>()</span>))</span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">GFileUtils</span>.</span></span>mkdirs(jarFolder)</span><br><span class="line">                apacheJarFile = <span class="keyword">new</span> <span class="constructor">File(<span class="params">jarFolder</span>, <span class="string">&quot;org.apache.http.legacy.jar&quot;</span>)</span></span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">GFileUtils</span>.</span></span>mkdirs(apacheJarFile.get<span class="constructor">ParentFile()</span>)</span><br><span class="line">                <span class="keyword">if</span> (apacheJarFile.is<span class="constructor">File()</span><span class="operator"> &amp;&amp; </span>apacheJarFile.exists<span class="literal">()</span>) {</span><br><span class="line">                    return apacheJarFile</span><br><span class="line">                }</span><br><span class="line">                <span class="comment">//&#x5426;&#x5219;&#x89E3;&#x538B;</span></span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">ZipUtil</span>.</span></span>unpack<span class="constructor">Entry(<span class="params">jarFile</span>, <span class="params">jarPath</span>, <span class="params">apacheJarFile</span>)</span></span><br><span class="line">                return apacheJarFile</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    } catch (Exception e) {</span><br><span class="line">        e.print<span class="constructor">StackTrace()</span></span><br><span class="line">    }</span><br><span class="line">    return null</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">@<span class="constructor">SuppressWarnings(<span class="string">&quot;GrMethodMayBeStatic&quot;</span>)</span></span><br><span class="line">boolean is<span class="constructor">ApacheLegacy(String <span class="params">name</span>)</span> {</span><br><span class="line">    <span class="keyword">if</span> (name<span class="operator"> == </span>null) {</span><br><span class="line">        return <span class="literal">false</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (name.starts<span class="constructor">With(&apos;<span class="params">org</span>.<span class="params">apache</span>.<span class="params">http</span>.&apos;)</span>) {</span><br><span class="line">        return <span class="literal">true</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (name.starts<span class="constructor">With(&apos;<span class="params">org</span>.<span class="params">apache</span>.<span class="params">commons</span>.<span class="params">codec</span>&apos;)</span>) {</span><br><span class="line">        return <span class="literal">true</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (name.starts<span class="constructor">With(&apos;<span class="params">org</span>.<span class="params">apache</span>.<span class="params">commons</span>.<span class="params">logging</span>&apos;)</span>) {</span><br><span class="line">        return <span class="literal">true</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (name.starts<span class="constructor">With(&apos;<span class="params">com</span>.<span class="params">android</span>.<span class="params">internal</span>.<span class="params">http</span>.<span class="params">multipart</span>&apos;)</span>) {</span><br><span class="line">        return <span class="literal">true</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (name.starts<span class="constructor">With(&apos;<span class="params">android</span>.<span class="params">net</span>.<span class="params">compatibility</span>&apos;)</span>) {</span><br><span class="line">        return <span class="literal">true</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (name.starts<span class="constructor">With(&apos;<span class="params">android</span>.<span class="params">net</span>.<span class="params">http</span>&apos;)</span>) {</span><br><span class="line">        <span class="keyword">if</span> (name.starts<span class="constructor">With(&apos;<span class="params">android</span>.<span class="params">net</span>.<span class="params">http</span>.HttpResponseCache&apos;)</span>) {</span><br><span class="line">            return <span class="literal">false</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (name.starts<span class="constructor">With(&apos;<span class="params">android</span>.<span class="params">net</span>.<span class="params">http</span>.SslCertificate&apos;)</span>) {</span><br><span class="line">            return <span class="literal">false</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (name.starts<span class="constructor">With(&apos;<span class="params">android</span>.<span class="params">net</span>.<span class="params">http</span>.SslError&apos;)</span>) {</span><br><span class="line">            return <span class="literal">false</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (name.starts<span class="constructor">With(&apos;<span class="params">android</span>.<span class="params">net</span>.<span class="params">http</span>.X509TrustManagerExtensions&apos;)</span>) {</span><br><span class="line">            return <span class="literal">false</span></span><br><span class="line">        }</span><br><span class="line">        return <span class="literal">true</span></span><br><span class="line">    }</span><br><span class="line">    return <span class="literal">false</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">void detect(String path, CtClass ctClass) {</span><br><span class="line">	<span class="keyword">try</span> {</span><br><span class="line">	    ctClass?.get<span class="constructor">RefClasses()</span>?.each {String name -&gt;</span><br><span class="line">	        <span class="keyword">if</span> (!is<span class="constructor">ApacheLegacy(<span class="params">name</span>)</span>) {</span><br><span class="line">	            return</span><br><span class="line">	        }</span><br><span class="line">	        <span class="keyword">if</span> (apacheLegacyClassPool?.get<span class="constructor">OrNull(<span class="params">name</span>)</span> != null) {</span><br><span class="line">	            project.logger.error(<span class="string">&quot;----------------------------------------Class Reference Start----------------------------------------&quot;</span>)</span><br><span class="line">	            project.logger.error(<span class="string">&quot;Apache HttpClient Class Reference: &quot;</span>)</span><br><span class="line">	            project.logger.error(<span class="string">&quot;        &#x2514;&gt; [Class: ${name}]&quot;</span>)</span><br><span class="line">	            project.logger.error(<span class="string">&quot;        &#x2514;&gt; [Referenced By Class: ${path.replaceAll(&apos;/&apos;, &apos;.&apos;)}]&quot;</span>)</span><br><span class="line">	            project.logger.error(<span class="string">&quot;----------------------------------------Class Reference End------------------------------------------\n\n&quot;</span>)</span><br><span class="line">	        }</span><br><span class="line">	    }</span><br><span class="line">	 	ctClass?.get<span class="constructor">DeclaredFields()</span>?.each {CtField ctField -&gt;</span><br><span class="line">		    CtClass fieldClass = null</span><br><span class="line">		    <span class="keyword">try</span> {</span><br><span class="line">		        fieldClass = ctField.get<span class="constructor">Type()</span></span><br><span class="line">		    } catch (NotFoundException e) {</span><br><span class="line"></span><br><span class="line">		    }</span><br><span class="line">		    <span class="keyword">if</span> (fieldClass<span class="operator"> == </span>null) {</span><br><span class="line">		        return</span><br><span class="line">		    }</span><br><span class="line">		    <span class="keyword">if</span> (!is<span class="constructor">ApacheLegacy(<span class="params">fieldClass</span>.<span class="params">getName</span>()</span>)) {</span><br><span class="line">		        return</span><br><span class="line">		    }</span><br><span class="line">		    <span class="keyword">if</span> (fieldClass.is<span class="constructor">Primitive()</span>) {</span><br><span class="line">		        return</span><br><span class="line">		    }</span><br><span class="line">		    <span class="keyword">if</span> (fieldClass.is<span class="constructor">Array()</span><span class="operator"> &amp;&amp; </span>fieldClass.get<span class="constructor">ComponentType()</span>.is<span class="constructor">Primitive()</span>) {</span><br><span class="line">		        return</span><br><span class="line">		    }</span><br><span class="line">		    <span class="keyword">if</span> (apacheLegacyClassPool?.get<span class="constructor">OrNull(<span class="params">fieldClass</span>.<span class="params">getName</span>()</span>) != null) {</span><br><span class="line">		        project.logger.error(<span class="string">&quot;----------------------------------------Field Reference Start----------------------------------------&quot;</span>)</span><br><span class="line">		        project.logger.error(<span class="string">&quot;Apache HttpClient Field Reference: &quot;</span>)</span><br><span class="line">		        project.logger.error(<span class="string">&quot;        &#x2514;&gt; [Class: ${fieldClass.getName()}]&quot;</span>)</span><br><span class="line">		        project.logger.error(<span class="string">&quot;        &#x2514;&gt; [Filed: ${ctField.getName()}]&quot;</span>)</span><br><span class="line">		        project.logger.error(<span class="string">&quot;        &#x2514;&gt; [Referenced By Class: ${path.replaceAll(&apos;/&apos;, &apos;.&apos;)}]&quot;</span>)</span><br><span class="line">		        project.logger.error(<span class="string">&quot;----------------------------------------Field Reference End------------------------------------------\n\n&quot;</span>)</span><br><span class="line">		    }</span><br><span class="line">		}</span><br><span class="line">    	ctClass?.get<span class="constructor">DeclaredMethods()</span>?.each {</span><br><span class="line">	        it.instrument(<span class="keyword">new</span> <span class="constructor">ExprEditor()</span> {</span><br><span class="line">	            @Override</span><br><span class="line">	            void edit(MethodCall methodCall) throws CannotCompileException {</span><br><span class="line">	                super.edit(methodCall)</span><br><span class="line">	                <span class="keyword">if</span> (!is<span class="constructor">ApacheLegacy(<span class="params">methodCall</span>.<span class="params">className</span>)</span>) {</span><br><span class="line">	                    return</span><br><span class="line">	                }</span><br><span class="line">	                CtClass clazz = apacheLegacyClassPool?.get<span class="constructor">OrNull(<span class="params">methodCall</span>.<span class="params">className</span>)</span></span><br><span class="line">	                <span class="keyword">if</span> (clazz<span class="operator"> == </span>null) {</span><br><span class="line">	                    return</span><br><span class="line">	                }</span><br><span class="line">	                <span class="keyword">if</span> (clazz.is<span class="constructor">Primitive()</span>) {</span><br><span class="line">	                    return</span><br><span class="line">	                }</span><br><span class="line">	                <span class="keyword">if</span> (clazz.is<span class="constructor">Array()</span><span class="operator"> &amp;&amp; </span>clazz.get<span class="constructor">ComponentType()</span>.is<span class="constructor">Primitive()</span>) {</span><br><span class="line">	                    return</span><br><span class="line">	                }</span><br><span class="line">	                project.logger.error(<span class="string">&quot;----------------------------------------Method Reference Start----------------------------------------&quot;</span>)</span><br><span class="line">	                project.logger.error(<span class="string">&quot;Apache HttpClient Method Reference: &quot;</span>)</span><br><span class="line">	                project.logger.error(<span class="string">&quot;        &#x2514;&gt; [Class: ${methodCall.getClassName()}]&quot;</span>)</span><br><span class="line">	                project.logger.error(<span class="string">&quot;        &#x2514;&gt; [Method: ${methodCall.getMethodName()}${methodCall.getSignature()}]&quot;</span>)</span><br><span class="line">	                project.logger.error(<span class="string">&quot;        &#x2514;&gt; [Referenced By Class: ${path.replaceAll(&apos;/&apos;, &apos;.&apos;)}, Line: ${methodCall.getLineNumber()}]&quot;</span>)</span><br><span class="line">	                project.logger.error(<span class="string">&quot;----------------------------------------Method Reference End------------------------------------------\n\n&quot;</span>)</span><br><span class="line">	            }</span><br><span class="line">	        })</span><br><span class="line">    	}</span><br><span class="line">	} catch (Exception e) {</span><br><span class="line">    	e.print<span class="constructor">StackTrace()</span></span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h3><p>&#x73CD;&#x7231;&#x751F;&#x547D;&#xFF0C;&#x8FDC;&#x79BB;&#x63D2;&#x4EF6;&#x5316;&#xFF0C;&#x8FDC;&#x79BB;&#x70ED;&#x4FEE;&#x590D;&#x3002;</p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>内联优化</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter 动态化探索</title>
    <url>/2019/03/22/Flutter-%E5%8A%A8%E6%80%81%E5%8C%96%E6%8E%A2%E7%B4%A2/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>Flutter &#x4ECE;&#x67D0;&#x4E2A;&#x7248;&#x672C;&#x5F00;&#x59CB;&#xFF0C;&#x5B98;&#x65B9;&#x5C31;&#x5DF2;&#x7ECF;&#x652F;&#x6301;&#x4E86;Android&#x7684;&#x52A8;&#x6001;&#x4E0B;&#x53D1;&#xFF0C;iOS&#x7531;&#x4E8E;&#x82F9;&#x679C;&#x7684;&#x9650;&#x5236;&#xFF0C;&#x76EE;&#x524D;&#x6CA1;&#x6709;&#x7279;&#x522B;&#x597D;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x3002;&#x73B0;&#x5728;master&#x5206;&#x652F;&#x4E0A;&#x6700;&#x65B0;&#x7684;&#x4EE3;&#x7801;&#x5DF2;&#x7ECF;&#x652F;&#x6301;Android&#x52A8;&#x6001;&#x4E0B;&#x53D1;&#x4E86;&#xFF0C;&#x672C;&#x7BC7;&#x6587;&#x7AE0;&#x57FA;&#x4E8E;v1.3.13&#x3002;&#x5173;&#x4E8E;&#x52A8;&#x6001;&#x4E0B;&#x53D1;&#x7684;&#x76F8;&#x5173;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x89C1;&#x5982;&#x4E0B;&#x51E0;&#x4E2A;&#x7C7B;&#xFF1A;</p><ul><li><a href="https://github.com/flutter/engine/blob/master/shell/platform/android/io/flutter/view/ResourceUpdater.java" target="_blank" rel="noopener">ResourceUpdater.java</a></li><li><a href="https://github.com/flutter/engine/blob/master/shell/platform/android/io/flutter/view/ResourceExtractor.java" target="_blank" rel="noopener">ResourceExtractor.java</a></li><li><a href="https://github.com/flutter/engine/blob/master/shell/platform/android/io/flutter/view/FlutterMain.java" target="_blank" rel="noopener">FlutterMain.java</a></li></ul><a id="more"></a><h3 id="&#x5B98;&#x65B9;&#x65B9;&#x6848;&#x73B0;&#x72B6;"><a href="#&#x5B98;&#x65B9;&#x65B9;&#x6848;&#x73B0;&#x72B6;" class="headerlink" title="&#x5B98;&#x65B9;&#x65B9;&#x6848;&#x73B0;&#x72B6;"></a>&#x5B98;&#x65B9;&#x65B9;&#x6848;&#x73B0;&#x72B6;</h3><p>&#x5B98;&#x65B9;&#x7684;&#x52A8;&#x6001;&#x4E0B;&#x53D1;&#x5176;&#x6574;&#x4F53;&#x7684;&#x601D;&#x8DEF;&#x5C31;&#x662F;&#x66FF;&#x6362;Flutter&#x7684;&#x4EA7;&#x7269;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x4E14;&#x4E0E;bsdiff&#x8FDB;&#x884C;&#x7ED3;&#x5408;&#x51CF;&#x5C0F;&#x4EA7;&#x7269;&#x7684;&#x5927;&#x5C0F;&#x3002;</p><p>&#x4F46;&#x662F;&#x76EE;&#x524D;&#x5B98;&#x65B9;&#x5B9E;&#x73B0;&#x7684;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x8FC7;&#x4E8E;&#x9E21;&#x808B;&#xFF0C;&#x57FA;&#x672C;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x62FF;&#x6765;&#x7528;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;</p><ul><li>url&#x4E0B;&#x8F7D;&#x7684;&#x683C;&#x5F0F;&#x56FA;&#x5B9A;&#xFF0C;&#x65E0;&#x6CD5;&#x4E0E;&#x73B0;&#x6709;&#x7684;&#x7070;&#x5EA6;&#x7CFB;&#x7EDF;&#x8FDB;&#x884C;&#x7ED3;&#x5408;&#x3002;</li><li>&#x81EA;&#x5B9A;&#x4E49;&#x80FD;&#x529B;&#x57FA;&#x672C;&#x4E3A;&#x96F6;&#xFF0C;&#x4E0D;&#x80FD;&#x5E72;&#x9884;patch&#x7684;&#x4E0B;&#x8F7D;&#x6D41;&#x7A0B;&#xFF0C;&#x5B89;&#x88C5;&#x6D41;&#x7A0B;&#x7B49;&#x7B49;&#x3002;</li><li>&#x5982;&#x679C;&#x6709;patch&#x7684;&#x8BDD;&#xFF0C;&#x6BCF;&#x6B21;&#x542F;&#x52A8;&#x90FD;&#x4F1A;&#x53BB;&#x4E0B;&#x8F7D;patch&#x6587;&#x4EF6;&#xFF0C;&#x5BFC;&#x81F4;&#x91CD;&#x590D;&#x4E0B;&#x8F7D;&#xFF0C;&#x6D6A;&#x8D39;&#x6570;&#x636E;&#x6D41;&#x91CF;&#x3002;</li><li>&#x53EA;&#x80FD;&#x57FA;&#x4E8E;dynamicRelease&#x7684;buildType&#x8FDB;&#x884C;&#x6784;&#x5EFA;&#xFF0C;&#x4E14;&#x53EA;&#x80FD;&#x4F7F;&#x7528;flutter&#x547D;&#x4EE4;&#x6784;&#x5EFA;&#xFF0C;&#x65E0;&#x6CD5;&#x4F7F;&#x7528;gradle&#x8FDB;&#x884C;&#x6784;&#x5EFA;&#x3002;</li><li>&#x5BF9;&#x6DF7;&#x5408;&#x5E94;&#x7528;&#x7684;patch&#x6784;&#x5EFA;&#x652F;&#x6301;&#x57FA;&#x672C;&#x4E3A;&#x96F6;&#x3002;</li><li>&#x53EA;&#x80FD;&#x652F;&#x6301;Flutter&#x76F8;&#x5173;&#x4EA7;&#x7269;&#xFF0C;&#x5BF9;&#x4E8E;&#x539F;&#x751F;&#x7684;&#x4EA7;&#x7269;&#x4E0D;&#x5141;&#x8BB8;&#x53D1;&#x751F;&#x53D8;&#x5316;&#xFF0C;&#x5982;classes.dex&#x7B49;&#x3002;&#x8FD9;&#x662F;&#x5FC5;&#x7136;&#x7684;&#xFF0C;&#x9664;&#x975E;&#x52A0;&#x4EE5;&#x6539;&#x6B63;&#xFF0C;&#x5426;&#x5219;&#x5FC5;&#x7136;&#x53EA;&#x80FD;&#x652F;&#x6301;Flutter&#x7684;&#x4EA7;&#x7269;&#x3002;</li><li>&#x7F3A;&#x4E4F;patch&#x7B7E;&#x540D;&#x6821;&#x9A8C;&#xFF0C;&#x5E26;&#x6765;&#x5B89;&#x5168;&#x95EE;&#x9898;&#x3002;</li></ul><p>&#x6240;&#x4EE5;&#x5B98;&#x65B9;&#x5FC5;&#x987B;&#x4FEE;&#x6539;&#x5176;&#x65B9;&#x6848;&#xFF0C;&#x81F3;&#x5C11;&#x8981;&#x4EE5;&#x63A5;&#x53E3;&#x7684;&#x5F62;&#x5F0F;&#x66B4;&#x9732;&#x4E00;&#x4E9B;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x6D41;&#x7A0B;&#xFF0C;&#x5982;patch&#x7684;url&#x83B7;&#x53D6;&#xFF0C;patch&#x7684;&#x4E0B;&#x8F7D;&#xFF0C;patch&#x6587;&#x4EF6;&#x7684;&#x6821;&#x9A8C;&#x6D41;&#x7A0B;&#xFF0C;patch&#x7684;&#x5B89;&#x88C5;&#x6D41;&#x7A0B;&#xFF0C;&#x53EF;&#x4EE5;&#x9002;&#x5F53;&#x8FDB;&#x884C;&#x6269;&#x5C55;&#x3002;&#x5426;&#x5219;&#x73B0;&#x6709;&#x7684;&#x65B9;&#x6848;&#x57FA;&#x672C;&#x4E0D;&#x53EF;&#x80FD;&#x76F4;&#x63A5;&#x8FDB;&#x884C;&#x4F7F;&#x7528;&#x3002;</p><h3 id="&#x5B98;&#x65B9;&#x65B9;&#x6848;&#x66F4;&#x65B0;&#x6D41;&#x7A0B;"><a href="#&#x5B98;&#x65B9;&#x65B9;&#x6848;&#x66F4;&#x65B0;&#x6D41;&#x7A0B;" class="headerlink" title="&#x5B98;&#x65B9;&#x65B9;&#x6848;&#x66F4;&#x65B0;&#x6D41;&#x7A0B;"></a>&#x5B98;&#x65B9;&#x65B9;&#x6848;&#x66F4;&#x65B0;&#x6D41;&#x7A0B;</h3><p>&#x5728;&#x6211;&#x4EEC;&#x8C03;&#x7528; FlutterMain.startInitialization(context) &#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x53BB;&#x5224;&#x65AD;&#x6211;&#x4EEC;&#x662F;&#x5426;&#x652F;&#x6301;&#x52A8;&#x6001;&#x4E0B;&#x53D1;&#x3002;</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">Bundle metaData = <span class="keyword">null</span>;</span><br><span class="line">try {</span><br><span class="line">    metaData = context.getPackageManager().getApplicationInfo(</span><br><span class="line">            context.getPackageName(), PackageManager.GET_META_DATA).metaData;</span><br><span class="line"></span><br><span class="line">} catch (PackageManager.NameNotFoundException e) {</span><br><span class="line">    <span class="keyword">Log</span>.e(TAG, &quot;Unable to read application info&quot;, e);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (metaData != <span class="keyword">null</span> &amp;&amp; metaData.getBoolean(&quot;DynamicPatching&quot;)) {</span><br><span class="line">    sResourceUpdater = <span class="built_in">new</span> ResourceUpdater(context);</span><br><span class="line">    // <span class="keyword">Also</span> checking <span class="keyword">for</span> ON_RESUME here since it<span class="string">&apos;s more efficient than waiting for actual</span></span><br><span class="line"><span class="string">    // onResume. Even though actual onResume is imminent when the app has just restarted,</span></span><br><span class="line"><span class="string">    // it&apos;</span>s better <span class="keyword">to</span> <span class="keyword">start</span> downloading now, <span class="keyword">in</span> parallel <span class="keyword">with</span> the rest <span class="keyword">of</span> initialization,</span><br><span class="line">    // <span class="keyword">and</span> avoid a second application <span class="keyword">restart</span> a <span class="type">bit</span> later <span class="keyword">when</span> actual onResume happens.</span><br><span class="line">    <span class="keyword">if</span> (sResourceUpdater.getDownloadMode() == ResourceUpdater.DownloadMode.ON_RESTART ||</span><br><span class="line">        sResourceUpdater.getDownloadMode() == ResourceUpdater.DownloadMode.ON_RESUME) {</span><br><span class="line">        sResourceUpdater.startUpdateDownloadOnce();</span><br><span class="line">        <span class="keyword">if</span> (sResourceUpdater.getInstallMode() == ResourceUpdater.InstallMode.<span class="keyword">IMMEDIATE</span>) {</span><br><span class="line">            sResourceUpdater.waitForDownloadCompletion();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5B83;&#x4F1A;&#x4ECE;AndroidManifest.xml&#x4E2D;&#x8BFB;&#x53D6;metaData&#x952E;&#x4E3A;DynamicPatching&#x7684;&#x503C;&#xFF0C;&#x5982;&#x679C;&#x4E3A;true&#xFF0C;&#x5C31;&#x4F1A;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;ResourceUpdater&#x5BF9;&#x8C61;&#xFF0C;&#x8D1F;&#x8D23;patch&#x7684;&#x4E0B;&#x8F7D;&#xFF0C;&#x6821;&#x9A8C;&#x7B49;&#x7B49;&#xFF0C;&#x540E;&#x7EED;&#x53EA;&#x8981;&#x8BE5;&#x5BF9;&#x8C61;&#x4E0D;&#x4E3A;null&#xFF0C;&#x90FD;&#x4F1A;&#x8FDB;&#x5165;&#x52A8;&#x6001;&#x4E0B;&#x53D1;&#x7684;&#x6D41;&#x7A0B;&#xFF0C;&#x5426;&#x5219;&#x8D70;apk&#x91CA;&#x653E;&#x6D41;&#x7A0B;&#x3002;</p><p>&#x5982;&#x679C;&#x4E0B;&#x8F7D;&#x6A21;&#x5F0F;&#x662F;ON_RESTART&#x6216;&#x8005;ON_RESUME&#xFF0C;&#x5C31;&#x4F1A;&#x6267;&#x884C;&#x4E0B;&#x8F7D;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x5982;&#x679C;&#x4E0B;&#x8F7D;&#x6A21;&#x5F0F;&#x662F;ON_RESUME&#x65F6;&#xFF0C;&#x5219;&#x6267;&#x884C;onResume&#x56DE;&#x8C03;&#x65F6;&#xFF0C;&#x4E5F;&#x4F1A;&#x6267;&#x884C;&#x4E0B;&#x8F7D;&#x3002;</p><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">void</span> <span class="title">onResume</span><span class="params">(Context context)</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (sResourceUpdater != <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">if</span> (sResourceUpdater.getDownloadMode() == ResourceUpdater.DownloadMode.ON_RESUME) {</span><br><span class="line">            sResourceUpdater.startUpdateDownloadOnce();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5C31;&#x662F;&#x65E0;&#x8BBA;patch&#x662F;&#x5426;&#x4E0B;&#x8F7D;&#x6210;&#x529F;&#x4E86;&#xFF0C;&#x6BCF;&#x6B21;&#x6267;&#x884C;startUpdateDownloadOnce&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x90FD;&#x4F1A;&#x91CD;&#x65B0;&#x53BB;&#x4E0B;&#x8F7D;&#x4E00;&#x904D;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x4E0B;&#x8F7D;&#x6A21;&#x5F0F;&#x662F;ON_RESTART&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6BCF;&#x6B21;&#x51B7;&#x542F;&#x52A8;&#x90FD;&#x4F1A;&#x53BB;&#x4E0B;&#x8F7D;&#x4E00;&#x6B21;patch&#xFF0C;&#x4E0B;&#x8F7D;&#x6A21;&#x5F0F;&#x662F;ON_RESUME&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6BCF;&#x6B21;&#x51B7;&#x542F;&#x52A8;&#x4EE5;&#x53CA;onResume&#x56DE;&#x8C03;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x90FD;&#x4F1A;&#x53BB;&#x4E0B;&#x8F7D;&#x4E00;&#x6B21;patch&#x3002;&#x8FD9;&#x91CC;&#x81F3;&#x5C11;&#x8981;&#x505A;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x91CD;&#x590D;&#x7684;&#x5224;&#x65AD;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x4E0B;&#x8F7D;&#x7684;&#x6587;&#x4EF6;md5&#x4E0E;&#x672C;&#x5730;&#x4EE5;&#x53CA;&#x5B58;&#x5728;&#x7684;&#x6587;&#x4EF6;md5&#x4E00;&#x81F4;&#xFF0C;&#x5219;&#x4E0D;&#x53BB;&#x91CD;&#x590D;&#x4E0B;&#x8F7D;&#x3002;</p><p>&#x6B64;&#x65F6;&#x5982;&#x679C;&#x5B89;&#x88C5;&#x6A21;&#x5F0F;&#x662F;&#x7ACB;&#x5373;&#x5B89;&#x88C5;&#x7684;&#x8BDD;&#xFF0C;&#x5373;IMMEDIATE&#x6A21;&#x5F0F;&#xFF0C;&#x5219;&#x4F1A;&#x963B;&#x585E;&#x7B49;&#x5F85;&#x4E0B;&#x8F7D;&#x5B8C;&#x6210;&#xFF0C;&#x5426;&#x5219;&#x4E0B;&#x6B21;&#x91CD;&#x65B0;&#x542F;&#x52A8;&#x7684;&#x65F6;&#x5019;&#x5B89;&#x88C5;&#x3002;</p><p>&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x8981;&#x60F3;&#x4F7F;&#x7528;&#x5B98;&#x65B9;&#x7684;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x9996;&#x5148;&#x9700;&#x8981;&#x5728;AndroidManifest.xml&#x4E2D;&#x58F0;&#x660E; DynamicPatching=true</p><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">&lt;<span class="built_in">application</span>&gt;</span><br><span class="line">    &lt;meta-data</span><br><span class="line">        android:<span class="built_in">name</span>=<span class="string">&quot;DynamicPatching&quot;</span></span><br><span class="line">        android:value=<span class="string">&quot;true&quot;</span> /&gt;</span><br><span class="line">&lt;/<span class="built_in">application</span>&gt;</span><br></pre></td></tr></table></figure><p>&#x5176;&#x4E2D;&#x4E0B;&#x8F7D;&#x6A21;&#x5F0F;&#x548C;&#x5B89;&#x88C5;&#x6A21;&#x5F0F;&#x4E5F;&#x662F;&#x9759;&#x6001;&#x58F0;&#x660E;&#x5728;AndroidManifest.xml&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x58F0;&#x660E;&#xFF0C;&#x9ED8;&#x8BA4;&#x7684;&#x5B89;&#x88C5;&#x6A21;&#x5F0F;&#x4E3A;ON_NEXT_RESTART&#xFF0C;&#x5373;&#x4E0B;&#x6B21;&#x5B89;&#x88C5;&#xFF0C;&#x9ED8;&#x8BA4;&#x7684;&#x4E0B;&#x8F7D;&#x6A21;&#x5F0F;&#x4E3A;ON_RESTART&#xFF0C;&#x5373;&#x4E0B;&#x6B21;&#x91CD;&#x542F;&#x4E0B;&#x8F7D;&#x3002;&#x5BF9;&#x5E94;&#x5728;AndroidManifest.xml&#x4E2D;&#x7684;&#x952E;&#x540D;&#x4E3A;PatchDownloadMode&#x548C;PatchInstallMode&#xFF0C;&#x8FD9;&#x4E5F;&#x76F4;&#x63A5;&#x5BFC;&#x81F4;&#x4E86;&#x65E0;&#x6CD5;&#x52A8;&#x6001;&#x53D8;&#x66F4;&#x67D0;&#x4E2A;patch&#x7684;&#x4E0B;&#x8F7D;&#x6A21;&#x5F0F;&#x548C;&#x5B89;&#x88C5;&#x6A21;&#x5F0F;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x662F;&#x9759;&#x6001;&#x5199;&#x6B7B;&#x5728;AndroidManifest.xml&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x660E;&#x786E;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x4EEC;&#x4E3A;&#x4EC0;&#x4E48;&#x5E0C;&#x671B;&#x80FD;&#x6839;&#x636E;&#x5355;&#x4E2A;patch&#x6539;&#x53D8;&#x4E0B;&#x8F7D;&#x548C;&#x5B89;&#x88C5;&#x6A21;&#x5F0F;&#x5462;&#xFF1F;&#x56E0;&#x4E3A;&#x4E0B;&#x53D1;patch&#x610F;&#x5473;&#x7740;bug&#xFF0C;&#x800C;&#x6709;&#x4E9B;&#x81F4;&#x547D;&#x7684;bug&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x80FD;&#x53CA;&#x65F6;&#x5F97;&#x5230;&#x66F4;&#x65B0;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x7ACB;&#x5373;&#x5B89;&#x88C5;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x542F;&#x52A8;&#x7684;&#x65F6;&#x5019;&#x963B;&#x585E;&#x53BB;&#x4E0B;&#x8F7D;&#x5B89;&#x88C5;&#xFF0C;&#x800C;&#x5BF9;&#x4E8E;&#x4E00;&#x4E9B;&#x4E00;&#x822C;&#x7684;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x80FD;&#x6CA1;&#x90A3;&#x4E48;&#x7D27;&#x6025;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x4E0B;&#x6B21;&#x91CD;&#x542F;&#x5B89;&#x88C5;&#x5373;&#x53EF;&#x3002;</p><p>&#x800C;&#x4E0B;&#x8F7D;&#x7684;url&#x5219;&#x66F4;&#x662F;&#x5947;&#x8469;&#xFF0C;&#x5185;&#x90E8;&#x5199;&#x6B7B;url&#x62FC;&#x63A5;&#x89C4;&#x5219;&#xFF0C;&#x8BF7;&#x95EE;&#x54EA;&#x4E2A;&#x516C;&#x53F8;&#x7684;&#x4E0B;&#x8F7D;url&#x662F;&#x6309;&#x7167;&#x8FD9;&#x4E2A;&#x683C;&#x5F0F;&#x7684;&#xFF1F;&#x8FD9;&#x5C31;&#x76F4;&#x63A5;&#x5BFC;&#x81F4;&#x4E86;&#x65E0;&#x6CD5;&#x4E0E;&#x73B0;&#x6709;&#x7070;&#x5EA6;&#x7CFB;&#x7EDF;&#x548C;cdn&#x8FDB;&#x884C;&#x7ED3;&#x5408;&#x4F7F;&#x7528;&#x3002;</p><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">String</span> buildUpdateDownloadURL() {</span><br><span class="line">    Bundle metaData;</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        metaData = context.getPackageManager().getApplicationInfo(</span><br><span class="line">                context.getPackageName(), PackageManager.GET_META_DATA).metaData;</span><br><span class="line"></span><br><span class="line">    } <span class="keyword">catch</span> (PackageManager.NameNotFoundException e) {</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">RuntimeException</span>(e);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (metaData == <span class="literal">null</span> || metaData.getString(<span class="string">&quot;PatchServerURL&quot;</span>) == <span class="literal">null</span>) {</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    URI uri;</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        uri = <span class="keyword">new</span> <span class="type">URI</span>(metaData.getString(<span class="string">&quot;PatchServerURL&quot;</span>) + <span class="string">&quot;/&quot;</span> + getAPKVersion() + <span class="string">&quot;.zip&quot;</span>);</span><br><span class="line"></span><br><span class="line">    } <span class="keyword">catch</span> (URISyntaxException e) {</span><br><span class="line">        Log.w(TAG, <span class="string">&quot;Invalid AndroidManifest.xml PatchServerURL: &quot;</span> + e.getMessage());</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> uri.normalize().toString();</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4ECE;&#x4EE3;&#x7801;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x4E0B;&#x8F7D;&#x7684;url&#x524D;&#x7F00;&#x6765;&#x81EA;AndroidManifest.xml&#x4E2D;&#x952E;&#x4E3A;PatchServerURL&#x7684;metaData&#xFF0C;&#x6700;&#x7EC8;&#x7684;url&#x4E3A; PatchServerURL&#x540E;&#x9762;&#x62FC;&#x63A5;versionCode.zip&#x5373;&#x4E3A;&#x6700;&#x7EC8;&#x7684;&#x4E0B;&#x8F7D;url&#x3002;&#x8FD9;&#x4E2A;&#x64CD;&#x4F5C;&#x53EF;&#x8C13;&#x9A9A;&#x5F97;&#x65E0;&#x6CD5;&#x62EF;&#x6551;&#xFF0C;&#x7B80;&#x76F4;&#x667A;&#x969C;&#x3002;</p><p>&#x5177;&#x4F53;&#x7684;&#x8BE6;&#x7EC6;&#x6D41;&#x7A0B;&#x6709;&#x5174;&#x8DA3;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x4EE3;&#x7801;&#xFF0C;&#x8FD9;&#x91CC;&#x7B80;&#x8981;&#x6982;&#x62EC;&#x4E00;&#x4E0B;&#x4E3B;&#x6D41;&#x7A0B;&#x3002;</p><ul><li>&#x521D;&#x59CB;&#x5316;&#x7684;&#x65F6;&#x5019;&#x5224;&#x65AD;&#x662F;&#x5426;&#x914D;&#x7F6E;&#x4E86;DynamicPatching=true&#xFF0C;&#x5982;&#x679C;&#x4E3A;true&#xFF0C;&#x5219;&#x8FDB;&#x5165;&#x52A8;&#x6001;&#x66F4;&#x65B0;&#x6267;&#x884C;&#x6D41;&#x7A0B;</li><li>&#x6267;&#x884C;patch&#x7684;&#x4E0B;&#x8F7D;&#x64CD;&#x4F5C;&#xFF0C;&#x5176;url&#x4E3A; PatchServerURL + &#x201C;/&#x201C; + versionCode.zip&#xFF0C;&#x4E0B;&#x8F7D;&#x7684;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#x4E3A;patch.zip.download&#xFF0C;&#x4E0B;&#x8F7D;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x91CD;&#x547D;&#x540D;&#x4E3A;patch.zip.install</li><li>&#x6821;&#x9A8C;patch.zip.install&#x6587;&#x4EF6;&#x4E2D;manifest.json&#x4E2D;&#x76F8;&#x5173;&#x503C;&#xFF0C;&#x4E3B;&#x8981;&#x4E3A;buildNumber&#x662F;&#x5426;&#x5339;&#x914D;&#xFF0C;&#x57FA;&#x7EBF;crc32&#x6821;&#x9A8C;&#x662F;&#x5426;&#x5339;&#x914D;&#xFF0C;&#x5176;&#x4E2D;crc32&#x4E3B;&#x8981;&#x8BA1;&#x7B97; isolate_snapshot_data, isolate_snapshot_instr, flutter_assets/isolate_snapshot_data &#x8FD9;&#x4E09;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x6821;&#x9A8C;&#x6210;&#x529F;&#x540E;&#xFF0C;&#x5C06;patch.zip.install&#x6587;&#x4EF6;&#x91CD;&#x540D;&#x4E3A;patch.zip&#x6587;&#x4EF6;&#x3002;</li><li>&#x6821;&#x9A8C;&#x65F6;&#x95F4;&#x6233;&#xFF0C;&#x6B64;&#x65F6;&#x7684;&#x65F6;&#x95F4;&#x6233;&#x5982;&#x679C;patch.zip&#x6587;&#x4EF6;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x4F1A;&#x628A;patchNumber&#x548C;patch.zip&#x6587;&#x4EF6;&#x6700;&#x540E;&#x4FEE;&#x6539;&#x7684;&#x65F6;&#x95F4;&#x4E00;&#x8D77;&#x52A0;&#x5165;&#x8FDB;&#x884C;&#x8BA1;&#x7B97;&#xFF0C;&#x5176;&#x6574;&#x4F53;&#x683C;&#x5F0F;&#x4E3A; res_timestamp-\$versionCode-\$lastInstallTime-\$patchNumber-\$patchFile.lastModifiedTime&#xFF0C;&#x5982;&#x679C;&#x8FC7;&#x671F;&#x4E86;&#xFF0C;&#x5219;&#x4F1A;&#x8FDB;&#x5165;patch&#x91CD;&#x65B0;&#x91CA;&#x653E;&#x7684;&#x6D41;&#x7A0B;</li><li>&#x5982;&#x679C;patch.zip&#x6587;&#x4EF6;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x8FDB;&#x5165;&#x91CA;&#x653E;&#x6D41;&#x7A0B;&#xFF0C;&#x91CA;&#x653E;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x6309;&#x6587;&#x4EF6;&#x91CA;&#x653E;&#xFF0C;&#x5982;&#x679C;&#x6587;&#x4EF6;&#x540D;&#x4EE5;.bzdiff40&#x7ED3;&#x5C3E;&#xFF0C;&#x5219;&#x5148;&#x6267;&#x884C;bspatch&#x5408;&#x6210;&#x6587;&#x4EF6;&#x518D;&#x91CA;&#x653E;&#xFF0C;&#x5426;&#x5219;&#x76F4;&#x63A5;&#x91CA;&#x653E;&#x3002;&#x6B64;&#x65F6;patch.zip&#x4E2D;&#x53EA;&#x4F1A;&#x5305;&#x542B;&#x6539;&#x53D8;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5BF9;&#x4E8E;&#x6CA1;&#x6709;&#x6539;&#x53D8;&#x7684;&#x6587;&#x4EF6;&#x5219;&#x4ECE;apk&#x4E2D;&#x8FDB;&#x884C;&#x91CA;&#x653E;&#x3002;</li><li>&#x4ECE;&#x5B89;&#x88C5;&#x7684;apk&#x6587;&#x4EF6;&#x4E2D;&#x91CA;&#x653E;&#x5269;&#x4F59;&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x4E0D;&#x91CA;&#x653E;&#x3002;</li><li>&#x91CD;&#x65B0;&#x521B;&#x5EFA;&#x6700;&#x65B0;&#x7684;&#x65F6;&#x95F4;&#x6233;&#x6587;&#x4EF6;&#xFF0C;&#x8868;&#x793A;&#x6700;&#x65B0;&#x6587;&#x4EF6;&#x91CA;&#x653E;&#x6210;&#x529F;&#x3002;</li><li>&#x8FDB;&#x5165;so&#x52A0;&#x8F7D;&#x6D41;&#x7A0B;&#xFF0C;&#x5982;&#x679C;&#x91CA;&#x653E;&#x7684;&#x4EA7;&#x7269;&#x4E2D;&#x5305;&#x542B;so&#xFF0C;&#x5219;&#x4ECE;&#x91CA;&#x653E;&#x7684;&#x4EA7;&#x7269;&#x4E2D;&#x8FDB;&#x884C;&#x52A0;&#x8F7D;&#xFF0C;&#x5426;&#x5219;&#x4ECE;apk&#x5B89;&#x88C5;&#x65F6;&#x662F;&#x5426;&#x7684;so&#x8FDB;&#x884C;&#x52A0;&#x8F7D;&#x3002;</li></ul><p>&#x603B;&#x7684;&#x6765;&#x770B;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x590D;&#x7528;&#x5B98;&#x65B9;&#x7684;&#x8FD9;&#x5957;&#x6D41;&#x7A0B;&#xFF0C;&#x6211;&#x4EEC;&#x81F3;&#x5C11;&#x9700;&#x8981;&#x89E3;&#x51B3;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#x95EE;&#x9898;</p><ul><li>patch&#x4E0B;&#x8F7D;&#x7684;url&#x53EF;&#x81EA;&#x5B9A;&#x4E49;</li><li>patch&#x7684;&#x4E0B;&#x8F7D;&#x6A21;&#x5F0F;&#x548C;&#x5B89;&#x88C5;&#x6A21;&#x5F0F;&#x53EF;&#x6839;&#x636E;patch&#x6587;&#x4EF6;&#x7684;&#x7C92;&#x5EA6;&#x52A8;&#x6001;&#x53D8;&#x5316;</li><li>patch&#x9632;&#x91CD;&#x590D;&#x4E0B;&#x8F7D;&#x673A;&#x5236;&#xFF0C;&#x8282;&#x7EA6;&#x7528;&#x6237;&#x6D41;&#x91CF;</li><li>patch&#x7B7E;&#x540D;&#x6821;&#x9A8C;&#x673A;&#x5236;&#xFF0C;&#x4FDD;&#x969C;&#x5B89;&#x5168;&#x6027;</li></ul><h3 id="&#x5B98;&#x65B9;&#x65B9;&#x6848;patch&#x6784;&#x5EFA;"><a href="#&#x5B98;&#x65B9;&#x65B9;&#x6848;patch&#x6784;&#x5EFA;" class="headerlink" title="&#x5B98;&#x65B9;&#x65B9;&#x6848;patch&#x6784;&#x5EFA;"></a>&#x5B98;&#x65B9;&#x65B9;&#x6848;patch&#x6784;&#x5EFA;</h3><p>&#x4EE5;&#x4E0A;&#x662F;&#x5BA2;&#x6237;&#x7AEF;&#x7684;patch&#x5B89;&#x88C5;&#x6D41;&#x7A0B;&#xFF0C;&#x90A3;&#x4E48;&#x5B98;&#x65B9;&#x7684;&#x65B9;&#x6848;&#x5982;&#x4F55;&#x6784;&#x5EFA;patch&#x5462;&#xFF1F;</p><p>&#x5728;&#x6784;&#x5EFA;patch&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x5148;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x57FA;&#x7EBF;&#x6587;&#x4EF6;&#x3002;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x5B98;&#x65B9;&#x7684;&#x65B9;&#x6848;&#xFF0C;&#x53EA;&#x80FD;&#x57FA;&#x4E8E;dynamicRelease&#x7684;buildType&#x8FDB;&#x884C;&#x6784;&#x5EFA;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x5728;app&#x4E2D;&#x52A0;&#x5165;&#x8BE5;buildType</p><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">buildTypes</span> <span class="string">{</span></span><br><span class="line">    <span class="attr">dynamicRelease{</span></span><br><span class="line">        <span class="attr">initWith</span> <span class="string">release</span></span><br><span class="line">    <span class="attr">}</span></span><br><span class="line"><span class="attr">}</span></span><br></pre></td></tr></table></figure><p>&#x6784;&#x5EFA;&#x57FA;&#x7EBF;&#x6587;&#x4EF6;</p><figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">flutter</span> <span class="comment">build</span> <span class="comment">apk</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">release</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">dynamic</span></span><br></pre></td></tr></table></figure><p>&#x5C06;&#x6784;&#x5EFA;&#x4EA7;&#x751F;&#x7684;apk&#x6587;&#x4EF6;&#x590D;&#x5236;&#x51FA;&#x6765;&#xFF0C;&#x5047;&#x5982;&#x6B64;&#x65F6;&#x7684;apk&#x7684;versionCode&#x4E3A;1&#xFF0C;&#x5219;&#x6211;&#x4EEC;&#x5C06;&#x5176;&#x62F7;&#x8D1D;&#x5230;flutter&#x5DE5;&#x7A0B;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x4E0E;.android&#x540C;&#x7EA7;&#x76EE;&#x5F55;&#x7684;.baseline/1.apk&#xFF0C;&#x5982;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2019/03/22/Flutter-%E5%8A%A8%E6%80%81%E5%8C%96%E6%8E%A2%E7%B4%A2/baseline.png" alt="baseline.png"></p><p>&#x4FEE;&#x6539;flutter&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C;patch&#x7684;&#x6784;&#x5EFA;&#xFF0C;&#x6B64;&#x65F6;&#x53EA;&#x80FD;&#x4FEE;&#x6539;flutter&#x4EE3;&#x7801;&#xFF0C;&#x4E0D;&#x80FD;&#x4FEE;&#x6539;&#x5D4C;&#x5165;&#x5C42;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5982;Java&#xFF0C;&#x5E76;&#x4E14;&#x4F1A;&#x57FA;&#x4E8E;.baseline/\$versonCode.apk&#x4E3A;&#x57FA;&#x7EBF;&#x6587;&#x4EF6;&#xFF0C;&#x5F53;&#x7136;&#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x53C2;&#x6570;&#x4F20;&#x5165;&#x57FA;&#x7EBF;&#x6587;&#x4EF6;&#xFF0C;&#x4F46;&#x662F;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x7684;&#x8DEF;&#x5F84;&#x89C4;&#x5219;&#xFF0C;&#x4FEE;&#x6539;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#x6784;&#x5EFA;</p><figure class="highlight brainfuck"><table><tr><td class="code"><pre><span class="line"><span class="comment">flutter</span> <span class="comment">build</span> <span class="comment">apk</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">release</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">dynamic</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">patch</span></span><br></pre></td></tr></table></figure><p>&#x770B;&#x5230;&#x5982;&#x4E0B;&#x8F93;&#x51FA;&#xFF0C;&#x5C31;&#x8868;&#x793A;&#x6784;&#x5EFA;&#x6210;&#x529F;&#x4E86;&#xFF0C;&#x6784;&#x5EFA;&#x6210;&#x529F;&#x7684;patch&#x4F4D;&#x4E8E;flutter&#x5DE5;&#x7A0B;&#x76EE;&#x5F55;&#x4E0B;public/\$versionCode.zip</p><p><img src="/2019/03/22/Flutter-%E5%8A%A8%E6%80%81%E5%8C%96%E6%8E%A2%E7%B4%A2/build_patch.png" alt="build_patch.png"></p><p>&#x4EA7;&#x751F;&#x7684;patch&#x6587;&#x4EF6;&#x5927;&#x81F4;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF0C;&#x5305;&#x542B;&#x4E86;manifest.json&#x6587;&#x4EF6;&#xFF0C;&#x91CC;&#x9762;&#x542B;&#x6709;buildNumber&#xFF0C;patchNumber&#xFF0C;&#x4EE5;&#x53CA;&#x57FA;&#x7EBF;&#x76F8;&#x5173;&#x6587;&#x4EF6;&#x7684;crc32&#x503C;&#xFF0C;&#x8FD8;&#x6709;&#x5BF9;&#x5E94;&#x7684;&#x6539;&#x53D8;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x67D0;&#x4E9B;&#x7279;&#x5B9A;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x4F1A;&#x4F7F;&#x7528;bsdiff&#x7B97;&#x6CD5;&#x8FDB;&#x884C;&#x5DEE;&#x91CF;&#xFF0C;&#x4EA7;&#x751F;.bzdiff40&#x6587;&#x4EF6;&#x3002;</p><p><img src="/2019/03/22/Flutter-%E5%8A%A8%E6%80%81%E5%8C%96%E6%8E%A2%E7%B4%A2/patch_file.png" alt="patch_file.png"></p><p>&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x601D;&#x8003;&#x4E24;&#x4E2A;&#x95EE;&#x9898;</p><ul><li>&#x6211;&#x4EEC;&#x80FD;&#x5426;&#x76F4;&#x63A5;&#x4F7F;&#x7528;gradle&#x547D;&#x4EE4;&#x6784;&#x5EFA;&#x51FA;patch&#x6587;&#x4EF6;&#xFF1F;</li><li>&#x539F;&#x751F;&#x4E0E;Flutter&#x6DF7;&#x5408;&#x5F00;&#x53D1;&#x7684;&#x5E94;&#x7528;&#x80FD;&#x5426;&#x6784;&#x5EFA;&#x51FA;patch&#x6587;&#x4EF6;&#xFF1F;</li></ul><p>&#x5BF9;&#x4E8E;&#x4EE5;&#x4E0A;&#x4E24;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x7B54;&#x6848;&#x90FD;&#x662F;&#x5426;&#x5B9A;&#x7684;&#xFF08;&#x5F53;&#x7136;&#x4E5F;&#x6709;&#x53EF;&#x80FD;&#x662F;&#x6211;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x6B63;&#x786E;&#x7684;&#x65B9;&#x5F0F;&#xFF09;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;</p><p>&#x5BF9;&#x4E8E;&#x7B2C;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;gradle&#x547D;&#x4EE4;&#x76F4;&#x63A5;&#x6784;&#x5EFA;&#x51FA;patch&#x6587;&#x4EF6;&#x5462;&#xFF1F;&#x56E0;&#x4E3A;flutter&#x7684;patch&#x6587;&#x4EF6;&#x662F;&#x57FA;&#x4E8E;apk&#x8FDB;&#x884C;&#x4EA7;&#x751F;&#x7684;&#xFF0C;&#x5176;&#x751F;&#x6210;&#x7684;patch&#x7684;&#x4EE3;&#x7801;&#x903B;&#x8F91;&#x4F4D;&#x4E8E; /path/to/flutter/packages/flutter_tools/lib/src/android/gradle.dart&#xFF0C;&#x8BE5;&#x6587;&#x4EF6;&#x7684;&#x6267;&#x884C;&#x5165;&#x53E3;&#x6B63;&#x662F;&#x5FC5;&#x987B;&#x4F7F;&#x7528;flutter&#x547D;&#x4EE4;&#x624D;&#x4F1A;&#x8FDB;&#x5165;&#xFF0C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;gradle&#x547D;&#x4EE4;&#x8D70;&#x7684;&#x662F;&#x53E6;&#x4E00;&#x4E2A;&#x5206;&#x652F;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5E76;&#x4E0D;&#x4F1A;&#x8FDB;&#x5165;&#x751F;&#x6210;patch&#x6587;&#x4EF6;&#x7684;&#x6D41;&#x7A0B;&#x3002;gradle.dart&#x751F;&#x6210;patch&#x7684;&#x4EE3;&#x7801;&#x903B;&#x8F91;&#x5927;&#x81F4;&#x5982;&#x4E0B;</p><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> AndroidApk package = AndroidApk.fromApk(apkFile);</span><br><span class="line"><span class="keyword">final</span> Directory baselineDir = fs.directory(buildInfo.baselineDir);</span><br><span class="line"><span class="keyword">final</span> File baselineApkFile = baselineDir.childFile(<span class="string">&apos;<span class="subst">${package.versionCode}</span>.apk&apos;</span>);</span><br><span class="line"><span class="keyword">if</span> (!baselineApkFile.existsSync())</span><br><span class="line">  throwToolExit(<span class="string">&apos;Error: Could not find baseline package <span class="subst">${baselineApkFile.path}</span>.&apos;</span>);</span><br><span class="line"></span><br><span class="line">printStatus(<span class="string">&apos;Found baseline package <span class="subst">${baselineApkFile.path}</span>.&apos;</span>);</span><br><span class="line">printStatus(<span class="string">&apos;Creating dynamic patch...&apos;</span>);</span><br><span class="line"><span class="keyword">final</span> Archive newApk = ZipDecoder().decodeBytes(apkFile.readAsBytesSync());</span><br><span class="line"><span class="keyword">final</span> Archive oldApk = ZipDecoder().decodeBytes(baselineApkFile.readAsBytesSync());</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> Archive update = Archive();</span><br><span class="line"><span class="keyword">for</span> (ArchiveFile newFile <span class="keyword">in</span> newApk) {</span><br><span class="line">  <span class="keyword">if</span> (!newFile.isFile)</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Ignore changes to signature manifests.</span></span><br><span class="line">  <span class="keyword">if</span> (newFile.name.startsWith(<span class="string">&apos;META-INF/&apos;</span>))</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> ArchiveFile oldFile = oldApk.findFile(newFile.name);</span><br><span class="line">  <span class="keyword">if</span> (oldFile != <span class="keyword">null</span> &amp;&amp; oldFile.crc32 == newFile.crc32)</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Only allow certain changes.</span></span><br><span class="line">  <span class="keyword">if</span> (!newFile.name.startsWith(<span class="string">&apos;assets/&apos;</span>) &amp;&amp;</span><br><span class="line">      !(buildInfo.usesAot &amp;&amp; newFile.name.endsWith(<span class="string">&apos;.so&apos;</span>)))</span><br><span class="line">    throwToolExit(<span class="string">&quot;Error: Dynamic patching doesn&apos;t support changes to <span class="subst">${newFile.name}</span>.&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> name = newFile.name;</span><br><span class="line">  <span class="keyword">if</span> (name.contains(<span class="string">&apos;_snapshot_&apos;</span>) || name.endsWith(<span class="string">&apos;.so&apos;</span>)) {</span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; diff = bsdiff(oldFile.content, newFile.content);</span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">int</span> ratio = <span class="number">100</span> * diff.length ~/ newFile.content.length;</span><br><span class="line">    printStatus(<span class="string">&apos;Deflated <span class="subst">$name</span> by <span class="subst">${ratio == <span class="number">0</span> ? <span class="number">99</span> : <span class="number">100</span> - ratio}</span>%&apos;</span>);</span><br><span class="line">    update.addFile(ArchiveFile(name + <span class="string">&apos;.bzdiff40&apos;</span>, diff.length, diff));</span><br><span class="line">  } <span class="keyword">else</span> {</span><br><span class="line">    update.addFile(ArchiveFile(name, newFile.content.length, newFile.content));</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">File updateFile;</span><br><span class="line"><span class="keyword">if</span> (buildInfo.patchNumber != <span class="keyword">null</span>) {</span><br><span class="line">  updateFile = fs.directory(buildInfo.patchDir)</span><br><span class="line">      .childFile(<span class="string">&apos;<span class="subst">${package.versionCode}</span>-<span class="subst">${buildInfo.patchNumber}</span>.zip&apos;</span>);</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">  updateFile = fs.directory(buildInfo.patchDir)</span><br><span class="line">      .childFile(<span class="string">&apos;<span class="subst">${package.versionCode}</span>.zip&apos;</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (update.files.isEmpty) {</span><br><span class="line">  printStatus(<span class="string">&apos;No changes detected, creating rollback patch.&apos;</span>);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; checksumFiles = &lt;<span class="built_in">String</span>&gt;[</span><br><span class="line">  <span class="string">&apos;assets/isolate_snapshot_data&apos;</span>,</span><br><span class="line">  <span class="string">&apos;assets/isolate_snapshot_instr&apos;</span>,</span><br><span class="line">  <span class="string">&apos;assets/flutter_assets/isolate_snapshot_data&apos;</span>,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="built_in">int</span> baselineChecksum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">String</span> fn <span class="keyword">in</span> checksumFiles) {</span><br><span class="line">  <span class="keyword">final</span> ArchiveFile oldFile = oldApk.findFile(fn);</span><br><span class="line">  <span class="keyword">if</span> (oldFile != <span class="keyword">null</span>)</span><br><span class="line">    baselineChecksum = getCrc32(oldFile.content, baselineChecksum);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (baselineChecksum == <span class="number">0</span>)</span><br><span class="line">  throwToolExit(<span class="string">&apos;Error: Could not find baseline VM snapshot.&apos;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="keyword">dynamic</span>&gt; manifest = &lt;<span class="built_in">String</span>, <span class="keyword">dynamic</span>&gt;{</span><br><span class="line">  <span class="string">&apos;baselineChecksum&apos;</span>: baselineChecksum,</span><br><span class="line">  <span class="string">&apos;buildNumber&apos;</span>: package.versionCode,</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (buildInfo.patchNumber != <span class="keyword">null</span>) {</span><br><span class="line">  manifest.addAll(&lt;<span class="built_in">String</span>, <span class="keyword">dynamic</span>&gt;{</span><br><span class="line">    <span class="string">&apos;patchNumber&apos;</span>: buildInfo.patchNumber,</span><br><span class="line">  });</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> JsonEncoder encoder = JsonEncoder.withIndent(<span class="string">&apos;  &apos;</span>);</span><br><span class="line"><span class="keyword">final</span> <span class="built_in">String</span> manifestJson = encoder.convert(manifest);</span><br><span class="line">update.addFile(ArchiveFile(<span class="string">&apos;manifest.json&apos;</span>, manifestJson.length, manifestJson.codeUnits));</span><br><span class="line"></span><br><span class="line">updateFile.parent.createSync(recursive: <span class="keyword">true</span>);</span><br><span class="line">updateFile.writeAsBytesSync(ZipEncoder().encode(update), flush: <span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">final</span> <span class="built_in">String</span> patchSize = getSizeAsMB(updateFile.lengthSync());</span><br><span class="line">printStatus(<span class="string">&apos;Created dynamic patch <span class="subst">${updateFile.path}</span> (<span class="subst">$patchSize</span>).&apos;</span>);</span><br></pre></td></tr></table></figure><p>&#x5177;&#x4F53;&#x6D41;&#x7A0B;&#x5176;&#x5B9E;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x6BD4;&#x8F83;&#x7279;&#x5B9A;&#x6587;&#x4EF6;&#xFF0C;&#x5C06;&#x6539;&#x53D8;&#x7684;&#x6587;&#x4EF6;&#x6253;&#x5165;patch&#x5305;&#xFF0C;&#x90E8;&#x5206;&#x7279;&#x6B8A;&#x6587;&#x4EF6;&#x4F7F;&#x7528;bsdiff&#x8FDB;&#x884C;&#x5DEE;&#x91CF;&#x51CF;&#x5C0F;&#x5305;&#x5927;&#x5C0F;&#xFF0C;&#x6700;&#x540E;&#x751F;&#x6210;manifest.json&#x6587;&#x4EF6;&#xFF0C;&#x4EA7;&#x751F;patch&#x5305;&#x3002;</p><p>&#x4ECE;&#x4EE5;&#x4E0A;&#x6D41;&#x7A0B;&#x6211;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x6574;&#x4E2A;patch&#x5305;&#x867D;&#x7136;&#x6709;crc32&#x7684;&#x57FA;&#x7EBF;&#x6821;&#x9A8C;&#xFF0C;&#x4F46;&#x662F;&#x5E76;&#x6CA1;&#x6709;&#x5BF9;patch&#x5305;&#x8FDB;&#x884C;&#x7B7E;&#x540D;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x98CE;&#x9669;&#x70B9;&#xFF0C;&#x5BB9;&#x6613;&#x88AB;&#x4E0D;&#x6CD5;&#x5206;&#x5B50;&#x5229;&#x7528;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x7B2C;&#x4E8C;&#x4E2A;&#x95EE;&#x9898; &#x539F;&#x751F;&#x4E0E;Flutter&#x6DF7;&#x5408;&#x5F00;&#x53D1;&#x7684;&#x5E94;&#x7528;&#x80FD;&#x5426;&#x6784;&#x5EFA;&#x51FA;patch&#x6587;&#x4EF6;&#xFF0C;&#x5176;&#x5B9E;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x7B54;&#x6848;&#x662F;&#x57FA;&#x4E8E;&#x7B2C;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#xFF0C;&#x6DF7;&#x5408;&#x5F00;&#x53D1;&#x7684;&#x5E94;&#x7528;&#xFF0C;&#x4E00;&#x822C;&#x6253;&#x5305;&#x4E0D;&#x4F1A;&#x76F4;&#x63A5;&#x57FA;&#x4E8E;flutter&#x547D;&#x4EE4;&#x6253;&#x5305;&#xFF0C;&#x800C;&#x662F;&#x5148;&#x57FA;&#x4E8E;flutter&#x547D;&#x4EE4;&#x6253;&#x5305;&#x51FA;&#x76F8;&#x5173;flutter&#x4EA7;&#x7269;&#xFF0C;&#x7136;&#x540E;&#x548C;&#x6D89;&#x53CA;&#x5230;&#x7684;Android&#x4EE3;&#x7801;&#x4E00;&#x8D77;&#x6253;&#x5305;&#x6210;aar&#x6587;&#x4EF6;&#xFF0C;&#x53D1;&#x5E03;&#x5230;&#x8FDC;&#x7A0B;maven&#x4ED3;&#x5E93;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x539F;&#x751F;&#x5E94;&#x7528;&#x4FA7;&#x901A;&#x8FC7;gradle&#x8FDC;&#x7A0B;&#x4F9D;&#x8D56;&#x8FDB;&#x884C;&#x6784;&#x5EFA;&#x3002;</p><p>&#x6240;&#x4EE5;&#x95EE;&#x9898;&#x5F88;&#x660E;&#x786E;&#xFF0C;&#x6700;&#x7EC8;&#x6DF7;&#x5408;&#x5F00;&#x53D1;&#x7684;&#x5E94;&#x7528;&#x6253;&#x5305;&#x80AF;&#x5B9A;&#x662F;&#x57FA;&#x4E8E;gradle&#x547D;&#x4EE4;&#xFF0C;&#x800C;&#x975E;flutter&#x547D;&#x4EE4;&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x4E8E;&#x76EE;&#x524D;patch&#x53EA;&#x80FD;&#x57FA;&#x4E8E;flutter&#x547D;&#x4EE4;&#x6784;&#x5EFA;&#xFF0C;&#x6240;&#x4EE5;&#x6DF7;&#x5408;&#x5F00;&#x53D1;&#x7684;&#x5E94;&#x7528;&#x76EE;&#x524D;&#x65E0;&#x6CD5;&#x6784;&#x5EFA;patch&#x3002;</p><p>&#x8FD9;&#x4E24;&#x4E2A;&#x95EE;&#x9898;&#x4E5F;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5373;&#x9700;&#x8981;&#x63D0;&#x4F9B;&#x4E00;&#x5957;&#x6D41;&#x7A0B;&#xFF0C;&#x4F7F;&#x7528;gradle&#x547D;&#x4EE4;&#x8FDB;&#x884C;&#x6253;&#x5305;&#xFF0C;&#x4ECE;&#x800C;&#x652F;&#x6301;&#x6DF7;&#x5408;&#x5F00;&#x53D1;&#x7684;&#x5E94;&#x7528;&#x3002;</p><h3 id="&#x7ED9;Flutter&#x6253;Call"><a href="#&#x7ED9;Flutter&#x6253;Call" class="headerlink" title="&#x7ED9;Flutter&#x6253;Call"></a>&#x7ED9;Flutter&#x6253;Call</h3><h4 id="&#x57FA;&#x4E8E;Gradle&#x7684;patch&#x6784;&#x5EFA;"><a href="#&#x57FA;&#x4E8E;Gradle&#x7684;patch&#x6784;&#x5EFA;" class="headerlink" title="&#x57FA;&#x4E8E;Gradle&#x7684;patch&#x6784;&#x5EFA;"></a>&#x57FA;&#x4E8E;Gradle&#x7684;patch&#x6784;&#x5EFA;</h4><p>&#x4ECE;Dart&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;flutter&#x7684;patch&#x6587;&#x4EF6;&#x6784;&#x5EFA;&#x5176;&#x5B9E;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x8981;&#x5BF9;&#x6BD4;&#x5DEE;&#x5F02;&#x6587;&#x4EF6;&#xFF0C;&#x7279;&#x5B9A;&#x6587;&#x4EF6;&#x751F;&#x6210;bsdiff&#x5DEE;&#x5206;&#x6587;&#x4EF6;&#xFF0C;&#x6839;&#x636E;&#x57FA;&#x7EBF;&#x5305;&#x751F;&#x6210;manifest.json&#x6587;&#x4EF6;&#xFF0C;&#x6253;&#x5305;&#x6210;zip&#x6587;&#x4EF6;&#x5373;&#x53EF;&#xFF0C;&#x56E0;&#x6B64;&#x57FA;&#x4E8E;gradle&#x7684;patch&#x6784;&#x5EFA;&#x5176;&#x5B9E;&#x53D8;&#x5F97;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x8981;&#x4EFF;&#x9020;dart&#x4EE3;&#x7801;&#xFF0C;&#x57FA;&#x4E8E;gradle&#x5B9E;&#x73B0;&#x4E00;&#x5957;patch&#x6784;&#x5EFA;&#x6D41;&#x7A0B;&#x5373;&#x53EF;&#xFF0C;&#x53EA;&#x8981;&#x8F93;&#x5165;&#x57FA;&#x7EBF;apk&#x548C;&#x65B0;&#x7684;apk&#xFF0C;&#x5C31;&#x80FD;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;patch&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x6B63;&#x662F;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x8FBE;&#x5230;&#x7684;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x5F3A;&#x4F9D;&#x8D56;&#x4E8E;Flutter&#x73AF;&#x5883;&#x3002;</p><p>Flutter&#x7684;patch&#x6709;&#x90E8;&#x5206;&#x6587;&#x4EF6;&#x662F;&#x57FA;&#x4E8E;bsdiff&#x7684;&#xFF0C;&#x8FD9;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x590D;&#x7528;tencent&#x7684;tinker&#x4E2D;&#x7684;BSDiff&#x7C7B;&#xFF0C;&#x89C1; <a href="https://github.com/Tencent/tinker/blob/master/third-party/bsdiff-util/src/main/java/com/tencent/tinker/bsdiff/BSDiff.java" target="_blank" rel="noopener">BSDiff.java</a></p><p>&#x4F46;&#x662F;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;bsdiff control block&#x4E2D;&#x51E0;&#x4E2A;&#x5B57;&#x6BB5;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x957F;&#x5EA6;&#x95EE;&#x9898;&#xFF0C;&#x67E5;&#x770B;&#x4E86;&#x4E00;&#x4E9B;&#x5B9E;&#x73B0;&#xFF0C;&#x6709;&#x4E9B;&#x5730;&#x65B9;&#x8FD9;&#x51E0;&#x4E2A;&#x5B57;&#x6BB5;&#x5360;&#x7528;4&#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x6709;&#x4E9B;&#x5730;&#x65B9;&#x8FD9;&#x51E0;&#x4E2A;&#x5B57;&#x6BB5;&#x5360;&#x7528;8&#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x800C;tinker&#x4E2D;&#x7684;&#x5B9E;&#x73B0;&#x8FD9;&#x51E0;&#x4E2A;&#x5B57;&#x6BB5;&#x5360;&#x7528;&#x7684;&#x662F;4&#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x4F46;&#x662F;Flutter&#x4E2D;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x8FD9;&#x51E0;&#x4E2A;&#x5B57;&#x6BB5;&#x5360;&#x7528;&#x7684;&#x662F;8&#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x76F4;&#x63A5;&#x628A;Tinker&#x4E2D;&#x7684;&#x7C7B;&#x62FF;&#x6765;&#x4F7F;&#x7528;&#x7684;&#x8BDD;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x5408;&#x6210;&#x7684;&#x6587;&#x4EF6;&#x7684;&#x65F6;&#x5019;&#x6587;&#x4EF6;&#x975E;&#x6CD5;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x505A;&#x4E24;&#x4E2A;&#x4FEE;&#x6539;&#x3002;</p><p>&#x7B2C;&#x4E00;&#x4E2A;&#x662F;Magic Bytes&#x7684;&#x4FEE;&#x6539;&#xFF0C;&#x5C06;&#x5176;&#x4ECE;MicroMsg&#x4FEE;&#x6539;&#x4E3A;BZDIFF40&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">byte</span>[] MAGIC_BYTES = <span class="string">&quot;BZDIFF40&quot;</span>.getBytes();</span><br></pre></td></tr></table></figure><p>&#x7B2C;&#x4E8C;&#x4E2A;&#x5C31;&#x662F;&#x5C06;&#x4E0A;&#x9762;&#x8BF4;&#x5230;&#x7684;&#x51E0;&#x4E2A;&#x5B57;&#x6BB5;&#x4ECE;4&#x5B57;&#x8282;&#x4FEE;&#x6539;&#x4E3A;8&#x5B57;&#x8282;&#xFF0C;&#x627E;&#x5230;&#x5982;&#x4E0B;&#x4EE3;&#x7801;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Write control block entry (3 x int)</span></span><br><span class="line">dataOut.write<span class="constructor">Int(<span class="params">lenFromOld</span>)</span>;  <span class="comment">// oldBuf</span></span><br><span class="line">dataOut.write<span class="constructor">Int((<span class="params">scan</span> - <span class="params">lenb</span>)</span> - (lastscan + lenFromOld));  <span class="comment">// diffBufextraBlock</span></span><br><span class="line">dataOut.write<span class="constructor">Int((<span class="params">pos</span>.<span class="params">value</span> - <span class="params">lenb</span>)</span> - (lastpos + lenFromOld));  <span class="comment">// oldBuf</span></span><br></pre></td></tr></table></figure><p>&#x5C06;&#x5176;&#x4FEE;&#x6539;&#x4E3A;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Write control block entry (3 x int)</span></span><br><span class="line">dataOut.write<span class="constructor">Long(<span class="params">lenFromOld</span>)</span>;  <span class="comment">// oldBuf</span></span><br><span class="line">dataOut.write<span class="constructor">Long((<span class="params">scan</span> - <span class="params">lenb</span>)</span> - (lastscan + lenFromOld));  <span class="comment">// diffBufextraBlock</span></span><br><span class="line">dataOut.write<span class="constructor">Long((<span class="params">pos</span>.<span class="params">value</span> - <span class="params">lenb</span>)</span> - (lastpos + lenFromOld));  <span class="comment">// oldBuf</span></span><br></pre></td></tr></table></figure><p>&#x4FEE;&#x6539;&#x5B8C;&#x6210;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x4E86;&#x3002;</p><p>&#x540E;&#x9762;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x4EFF;&#x9020;Dart&#x4EE3;&#x7801;&#xFF0C;&#x7528;groovy&#x91CD;&#x5199;&#x4E00;&#x4E0B;&#x5373;&#x53EF;&#xFF0C;&#x5177;&#x4F53;&#x4EE3;&#x7801;&#x5927;&#x81F4;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">newApk.entries<span class="literal">()</span>.each {ZipEntry newFile -&gt;</span><br><span class="line">    <span class="keyword">if</span> (newFile.is<span class="constructor">Directory()</span>) {</span><br><span class="line">        return</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// Ignore changes to signature manifests.</span></span><br><span class="line">    <span class="keyword">if</span> (newFile.get<span class="constructor">Name()</span>.starts<span class="constructor">With(&apos;META-INF<span class="operator">/</span>&apos;)</span>) {</span><br><span class="line">        return</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    ZipEntry oldFile = oldApk.get<span class="constructor">Entry(<span class="params">newFile</span>.<span class="params">getName</span>()</span>)</span><br><span class="line">    <span class="keyword">if</span> (oldFile != null<span class="operator"> &amp;&amp; </span>oldFile.crc<span class="operator"> == </span>newFile.crc) {</span><br><span class="line">        return</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    boolean usesAot = variant.get<span class="constructor">Name()</span><span class="operator"> == </span>&apos;profile&apos;<span class="operator"> || </span>variant.get<span class="constructor">Name()</span><span class="operator"> == </span>&apos;release&apos;</span><br><span class="line">    <span class="comment">// Only allow certain changes.</span></span><br><span class="line">    <span class="keyword">if</span> (!newFile.get<span class="constructor">Name()</span>.starts<span class="constructor">With(&apos;<span class="params">assets</span><span class="operator">/</span>&apos;)</span> &amp;&amp;</span><br><span class="line">            !(usesAot<span class="operator"> &amp;&amp; </span>newFile.get<span class="constructor">Name()</span>.ends<span class="constructor">With(&apos;.<span class="params">so</span>&apos;)</span>)) {</span><br><span class="line">        <span class="keyword">if</span> (ignoreChanges) {</span><br><span class="line">            return</span><br><span class="line">        }</span><br><span class="line">        throw <span class="keyword">new</span> <span class="constructor">GradleException(<span class="string">&quot;Error: Dynamic patching doesn&apos;t support changes to ${newFile.getName()}.&quot;</span>)</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    final String name = newFile.get<span class="constructor">Name()</span></span><br><span class="line">    <span class="keyword">if</span> (name.contains(<span class="string">&quot;_snapshot_&quot;</span>)<span class="operator"> || </span>name.ends<span class="constructor">With(<span class="string">&quot;.so&quot;</span>)</span>) {</span><br><span class="line">        byte<span class="literal">[]</span> oldBytes = oldApk.get<span class="constructor">InputStream(<span class="params">new</span> ZipEntry(<span class="params">name</span>)</span>).<span class="built_in">bytes</span></span><br><span class="line">        byte<span class="literal">[]</span> newBytes = newApk.get<span class="constructor">InputStream(<span class="params">new</span> ZipEntry(<span class="params">name</span>)</span>).<span class="built_in">bytes</span></span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">FileUtils</span>.</span></span>write<span class="constructor">ByteArrayToFile(<span class="params">new</span> File(<span class="params">patchDir</span>, <span class="params">name</span> + &apos;.<span class="params">bzdiff40</span>&apos;)</span>, <span class="module-access"><span class="module"><span class="identifier">BSDiff</span>.</span></span>bsdiff(oldBytes, newBytes))</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">FileUtils</span>.</span></span>write<span class="constructor">ByteArrayToFile(<span class="params">new</span> File(<span class="params">patchDir</span>, <span class="params">name</span>)</span>, newApk.get<span class="constructor">InputStream(<span class="params">newFile</span>)</span>.<span class="built_in">bytes</span>)</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">final List&lt;String&gt; checksumFiles = <span class="literal">[</span></span><br><span class="line"><span class="literal">        &apos;<span class="identifier">assets</span><span class="operator">/</span><span class="identifier">isolate_snapshot_data</span>&apos;,</span></span><br><span class="line"><span class="literal">        &apos;<span class="identifier">assets</span><span class="operator">/</span><span class="identifier">isolate_snapshot_instr</span>&apos;,</span></span><br><span class="line"><span class="literal">        &apos;<span class="identifier">assets</span><span class="operator">/</span><span class="identifier">flutter_assets</span><span class="operator">/</span><span class="identifier">isolate_snapshot_data</span>&apos;,</span></span><br><span class="line"><span class="literal">]</span></span><br><span class="line">CRC32 checksum = <span class="keyword">new</span> <span class="constructor">CRC32()</span></span><br><span class="line">for (String fn <span class="keyword">in</span> checksumFiles) {</span><br><span class="line">    final ZipEntry oldFile = oldApk.get<span class="constructor">Entry(<span class="params">fn</span>)</span></span><br><span class="line">    <span class="keyword">if</span> (oldFile != null) {</span><br><span class="line">        checksum.update(oldApk.get<span class="constructor">InputStream(<span class="params">oldFile</span>)</span>.<span class="built_in">bytes</span>)</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line">long baselineChecksum = checksum.get<span class="constructor">Value()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def variantData = variant.get<span class="constructor">MetaClass()</span>.get<span class="constructor">Property(<span class="params">variant</span>, &apos;<span class="params">variantData</span>&apos;)</span></span><br><span class="line">def buildTools = variantData.get<span class="constructor">Scope()</span>.get<span class="constructor">GlobalScope()</span>.get<span class="constructor">AndroidBuilder()</span>.get<span class="constructor">TargetInfo()</span>.get<span class="constructor">BuildTools()</span></span><br><span class="line">def stdout = <span class="keyword">new</span> <span class="constructor">ByteArrayOutputStream()</span></span><br><span class="line">project.exec {</span><br><span class="line">    commandLine <span class="keyword">new</span> <span class="constructor">File(<span class="params">buildTools</span>.<span class="params">getPath</span>(BuildToolInfo.PathId.AAPT)</span>), <span class="string">&quot;dump&quot;</span>, <span class="string">&quot;badging&quot;</span>, baseLineApk.get<span class="constructor">AbsolutePath()</span></span><br><span class="line">    standardOutput = stdout</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">Pattern versionCodePattern = <span class="module-access"><span class="module"><span class="identifier">Pattern</span>.</span></span>compile(<span class="string">&quot;versionCode=&apos;(.*?)&apos;&quot;</span>, Pattern.MULTILINE)</span><br><span class="line">Matcher matcher = versionCodePattern.matcher(stdout.<span class="keyword">to</span><span class="constructor">String()</span>)</span><br><span class="line">matcher.find<span class="literal">()</span></span><br><span class="line">String versionCode = matcher.group(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> (versionCode<span class="operator"> == </span>null<span class="operator"> || </span>versionCode.length<span class="literal">()</span><span class="operator"> == </span><span class="number">0</span>) {</span><br><span class="line">    throw <span class="keyword">new</span> <span class="constructor">GradleException(<span class="string">&quot;versionCode can&apos;t find.&quot;</span>)</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">Gson gson = <span class="keyword">new</span> <span class="constructor">GsonBuilder()</span>.set<span class="constructor">PrettyPrinting()</span>.create<span class="literal">()</span></span><br><span class="line">Map&lt;String, Object&gt; manifestValues = <span class="keyword">new</span> HashMap&lt;&gt;<span class="literal">()</span></span><br><span class="line">manifestValues.put(<span class="string">&quot;baselineChecksum&quot;</span>, baselineChecksum)</span><br><span class="line">manifestValues.put(<span class="string">&quot;buildNumber&quot;</span>, versionCode)</span><br><span class="line">manifestValues.put(<span class="string">&quot;patchNumber&quot;</span>, <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>current<span class="constructor">TimeMillis()</span>)</span><br><span class="line">String manifestJson = gson.<span class="keyword">to</span><span class="constructor">Json(<span class="params">manifestValues</span>)</span></span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">FileUtils</span>.</span></span>write<span class="constructor">ByteArrayToFile(<span class="params">new</span> File(<span class="params">patchDir</span>, &apos;<span class="params">manifest</span>.<span class="params">json</span>&apos;)</span>, manifestJson.get<span class="constructor">Bytes()</span>)</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">ZipUtil</span>.</span></span>pack(patchDir, patchFile)</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#x867D;&#x7136;&#x53EF;&#x4EE5;&#x751F;&#x6210;&#x4E86;patch&#xFF0C;&#x4F46;&#x662F;&#x8FD8;&#x4E0D;&#x591F;&#x5B8C;&#x7F8E;&#xFF0C;&#x6211;&#x4EEC;&#x5BF9;&#x751F;&#x6210;&#x7684;patch&#x8FDB;&#x884C;&#x7B7E;&#x540D;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">SigningConfig signingConfig = <span class="keyword">project</span>.tasks.findByName(<span class="string">&quot;package${variant.name.capitalize()}&quot;</span>).signingConfig</span><br><span class="line"><span class="keyword">File</span> signOut = <span class="keyword">new</span> <span class="keyword">File</span>(patchFile.getParentFile(), <span class="string">&quot;signed_&quot;</span> + patchFile.getName())</span><br><span class="line"><span class="comment">//sign patch</span></span><br><span class="line">signZip(<span class="keyword">project</span>, patchFile, signingConfig, signOut)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!signOut.exists()) {</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> GradleException(<span class="string">&quot;signed patch file is not exist: ${signOut.absolutePath}&quot;</span>)</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x7B7E;&#x540D;&#x51FD;&#x6570;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> signZip(<span class="keyword">Project</span> <span class="keyword">project</span>, <span class="keyword">File</span> inFile, SigningConfig signingConfig, <span class="keyword">File</span> outFile) <span class="keyword">throws</span> Exception {</span><br><span class="line">    PrivateKey key;</span><br><span class="line">    X509Certificate certificate;</span><br><span class="line">    <span class="keyword">boolean</span> v1SigningEnabled;</span><br><span class="line">    <span class="keyword">boolean</span> v2SigningEnabled;</span><br><span class="line">    <span class="keyword">if</span> (signingConfig != <span class="keyword">null</span> &amp;&amp; signingConfig.isSigningReady()) {</span><br><span class="line">        CertificateInfo certificateInfo = KeystoreHelper.getCertificateInfo(</span><br><span class="line">                signingConfig.getStoreType(),</span><br><span class="line">                Preconditions.checkNotNull(signingConfig.getStoreFile()),</span><br><span class="line">                Preconditions.checkNotNull(signingConfig.getStorePassword()),</span><br><span class="line">                Preconditions.checkNotNull(signingConfig.getKeyPassword()),</span><br><span class="line">                Preconditions.checkNotNull(signingConfig.getKeyAlias()));</span><br><span class="line">        key = certificateInfo.getKey();</span><br><span class="line">        certificate = certificateInfo.getCertificate();</span><br><span class="line">        v1SigningEnabled = signingConfig.isV1SigningEnabled();</span><br><span class="line">        v2SigningEnabled = signingConfig.isV2SigningEnabled();</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        key = <span class="keyword">null</span>;</span><br><span class="line">        certificate = <span class="keyword">null</span>;</span><br><span class="line">        v1SigningEnabled = <span class="keyword">false</span>;</span><br><span class="line">        v2SigningEnabled = <span class="keyword">false</span>;</span><br><span class="line">    }</span><br><span class="line">    ApkCreatorFactory.CreationData creationData =</span><br><span class="line">            <span class="keyword">new</span> ApkCreatorFactory.CreationData(</span><br><span class="line">                    outFile,</span><br><span class="line">                    key,</span><br><span class="line">                    certificate,</span><br><span class="line">                    v1SigningEnabled,</span><br><span class="line">                    v2SigningEnabled,</span><br><span class="line">                    <span class="keyword">null</span>,</span><br><span class="line">                    <span class="keyword">null</span>,</span><br><span class="line">                    <span class="number">1</span>,</span><br><span class="line">                    NativeLibrariesPackagingMode.COMPRESSED,</span><br><span class="line">                    <span class="keyword">new</span> Predicate&lt;String&gt;() {</span><br><span class="line">                        @Override</span><br><span class="line">                        <span class="keyword">boolean</span> test(String s) {</span><br><span class="line">                            <span class="keyword">return</span> <span class="keyword">false</span></span><br><span class="line">                        }</span><br><span class="line">                    });</span><br><span class="line">    ApkCreator signedJarBuilder</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="keyword">boolean</span> keepTimestamps = AndroidGradleOptions.keepTimestampsInApk(<span class="keyword">project</span>);</span><br><span class="line">        ZFileOptions <span class="keyword">options</span> = <span class="keyword">new</span> ZFileOptions();</span><br><span class="line">        <span class="keyword">options</span>.setNoTimestamps(!keepTimestamps);</span><br><span class="line">        <span class="keyword">options</span>.setCoverEmptySpaceUsingExtraField(<span class="keyword">true</span>);</span><br><span class="line">        ThreadPoolExecutor compressionExecutor =</span><br><span class="line">                <span class="keyword">new</span> ThreadPoolExecutor(</span><br><span class="line">                        <span class="number">0</span>, <span class="comment">/* Number of always alive threads */</span></span><br><span class="line">                        <span class="number">2</span>,</span><br><span class="line">                        <span class="number">100</span>,</span><br><span class="line">                        TimeUnit.MILLISECONDS,</span><br><span class="line">                        <span class="keyword">new</span> LinkedBlockingDeque&lt;&gt;());</span><br><span class="line">        <span class="keyword">options</span>.setCompressor(</span><br><span class="line">                <span class="keyword">new</span> BestAndDefaultDeflateExecutorCompressor(</span><br><span class="line">                        compressionExecutor,</span><br><span class="line">                        <span class="keyword">options</span>.getTracker(),</span><br><span class="line">                        <span class="number">1.0</span>));</span><br><span class="line">        <span class="keyword">options</span>.setAutoSortFiles(<span class="keyword">true</span>);</span><br><span class="line">        ApkZFileCreatorFactory factory = <span class="keyword">new</span> ApkZFileCreatorFactory(<span class="keyword">options</span>);</span><br><span class="line">        signedJarBuilder = factory.make(creationData)</span><br><span class="line">        signedJarBuilder.writeZip(</span><br><span class="line">                inFile,</span><br><span class="line">                <span class="keyword">null</span>,</span><br><span class="line">                <span class="keyword">null</span></span><br><span class="line">        );</span><br><span class="line">    } <span class="keyword">finally</span> {</span><br><span class="line">        <span class="keyword">if</span> (signedJarBuilder) {</span><br><span class="line">            signedJarBuilder.close()</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6267;&#x884C;&#x5982;&#x4E0B;gradle&#x547D;&#x4EE4;&#x5373;&#x53EF;&#x5B8C;&#x6210;patch&#x7684;&#x6784;&#x5EFA;&#x5E76;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x7B7E;&#x540D;</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">gradlew assembleReleaseFlutterPatch -PbaselineApk=/<span class="type">path</span>/<span class="keyword">to</span>/baseline.apk</span><br></pre></td></tr></table></figure><p>&#x57FA;&#x7EBF;apk&#x4E5F;&#x53EF;&#x4EE5;&#x4F20;&#x5165;maven&#x5750;&#x6807;</p><figure class="highlight gml"><table><tr><td class="code"><pre><span class="line">gradlew assembleReleaseFlutterPatch -PbaselineApk=<span class="symbol">x</span>:<span class="symbol">y</span>:z</span><br></pre></td></tr></table></figure><p>&#x81F3;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x57FA;&#x672C;&#x5B8C;&#x6210;&#x4E86;&#x57FA;&#x4E8E;Gradle&#x7684;Flutter Patch&#x7684;&#x6784;&#x5EFA;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x6211;&#x5DF2;&#x7ECF;&#x5C06;&#x5176;&#x62BD;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x53EF;&#x7528;&#x7684;&#x63D2;&#x4EF6;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x53EF;&#x4EE5;&#x89C1;</p><ul><li><a href="https://github.com/lizhangqu/plugin-flutter-patch" target="_blank" rel="noopener">https://github.com/lizhangqu/plugin-flutter-patch</a></li></ul><h4 id="&#x57FA;&#x4E8E;Javassist&#x5B9E;&#x73B0;&#x5B9A;&#x5236;&#x5316;&#x9700;&#x6C42;"><a href="#&#x57FA;&#x4E8E;Javassist&#x5B9E;&#x73B0;&#x5B9A;&#x5236;&#x5316;&#x9700;&#x6C42;" class="headerlink" title="&#x57FA;&#x4E8E;Javassist&#x5B9E;&#x73B0;&#x5B9A;&#x5236;&#x5316;&#x9700;&#x6C42;"></a>&#x57FA;&#x4E8E;Javassist&#x5B9E;&#x73B0;&#x5B9A;&#x5236;&#x5316;&#x9700;&#x6C42;</h4><p>&#x524D;&#x9762;&#x6211;&#x4EEC;&#x8BF4;&#x5230;&#xFF0C;&#x5B98;&#x65B9;&#x7684;Patch&#x6D41;&#x7A0B;&#xFF0C;&#x4E0D;&#x652F;&#x6301;url&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#xFF0C;patch&#x6587;&#x4EF6;&#x7684;&#x4E0B;&#x8F7D;&#x6A21;&#x5F0F;&#x4E0E;&#x5B89;&#x88C5;&#x6A21;&#x5F0F;&#x7684;&#x6309;patch&#x6587;&#x4EF6;&#x7C92;&#x5EA6;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#xFF0C;&#x4E0D;&#x652F;&#x6301;Patch&#x6587;&#x4EF6;&#x7684;&#x7B7E;&#x540D;&#x6821;&#x9A8C;&#xFF0C;&#x4E0D;&#x652F;&#x6301;patch&#x7684;&#x9632;&#x91CD;&#x590D;&#x4E0B;&#x8F7D;&#x7B49;&#x7B49;&#x95EE;&#x9898;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x6709;&#x6CA1;&#x6709;&#x529E;&#x6CD5;&#x590D;&#x7528;&#x5B98;&#x65B9;&#x7684;&#x73B0;&#x6709;&#x903B;&#x8F91;&#xFF0C;&#x4F46;&#x53C8;&#x80FD;&#x89E3;&#x51B3;&#x8FD9;&#x4E9B;&#x95EE;&#x9898;&#x5462;&#xFF0C;&#x6211;&#x4EEC;&#x57FA;&#x4E8E;Javassist&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x5B57;&#x8282;&#x7801;&#x4FEE;&#x6539;&#xFF0C;&#x4ECE;&#x800C;&#x8FBE;&#x5230;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x80FD;&#x529B;&#xFF0C;&#x5176;&#x5B9E;&#x73B0;&#x5927;&#x81F4;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight julia"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">void accept(<span class="built_in">String</span> variantName, <span class="built_in">String</span> path, InputStream inputStream, OutputStream outputStream) {</span><br><span class="line">    <span class="keyword">if</span> (path?.contains(<span class="string">&quot;io/flutter/view/ResourceUpdater.class&quot;</span>) &amp;&amp; project.getPlugins().hasPlugin(<span class="string">&quot;com.android.application&quot;</span>)) {</span><br><span class="line"></span><br><span class="line">        ClassPool classPool = new ClassPool(<span class="literal">true</span>)</span><br><span class="line">        TransformHelper.updateClassPath(classPool, project, variantName)</span><br><span class="line"></span><br><span class="line">        def ctClass = classPool.makeClass(inputStream, <span class="literal">false</span>)</span><br><span class="line">        <span class="keyword">if</span> (ctClass.isFrozen()) {</span><br><span class="line">            ctClass.defrost()</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        FlutterTransformExtension flutterTransformExtension = project.getExtensions().findByType(FlutterTransformExtension.class)</span><br><span class="line">        def downloadUrlctMethod = ctClass.getDeclaredMethod(<span class="string">&quot;buildUpdateDownloadURL&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> (downloadUrlctMethod != null) {</span><br><span class="line">            downloadUrlctMethod.setBody(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">{</span></span><br><span class="line"><span class="string">return ${flutterTransformExtension.patchClass}.${flutterTransformExtension.downloadUrlMethod}(context);</span></span><br><span class="line"><span class="string">}</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        def downloadModectMethod = ctClass.getDeclaredMethod(<span class="string">&quot;getDownloadMode&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> (downloadModectMethod != null) {</span><br><span class="line">            downloadModectMethod.setBody(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">{</span></span><br><span class="line"><span class="string">try {</span></span><br><span class="line"><span class="string">return io.flutter.view.ResourceUpdater.DownloadMode.valueOf(${</span></span><br><span class="line"><span class="string">                flutterTransformExtension.patchClass</span></span><br><span class="line"><span class="string">            }.${</span></span><br><span class="line"><span class="string">                flutterTransformExtension.downloadModeMethod</span></span><br><span class="line"><span class="string">            }(context));</span></span><br><span class="line"><span class="string">} catch (Exception e) {</span></span><br><span class="line"><span class="string">return io.flutter.view.ResourceUpdater.DownloadMode.ON_RESTART;</span></span><br><span class="line"><span class="string">}</span></span><br><span class="line"><span class="string">}</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        def installModectMethod = ctClass.getDeclaredMethod(<span class="string">&quot;getInstallMode&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> (installModectMethod != null) {</span><br><span class="line">            installModectMethod.setBody(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">{</span></span><br><span class="line"><span class="string">try {</span></span><br><span class="line"><span class="string">return io.flutter.view.ResourceUpdater.InstallMode.valueOf(${</span></span><br><span class="line"><span class="string">                flutterTransformExtension.patchClass</span></span><br><span class="line"><span class="string">            }.${</span></span><br><span class="line"><span class="string">                flutterTransformExtension.installModeMethod</span></span><br><span class="line"><span class="string">            }(context));</span></span><br><span class="line"><span class="string">} catch (Exception e) {</span></span><br><span class="line"><span class="string">return io.flutter.view.ResourceUpdater.InstallMode.ON_NEXT_RESTART;</span></span><br><span class="line"><span class="string">}</span></span><br><span class="line"><span class="string">}</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        TransformHelper.copy(new ByteArrayInputStream(ctClass.toBytecode()), outputStream)</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        TransformHelper.copy(inputStream, outputStream)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4ECE;&#x4EE3;&#x7801;&#x4E2D;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x7528;gradle&#x6CE8;&#x518C;&#x4E00;&#x4E2A;transform&#xFF0C;&#x626B;&#x63CF;&#x7C7B;&#xFF0C;&#x5F53;&#x626B;&#x63CF;&#x5230; io/flutter/view/ResourceUpdater.class &#x65F6;&#xFF0C;&#x4FEE;&#x6539;&#x5176;&#x4E2D;&#x7684;&#x4E09;&#x4E2A;&#x65B9;&#x6CD5;&#x5230;&#x6211;&#x4EEC;&#x914D;&#x7F6E;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x7C7B;&#x4E2D;&#xFF0C;&#x5C06;buildUpdateDownloadURL&#x91CD;&#x5B9A;&#x5411;&#x5230;&#x81EA;&#x5B9A;&#x4E49;&#x7C7B;&#x4E2D;&#x7684;&#x83B7;&#x53D6;&#x4E0B;&#x8F7D;url&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5C06;getDownloadMode&#x91CD;&#x5B9A;&#x5411;&#x5230;&#x81EA;&#x5B9A;&#x4E49;&#x7C7B;&#x4E2D;&#x7684;&#x83B7;&#x53D6;&#x4E0B;&#x8F7D;&#x6A21;&#x5F0F;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5C06;getInstallMode&#x91CD;&#x5B9A;&#x5411;&#x5230;&#x81EA;&#x5B9A;&#x4E49;&#x7C7B;&#x4E2D;&#x7684;&#x83B7;&#x53D6;&#x5B89;&#x88C5;&#x6A21;&#x5F0F;&#x7684;&#x65B9;&#x6CD5;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x6CE8;&#x610F;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x57FA;&#x4E8E;Javassist&#x7684;&#x5B57;&#x8282;&#x7801;&#x4FEE;&#x6539;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6709;&#x5B8C;&#x6574;&#x7684;&#x8C03;&#x7528;&#x94FE;&#xFF0C;&#x56E0;&#x6B64;compile classpath&#x4E2D;&#x7684;&#x7C7B;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x5168;&#x90E8;&#x63D2;&#x5165;&#x5230;ClassPool&#x7C7B;&#x4E2D;&#xFF0C;&#x5982;&#x4E0B;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">public static void update<span class="constructor">ClassPath(ClassPool <span class="params">classPool</span>, Project <span class="params">project</span>, String <span class="params">variantName</span>)</span> {</span><br><span class="line">    get<span class="constructor">CompileLibraries(<span class="params">project</span>, <span class="params">variantName</span>)</span>?.each {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            classPool.insert<span class="constructor">ClassPath(<span class="params">it</span>.<span class="params">absolutePath</span>)</span></span><br><span class="line">        } catch (Exception e) {</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        def javacTask = project.tasks.find<span class="constructor">ByName(<span class="string">&quot;compile${variantName.capitalize()}JavaWithJavac&quot;</span>)</span></span><br><span class="line">        classPool.insert<span class="constructor">ClassPath(<span class="params">javacTask</span>.<span class="params">getDestinationDir</span>()</span>.get<span class="constructor">AbsolutePath()</span>)</span><br><span class="line">    } catch (Exception e) {</span><br><span class="line">    }</span><br><span class="line">    AppExtension android = project.get<span class="constructor">Extensions()</span>.get<span class="constructor">ByType(AppExtension.<span class="params">class</span>)</span></span><br><span class="line">    android?.get<span class="constructor">BootClasspath()</span>?.each {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            classPool.insert<span class="constructor">ClassPath(<span class="params">it</span>.<span class="params">absolutePath</span>)</span></span><br><span class="line">        } catch (Exception e) {</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5728;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x7C7B;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5B9E;&#x73B0;&#x7B80;&#x5355;&#x7684;&#x903B;&#x8F91;&#xFF0C;&#x5BF9;patch&#x7684;md5&#x8FDB;&#x884C;&#x6821;&#x9A8C;&#xFF0C;&#x5982;&#x679C;&#x91CD;&#x590D;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x4E0B;&#x8F7D;&#x7684;url&#x4E3A;null&#xFF0C;&#x8BA9;&#x5176;&#x8FDB;&#x5165;&#x5F02;&#x5E38;&#x6D41;&#x7A0B;&#xFF0C;&#x4ECE;&#x800C;&#x9632;&#x6B62;&#x91CD;&#x590D;&#x4E0B;&#x8F7D;&#xFF0C;&#x5BF9;&#x4E8E;&#x7B7E;&#x540D;&#x6821;&#x9A8C;&#xFF0C;&#x6211;&#x4EEC;&#x6CA1;&#x6709;&#x597D;&#x7684;&#x65B9;&#x6CD5;&#x6CE8;&#x5165;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x5728;&#x4E09;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x65B9;&#x6CD5;&#x4E2D;&#x5206;&#x522B;&#x90FD;&#x8FDB;&#x884C;&#x7B7E;&#x540D;&#x6821;&#x9A8C;&#xFF0C;&#x5982;&#x679C;&#x6821;&#x9A8C;&#x4E0D;&#x901A;&#x8FC7;&#xFF0C;&#x5219;&#x76F4;&#x63A5;&#x5220;&#x9664;patch&#x6587;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5220;&#x9664;&#x65F6;&#x95F4;&#x6233;&#x6587;&#x4EF6;&#xFF0C;&#x4ECE;&#x800C;&#x8BA9;flutter&#x6587;&#x4EF6;&#x91CD;&#x65B0;&#x91CA;&#x653E;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x5B9E;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x793A;&#x4F8B;&#xFF0C;&#x5982;&#x4E0B;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">@Keep</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> FlutterUpdate {</span><br><span class="line"></span><br><span class="line">    @Keep</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> FlutterPatch {</span><br><span class="line">        <span class="keyword">public</span> String url;</span><br><span class="line">        <span class="keyword">public</span> String md5;</span><br><span class="line">        <span class="keyword">public</span> String downloadMode;</span><br><span class="line">        <span class="keyword">public</span> String installMode;</span><br><span class="line"></span><br><span class="line">        @Override</span><br><span class="line">        <span class="keyword">public</span> String toString() {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;FlutterPatch{&quot;</span> +</span><br><span class="line">                    <span class="string">&quot;url=&apos;&quot;</span> + url + <span class="string">&apos;\&apos;&apos;</span> +</span><br><span class="line">                    <span class="string">&quot;, md5=&apos;&quot;</span> + md5 + <span class="string">&apos;\&apos;&apos;</span> +</span><br><span class="line">                    <span class="string">&quot;, downloadMode=&apos;&quot;</span> + downloadMode + <span class="string">&apos;\&apos;&apos;</span> +</span><br><span class="line">                    <span class="string">&quot;, installMode=&apos;&quot;</span> + installMode + <span class="string">&apos;\&apos;&apos;</span> +</span><br><span class="line">                    <span class="string">&apos;}&apos;</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> FlutterPatch flutterPatch = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String getFileMD5(<span class="keyword">File</span> <span class="keyword">file</span>) {</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">file</span>.exists()) {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        }</span><br><span class="line">        FileInputStream fileInputStream = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            fileInputStream = <span class="keyword">new</span> FileInputStream(<span class="keyword">file</span>);</span><br><span class="line">            MessageDigest md5 = MessageDigest.getInstance(<span class="string">&quot;MD5&quot;</span>);</span><br><span class="line">            <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span> * <span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> numRead = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> ((numRead = fileInputStream.<span class="keyword">read</span>(buffer)) &gt; <span class="number">0</span>) {</span><br><span class="line">                md5.update(buffer, <span class="number">0</span>, numRead);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> String.format(<span class="string">&quot;%032x&quot;</span>, <span class="keyword">new</span> BigInteger(<span class="number">1</span>, md5.digest())).toLowerCase();</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        } <span class="keyword">finally</span> {</span><br><span class="line">            <span class="keyword">if</span> (fileInputStream != <span class="keyword">null</span>) {</span><br><span class="line">                <span class="keyword">try</span> {</span><br><span class="line">                    fileInputStream.close();</span><br><span class="line">                } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String getInstalledPatchMd5(Context context) {</span><br><span class="line">        <span class="keyword">File</span> <span class="keyword">file</span> = <span class="keyword">new</span> <span class="keyword">File</span>(context.getFilesDir().toString() + <span class="string">&quot;/patch.zip&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> getFileMD5(<span class="keyword">file</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> checkSign(Context context) {</span><br><span class="line">        <span class="keyword">File</span> <span class="keyword">file</span> = <span class="keyword">new</span> <span class="keyword">File</span>(context.getFilesDir().toString() + <span class="string">&quot;/patch.zip&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">file</span>.exists()) {</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">boolean</span> success = PatchVerify.verifySign(context, <span class="keyword">file</span>);</span><br><span class="line">        <span class="keyword">if</span> (!success) {</span><br><span class="line"></span><br><span class="line">            <span class="comment">//&#x5220;&#x9664;patch&#x6587;&#x4EF6;</span></span><br><span class="line">            <span class="keyword">file</span>.<span class="keyword">delete</span>();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//&#x5220;&#x9664;&#x65F6;&#x95F4;&#x6233;&#x6587;&#x4EF6;&#x91CD;&#x65B0;&#x91CA;&#x653E;</span></span><br><span class="line">            deleteFiles(context);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String[] getExistingTimestamps(<span class="keyword">File</span> dataDir) {</span><br><span class="line">        <span class="keyword">return</span> dataDir.list(<span class="keyword">new</span> FilenameFilter() {</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">boolean</span> accept(<span class="keyword">File</span> dir, String name) {</span><br><span class="line">                <span class="keyword">return</span> name.startsWith(<span class="string">&quot;res_timestamp-&quot;</span>);</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> deleteFiles(Context context) {</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">File</span> dataDir = <span class="keyword">new</span> <span class="keyword">File</span>(context.getDir(<span class="string">&quot;flutter&quot;</span>, Context.MODE_PRIVATE).getPath());</span><br><span class="line">        <span class="keyword">final</span> String[] existingTimestamps = getExistingTimestamps(dataDir);</span><br><span class="line">        <span class="keyword">if</span> (existingTimestamps == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (String timestamp : existingTimestamps) {</span><br><span class="line">            <span class="keyword">new</span> <span class="keyword">File</span>(dataDir, timestamp).<span class="keyword">delete</span>();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> ensureConfig(Context context) {</span><br><span class="line">        <span class="keyword">if</span> (flutterPatch != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//TODO &#x6B64;&#x5904;&#x662F;&#x81EA;&#x5B9A;&#x4E49;&#x903B;&#x8F91;&#xFF0C;&#x6839;&#x636E;&#x672C;&#x5730;&#x914D;&#x7F6E;&#x6301;&#x4E45;&#x5316;&#x7684;&#x8FDC;&#x7A0B;&#x914D;&#x7F6E;&#xFF0C;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x521B;&#x5EFA;flutterPatch&#x5373;&#x53EF;&#xFF0C;&#x8FD9;&#x91CC;mock&#x4E00;&#x4E2A;</span></span><br><span class="line">        FlutterPatch patch = <span class="keyword">new</span> FlutterPatch();</span><br><span class="line">        patch.url = <span class="string">&quot;&#x4E0B;&#x8F7D;patch&#x7684;url&quot;</span>;</span><br><span class="line">        patch.md5 = <span class="string">&quot;&#x4E0B;&#x8F7D;patch&#x7684;md5&quot;</span>;</span><br><span class="line">        patch.downloadMode = <span class="string">&quot;patch&#x7684;&#x4E0B;&#x8F7D;&#x6A21;&#x5F0F;&quot;</span>;</span><br><span class="line">        patch.installMode = <span class="string">&quot;patch&#x7684;&#x5B89;&#x88C5;&#x6A21;&#x5F0F;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        flutterPatch = patch;</span><br><span class="line"></span><br><span class="line">        Log.e(<span class="string">&quot;FlutterUpdate&quot;</span>, <span class="string">&quot;flutterPatch:&quot;</span> + flutterPatch);</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    @Keep</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String getDownloadURL(Context context) {</span><br><span class="line">        ensureConfig(context);</span><br><span class="line">        <span class="comment">//&#x6821;&#x9A8C;&#x7B7E;&#x540D;&#xFF0C;&#x4FDD;&#x969C;&#x6587;&#x4EF6;&#x6765;&#x6E90;&#x5B89;&#x5168;</span></span><br><span class="line">        checkSign(context);</span><br><span class="line">        <span class="keyword">if</span> (flutterPatch == <span class="keyword">null</span>) {</span><br><span class="line">            Log.e(<span class="string">&quot;FlutterUpdate&quot;</span>, <span class="string">&quot;flutterPatch == null&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//&#x6821;&#x9A8C;&#x6587;&#x4EF6;md5&#xFF0C;&#x9632;&#x6B62;patch&#x6587;&#x4EF6;&#x91CD;&#x590D;&#x4E0B;&#x8F7D;</span></span><br><span class="line">        String installedPatchMd5 = getInstalledPatchMd5(context);</span><br><span class="line">        <span class="keyword">if</span> (installedPatchMd5 != <span class="keyword">null</span> &amp;&amp; installedPatchMd5.equalsIgnoreCase(flutterPatch.md5)) {</span><br><span class="line">            Log.e(<span class="string">&quot;FlutterUpdate&quot;</span>, <span class="string">&quot;md5 equals:&quot;</span> + flutterPatch.md5);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> flutterPatch.url;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    @Keep</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String getDownloadMode(Context context) {</span><br><span class="line">        ensureConfig(context);</span><br><span class="line">        <span class="comment">//&#x6821;&#x9A8C;&#x7B7E;&#x540D;&#xFF0C;&#x4FDD;&#x969C;&#x6587;&#x4EF6;&#x6765;&#x6E90;&#x5B89;&#x5168;</span></span><br><span class="line">        checkSign(context);</span><br><span class="line">        <span class="keyword">if</span> (flutterPatch == <span class="keyword">null</span>) {</span><br><span class="line">            Log.e(<span class="string">&quot;FlutterUpdate&quot;</span>, <span class="string">&quot;flutterPatch == null&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> flutterPatch.downloadMode;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    @Keep</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String getInstallMode(Context context) {</span><br><span class="line">        ensureConfig(context);</span><br><span class="line">        <span class="comment">//&#x6821;&#x9A8C;&#x7B7E;&#x540D;&#xFF0C;&#x4FDD;&#x969C;&#x6587;&#x4EF6;&#x6765;&#x6E90;&#x5B89;&#x5168;</span></span><br><span class="line">        checkSign(context);</span><br><span class="line">        <span class="keyword">if</span> (flutterPatch == <span class="keyword">null</span>) {</span><br><span class="line">            Log.e(<span class="string">&quot;FlutterUpdate&quot;</span>, <span class="string">&quot;flutterPatch == null&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> flutterPatch.installMode;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8BE6;&#x7EC6;&#x4EE3;&#x7801;&#x89C1; <a href="https://github.com/lizhangqu/plugin-flutter-patch" target="_blank" rel="noopener">https://github.com/lizhangqu/plugin-flutter-patch</a></p><h3 id="&#x63D2;&#x4EF6;&#x5316;&#x573A;&#x666F;&#x7684;Flutter&#x63D2;&#x4EF6;&#x4E0B;&#x53D1;"><a href="#&#x63D2;&#x4EF6;&#x5316;&#x573A;&#x666F;&#x7684;Flutter&#x63D2;&#x4EF6;&#x4E0B;&#x53D1;" class="headerlink" title="&#x63D2;&#x4EF6;&#x5316;&#x573A;&#x666F;&#x7684;Flutter&#x63D2;&#x4EF6;&#x4E0B;&#x53D1;"></a>&#x63D2;&#x4EF6;&#x5316;&#x573A;&#x666F;&#x7684;Flutter&#x63D2;&#x4EF6;&#x4E0B;&#x53D1;</h3><p>&#x524D;&#x9762;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x8BF4;&#x5230;&#xFF0C;Flutter&#x662F;&#x4E0D;&#x652F;&#x6301;&#x975E;Flutter&#x4EE3;&#x7801;&#x7684;&#x4FEE;&#x6539;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x5BF9;&#x4E8E;Android&#x4EE3;&#x7801;&#x53CA;&#x8D44;&#x6E90;&#x7684;&#x4FEE;&#x6539;&#x5B83;&#x5C31;&#x65E0;&#x80FD;&#x4E3A;&#x529B;&#x4E86;&#x3002;&#x56E0;&#x6B64;&#x9664;&#x4E86;&#x5B98;&#x65B9;&#x7684;Patch&#x4E0B;&#x53D1;&#x901A;&#x9053;&#x4E4B;&#x5916;&#xFF0C;&#x5982;&#x679C;App&#x5DF2;&#x7ECF;&#x662F;&#x63D2;&#x4EF6;&#x5316;&#x67B6;&#x6784;&#x7684;&#xFF0C;&#x90A3;&#x4E48;&#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x5F00;&#x8F9F;&#x51FA;&#x57FA;&#x4E8E;&#x63D2;&#x4EF6;&#x5316;&#x7684;&#x63D2;&#x4EF6;&#x4E0B;&#x53D1;&#x901A;&#x9053;&#x6765;&#x66F4;&#x65B0;Flutter&#x63D2;&#x4EF6;&#xFF0C;&#x524D;&#x63D0;&#x662F;Flutter&#x7684;&#x6240;&#x6709;&#x4EE3;&#x7801;&#x5DF2;&#x7ECF;&#x662F;&#x5355;&#x72EC;&#x7684;&#x4E00;&#x4E2A;bundle&#x4E86;&#x3002;</p><p>&#x4E0D;&#x8FC7;Flutter&#x4EE3;&#x7801;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x5173;&#x952E;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x5BFC;&#x81F4;&#x4E86;&#x63D2;&#x4EF6;&#x4E0B;&#x53D1;&#x901A;&#x9053;&#x4F1A;&#x5931;&#x6548;&#x3002;&#x524D;&#x9762;&#x6211;&#x4EEC;&#x5206;&#x6790;&#x4E86;Flutter&#x7684;&#x65F6;&#x95F4;&#x6233;&#x6587;&#x4EF6;&#x7684;&#x683C;&#x5F0F;&#xFF0C;&#x5728;&#x6CA1;&#x6709;patch&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5B83;&#x7684;&#x683C;&#x5F0F;&#x5982;&#x4E0B;</p><figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line">res_timestamp-<span class="symbol">$ver</span>sionCode-<span class="symbol">$app</span>LastInstallTime</span><br></pre></td></tr></table></figure><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x65F6;&#x95F4;&#x6233;&#x662F;&#x548C;app&#x7684;versionCode&#x548C;&#x5B89;&#x88C5;&#x65F6;&#x95F4;&#x5F3A;&#x5173;&#x8054;&#x7684;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x5373;&#x4F7F;&#x6211;&#x4EEC;&#x4E0B;&#x53D1;&#x4E86;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;Flutter&#x63D2;&#x4EF6;&#xFF0C;&#x5176;&#x5B9E;Flutter&#x76F8;&#x5173;&#x7684;&#x4EA7;&#x7269;&#x6587;&#x4EF6;&#x4E5F;&#x65E0;&#x6CD5;&#x80FD;&#x5230;&#x91CA;&#x653E;&#xFF0C;&#x56E0;&#x4E3A;versionCode&#x548C;&#x5B89;&#x88C5;&#x65F6;&#x95F4;&#x90FD;&#x6CA1;&#x6709;&#x53D1;&#x751F;&#x53D8;&#x5316;&#xFF0C;flutter&#x4F1A;&#x8BA4;&#x4E3A;&#x5F53;&#x524D;&#x91CA;&#x653E;&#x7684;&#x6587;&#x4EF6;&#x5DF2;&#x7ECF;&#x662F;&#x6700;&#x65B0;&#x7684;&#x3002;</p><p>&#x57FA;&#x4E8E;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x8BA9;Flutter&#x7684;&#x4EA7;&#x7269;&#x6587;&#x4EF6;&#x91CA;&#x653E;&#x5230;&#x4E00;&#x4E2A;&#x548C;&#x63D2;&#x4EF6;&#x7248;&#x672C;&#x5F3A;&#x5173;&#x8054;&#x7684;&#x76EE;&#x5F55;&#x3002;</p><p>&#x73B0;&#x6709;&#x7684;Flutter&#x4EA7;&#x7269;&#x4F1A;&#x91CA;&#x653E;&#x5230;&#x5982;&#x4E0B;&#x76EE;&#x5F55;</p><figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line">/<span class="class"><span class="keyword">data</span>/<span class="keyword">data</span>/$pkgName/app_flutter</span></span><br></pre></td></tr></table></figure><p>&#x5047;&#x5982;&#x6211;&#x4EEC;&#x63D2;&#x4EF6;&#x7684;&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x4E3A;</p><figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line">/<span class="built_in">data</span>/<span class="built_in">data</span>/$pkgName/app_plugins/$bundlePkgName/$bundleVersion</span><br></pre></td></tr></table></figure><p>&#x90A3;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5C06;&#x73B0;&#x6709;&#x91CA;&#x653E;&#x7684;&#x76EE;&#x5F55;&#x4FEE;&#x6539;&#x4E3A;</p><figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line">/<span class="built_in">data</span>/<span class="built_in">data</span>/$pkgName/app_plugins/$bundlePkgName/$bundleVersion/app_flutter</span><br></pre></td></tr></table></figure><p>&#x4ECE;&#x800C;&#x8BA9;&#x5176;&#x4EA7;&#x7269;&#x76EE;&#x5F55;&#x548C;&#x63D2;&#x4EF6;&#x5316;&#x7684;&#x63D2;&#x4EF6;&#x7248;&#x672C;&#x5F3A;&#x5173;&#x8054;&#xFF0C;&#x8FD9;&#x6837;&#x4EE5;&#x6765;&#xFF0C;&#x4E00;&#x65E6;&#x4E0B;&#x53D1;&#x4E86;&#x65B0;&#x7248;&#x672C;&#x7684;&#x63D2;&#x4EF6;&#xFF0C;Flutter&#x7684;&#x4EA7;&#x7269;&#x4E5F;&#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x91CA;&#x653E;&#x3002;</p><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x548C;&#x4FEE;&#x6539;flutter&#x7684;&#x4E0B;&#x8F7D;url&#xFF0C;&#x4E0B;&#x8F7D;&#x6A21;&#x5F0F;&#xFF0C;&#x5B89;&#x88C5;&#x6A21;&#x5F0F;&#x7684;&#x65B9;&#x5F0F;&#x7C7B;&#x4F3C;&#xFF0C;&#x901A;&#x8FC7;&#x7F16;&#x8BD1;&#x671F;&#x6539;&#x5B57;&#x8282;&#x7801;&#x7684;&#x65B9;&#x5F0F;&#x91CD;&#x5B9A;&#x5411;&#x4EA7;&#x7269;&#x76EE;&#x5F55;&#x5230;&#x53E6;&#x5916;&#x7684;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#x3002;</p><p>&#x5E78;&#x8FD0;&#x7684;&#x662F;&#xFF0C;&#x73B0;&#x6709;Flutter&#x7684;&#x91CA;&#x653E;&#x76EE;&#x5F55;&#xFF0C;&#x5DF2;&#x7ECF;&#x5168;&#x90E8;&#x6536;&#x655B;&#x5230;&#x4E00;&#x4E2A;&#x7C7B;&#x4E2D;&#xFF0C;&#x5982;&#x4E0B;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">PathUtils</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFilesDir</span><span class="params">(Context applicationContext)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> applicationContext.getFilesDir().getPath();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getDataDirectory</span><span class="params">(Context applicationContext)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> applicationContext.getDir(<span class="string">&quot;flutter&quot;</span>, Context.MODE_PRIVATE).getPath();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCacheDirectory</span><span class="params">(Context applicationContext)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> applicationContext.getCacheDir().getPath();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x4FEE;&#x6539;getDataDirectory&#x51FD;&#x6570;&#x5230;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x51FD;&#x6570;&#x4E2D;&#x5373;&#x53EF;&#xFF0C;&#x53C2;&#x8003;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line"><span class="literal">void</span> accept(<span class="built_in">String</span> variantName, <span class="built_in">String</span> path, InputStream inputStream, OutputStream outputStream) {</span><br><span class="line">    <span class="keyword">if</span> (path?.contains(<span class="string">&quot;io/flutter/util/PathUtils.class&quot;</span>) &amp;&amp; project.getPlugins().hasPlugin(<span class="string">&quot;com.android.application&quot;</span>)) {</span><br><span class="line"></span><br><span class="line">        ClassPool classPool = <span class="literal">new</span> ClassPool(<span class="literal">true</span>)</span><br><span class="line">        TransformHelper.updateClassPath(classPool, project, variantName)</span><br><span class="line"></span><br><span class="line"> 		BaseVariant foundVariant = <span class="built_in">null</span></span><br><span class="line"></span><br><span class="line">        def variants = <span class="built_in">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (project.plugins.hasPlugin(<span class="string">&apos;com.android.application&apos;</span>)) {</span><br><span class="line">            variants = project.android.getApplicationVariants()</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (project.plugins.hasPlugin(<span class="string">&apos;com.android.library&apos;</span>)) {</span><br><span class="line">            variants = project.android.getLibraryVariants()</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        variants?.<span class="literal">all</span> {BaseVariant variant -&gt;</span><br><span class="line">            <span class="keyword">if</span> (variant.getName() == variantName) {</span><br><span class="line">                foundVariant = variant</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (foundVariant == <span class="built_in">null</span>) {</span><br><span class="line">            throw <span class="literal">new</span> GradleException(<span class="string">&quot;variant ${variantName} not found&quot;</span>)</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        def variantData = foundVariant.getMetaClass().getProperty(foundVariant, <span class="string">&apos;variantData&apos;</span>)</span><br><span class="line">        <span class="built_in">String</span> bundleName = variantData.getApplicationId()</span><br><span class="line"></span><br><span class="line">        def ctClass = classPool.makeClass(inputStream, <span class="literal">false</span>)</span><br><span class="line">        <span class="keyword">if</span> (ctClass.isFrozen()) {</span><br><span class="line">            ctClass.defrost()</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        def ctMethod = ctClass.getDeclaredMethod(<span class="string">&quot;getDataDirectory&quot;</span>)</span><br><span class="line">        <span class="comment">//&#x6B64;&#x5904;&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x7684;&#x63D2;&#x4EF6;&#x5316;&#x6846;&#x67B6;&#x81EA;&#x5B9A;&#x4E49;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#xFF0C;&#x8FD9;&#x91CC;&#x7ED9;&#x51FA;&#x7B80;&#x5355;&#x7684;&#x793A;&#x4F8B;</span></span><br><span class="line">        <span class="comment">//$1&#x8868;&#x793A;&#x7B2C;&#x4E00;&#x4E2A;&#x5165;&#x53C2;&#xFF0C;&#x5373;Context&#x5BF9;&#x8C61;</span></span><br><span class="line">        <span class="keyword">if</span> (ctMethod != <span class="built_in">null</span>) {</span><br><span class="line">            ctMethod.setBody(<span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">{</span></span><br><span class="line"><span class="string">Bundle bundle = BundleManager.getInstance(\$1).getBundle(&quot;</span>$bundleName<span class="string">&quot;);</span></span><br><span class="line"><span class="string">String installDir = BundleManager.getInstallDir(\$1, bundle);</span></span><br><span class="line"><span class="string">java.io.File file = new java.io.File(installDir, &quot;</span>app_flutter<span class="string">&quot;);</span></span><br><span class="line"><span class="string">if(!file.exists()) {</span></span><br><span class="line"><span class="string">	file.mkdirs();</span></span><br><span class="line"><span class="string">}</span></span><br><span class="line"><span class="string">return file.getAbsolutePath();</span></span><br><span class="line"><span class="string">}</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span>)</span><br><span class="line">        }</span><br><span class="line">        TransformHelper.copy(<span class="literal">new</span> ByteArrayInputStream(ctClass.toBytecode()), outputStream)</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        TransformHelper.copy(inputStream, outputStream)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x81F3;&#x6B64;&#xFF0C;&#x63D2;&#x4EF6;&#x5316;&#x573A;&#x666F;&#x4E0B;&#x7684;Flutter&#x63D2;&#x4EF6;&#x4E0B;&#x53D1;&#x901A;&#x9053;&#x4E5F;&#x5B8C;&#x5168;&#x641E;&#x5B9A;&#x3002;</p><h3 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h3><p>Flutter &#x52A8;&#x6001;&#x4E0B;&#x53D1;&#x76EE;&#x524D;&#x867D;&#x7136;&#x5B98;&#x65B9;&#x5DF2;&#x7ECF;&#x652F;&#x6301;&#x4E86;&#xFF0C;&#x4F46;&#x4ECE;&#x4EE3;&#x7801;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x76EE;&#x524D;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x4E0D;&#x6210;&#x719F;&#x7684;&#xFF0C;&#x8003;&#x8651;&#x5230;&#x73B0;&#x72B6;&#xFF0C;&#x6211;&#x4EEC;&#x57FA;&#x4E8E;&#x5B57;&#x8282;&#x7801;&#x4FEE;&#x6539;&#x6280;&#x672F;&#xFF0C;&#x7ED9;Flutter&#x6253;&#x4E86;&#x51E0;&#x4E2A;&#x5C0F;&#x5C0F;&#x7684;&#x8865;&#x4E01;&#xFF0C;&#x4ECE;&#x800C;&#x8BA9;&#x5176;&#x66F4;&#x9002;&#x5E94;&#x6211;&#x4EEC;&#x7684;&#x4E1A;&#x52A1;&#x573A;&#x666F;&#xFF0C;&#x800C;&#x5B98;&#x65B9;&#x7684;Patch&#x6784;&#x5EFA;&#x65B9;&#x5F0F;&#x5BF9;gradle&#x7684;&#x652F;&#x6301;&#x4E5F;&#x4E0D;&#x662F;&#x5F88;&#x5B8C;&#x5584;&#xFF0C;&#x6211;&#x4EEC;&#x5219;&#x4EFF;&#x9020;&#x73B0;&#x6709;&#x7684;Dart&#x4EE3;&#x7801;&#xFF0C;&#x91CD;&#x5199;&#x4E86;&#x4E00;&#x5957;&#x57FA;&#x4E8E;Gradle&#x6784;&#x5EFA;&#x7684;Patch&#x6784;&#x5EFA;&#x65B9;&#x5F0F;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;&#x7531;&#x6B64;&#x770B;&#x6765;Flutter&#x9700;&#x8981;&#x8D70;&#x7684;&#x8DEF;&#x8FD8;&#x5F88;&#x957F;&#x3002;</p>]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>flutter</tag>
        <tag>patch</tag>
        <tag>dynamic</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter Tools 断点调试</title>
    <url>/2019/03/21/Flutter-Tools-%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>&#x5728;Flutter&#x7684;&#x5F00;&#x53D1;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x6784;&#x5EFA;App&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x9047;&#x5230;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#x9700;&#x8981;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x8C03;&#x8BD5;&#xFF0C;&#x4EA6;&#x6216;&#x8005;&#x662F;&#x9700;&#x8981;&#x4E86;&#x89E3;&#x5176;&#x6784;&#x5EFA;&#x8FC7;&#x7A0B;&#x9700;&#x8981;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x8C03;&#x8BD5;&#xFF0C;&#x4E3B;&#x8981;&#x5305;&#x62EC;Flutter Tools&#x7684;&#x8C03;&#x8BD5;&#x548C;Flutter App&#x7684;&#x8C03;&#x8BD5;&#xFF0C;Flutter App&#x7684;&#x8C03;&#x8BD5;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x672C;&#x7BC7;&#x6587;&#x7AE0;&#x7740;&#x91CD;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B;Flutter Tools&#x76F8;&#x5173;&#x7684;&#x8C03;&#x8BD5;&#x6280;&#x5DE7;&#x3002;</p><a id="more"></a><h3 id="Flutter-Tools-&#x8C03;&#x8BD5;"><a href="#Flutter-Tools-&#x8C03;&#x8BD5;" class="headerlink" title="Flutter Tools &#x8C03;&#x8BD5;"></a>Flutter Tools &#x8C03;&#x8BD5;</h3><h4 id="&#x5BFC;&#x5165;Flutter-Tools-&#x6E90;&#x7801;"><a href="#&#x5BFC;&#x5165;Flutter-Tools-&#x6E90;&#x7801;" class="headerlink" title="&#x5BFC;&#x5165;Flutter Tools &#x6E90;&#x7801;"></a>&#x5BFC;&#x5165;Flutter Tools &#x6E90;&#x7801;</h4><p>&#x6B63;&#x5F0F;&#x5F00;&#x59CB;&#x8C03;&#x8BD5;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5148;&#x5BFC;&#x5165;Flutter Tools&#x7684;&#x6E90;&#x7801;&#x3002;</p><p>&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;Android Studio&#x6216;&#x8005;Intellij IDEA&#x6253;&#x5F00;&#x8BE5;&#x6587;&#x4EF6;&#x5939;<br></p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/path/</span>to<span class="regexp">/flutter/</span>packages<span class="regexp">/flutter_tools</span></span><br></pre></td></tr></table></figure><p></p><p>&#x6211;&#x4EEC;&#x5728;&#x6267;&#x884C;flutter&#x547D;&#x4EE4;&#x540E;&#xFF0C;&#x5176;&#x4EE3;&#x7801;&#x7684;&#x8C03;&#x7528;&#x5165;&#x53E3;&#x4F1A;&#x8D70;&#x5230;&#x8BE5;&#x6587;&#x4EF6;&#x3002;<br></p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/path/</span>to<span class="regexp">/flutter/</span>packages<span class="regexp">/flutter_tools/</span>bin<span class="regexp">/flutter_tools.dart</span></span><br></pre></td></tr></table></figure><p></p><p>&#x5176;&#x5185;&#x5BB9;&#x5982;&#x4E0B;<br></p><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&apos;package:flutter_tools/executable.dart&apos;</span> <span class="keyword">as</span> executable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main(<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; args) {</span><br><span class="line">  executable.main(args);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p></p><p>&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x5982;&#x4F55;&#x8FDB;&#x884C;&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x5462;&#xFF1F;</p><h4 id="&#x65AD;&#x70B9;&#x8C03;&#x8BD5;"><a href="#&#x65AD;&#x70B9;&#x8C03;&#x8BD5;" class="headerlink" title="&#x65AD;&#x70B9;&#x8C03;&#x8BD5;"></a>&#x65AD;&#x70B9;&#x8C03;&#x8BD5;</h4><p>Flutter Tools&#x7684;&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x65E0;&#x5916;&#x4E4E;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x548C;&#x666E;&#x901A;App&#x7684;&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x4EE5;&#x53CA;Gradle&#x63D2;&#x4EF6;&#x7684;&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x90FD;&#x662F;&#x7C7B;&#x4F3C;&#x7684;&#x3002;</p><p>1&#x3001;&#x5BFC;&#x51FA;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#xFF0C;&#x8BA9;&#x5176;&#x542F;&#x52A8;&#x7684;&#x65F6;&#x5019;&#x7B49;&#x5F85;debug&#x8FDB;&#x7A0B;attach<br>2&#x3001;&#x76F4;&#x63A5;&#x4F7F;&#x7528;IDEA&#x4EE5;debug&#x65B9;&#x5F0F;&#x8FD0;&#x884C;</p><p>&#x5BF9;&#x4E8E;&#x7B2C;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x6307;&#x5B9A;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#xFF0C;&#x8BA9;Observatory&#x5728;&#x6307;&#x5B9A;&#x7AEF;&#x53E3;&#x76D1;&#x542C;&#xFF0C;&#x5E76;&#x8BA9;&#x5176;&#x5728;&#x542F;&#x52A8;&#x7684;&#x65F6;&#x5019;&#x8FDB;&#x884C;&#x7B49;&#x5F85;debug&#x8FDB;&#x7A0B;&#xFF0C;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x548C;gradle&#x7684;&#x63D2;&#x4EF6;&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x7C7B;&#x4F3C;&#x3002;</p><p>&#x5BFC;&#x51FA;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#xFF0C;&#x8BA9;Observatory&#x5728;&#x6307;&#x5B9A;&#x7684;65432&#x7AEF;&#x53E3;&#x76D1;&#x542C;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">FLUTTER_TOOL_ARGS</span>=<span class="string">&quot;--pause_isolates_on_start --enable-vm-service:65432&quot;</span></span><br></pre></td></tr></table></figure><p>&#x4E4B;&#x540E;&#x6267;&#x884C;flutter run&#x547D;&#x4EE4;&#x540E;&#xFF0C;&#x4F1A;&#x8F93;&#x51FA;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#xFF0C;&#x770B;&#x5230;&#x5982;&#x4E0B;&#x5185;&#x5BB9;&#x8BF4;&#x660E;&#x8BBE;&#x7F6E;&#x6210;&#x529F;&#x4E86;</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">Observatory listening <span class="keyword">on</span> http:<span class="comment">//127.0.0.1:65432/</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x65F6;&#x5019;&#x8BE5;&#x8FDB;&#x7A0B;&#x5C31;&#x4F1A;&#x4E00;&#x76F4;&#x7B49;&#x5F85;&#xFF0C;&#x76F4;&#x5230;&#x6211;&#x4EEC;attach&#x5230;&#x8BE5;&#x8FDB;&#x7A0B;&#x4E0A;&#x53BB;&#xFF0C;&#x90A3;&#x4E48;&#x5982;&#x4F55;attach&#x5462;&#xFF1F;</p><p>&#x4F7F;&#x7528; Android Studio &#x6216;&#x8005; Intellij Idea &#x65B0;&#x5EFA;&#x4E00;&#x4E2A;Configuration&#x3002;<br>Edit Configurations -&#x300B;New -&#x300B; Dart Remote Debug -&#x300B; &#x8F93;&#x5165;Host&#x4E3A;127.0.0.1&#xFF0C;&#x7AEF;&#x53E3;&#x53F7;&#x4E3A;65432</p><p>&#x5982;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2019/03/21/Flutter-Tools-%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95/configuration.png" alt="configuration.png"></p><p>&#x7136;&#x540E;&#x4EE5;debug&#x65B9;&#x5F0F;&#x8FD0;&#x884C;&#x8BE5;&#x65B0;&#x5EFA;&#x7684;configuration&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x4E4B;&#x524D;&#x7B49;&#x5F85;&#x7684;&#x8FDB;&#x7A0B;&#x5C31;&#x4F1A;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x4E0B;&#x53BB;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x7684;&#x5728;&#x65AD;&#x70B9;&#x7684;&#x5730;&#x65B9;&#x505C;&#x4F4F;&#xFF0C;&#x5982;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2019/03/21/Flutter-Tools-%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95/debug.png" alt="debug.png"></p><p>&#x4ECE;&#x65AD;&#x70B9;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x6211;&#x4EEC;&#x6267;&#x884C;flutter&#x7684;&#x53C2;&#x6570;&#x662F;run&#x3002;</p><p>&#x9664;&#x4E86;&#x4EE5;&#x4E0A;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x6CD5;&#xFF0C;&#x5373;&#x76F4;&#x63A5;&#x5728; Android Studio &#x6216;&#x8005; Intellij Idea &#x4E2D;&#x76F4;&#x63A5;&#x8FD0;&#x884C;&#x6307;&#x5B9A;&#x547D;&#x4EE4;&#xFF0C;&#x4ECE;&#x800C;&#x8FDB;&#x884C;&#x8C03;&#x8BD5;&#x3002;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;Dart Command Line App&#x7684;Configuration&#x3002;</p><p>Edit Configurations -&#x300B;New -&#x300B; Dart Command Line App&#x3002;</p><p>&#x5176;&#x4E2D;Dart file&#x6307;&#x5411;flutter_tools.dart&#x6587;&#x4EF6;&#xFF0C;Program arguments&#x4E2D;&#x586B;&#x5199;&#x9700;&#x8981;&#x6267;&#x884C;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x5047;&#x5982;&#x6211;&#x4EEC;&#x8981;&#x6784;&#x5EFA;apk&#xFF0C;&#x6B63;&#x5E38;&#x6765;&#x8BF4;&#x9700;&#x8981;&#x6267;&#x884C;flutter build apk&#x547D;&#x4EE4;&#x8FDB;&#x884C;&#x6784;&#x5EFA;&#xFF0C;&#x6B64;&#x65F6;&#x5219;&#x586B;&#x5199;build apk&#xFF0C;&#x5982;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2019/03/21/Flutter-Tools-%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95/debug_run.png" alt="debug_run.png"></p><p>&#x7136;&#x540E;&#x4EE5;debug&#x7684;&#x65B9;&#x5F0F;&#x8FD0;&#x884C;&#x8BE5;&#x65B0;&#x5EFA;&#x7684;configuration&#xFF0C;&#x5982;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2019/03/21/Flutter-Tools-%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95/direct_run.png" alt="direct_run.png"></p><p>&#x6700;&#x7EC8;&#x6548;&#x679C;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x4ECE;&#x65AD;&#x70B9;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x6211;&#x4EEC;&#x6267;&#x884C;&#x6784;&#x5EFA;&#x7684;&#x53C2;&#x6570;&#x662F;build apk&#xFF0C;&#x5982;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2019/03/21/Flutter-Tools-%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95/direct_run_breakpoint.png" alt="direct_run_breakpoint.png"></p><h4 id="&#x4FEE;&#x6539;&#x6E90;&#x7801;&#x8C03;&#x8BD5;"><a href="#&#x4FEE;&#x6539;&#x6E90;&#x7801;&#x8C03;&#x8BD5;" class="headerlink" title="&#x4FEE;&#x6539;&#x6E90;&#x7801;&#x8C03;&#x8BD5;"></a>&#x4FEE;&#x6539;&#x6E90;&#x7801;&#x8C03;&#x8BD5;</h4><p>&#x9664;&#x4E86;&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x5916;&#xFF0C;&#x6709;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x4E00;&#x4E0B;flutter tools&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x52A0;&#x5165;&#x4E00;&#x4E9B;&#x65E5;&#x5FD7;&#x7B49;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x4F60;&#x4F1A;&#x53D1;&#x73B0;&#x6267;&#x884C;&#x6784;&#x5EFA;&#x540E;&#x4FEE;&#x6539;&#x7684;&#x4EE3;&#x7801;&#x5E76;&#x4E0D;&#x4F1A;&#x751F;&#x6548;&#x3002;&#x5176;&#x5B9E;&#x89E3;&#x51B3;&#x8BE5;&#x95EE;&#x9898;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x5220;&#x9664;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5373;&#x53EF;&#x3002;</p><p>&#x5220;&#x9664;&#x8BE5;&#x6587;&#x4EF6;</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/path/</span>to<span class="regexp">/flutter/</span>bin<span class="regexp">/cache/</span>flutter_tools.stamp</span><br></pre></td></tr></table></figure><p>&#x5F53;&#x6211;&#x4EEC;&#x8FD0;&#x884C;flutter&#x547D;&#x4EE4;&#x65F6;&#x5019;&#x4F1A;&#x53BB;&#x6821;&#x9A8C;&#x8BE5;&#x6587;&#x4EF6;&#xFF0C;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#x8BDD;&#x5C31;&#x4F1A;&#x91CD;&#x65B0;&#x6784;&#x5EFA;/path/to/flutter/packages/flutter_tools&#x4EE3;&#x7801;&#x751F;&#x6210;flutter_tools.snapshot&#xFF0C;&#x4ECE;&#x800C;&#x8BA9;&#x6211;&#x4EEC;&#x7684;&#x6539;&#x52A8;&#x751F;&#x6548;&#x3002;</p><p>&#x5220;&#x9664;&#x8BE5;&#x6587;&#x4EF6;&#x540E;&#xFF0C;&#x518D;&#x91CD;&#x65B0;&#x6267;&#x884C;flutter&#x547D;&#x4EE4;&#xFF0C;&#x4FBF;&#x4F1A;&#x770B;&#x5230;&#x91CD;&#x5EFA;flutter tools&#x7684;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#xFF0C;&#x5982;&#x56FE;&#x6240;&#x793A;&#x3002;</p><p><img src="/2019/03/21/Flutter-Tools-%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95/build_tools.png" alt="build_tools.png"></p><h3 id="Flutter-App-&#x8C03;&#x8BD5;"><a href="#Flutter-App-&#x8C03;&#x8BD5;" class="headerlink" title="Flutter App &#x8C03;&#x8BD5;"></a>Flutter App &#x8C03;&#x8BD5;</h3><p>Flutter App&#x7684;&#x8C03;&#x8BD5;&#x4E5F;&#x6709;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x7B2C;&#x4E00;&#x79CD;&#x662F;&#x76F4;&#x63A5;&#x4EE5;debug&#x7684;&#x65B9;&#x5F0F;&#x8FD0;&#x884C;&#xFF0C;&#x4ECE;&#x800C;&#x6267;&#x884C;&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x4E0D;&#x8FC7;&#x591A;&#x8BF4;&#x660E;&#x3002;&#x53E6;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#x662F;&#x9488;&#x5BF9;&#x6B63;&#x5728;&#x8FD0;&#x884C;&#x7684;App&#xFF0C;&#x76F4;&#x63A5;attach debug&#x8FDB;&#x7A0B;&#x8FDB;&#x884C;&#x8C03;&#x8BD5;&#x3002;</p><p>&#x9996;&#x5148;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5148;&#x8FD0;&#x884C;Flutter App&#xFF0C;&#x5E76;&#x8FDB;&#x5165;Flutter&#x754C;&#x9762;&#xFF0C;&#x5047;&#x5982;&#x6B64;&#x65F6;&#x6211;&#x4EEC;&#x6B64;&#x65F6;&#x9700;&#x8981;attach&#x5230;&#x8BE5;&#x8FDB;&#x7A0B;&#x8FDB;&#x884C;debug&#x3002;&#x9996;&#x5148;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x83B7;&#x53D6;&#x5230;&#x8BBE;&#x5907;&#x4E0A;Observatory&#x7684;&#x7AEF;&#x53E3;&#x53F7;&#xFF0C;&#x8BE5;&#x7AEF;&#x53E3;&#x6700;&#x7EC8;&#x4F1A;&#x6620;&#x5C04;&#x5230;PC&#x4E0A;&#x7684;&#x67D0;&#x4E2A;&#x7AEF;&#x53E3;&#x53F7;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x627E;&#x5230;PC&#x4E0A;&#x7684;&#x8BE5;&#x7AEF;&#x53E3;&#x53F7;&#xFF0C;&#x90A3;&#x4E48;&#x5982;&#x4F55;&#x624D;&#x80FD;&#x83B7;&#x53D6;&#x5230;&#x8BE5;&#x7AEF;&#x53E3;&#x53F7;&#x5462;&#xFF1F;&#x5176;&#x4E2D;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#x662F;&#x8FD0;&#x884C;flutter run&#x7684;&#x65F6;&#x5019;&#x52A0;&#x5165;--verbose&#x53C2;&#x6570;&#xFF0C;&#x6700;&#x7EC8;&#x4F1A;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#xFF0C;&#x5982;&#x4E0B;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">15</span>:<span class="number">49</span>:<span class="number">23.667</span> <span class="number">1138</span> info flutter.tools [] Waiting <span class="keyword">for</span> observatory port to be available...</span><br><span class="line"><span class="number">15</span>:<span class="number">49</span>:<span class="number">42.327</span> <span class="number">1139</span> info flutter.tools Observatory URL on device: http:<span class="comment">//127.0.0.1:37649/</span></span><br><span class="line"><span class="number">15</span>:<span class="number">49</span>:<span class="number">42.327</span> <span class="number">1140</span> info flutter.tools [+<span class="number">18661</span> ms] executing: /Users/lizhangqu/AndroidSDK/platform-tools/adb -s fc85f109 forward tcp:<span class="number">0</span> tcp:<span class="number">37649</span></span><br><span class="line"><span class="number">15</span>:<span class="number">49</span>:<span class="number">42.350</span> <span class="number">1141</span> info flutter.tools [+<span class="number">24</span> ms] <span class="number">63899</span></span><br><span class="line"><span class="number">15</span>:<span class="number">49</span>:<span class="number">42.350</span> <span class="number">1142</span> info flutter.tools Forwarded host port <span class="number">63899</span> to device port <span class="number">37649</span> <span class="keyword">for</span> Observatory</span><br><span class="line"><span class="number">15</span>:<span class="number">49</span>:<span class="number">42.358</span> <span class="number">1143</span> info flutter.tools [+<span class="number">6</span> ms] Connecting to service protocol: http:<span class="comment">//127.0.0.1:63899/</span></span><br><span class="line"><span class="number">15</span>:<span class="number">49</span>:<span class="number">42.558</span> <span class="number">1144</span> info flutter.tools [+<span class="number">199</span> ms] Successfully connected to service protocol: http:<span class="comment">//127.0.0.1:63899/</span></span><br></pre></td></tr></table></figure><p>&#x6B64;&#x65F6;&#xFF0C;63899&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7684;&#x90A3;&#x4E2A;&#x7AEF;&#x53E3;&#x53F7;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;Dart Remote Debug&#x76F4;&#x63A5;attach&#x5230;&#x8BE5;&#x7AEF;&#x53E3;&#x53F7;&#x4E0A;&#x5373;&#x53EF;&#x3002;</p><p>&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x60C5;&#x51B5;&#x5E76;&#x975E;&#x5982;&#x6B64;&#xFF0C;&#x4E00;&#x822C;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x8FD0;&#x884C;&#x4E86;&#x8BE5;App&#xFF0C;&#x5E76;&#x4E14;&#x4E5F;&#x6CA1;&#x6709;&#x4F7F;&#x7528;verbose&#x53C2;&#x6570;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#xFF0C;&#x90A3;&#x4E48;&#x8981;&#x600E;&#x4E48;&#x83B7;&#x53D6;&#x8BE5;&#x7AEF;&#x53E3;&#x53F7;&#x5462;?&#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x6295;&#x673A;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5C31;&#x662F;&#x4F7F;&#x7528;adb forward&#x547D;&#x4EE4;&#x67E5;&#x770B;&#x7AEF;&#x53E3;&#x8F6C;&#x53D1;&#x6620;&#x5C04;&#x5173;&#x7CFB;</p><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">adb forward <span class="comment">--list</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x65F6;&#x5019;&#x4F1A;&#x8F93;&#x51FA;&#x4E00;&#x4E9B;&#x7AEF;&#x53E3;&#x6620;&#x5C04;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">&#x279C;  ~ adb forward --list</span><br><span class="line">fc85f109 tcp:<span class="number">64698</span> tcp:<span class="number">43007</span></span><br><span class="line">fc85f109 tcp:<span class="number">64783</span> tcp:<span class="number">38903</span></span><br><span class="line">fc85f109 tcp:<span class="number">65171</span> tcp:<span class="number">37303</span></span><br><span class="line">fc85f109 tcp:<span class="number">8010</span> tcp:<span class="number">39345</span></span><br><span class="line">fc85f109 tcp:<span class="number">49879</span> tcp:<span class="number">42331</span></span><br><span class="line">fc85f109 tcp:<span class="number">50094</span> tcp:<span class="number">40259</span></span><br><span class="line">fc85f109 tcp:<span class="number">50736</span> tcp:<span class="number">39359</span></span><br><span class="line">fc85f109 tcp:<span class="number">55097</span> tcp:<span class="number">42149</span></span><br><span class="line">fc85f109 tcp:<span class="number">63899</span> tcp:<span class="number">37649</span></span><br><span class="line">&#x279C;  ~</span><br></pre></td></tr></table></figure><p>&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x884C;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x627E;&#x7684;&#x7AEF;&#x53E3;&#x53F7;&#xFF0C;&#x5DE6;&#x4FA7;&#x4E00;&#x5217;&#x662F;&#x8BBE;&#x5907;&#x6807;&#x793A;&#x7B26;&#xFF0C;&#x4E2D;&#x95F4;&#x4E00;&#x5217;&#x662F;PC&#x7684;&#x7AEF;&#x53E3;&#x53F7;&#xFF0C;&#x53F3;&#x4FA7;&#x4E00;&#x5217;&#x662F;&#x624B;&#x673A;&#x8BBE;&#x5907;&#x7684;&#x7AEF;&#x53E3;&#x53F7;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x8981;&#x7684;&#x7AEF;&#x53E3;&#x53F7;&#x5C31;&#x662F;&#x6700;&#x540E;&#x4E00;&#x884C;&#x7684;&#x4E2D;&#x95F4;&#x4E00;&#x5217;&#xFF0C;&#x5373;63899&#x3002;</p><p>&#x5047;&#x5982;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x4E0D;&#x662F;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x6211;&#x4EEC;&#x5C31;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x4ECE;&#x540E;&#x5F80;&#x524D;&#x8BD5;&#xFF0C;&#x603B;&#x6709;&#x4E00;&#x4E2A;&#x4F1A;&#x662F;&#x7684;&#xFF0C;&#x53EA;&#x8981;&#x80FD;attach&#x6210;&#x529F;&#x7AEF;&#x53E3;&#x5C31;&#x662F;&#x5BF9;&#x7684;&#xFF0C;&#x6216;&#x8005;&#x76F4;&#x63A5;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x76F4;&#x63A5;&#x6253;&#x5F00;&#x8BE5;&#x7AEF;&#x53E3;&#xFF0C;&#x6BD4;&#x5982; <a href="http://127.0.0.1:63899" target="_blank" rel="noopener">http://127.0.0.1:63899</a>&#x3002;&#x5982;&#x679C;&#x53EF;&#x4EE5;&#x6253;&#x5F00;&#xFF0C;&#x5E76;&#x4E14;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF0C;&#x90A3;&#x4E48;&#x7AEF;&#x53E3;&#x57FA;&#x672C;&#x4E5F;&#x662F;&#x5BF9;&#x7684;&#x3002;</p><p><img src="/2019/03/21/Flutter-Tools-%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95/browser.png" alt="browser.png"></p><p>&#x627E;&#x5230;&#x7AEF;&#x53E3;&#x53F7;&#x540E;&#xFF0C;&#x4F7F;&#x7528;Dart Remote Debug&#x76F4;&#x63A5;attach&#x5230;&#x8BE5;&#x7AEF;&#x53E3;&#x53F7;&#x4E0A;&#x5373;&#x53EF;&#xFF0C;Host&#x4FDD;&#x6301;&#x4E0D;&#x53D8;&#x8FD8;&#x662F;&#x4F7F;&#x7528;127.0.0.1&#xFF0C;&#x6700;&#x7EC8;&#x53EA;&#x8981;&#x80FD;&#x770B;&#x5230;Connected&#x5C31;&#x8868;&#x793A;&#x6210;&#x529F;&#x4E86;&#xFF0C;&#x5982;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2019/03/21/Flutter-Tools-%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95/connected.png" alt="connected.png"></p><h3 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h3><p>&#x4E07;&#x53D8;&#x4E0D;&#x79BB;&#x5176;&#x5B97;&#xFF0C;&#x8C03;&#x8BD5;&#x7684;&#x65B9;&#x5F0F;&#x603B;&#x662F;&#x60F3;&#x901A;&#x7684;&#x3002;</p>]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>flutter</tag>
        <tag>debugger</tag>
        <tag>breakpoint</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter Engine 编译指南</title>
    <url>/2019/02/26/Flutter-Engine-%E7%BC%96%E8%AF%91%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>Flutter &#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x8DE8;&#x5E73;&#x53F0;&#xFF0C;&#x9AD8;&#x6027;&#x80FD;&#x7684;&#x79FB;&#x52A8;&#x5F00;&#x53D1;&#x6846;&#x67B6;&#xFF0C;&#x901A;&#x8FC7;Skia&#x7ED8;&#x5236;&#x5F15;&#x64CE;&#x5BF9;UI&#x8FDB;&#x884C;&#x6E32;&#x67D3;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x5FEB;&#x901F;&#x5730;&#x6784;&#x5EFA;iOS&#x548C;Android&#x5E94;&#x7528;&#xFF0C;&#x5BF9;&#x4E8E;&#x666E;&#x901A;&#x5F00;&#x53D1;&#x8005;&#x6765;&#x8BB2;&#xFF0C;&#x5B83;&#x57FA;&#x672C;&#x5DF2;&#x7ECF;&#x505A;&#x5230;&#x5F00;&#x7BB1;&#x5373;&#x7528;&#x7684;&#x7A0B;&#x5EA6;&#x3002;&#x5230;2019.02.26&#x4E3A;&#x6B62;&#xFF0C;Flutter&#x4E5F;&#x5DF2;&#x7ECF;&#x5BF9;&#x5916;&#x53D1;&#x5E03;&#x4E86;Release 1.2.2&#x7248;&#x672C;&#xFF0C;&#x5E76;&#x4E14;&#x5904;&#x4E8E;&#x4E0D;&#x65AD;&#x8FED;&#x4EE3;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x3002;&#x4F46;&#x662F;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x66F4;&#x6DF1;&#x5165;&#x7684;&#x5B66;&#x4E60;&#x6216;&#x8005;&#x8FDB;&#x884C;&#x5B9A;&#x5236;&#x64CD;&#x4F5C;&#xFF0C;&#x90A3;&#x4E48;&#x96BE;&#x514D;&#x4F1A;&#x9700;&#x8981;&#x5BF9;Flutter Engine&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#xFF0C;&#x4E5F;&#x4F1A;&#x9047;&#x5230;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#x3002;</p><a id="more"></a><p>&#x9996;&#x5148;&#x6211;&#x4EEC;&#x6765;&#x660E;&#x786E;&#x4E00;&#x4E0B;&#x7F16;&#x8BD1;Flutter Engine&#x7684;&#x6700;&#x7EC8;&#x76EE;&#x7684;&#x3002;</p><ul><li>&#x5B66;&#x4E60;&#x3002;&#x5BF9;&#x4E8E;&#x4E00;&#x90E8;&#x5206;&#x4FDD;&#x6301;&#x597D;&#x5947;&#x5FC3;&#x7684;&#x5F00;&#x53D1;&#x8005;&#x6765;&#x8BF4;&#x53EF;&#x80FD;&#x4F1A;&#x901A;&#x8FC7;&#x7F16;&#x8BD1;Flutter Engine&#x6765;&#x8FDB;&#x884C;&#x5BF9;Flutter&#x7684;&#x6574;&#x4F53;&#x5B66;&#x4E60;&#x548C;&#x5B9E;&#x8DF5;&#x638C;&#x63E1;&#xFF0C;&#x8FD9;&#x548C;&#x7F16;&#x8BD1;AOSP&#x6E90;&#x7801;&#x6765;&#x8FDB;&#x884C;Android&#x7684;&#x5B66;&#x4E60;&#x662F;&#x4E00;&#x6837;&#x3002;</li><li>&#x5B9A;&#x5236;&#x3002;&#x5BF9;&#x4E8E;&#x73B0;&#x6709;Flutter&#x7248;&#x672C;&#x4E0D;&#x80FD;&#x6EE1;&#x8DB3;&#x7684;&#x573A;&#x666F;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x9762;&#x4E34;&#x5B9A;&#x5236;&#x5316;&#x64CD;&#x4F5C;&#x3002;</li></ul><p>&#x5B9E;&#x9645;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x57FA;&#x672C;&#x4E0D;&#x4F1A;&#x5BF9;Flutter Engine&#x8FDB;&#x884C;&#x5B9A;&#x5236;&#x64CD;&#x4F5C;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x573A;&#x666F;&#x90FD;&#x662F;&#x79C9;&#x7740;&#x5B66;&#x4E60;&#x7684;&#x76EE;&#x7684;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#x7684;&#x3002;</p><h3 id="&#x7F16;&#x8BD1;"><a href="#&#x7F16;&#x8BD1;" class="headerlink" title="&#x7F16;&#x8BD1;"></a>&#x7F16;&#x8BD1;</h3><h4 id="&#x914D;&#x7F6E;&#x4EE3;&#x7406;"><a href="#&#x914D;&#x7F6E;&#x4EE3;&#x7406;" class="headerlink" title="&#x914D;&#x7F6E;&#x4EE3;&#x7406;"></a>&#x914D;&#x7F6E;&#x4EE3;&#x7406;</h4><p>&#x57FA;&#x4E8E;&#x5F53;&#x524D;&#x6211;&#x4EEC;&#x6240;&#x5904;&#x7F51;&#x7EDC;&#x73AF;&#x5883;&#xFF0C;&#x62C9;&#x53D6;Flutter Engine&#x6E90;&#x7801;&#xFF0C;&#x5C06;&#x4F1A;&#x9762;&#x5BF9;&#x79CD;&#x79CD;&#x95EE;&#x9898;&#xFF0C;&#x5982;git&#x6E90;&#x7801;&#x62C9;&#x53D6;&#x4E0D;&#x4E0B;&#x6765;&#xFF0C;&#x67D0;zip&#x6587;&#x4EF6;&#x4E0B;&#x8F7D;&#x4E0D;&#x4E0B;&#x6765;&#x3002;</p><p>&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x63D0;&#x524D;&#x8FDB;&#x884C;&#x4EE3;&#x7406;&#x914D;&#x7F6E;&#xFF0C;&#x5305;&#x62EC;&#xFF1A;</p><ul><li>git&#x4EE3;&#x7406;&#x914D;&#x7F6E;&#xFF0C;&#x542B;git&#x7684;http/https&#x534F;&#x8BAE;&#x4EE3;&#x7406;&#x914D;&#x7F6E;&#x548C;git&#x7684;ssh&#x534F;&#x8BAE;&#x4EE3;&#x7406;&#x914D;&#x7F6E;</li><li>&#x7EC8;&#x7AEF;&#x7684;http/https&#x4EE3;&#x7406;&#x914D;&#x7F6E;</li></ul><p>&#x53EA;&#x8981;&#x5C06;&#x4EE5;&#x4E0A;&#x4EE3;&#x7406;&#x914D;&#x7F6E;&#x5B8C;&#x6210;&#xFF0C;&#x90A3;&#x4E48;&#x6E90;&#x7801;&#x540C;&#x6B65;&#x8FC7;&#x7A0B;&#x4F1A;&#x53D8;&#x5F97;&#x5F02;&#x5E38;&#x987A;&#x5229;&#xFF0C;&#x4E0B;&#x8F7D;&#x8FC7;&#x7A0B;&#x4F1A;&#x53D8;&#x5F97;&#x5341;&#x5206;&#x5FEB;&#x901F;&#x3002;&#x6B64;&#x5904;&#x57FA;&#x4E8E;Shadowsocks&#x8FDB;&#x884C;&#x4EE3;&#x7406;&#x7684;&#x914D;&#x7F6E;&#x6F14;&#x793A;&#x3002;</p><h5 id="&#x914D;&#x7F6E;git&#x4EE3;&#x7406;"><a href="#&#x914D;&#x7F6E;git&#x4EE3;&#x7406;" class="headerlink" title="&#x914D;&#x7F6E;git&#x4EE3;&#x7406;"></a>&#x914D;&#x7F6E;git&#x4EE3;&#x7406;</h5><p>git&#x4EE3;&#x7406;&#x4E00;&#x822C;&#x4F1A;&#x5206;&#x4E3A;&#x4E24;&#x79CD;&#xFF0C;&#x4E00;&#x79CD;&#x662F;&#x8D70;http&#x534F;&#x8BAE;&#x7684;&#x4EE3;&#x7406;&#xFF0C;&#x53E6;&#x4E00;&#x79CD;&#x662F;&#x8D70;ssh&#x534F;&#x8BAE;&#x7684;&#x4EE3;&#x7406;&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x8D70;http&#x534F;&#x8BAE;&#x7684;&#x4EE3;&#x7406;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;(&#x7AEF;&#x53E3;&#x53F7;&#x6839;&#x636E;&#x672C;&#x5730;Shadowsocks&#x914D;&#x7F6E;&#x81EA;&#x884C;&#x4FEE;&#x6539;)&#xFF1A;</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">git config --global http<span class="selector-class">.proxy</span> http:<span class="comment">//127.0.0.1:1088</span></span><br><span class="line">git config --global https<span class="selector-class">.proxy</span> http:<span class="comment">//127.0.0.1:1088</span></span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x8981;&#x53D6;&#x6D88;&#x4EE3;&#x7406;&#xFF0C;&#x5219;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--global --unset http.proxy</span><br><span class="line">git<span class="built_in"> config </span>--global --unset https.proxy</span><br></pre></td></tr></table></figure><p>&#x52A0;&#x4E0A;&#x5982;&#x4E0A;&#x914D;&#x7F6E;&#x540E;&#xFF0C;&#x5BF9;&#x4E8E;&#x516C;&#x53F8;&#x5185;&#x7F51;&#x7684;git&#x662F;&#x65E0;&#x6CD5;&#x8FDB;&#x884C;&#x8BBF;&#x95EE;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x8FD8;&#x5F97;&#x628A;&#x5185;&#x7F51;&#x7684;git&#x5730;&#x5740;&#x52A0;&#x5165;&#x5230;no_proxy&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x4E2D;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">no_proxy</span>=<span class="string">&quot;localhost,127.0.0.1,&#x5185;&#x7F51;git&#x57DF;&#x540D;&quot;</span></span><br></pre></td></tr></table></figure><p>&#x9664;&#x4E86;http&#x534F;&#x8BAE;&#x4EE3;&#x7406;&#xFF0C;git&#x53EF;&#x80FD;&#x8FD8;&#x4F1A;&#x8D70;ssh&#x534F;&#x8BAE;&#xFF0C;&#x5BF9;&#x4E8E;ssh&#x534F;&#x8BAE;&#x7684;&#x914D;&#x7F6E;&#x5176;&#x5B9E;&#x4E5F;&#x662F;&#x7C7B;&#x4F3C;</p><p>&#x7F16;&#x8F91;ssh config&#x6587;&#x4EF6;<br></p><figure class="highlight arcade"><table><tr><td class="code"><pre><span class="line">vim ~<span class="regexp">/.ssh/</span>config</span><br></pre></td></tr></table></figure><p></p><p>&#x52A0;&#x5165;&#x5982;&#x4E0B;&#x5185;&#x5BB9;&#xFF08;&#x7AEF;&#x53E3;&#x53F7;&#x6839;&#x636E;&#x672C;&#x5730;Shadowsocks&#x914D;&#x7F6E;&#x81EA;&#x884C;&#x4FEE;&#x6539;&#xFF09;<br></p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">   HostName github.com</span><br><span class="line">  <span class="built_in"> User </span>git</span><br><span class="line">   # &#x8D70; HTTP &#x4EE3;&#x7406;</span><br><span class="line">   # ProxyCommand socat - PROXY:127.0.0.1:%h:%p,<span class="attribute">proxyport</span>=1088</span><br><span class="line">   # &#x8D70; socks5 &#x4EE3;&#x7406;&#xFF08;&#x5982; Shadowsocks&#xFF09;</span><br><span class="line">   ProxyCommand nc -v -x 127.0.0.1:1086 %h %p</span><br></pre></td></tr></table></figure><p></p><p>&#x6CE8;&#x610F;&#x6B64;&#x5904;&#x4F7F;&#x7528;&#x7684;&#x662F;socks5&#x4EE3;&#x7406;&#xFF0C;&#x800C;http/https&#x534F;&#x8BAE;&#x914D;&#x7F6E;&#x7684;&#x662F;http&#x4EE3;&#x7406;&#xFF0C;&#x81F3;&#x6B64;&#x5C31;&#x5B8C;&#x6210;&#x4E86;git&#x7684;&#x4EE3;&#x7406;&#x914D;&#x7F6E;</p><h5 id="&#x914D;&#x7F6E;&#x7EC8;&#x7AEF;http-https&#x4EE3;&#x7406;"><a href="#&#x914D;&#x7F6E;&#x7EC8;&#x7AEF;http-https&#x4EE3;&#x7406;" class="headerlink" title="&#x914D;&#x7F6E;&#x7EC8;&#x7AEF;http/https&#x4EE3;&#x7406;"></a>&#x914D;&#x7F6E;&#x7EC8;&#x7AEF;http/https&#x4EE3;&#x7406;</h5><p>&#x9664;&#x4E86;git&#x9700;&#x8981;&#x914D;&#x7F6E;&#x4EE3;&#x7406;&#x4E4B;&#x5916;&#xFF0C;&#x5176;&#x5B9E;&#x8FD8;&#x9700;&#x8981;&#x914D;&#x7F6E;&#x7EC8;&#x7AEF;http/https&#x4EE3;&#x7406;&#xFF0C;&#x56E0;&#x4E3A;&#x6E90;&#x7801;&#x4E0B;&#x8F7D;&#x8FC7;&#x7A0B;&#x4E2D;&#x9664;&#x4E86;&#x7528;git&#x53BB;&#x4E0B;&#x8F7D;&#x6E90;&#x7801;&#x5916;&#xFF0C;&#x8FD8;&#x4F1A;&#x501F;&#x7528;python&#x53BB;&#x4E0B;&#x8F7D;&#x4E00;&#x4E9B;zip&#x6587;&#x4EF6;&#xFF0C;&#x4EE5;&#x53CA;&#x4F7F;&#x7528;cipd&#x4E0B;&#x8F7D;&#x4E00;&#x4E9B;&#x6587;&#x4EF6;&#xFF0C;&#x4F7F;&#x7528;&#x8FD9;&#x4E9B;&#x5DE5;&#x5177;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5728;&#x7EC8;&#x7AEF;&#x4E2D;&#x53EF;&#x80FD;&#x65E0;&#x6CD5;&#x6B63;&#x5E38;&#x5B8C;&#x6210;&#x5BF9;&#x5E94;&#x6587;&#x4EF6;&#x7684;&#x4E0B;&#x8F7D;&#x3002;</p><p>&#x56E0;&#x4E3A;&#x8FD9;&#x90E8;&#x5206;&#x4EE3;&#x7406;&#x4F7F;&#x7528;&#x573A;&#x666F;&#x4E0D;&#x591A;&#xFF0C;&#x5168;&#x5C40;&#x5171;&#x4E24;&#x5904;</p><ul><li>src/tools/dart/update.py</li><li>src/tools/buildtools/update.py</li></ul><p>&#x4E3A;&#x4E86;&#x5C3D;&#x53EF;&#x80FD;&#x7684;&#x4E0D;&#x6C61;&#x67D3;&#x5168;&#x5C40;&#x73AF;&#x5883;&#xFF0C;&#x6211;&#x4EEC;&#x8FDB;&#x884C;&#x4E34;&#x65F6;&#x7684;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x5BFC;&#x51FA;(&#x7AEF;&#x53E3;&#x53F7;&#x6839;&#x636E;&#x672C;&#x5730;Shadowsocks&#x914D;&#x7F6E;&#x81EA;&#x884C;&#x4FEE;&#x6539;)&#x3002;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">http_proxy</span>=http://127.0.0.1:1088</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">https_proxy</span>=http://127.0.0.1:1088</span><br></pre></td></tr></table></figure><p>&#x5B8C;&#x6210;&#x4EE5;&#x4E0A;&#x914D;&#x7F6E;&#x540E;&#xFF0C;&#x6E90;&#x7801;&#x540C;&#x6B65;&#x8FC7;&#x7A0B;&#x4F1A;&#x53D8;&#x5F97;&#x5341;&#x5206;&#x987A;&#x7545;&#xFF0C;&#x800C;&#x4E0D;&#x7528;&#x8FDB;&#x884C;&#x6F2B;&#x957F;&#x7684;&#x7B49;&#x5F85;&#x3002;</p><h4 id="&#x914D;&#x7F6E;depot-tools&#x5DE5;&#x5177;"><a href="#&#x914D;&#x7F6E;depot-tools&#x5DE5;&#x5177;" class="headerlink" title="&#x914D;&#x7F6E;depot_tools&#x5DE5;&#x5177;"></a>&#x914D;&#x7F6E;depot_tools&#x5DE5;&#x5177;</h4><p>depot_tools&#x662F;&#x4E2A;&#x5DE5;&#x5177;&#x5305;&#xFF0C;&#x91CC;&#x9762;&#x5305;&#x542B;gclient&#x3001;gn&#x548C;ninja&#x7B49;&#x5DE5;&#x5177;&#x3002;&#x662F;Google&#x4E3A;&#x89E3;&#x51B3;Chromium&#x6E90;&#x7801;&#x7BA1;&#x7406;&#x95EE;&#x9898;&#x4E3A;Chromium&#x63D0;&#x4F9B;&#x7684;&#x6E90;&#x4EE3;&#x7801;&#x7BA1;&#x7406;&#x7684;&#x4E00;&#x4E2A;&#x5DE5;&#x5177;&#x3002;Flutter&#x6E90;&#x7801;&#x540C;&#x6B65;&#x4E5F;&#x9700;&#x8981;&#x4F9D;&#x8D56;depot_tools&#x5DE5;&#x5177;&#x3002;</p><p>clone depot_tools&#x6E90;&#x7801;</p><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://chromium.googlesource.com/chromium/tools/depot_tools.git</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x5C06;depot_tools&#x52A0;&#x5165;&#x73AF;&#x5883;&#x53D8;&#x91CF;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="string">&quot;<span class="variable">$PATH</span>:/path/to/depot_tools&quot;</span></span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x6109;&#x5FEB;&#x7684;&#x4F7F;&#x7528;depot_tools&#x4E86;&#xFF0C;&#x5173;&#x4E8E;depot_tools&#x7684;&#x4F7F;&#x7528;&#x53EF;&#x4EE5;&#x53C2;&#x8003;</p><ul><li><a href="https://dev.chromium.org/developers/how-tos/depottools" target="_blank" rel="noopener">Using depot_tools</a></li><li><a href="https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html" target="_blank" rel="noopener">depot_tools_tutorial</a></li></ul><h4 id="&#x83B7;&#x53D6;&#x6E90;&#x7801;"><a href="#&#x83B7;&#x53D6;&#x6E90;&#x7801;" class="headerlink" title="&#x83B7;&#x53D6;&#x6E90;&#x7801;"></a>&#x83B7;&#x53D6;&#x6E90;&#x7801;</h4><p>&#x76EE;&#x524D;&#x5728;Linux&#x4E0A;&#x53EA;&#x80FD;&#x7F16;&#x8BD1;Flutter&#x7684;Android&#x4EA7;&#x7269;&#xFF0C;&#x5728;Windows&#x4E0A;&#x4E0D;&#x652F;&#x6301;&#x7F16;&#x8BD1;&#xFF0C;&#x5728;Mac&#x4E0A;&#x652F;&#x6301;&#x540C;&#x65F6;&#x7F16;&#x8BD1;Flutter&#x7684;Android&#x548C;iOS&#x4EA7;&#x7269;&#xFF0C;&#x56E0;&#x6B64;Mac&#x662F;&#x7F16;&#x8BD1;Flutter&#x7684;&#x6700;&#x4F73;&#x9009;&#x62E9;&#xFF0C;&#x6B64;&#x6587;&#x4E5F;&#x662F;&#x57FA;&#x4E8E;Mac&#x73AF;&#x5883;&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#x7684;&#x3002;</p><p>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#x7528;&#x4E8E;&#x540C;&#x6B65;Flutter&#x6E90;&#x7801;&#xFF0C;&#x6309;&#x7167;&#x7EA6;&#x5B9A;&#xFF0C;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;engine&#x3002;</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> engine</span><br><span class="line"><span class="built_in">cd</span> engine</span><br></pre></td></tr></table></figure><p>&#x5728;engine&#x76EE;&#x5F55;&#x4E0B;&#x521B;&#x5EFA;.gclient&#x6587;&#x4EF6;&#x7528;&#x4E8E;&#x540C;&#x6B65;&#x6E90;&#x7801;&#xFF0C;&#x5B98;&#x65B9;&#x5EFA;&#x8BAE;&#x6211;&#x4EEC;fork&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#xFF0C;&#x4F46;&#x662F;&#x4E2A;&#x4EBA;&#x89C9;&#x5F97;&#x5982;&#x679C;&#x4F60;&#x4E0D;&#x8FDB;&#x884C;&#x5F00;&#x53D1;&#xFF0C;&#x7EAF;&#x7CB9;&#x4E3A;&#x4E86;&#x7F16;&#x8BD1;&#x5B66;&#x4E60;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x5C31;&#x6CA1;&#x6709;fork&#x7684;&#x5FC5;&#x8981;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x8981;&#x8FDB;&#x884C;&#x5F00;&#x53D1;&#xFF0C;&#x5B9A;&#x5236;&#x4E00;&#x4E9B;&#x9700;&#x6C42;&#xFF0C;&#x90A3;fork&#x8FD8;&#x662F;&#x6709;&#x5FC5;&#x8981;&#x7684;&#x3002;</p><p>&#x5728;.gclient&#x6587;&#x4EF6;&#x4E2D;&#x52A0;&#x5165;&#x5982;&#x4E0B;&#x5185;&#x5BB9;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x8FDB;&#x884C;&#x4E86;fork&#xFF0C;&#x90A3;&#x4E48;url&#x4FEE;&#x6539;&#x4E3A;&#x4F60;fork&#x540E;&#x7684;url&#xFF0C;&#x6B64;&#x5904;&#x6CA1;&#x6709;&#x8FDB;&#x884C;fork&#xFF0C;&#x6240;&#x4EE5;&#x662F;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x5B98;&#x65B9;&#x7684;url&#x3002;</p><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">solutions = [</span><br><span class="line">  {</span><br><span class="line">    <span class="string">&quot;managed&quot;</span>: False,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;src/flutter&quot;</span>,</span><br><span class="line">    <span class="string">&quot;url&quot;</span>: <span class="string">&quot;git@github.com:flutter/engine.git&quot;</span>,</span><br><span class="line">    <span class="string">&quot;custom_deps&quot;</span>: {},</span><br><span class="line">    <span class="string">&quot;deps_file&quot;</span>: <span class="string">&quot;DEPS&quot;</span>,</span><br><span class="line">    <span class="string">&quot;safesync_url&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  },</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x60F3;&#x6307;&#x5B9A;flutter engine revision&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;url&#x52A0;&#x5165;@revision&#xFF0C;&#x5982;&#x68C0;&#x51FA;v1.9.1&#x7684;engine&#x7248;&#x672C;</p><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">solutions = [</span><br><span class="line">  {</span><br><span class="line">    <span class="string">&quot;managed&quot;</span>: False,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;src/flutter&quot;</span>,</span><br><span class="line">    <span class="string">&quot;url&quot;</span>: <span class="string">&quot;git@github.com:flutter/engine.git@b863200c37df4ed378042de11c4e9ff34e4e58c9&quot;</span>,</span><br><span class="line">    <span class="string">&quot;custom_deps&quot;</span>: {},</span><br><span class="line">    <span class="string">&quot;deps_file&quot;</span>: <span class="string">&quot;DEPS&quot;</span>,</span><br><span class="line">    <span class="string">&quot;safesync_url&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  },</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x60F3;&#x8986;&#x76D6;&#x7279;&#x5B9A;&#x7684;&#x4F9D;&#x8D56;&#xFF0C;&#x53EF;&#x5728;custom_deps&#x4E2D;&#x91CD;&#x5199;&#xFF0C;&#x6BD4;&#x5982;&#x6211;&#x60F3;&#x8986;&#x76D6;buildroot&#xFF0C;&#x4ECE;<a href="mailto:`git@github.com" target="_blank" rel="noopener">`git@github.com</a>:flutter/engine.git`&#x5DE5;&#x7A0B;&#x4E2D;&#x7684;DEPS&#x6587;&#x4EF6;&#x4E2D;&#x53EF;&#x4EE5;&#x627E;&#x5230;buildroot&#x5BF9;&#x5E94;&#x7684;&#x91CA;&#x653E;&#x8DEF;&#x5F84;&#x4E3A;src</p><figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">&apos;src&apos;: &apos;https://github.com/flutter/buildroot.git&apos; + &apos;@&apos; + &apos;5a33d6ab06fa2cc94cdd864ff238d2c58d6b7e4e&apos;,</span><br></pre></td></tr></table></figure><p>&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x8986;&#x76D6;src&#x7684;dep&#x5373;&#x53EF;&#x5B8C;&#x6210;buildroot&#x7684;&#x8986;&#x76D6;&#xFF0C;&#x5982;</p><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">solutions = [</span><br><span class="line">  {</span><br><span class="line">    <span class="string">&quot;managed&quot;</span>: False,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;src/flutter&quot;</span>,</span><br><span class="line">    <span class="string">&quot;url&quot;</span>: <span class="string">&quot;git@github.com:flutter/engine.git@b863200c37df4ed378042de11c4e9ff34e4e58c9&quot;</span>,</span><br><span class="line">    <span class="string">&quot;custom_deps&quot;</span>: {</span><br><span class="line">        <span class="string">&quot;src&quot;</span>:<span class="string">&quot;https://github.com/flutter/buildroot.git@fa860b64553b54bbd715ebd2145523a4999a3b3a&quot;</span></span><br><span class="line">    },</span><br><span class="line">    <span class="string">&quot;deps_file&quot;</span>: <span class="string">&quot;DEPS&quot;</span>,</span><br><span class="line">    <span class="string">&quot;safesync_url&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  },</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x5728;engine&#x76EE;&#x5F55;&#x4E0B;&#x6267;&#x884C;&#x6E90;&#x7801;&#x540C;&#x6B65;&#x64CD;&#x4F5C;</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> /path/<span class="keyword">to</span>/engine</span><br><span class="line">gclient <span class="keyword">sync</span> --<span class="keyword">verbose</span></span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x6E90;&#x7801;&#x540C;&#x6B65;&#x8FC7;&#x7A0B;&#x4E2D;&#x901F;&#x5EA6;&#x5F88;&#x6162;&#x6216;&#x8005;&#x51FA;&#x73B0;&#x4E86;&#x4E00;&#x4E9B;&#x5F02;&#x5E38;&#xFF0C;&#x57FA;&#x672C;&#x5C31;&#x662F;&#x4EE3;&#x7406;&#x914D;&#x7F6E;&#x5B58;&#x5728;&#x95EE;&#x9898;&#xFF0C;&#x8BF7;&#x8BA4;&#x771F;&#x68C0;&#x67E5;&#x4EE3;&#x7406;&#x662F;&#x5426;&#x914D;&#x7F6E;&#x6B63;&#x786E;&#x3002;</p><p>&#x5982;&#x679C;&#x51FA;&#x73B0;&#x5982;&#x4E0B;Operation timed out&#x5F02;&#x5E38;</p><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">----------------------------------------</span><br><span class="line">________ running &apos;/usr/<span class="keyword">local</span>/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/Resources/Python.<span class="keyword">app</span>/Contents/MacOS/Python src/build/landmines.py&apos; <span class="keyword">in</span> &apos;/Users/lizhangqu/Desktop/engine&apos;</span><br><span class="line">________ running &apos;/usr/<span class="keyword">local</span>/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/Resources/Python.<span class="keyword">app</span>/Contents/MacOS/Python src/build/vs_toolchain.py <span class="keyword">update</span>&apos; <span class="keyword">in</span> &apos;/Users/lizhangqu/Desktop/engine&apos;</span><br><span class="line">________ running &apos;/usr/<span class="keyword">local</span>/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/Resources/Python.<span class="keyword">app</span>/Contents/MacOS/Python src/tools/dart/<span class="keyword">update</span>.py&apos; <span class="keyword">in</span> &apos;/Users/lizhangqu/Desktop/engine&apos;</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;src/tools/dart/update.py&quot;</span>, <span class="keyword">line</span> 92, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    sys.<span class="keyword">exit</span>(main())</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;src/tools/dart/update.py&quot;</span>, <span class="keyword">line</span> 82, <span class="keyword">in</span> main</span><br><span class="line">    urllib.urlretrieve(sdk_url, output_file)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib.py&quot;</span>, <span class="keyword">line</span> 98, <span class="keyword">in</span> urlretrieve</span><br><span class="line">    <span class="keyword">return</span> opener.retrieve(url, filename, reporthook, data)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib.py&quot;</span>, <span class="keyword">line</span> 245, <span class="keyword">in</span> retrieve</span><br><span class="line">    fp = self.<span class="keyword">open</span>(url, data)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib.py&quot;</span>, <span class="keyword">line</span> 213, <span class="keyword">in</span> <span class="keyword">open</span></span><br><span class="line">    <span class="keyword">return</span> getattr(self, name)(url)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/urllib.py&quot;</span>, <span class="keyword">line</span> 350, <span class="keyword">in</span> open_http</span><br><span class="line">    <span class="keyword">h</span>.endheaders(data)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py&quot;</span>, <span class="keyword">line</span> 1038, <span class="keyword">in</span> endheaders</span><br><span class="line">    self._send_output(message_body)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py&quot;</span>, <span class="keyword">line</span> 882, <span class="keyword">in</span> _send_output</span><br><span class="line">    self.send(msg)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py&quot;</span>, <span class="keyword">line</span> 844, <span class="keyword">in</span> send</span><br><span class="line">    self.connect()</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/httplib.py&quot;</span>, <span class="keyword">line</span> 821, <span class="keyword">in</span> connect</span><br><span class="line">    self.timeout, self.source_address)</span><br><span class="line">  <span class="keyword">File</span> <span class="string">&quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/socket.py&quot;</span>, <span class="keyword">line</span> 575, <span class="keyword">in</span> create_connection</span><br><span class="line">    raise <span class="keyword">err</span></span><br><span class="line">IOError: [Errno socket <span class="keyword">error</span>] [Errno 60] Operation timed <span class="keyword">out</span></span><br><span class="line"><span class="keyword">Error</span>: Command &apos;/usr/<span class="keyword">local</span>/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/Resources/Python.<span class="keyword">app</span>/Contents/MacOS/Python src/tools/dart/<span class="keyword">update</span>.py&apos; returned non-zero <span class="keyword">exit</span> status 1 <span class="keyword">in</span> /Users/lizhangqu/Desktop/engine</span><br><span class="line">Hook &apos;/usr/<span class="keyword">local</span>/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/Resources/Python.<span class="keyword">app</span>/Contents/MacOS/Python src/tools/dart/<span class="keyword">update</span>.py&apos; took 75.57 secs</span><br></pre></td></tr></table></figure><p>&#x4E5F;&#x8BF7;&#x68C0;&#x67E5;http/https&#x4EE3;&#x7406;&#x662F;&#x5426;&#x914D;&#x7F6E;&#x6B63;&#x786E;&#xFF0C;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x4E2D;&#x5BFC;&#x51FA;&#x5982;&#x4E0B;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x5373;&#x53EF;(&#x7AEF;&#x53E3;&#x53F7;&#x6839;&#x636E;&#x672C;&#x5730;Shadowsocks&#x914D;&#x7F6E;&#x81EA;&#x884C;&#x4FEE;&#x6539;)</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">http_proxy</span>=http://127.0.0.1:1088</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">https_proxy</span>=http://127.0.0.1:1088</span><br></pre></td></tr></table></figure><p>&#x8010;&#x5FC3;&#x7B49;&#x5F85;&#x6E90;&#x7801;&#x5B8C;&#x5168;&#x68C0;&#x51FA;&#x5373;&#x53EF;&#xFF0C;&#x5927;&#x7EA6;&#x534A;&#x5C0F;&#x65F6;&#x68C0;&#x51FA;&#x5B8C;&#x6210;&#x3002;</p><h4 id="&#x6784;&#x5EFA;"><a href="#&#x6784;&#x5EFA;" class="headerlink" title="&#x6784;&#x5EFA;"></a>&#x6784;&#x5EFA;</h4><h5 id="&#x68C0;&#x51FA;&#x5BF9;&#x5E94;&#x7248;&#x672C;"><a href="#&#x68C0;&#x51FA;&#x5BF9;&#x5E94;&#x7248;&#x672C;" class="headerlink" title="&#x68C0;&#x51FA;&#x5BF9;&#x5E94;&#x7248;&#x672C;"></a>&#x68C0;&#x51FA;&#x5BF9;&#x5E94;&#x7248;&#x672C;</h5><p>&#x5728;&#x6784;&#x5EFA;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4FDD;&#x8BC1;&#x5F53;&#x524D;&#x7684;&#x6E90;&#x7801;&#x548C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x7684;Flutter&#x7248;&#x672C;&#x662F;&#x517C;&#x5BB9;&#x7684;&#xFF0C;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x4E0D;&#x5FC5;&#x8981;&#x7684;&#x9519;&#x8BEF;&#xFF0C;&#x6211;&#x4EEC;&#x5BF9;&#x6E90;&#x7801;&#x68C0;&#x51FA;&#x5230;&#x6211;&#x4EEC;&#x5F53;&#x524D;&#x4F7F;&#x7528;&#x7684;Flutter&#x7248;&#x672C;&#x7684;&#x63D0;&#x4EA4;&#x4E0A;&#x3002;</p><p>&#x9996;&#x5148;&#x83B7;&#x53D6;&#x6211;&#x4EEC;&#x5F53;&#x524D;&#x4F7F;&#x7528;&#x7684;Flutter&#x7248;&#x672C;&#x7684;&#x63D0;&#x4EA4;&#x8BB0;&#x5F55;&#x3002;</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">cat /<span class="type">path</span>/<span class="keyword">to</span>/currentFlutter/bin/<span class="type">internal</span>/engine.<span class="keyword">version</span></span><br></pre></td></tr></table></figure><p>&#x5F97;&#x5230;v1.0.0&#x7248;&#x672C;&#x7684;&#x63D0;&#x4EA4;&#x8BB0;&#x5F55;&#x4E3A;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">7375</span>a0f414bde4bc941e623482221db2fc8c4ab5</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x5C06;&#x6E90;&#x7801;&#x540C;&#x6B65;&#x5230;&#x4E0A;&#x8FF0;&#x63D0;&#x4EA4;&#x8BB0;&#x5F55;&#x4E0A;&#xFF0C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#x7136;&#x540E;&#x7EA6;&#x7B49;&#x5F85;10&#x5206;&#x949F;&#x3002;</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/path/to/engine/src/flutter</span></span><br><span class="line">git reset <span class="params">--hard</span> 7375a0f414bde4bc941e623482221db2fc8c4ab5</span><br><span class="line">gclient sync <span class="params">--with_branch_heads</span> <span class="params">--with_tags</span> <span class="params">--verbose</span></span><br></pre></td></tr></table></figure><p>&#x4E4B;&#x540E;&#x5373;&#x53EF;&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#x3002;</p><p>&#x4E5F;&#x53EF;&#x4EE5;&#x4E00;&#x5F00;&#x59CB;&#x76F4;&#x63A5;&#x901A;&#x8FC7;&#x4FEE;&#x6539;.gclient&#x7684;&#x914D;&#x7F6E;&#x8FBE;&#x5230;&#x76EE;&#x7684;&#xFF0C;&#x5982;&#x68C0;&#x51FA;v1.9.1&#x7684;engine&#x7248;&#x672C;</p><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">solutions = [</span><br><span class="line">  {</span><br><span class="line">    <span class="string">&quot;managed&quot;</span>: False,</span><br><span class="line">    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;src/flutter&quot;</span>,</span><br><span class="line">    <span class="string">&quot;url&quot;</span>: <span class="string">&quot;git@github.com:flutter/engine.git@b863200c37df4ed378042de11c4e9ff34e4e58c9&quot;</span>,</span><br><span class="line">    <span class="string">&quot;custom_deps&quot;</span>: {},</span><br><span class="line">    <span class="string">&quot;deps_file&quot;</span>: <span class="string">&quot;DEPS&quot;</span>,</span><br><span class="line">    <span class="string">&quot;safesync_url&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">  },</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h5 id="Xcode-32&#x4F4D;&#x652F;&#x6301;"><a href="#Xcode-32&#x4F4D;&#x652F;&#x6301;" class="headerlink" title="Xcode 32&#x4F4D;&#x652F;&#x6301;"></a>Xcode 32&#x4F4D;&#x652F;&#x6301;</h5><p>&#x5982;&#x679C;&#x4F60;&#x5728;&#x7F16;&#x8BD1;&#x8FC7;&#x7A0B;&#x4E2D;&#x9047;&#x5230;&#x5982;&#x4E0B;&#x95EE;&#x9898;</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">ld: symbol(s) <span class="keyword">not</span> <span class="built_in">found</span> <span class="keyword">for</span> architecture i386</span><br></pre></td></tr></table></figure><p>&#x539F;&#x56E0;&#x662F;Xcode 10&#x5BF9;32&#x4F4D;&#x7F16;&#x8BD1;&#x8FDB;&#x884C;&#x4E86;&#x5E9F;&#x5F03;&#xFF0C;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x7684;&#x662F;Xcode 10&#x8FD9;&#x4E2A;&#x7248;&#x672C;&#x53CA;&#x4EE5;&#x4E0A;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x9700;&#x8981;&#x53E6;&#x5916;&#x8FDB;&#x884C;&#x4E00;&#x4E2A;&#x5904;&#x7406;&#xFF0C;&#x8BA9;&#x5176;&#x652F;&#x6301;32&#x4F4D;&#x7F16;&#x8BD1;&#x3002;</p><p>&#x9996;&#x5148;&#x4ECE; <a href="https://github.com/alexey-lysiuk/macos-sdk/releases" target="_blank" rel="noopener">macos-sdk</a> &#x83B7;&#x53D6; MacOS 10.13 SDK&#x7684;&#x538B;&#x7F29;&#x5305;&#xFF0C;&#x5C06;&#x5176;&#x5185;&#x5BB9;&#x91CA;&#x653E;&#x5230;</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/Applications/</span>Xcode.app<span class="regexp">/Contents/</span>Developer<span class="regexp">/Platforms/</span>MacOSX.platform<span class="regexp">/Developer/</span>SDKs<span class="regexp">/MacOSX10.13.sdk</span></span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#x8FD4;&#x56DE;10.13&#x90A3;&#x5C31;&#x8BF4;&#x660E;&#x914D;&#x7F6E;&#x6B63;&#x786E;&#x4E86;&#x3002;</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">python <span class="regexp">/path/</span>to<span class="regexp">/engine/</span>src<span class="regexp">/build/m</span>ac<span class="regexp">/find_sdk.py 10.12</span></span><br></pre></td></tr></table></figure><p>&#x5177;&#x4F53;&#x6D41;&#x7A0B;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x5B98;&#x65B9;&#x6587;&#x6863;</p><ul><li><a href="https://github.com/flutter/flutter/wiki/Supporting-legacy-platforms" target="_blank" rel="noopener">Supporting-legacy-platforms</a></li></ul><h5 id="&#x6784;&#x5EFA;Android&#x5F15;&#x64CE;&#x4EA7;&#x7269;"><a href="#&#x6784;&#x5EFA;Android&#x5F15;&#x64CE;&#x4EA7;&#x7269;" class="headerlink" title="&#x6784;&#x5EFA;Android&#x5F15;&#x64CE;&#x4EA7;&#x7269;"></a>&#x6784;&#x5EFA;Android&#x5F15;&#x64CE;&#x4EA7;&#x7269;</h5><p>Flutter Engine&#x662F;&#x57FA;&#x4E8E;Ninja&#x8FDB;&#x884C;&#x6784;&#x5EFA;&#x7684;&#xFF0C;Ninja&#x662F;Google&#x4E3A;&#x4E86;&#x6539;&#x8FDB;&#x7F16;&#x8BD1;&#x901F;&#x5EA6;&#x800C;&#x5F00;&#x53D1;&#x51FA;&#x6765;&#x7684;&#xFF0C; Chromium&#x76EE;&#x524D;&#x4E5F;&#x662F;&#x901A;&#x8FC7;Ninja&#x8FDB;&#x884C;&#x6784;&#x5EFA;&#x7684;&#xFF0C;&#x7531;&#x6B64;&#x770B;&#x6765;&#xFF0C;Flutter&#x5728;&#x5DE5;&#x7A0B;&#x4E0A;&#x501F;&#x9274;&#x4E86;&#x5F88;&#x591A;Chromium&#x7684;&#x4E1C;&#x897F;&#x3002;</p><p>Flutter Engine&#x7684;&#x6784;&#x5EFA;&#x4EA7;&#x7269;&#x603B;&#x4F53;&#x4E0A;&#x6709;&#x4EE5;&#x4E0B;&#x51E0;&#x79CD;&#x7EC4;&#x5408;</p><table><thead><tr><th>&#x662F;&#x5426;&#x4F18;&#x5316;&#xFF08;&#x9ED8;&#x8BA4;&#x4E3A;optimized&#xFF09;</th><th>&#x8FD0;&#x884C;&#x6A21;&#x5F0F;</th></tr></thead><tbody><tr><td>unoptimized</td><td>debug</td></tr><tr><td>optimized</td><td>debug</td></tr><tr><td>unoptimized</td><td>profile</td></tr><tr><td>optimized</td><td>profile</td></tr><tr><td>unoptimized</td><td>release</td></tr><tr><td>optimized</td><td>release</td></tr></tbody></table><p>&#x5BF9;&#x4E8E;Andorid&#x6765;&#x8BF4;&#xFF0C;&#x6709;arm&#xFF0C;arm64&#xFF0C;x86&#x548C;x86_64&#x7684;&#x4EA7;&#x7269;&#x533A;&#x5206;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A;arm&#xFF0C;&#x5BF9;&#x4E8E;iOS&#x6765;&#x8BF4;&#xFF0C;&#x6709;arm&#xFF0C;arm64&#x7684;&#x4EA7;&#x7269;&#x533A;&#x5206;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E3A;arm64&#x3002;iOS&#x8FD8;&#x6709;&#x6A21;&#x62DF;&#x5668;&#x7684;&#x4EA7;&#x7269;(&#x4F7F;&#x7528;--simulator&#x53C2;&#x6570;)&#x3002;</p><p>&#x9664;&#x4E86;&#x8BBE;&#x5907;&#x7AEF;&#x7684;&#x4EA7;&#x7269;&#xFF0C;Host&#x7AEF;&#xFF08;&#x5373;PC&#xFF09;&#x4E5F;&#x9700;&#x8981;&#x7F16;&#x8BD1;&#x51FA;&#x4EA7;&#x7269;&#x4E0E;&#x4E4B;&#x5BF9;&#x5E94;&#x3002;Host&#x7AEF;&#x7684;&#x4EA7;&#x7269;&#x662F;Android&#x548C;iOS&#x5171;&#x7528;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x65E0;&#x9700;&#x91CD;&#x590D;&#x7F16;&#x8BD1;&#x3002;</p><p>&#x5177;&#x4F53;&#x7684;&#x6240;&#x6709;&#x7EC4;&#x5408;&#x53EF;&#x4EE5;&#x53C2;&#x8003; <a href="https://github.com/flutter/flutter/wiki/Flutter%27s-modes" target="_blank" rel="noopener">Flutter&#x2019;s Mode</a></p><p>&#x5177;&#x4F53;&#x7684;&#x53EF;&#x7528;&#x7F16;&#x8BD1;&#x9009;&#x9879;&#x5982;&#x4E0B;:</p><figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line">usage: gn <span class="string">[-h]</span> <span class="string">[--unoptimized]</span> <span class="string">[--runtime-mode {debug,profile,release}]</span></span><br><span class="line">          <span class="string">[--dynamic]</span> <span class="string">[--interpreter]</span> <span class="string">[--dart-debug]</span></span><br><span class="line">          <span class="string">[--target-os {android,ios,linux}]</span> <span class="string">[--android]</span></span><br><span class="line">          <span class="string">[--android-cpu {arm,x64,x86,arm64}]</span> <span class="string">[--ios]</span> <span class="string">[--ios-cpu {arm,arm64}]</span></span><br><span class="line">          <span class="string">[--simulator]</span> <span class="string">[--linux-cpu {x64,x86,arm64,arm}]</span></span><br><span class="line">          <span class="string">[--arm-float-abi {hard,soft,softfp}]</span> <span class="string">[--goma]</span> <span class="string">[--no-goma]</span> <span class="string">[--lto]</span></span><br><span class="line">          <span class="string">[--no-lto]</span> <span class="string">[--clang]</span> <span class="string">[--no-clang]</span> <span class="string">[--target-sysroot TARGET_SYSROOT]</span></span><br><span class="line">          <span class="string">[--target-toolchain TARGET_TOOLCHAIN]</span></span><br><span class="line">          <span class="string">[--target-triple TARGET_TRIPLE]</span></span><br><span class="line">          <span class="string">[--toolchain-prefix TOOLCHAIN_PREFIX]</span> <span class="string">[--enable-vulkan]</span></span><br><span class="line">          <span class="string">[--embedder-for-target]</span></span><br></pre></td></tr></table></figure><p>&#x4EE5;&#x4E0B;&#x662F;&#x7F16;&#x8BD1;Andorid arm&#x672A;&#x4F18;&#x5316;&#x7684;&#x4EA7;&#x7269;</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/path/to/engine/src/</span></span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--android</span> <span class="params">--unoptimized</span></span><br><span class="line">ninja -C out/android_debug_unopt -j 8</span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--unoptimized</span></span><br><span class="line">ninja -C out/host_debug_unopt -j 8</span><br></pre></td></tr></table></figure><p>&#x6839;&#x636E;&#x673A;&#x5668;&#x6027;&#x80FD;&#xFF0C;&#x9700;&#x8981;&#x7F16;&#x8BD1;&#x7684;&#x65F6;&#x95F4;&#x4F1A;&#x6709;&#x6240;&#x4E0D;&#x540C;&#xFF0C;&#x5728;Mac&#x4E0A;&#xFF0C;&#x8BBE;&#x5907;&#x7AEF;&#x548C;Host&#x7AEF;&#x4E24;&#x4E2A;&#x4EA7;&#x7269;&#x4E00;&#x8D77;&#x7F16;&#x8BD1;&#x5B8C;&#x5927;&#x7EA6;&#x9700;&#x8981;30-60&#x5206;&#x949F;&#x5DE6;&#x53F3;&#x3002;</p><p>--android-cpu&#x53C2;&#x6570;&#x5982;&#x679C;&#x4E0D;&#x6307;&#x5B9A;&#xFF0C;&#x90A3;&#x4E48;arm&#x662F;Andorid&#x7684;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;&#x7684;cpu&#x3002;</p><p>&#x4E0B;&#x9762;&#x7B80;&#x5355;&#x63D0;&#x4F9B;&#x51E0;&#x79CD;&#x7EC4;&#x5408;&#x65B9;&#x5F0F;</p><p>Android arm&#x7684;debug&#x4F18;&#x5316;&#x7248;</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/path/to/engine/src/</span></span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--android</span> </span><br><span class="line">ninja -C out/android_debug -j 8</span><br><span class="line"><span class="string">./flutter/tools/gn</span> </span><br><span class="line">ninja -C out/host_debug -j 8</span><br></pre></td></tr></table></figure><p>Android arm&#x7684;release&#x4F18;&#x5316;&#x7248;</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/path/to/engine/src/</span></span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--android</span> <span class="params">--runtime-mode=release</span></span><br><span class="line">ninja -C out/android_release -j 8</span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--runtime-mode=release</span></span><br><span class="line">ninja -C out/host_release -j 8</span><br></pre></td></tr></table></figure><p>Android arm&#x7684;release&#x975E;&#x4F18;&#x5316;&#x7248;</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/path/to/engine/src/</span></span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--android</span> <span class="params">--unoptimized</span> <span class="params">--runtime-mode=release</span></span><br><span class="line">ninja -C out/android_release_unopt -j 8</span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--unoptimized</span> <span class="params">--runtime-mode=release</span></span><br><span class="line">ninja -C out/host_release_unopt -j 8</span><br></pre></td></tr></table></figure><p>Android arm64&#x7684;release&#x4F18;&#x5316;&#x7248;</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/path/to/engine/src/</span></span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--android</span> <span class="params">--android-cpu</span> arm64 <span class="params">--runtime-mode=release</span></span><br><span class="line">ninja -C out/android_release_arm64 -j 8</span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--android-cpu</span> arm64 <span class="params">--runtime-mode=release</span></span><br><span class="line">ninja -C out/host_release_arm64 -j 8</span><br></pre></td></tr></table></figure><p>Android x86&#x7684;profile&#x975E;&#x4F18;&#x5316;&#x7248;</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/path/to/engine/src/</span></span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--android</span> <span class="params">--android-cpu</span> x86 <span class="params">--unoptimized</span> <span class="params">--runtime-mode=profile</span></span><br><span class="line">ninja -C out/android_profile_unopt_x86 -j 8</span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--android-cpu</span> x86 <span class="params">--unoptimized</span> <span class="params">--runtime-mode=profile</span></span><br><span class="line">ninja -C out/host_profile_unopt_x86 -j 8</span><br></pre></td></tr></table></figure><p>Android x64&#x7684;profile&#x975E;&#x4F18;&#x5316;&#x7248;</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/path/to/engine/src/</span></span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--android</span> <span class="params">--android-cpu</span> x64 <span class="params">--unoptimized</span> <span class="params">--runtime-mode=profile</span></span><br><span class="line">ninja -C out/android_profile_unopt_x64 -j 8</span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--android-cpu</span> x64 <span class="params">--unoptimized</span> <span class="params">--runtime-mode=profile</span></span><br><span class="line">ninja -C out/host_profile_unopt_x64 -j 8</span><br></pre></td></tr></table></figure><p>&#x5BF9;&#x4E8E;Andorid&#x6765;&#x8BF4;&#xFF0C;&#x4F7F;&#x7528;&#x672C;&#x5730;Engine&#x7684;&#x65B9;&#x5F0F;&#x5176;&#x5B9E;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x8981;&#x7528;gradle&#x4F20;&#x9012;&#x4F20;&#x9012;localEngineOut&#x53C2;&#x6570;&#x5373;&#x53EF;&#x3002;&#x4F20;&#x9012;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x4F20;&#x5165;&#xFF0C;&#x4E5F;&#x53EF;&#x901A;&#x8FC7;gradle.properties&#x5C5E;&#x6027;&#x6587;&#x4EF6;&#x4F20;&#x5165;</p><p>&#x7EC8;&#x7AEF;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x4F20;&#x5165;</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">gradlew clean assembleDebug -PlocalEngineOut=<span class="regexp">/path/</span>to<span class="regexp">/engine/</span>src<span class="regexp">/out/</span>android_debug_unopt</span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x7528;&#x5C5E;&#x6027;&#x6587;&#x4EF6;&#x4F20;&#x5165;&#xFF0C;&#x5219;&#x5728;gradle.properties&#x6587;&#x4EF6;&#x4E2D;&#x52A0;&#x5165;&#x5982;&#x4E0B;&#x5185;&#x5BB9;</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">localEngineOut=<span class="regexp">/path/</span>to<span class="regexp">/engine/</span>src<span class="regexp">/out/</span>android_debug_unopt</span><br></pre></td></tr></table></figure><p>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x5BF9;&#x4E8E;assembleRelease&#x7F16;&#x8BD1;&#xFF0C;&#x4E0D;&#x652F;&#x6301;x86&#x548C;x64&#x7684;&#x4EA7;&#x7269;&#xFF0C;x86&#x548C;x64&#x7684;&#x4EA7;&#x7269;&#x53EA;&#x80FD;&#x7528;&#x4E8E;assembleDebug&#x7F16;&#x8BD1;&#xFF0C;&#x5728;&#x6267;&#x884C;release&#x6784;&#x5EFA;&#x65F6;&#x5219;&#x4F1A;&#x62A5;&#x9519;&#x3002;&#x6BD4;&#x5982;&#x4F7F;&#x7528;x86&#x4EA7;&#x7269;&#x5728;&#x6267;&#x884C;assembleRelease&#x5C31;&#x4F1A;&#x62A5;&#x5982;&#x4E0B;&#x9519;&#x8BEF;&#xFF1A;</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">..<span class="regexp">/../</span>third_party<span class="regexp">/dart/</span>runtime<span class="regexp">/vm/</span>compiler<span class="regexp">/jit/</span>compiler.<span class="string">cc:</span> <span class="number">100</span>: <span class="string">error:</span> Precompilation not supported on IA32</span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;flutter build&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x6784;&#x5EFA;&#xFF0C;&#x90A3;&#x9700;&#x8981;&#x4F20;&#x9012;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5373;--local-engine&#x548C;--local-engine-src-path</p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">flutter <span class="keyword">build</span> apk --local-engine=android_debug_unopt --local-engine-src-<span class="keyword">path</span>=/<span class="keyword">path</span>/<span class="keyword">to</span>/engine/src</span><br></pre></td></tr></table></figure><p>&#x5176;&#x4E2D;&#x2013;local-engine&#x6307;&#x5411;engine/src/out&#x4E0B;&#x7684;&#x76EE;&#x5F55;&#x6587;&#x4EF6;&#x540D;</p><h5 id="&#x6784;&#x5EFA;iOS&#x5F15;&#x64CE;&#x4EA7;&#x7269;"><a href="#&#x6784;&#x5EFA;iOS&#x5F15;&#x64CE;&#x4EA7;&#x7269;" class="headerlink" title="&#x6784;&#x5EFA;iOS&#x5F15;&#x64CE;&#x4EA7;&#x7269;"></a>&#x6784;&#x5EFA;iOS&#x5F15;&#x64CE;&#x4EA7;&#x7269;</h5><p>&#x5BF9;&#x4E8E;iOS&#x6765;&#x8BF4;&#xFF0C;&#x5176;&#x5B9E;&#x548C;Andorid&#x4E5F;&#x662F;&#x7C7B;&#x4F3C;&#x7684;&#x7EC4;&#x5408;&#xFF0C;&#x7B80;&#x5355;&#x63D0;&#x4F9B;&#x51E0;&#x79CD;&#x7EC4;&#x5408;&#x7F16;&#x8BD1;&#x65B9;&#x5F0F;&#x3002;</p><p>--ios-cpu&#x53C2;&#x6570;&#x5982;&#x679C;&#x4E0D;&#x6307;&#x5B9A;&#xFF0C;&#x90A3;&#x4E48;arm64&#x662F;iOS&#x7684;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;&#x7684;cpu&#x3002;</p><p>iOS arm64&#x672A;&#x4F18;&#x5316;release&#x7248;&#x672C;</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/path/to/engine/src/</span></span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--ios</span> <span class="params">--unoptimized</span> <span class="params">--runtime-mode=release</span></span><br><span class="line">ninja -C out/ios_release_unopt -j 8</span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--unoptimized</span> <span class="params">--runtime-mode=release</span></span><br><span class="line">ninja -C out/host_release_unopt -j 8</span><br></pre></td></tr></table></figure><p>iOS arm&#x4F18;&#x5316;profile&#x7248;&#x672C;</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/path/to/engine/src/</span></span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--ios</span> <span class="params">--ios-cpu=arm</span> <span class="params">--runtime-mode=profile</span></span><br><span class="line">ninja -C out/ios_profile_arm -j 8</span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--ios-cpu=arm</span> <span class="params">--runtime-mode=release</span></span><br><span class="line">ninja -C out/host_profile_arm -j 8</span><br></pre></td></tr></table></figure><p>iOS &#x6A21;&#x62DF;&#x5668;&#x672A;&#x4F18;&#x5316;&#x7248;&#x672C;</p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">/path/to/engine/src/</span></span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--ios</span> <span class="params">--simulator</span> <span class="params">--unoptimized</span></span><br><span class="line">ninja -C out/ios_debug_sim_unopt -j 8</span><br><span class="line"><span class="string">./flutter/tools/gn</span> <span class="params">--simulator</span> <span class="params">--unoptimized</span></span><br><span class="line">ninja -C out/host_debug_sim_unopt -j 8</span><br></pre></td></tr></table></figure><p>iOS&#x4F7F;&#x7528;&#x672C;&#x5730;Engine&#x7684;&#x8BDD;&#x5EFA;&#x8BAE;&#x76F4;&#x63A5;&#x4F7F;&#x7528;flutter build&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x4F7F;&#x7528;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">flutter build ios --<span class="builtin-name">debug</span> <span class="attribute">--local-engine</span>=ios_debug_unopt <span class="attribute">--local-engine-src-path</span>=/path/to/engine/src</span><br></pre></td></tr></table></figure><p>release&#x5219;&#x4F7F;&#x7528;<br></p><figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">flutter <span class="keyword">build</span> ios --local-engine=ios_release_unopt --local-engine-src-<span class="keyword">path</span>=/<span class="keyword">path</span>/<span class="keyword">to</span>/engine/src</span><br></pre></td></tr></table></figure><p></p><p>&#x5176;&#x4E2D;&#x2013;local-engine&#x6307;&#x5411;engine/src/out&#x4E0B;&#x7684;&#x76EE;&#x5F55;&#x6587;&#x4EF6;&#x540D;</p><p>&#x5982;&#x679C;&#x5728;&#x6784;&#x5EFA;&#x8FC7;&#x7A0B;&#x62A5;&#x4E86;&#x5982;&#x4E0B;&#x9519;&#x8BEF;</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">=== BUILD TARGET Runner OF PROJECT Runner <span class="keyword">WITH</span> CONFIGURATION Debug ===</span><br><span class="line">Unable <span class="keyword">to</span> detect <span class="keyword">local</span> Flutter <span class="keyword">engine</span> <span class="keyword">build</span> directory.</span><br><span class="line">Either specify a dependency_override <span class="keyword">for</span> the sky_engine <span class="keyword">package</span> <span class="keyword">in</span> your pubspec.yaml <span class="keyword">and</span> ensure <span class="comment">--package-root is set if necessary, or set the $FLUTTER_ENGINE</span></span><br><span class="line">environment <span class="keyword">variable</span>, <span class="keyword">or</span> <span class="keyword">use</span> <span class="comment">--local-engine-src-path to specify the path to the root of your flutter/engine repository.</span></span><br><span class="line"><span class="keyword">Failed</span> <span class="keyword">to</span> <span class="keyword">package</span> /<span class="keyword">path</span>/<span class="keyword">to</span>/your_project.</span><br><span class="line">Command /<span class="keyword">bin</span>/sh <span class="keyword">failed</span> <span class="keyword">with</span> <span class="keyword">exit</span> code <span class="number">255</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x5176;&#x5B9E;&#x662F;Flutter&#x7684;&#x95EE;&#x9898;&#xFF0C;v1.0.0&#x7684; Flutter &#x5BF9; iOS &#x7684;&#x672C;&#x5730;&#x5F15;&#x64CE;&#x652F;&#x6301;&#x5B58;&#x5728;&#x4E00;&#x70B9;&#x5C0F;&#x95EE;&#x9898;&#xFF0C;&#x5FC5;&#x987B;&#x5BFC;&#x51FA;engine/src&#x76EE;&#x5F55;&#x5230;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x4E2D;&#x3002;&#x6700;&#x65B0;&#x7248;&#x672C;&#x5DF2;&#x7ECF;&#x4FEE;&#x590D;&#x4E86;&#x8BE5;&#x95EE;&#x9898;&#x3002;&#x5982;&#x679C;&#x4F60;&#x62A5;&#x4E86;&#x8BE5;&#x9519;&#x8BEF;&#xFF0C;&#x4E0D;&#x59A8;&#x6362;&#x4E2A;&#x7248;&#x672C;&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x60F3;&#x6362;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5BFC;&#x51FA;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x6765;&#x4FEE;&#x590D;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">FLUTTER_ENGINE</span>=/path/to/engine/src</span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x5728;&#x6784;&#x5EFA;&#x8FC7;&#x7A0B;&#x4E2D;&#x62A5;&#x4E86;&#x5982;&#x4E0B;&#x9519;&#x8BEF;</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">=== BUILD TARGET Runner OF PROJECT Runner <span class="keyword">WITH</span> CONFIGURATION <span class="keyword">Release</span> ===</span><br><span class="line">========================================================================</span><br><span class="line"><span class="keyword">ERROR</span>: Requested <span class="keyword">build</span> <span class="keyword">with</span> Flutter <span class="keyword">local</span> <span class="keyword">engine</span> <span class="keyword">at</span> <span class="string">&apos;/Users/lizhangqu/Desktop/engine/src/out/ios_debug_unopt&apos;</span></span><br><span class="line">This <span class="keyword">engine</span> <span class="keyword">is</span> <span class="keyword">not</span> compatible <span class="keyword">with</span> FLUTTER_BUILD_MODE: <span class="string">&apos;release&apos;</span>.</span><br><span class="line">You can fix this <span class="keyword">by</span> updating the LOCAL_ENGINE environment <span class="keyword">variable</span>, <span class="keyword">or</span></span><br><span class="line"><span class="keyword">by</span> running:</span><br><span class="line">  flutter <span class="keyword">build</span> ios <span class="comment">--local-engine=ios_release</span></span><br><span class="line"><span class="keyword">or</span></span><br><span class="line">  flutter <span class="keyword">build</span> ios <span class="comment">--local-engine=ios_release_unopt</span></span><br><span class="line">========================================================================</span><br></pre></td></tr></table></figure><p>&#x6839;&#x636E;&#x63D0;&#x793A;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;debug&#x7684;&#x4EA7;&#x7269;&#x4E0D;&#x80FD;&#x7528;&#x4E8E;release&#x6784;&#x5EFA;&#xFF0C;&#x8BF7;&#x5207;&#x6362;&#x6210;release&#x7684;&#x4EA7;&#x7269;&#x540E;&#x518D;&#x6784;&#x5EFA;&#x3002;</p><h5 id="Android-armeabi&#x652F;&#x6301;"><a href="#Android-armeabi&#x652F;&#x6301;" class="headerlink" title="Android armeabi&#x652F;&#x6301;"></a>Android armeabi&#x652F;&#x6301;</h5><p>&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5982;&#x679C;&#x6307;&#x5B9A;--android-cpu=arm&#x7684;&#x8BDD;&#xFF0C;&#x7F16;&#x8BD1;&#x51FA;&#x6765;&#x7684;&#x5F15;&#x64CE;&#x662F;&#x53EA;&#x652F;&#x6301;armeabi-v7a&#x7684;&#xFF0C;&#x5E76;&#x4E0D;&#x4F1A;&#x4EA7;&#x51FA;armeabi&#x7684;&#x4EA7;&#x7269;&#xFF0C;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;Flutter&#x4F9D;&#x8D56;&#x7684;&#x4E00;&#x4E9B;library&#x53EA;&#x652F;&#x6301;armeabi&#xFF0C;&#x6240;&#x4EE5;Flutter&#x53EA;&#x80FD;&#x652F;&#x6301;armeabi-v7a&#xFF0C;&#x8FD9;&#x5176;&#x5B9E;&#x4E5F;&#x662F;&#x5408;&#x7406;&#x7684;&#x3002;&#x800C;&#x5728;ndk16&#x4E2D;&#xFF0C;Google&#x4E5F;&#x5E9F;&#x5F03;&#x5BF9;armeabi&#x3001;mips&#x3001;mips64&#x7684;&#x652F;&#x6301;&#x3002;&#x79CD;&#x79CD;&#x8FF9;&#x8C61;&#x90FD;&#x8BF4;&#x660E;Google&#x4E0D;&#x5EFA;&#x8BAE;&#x6211;&#x4EEC;&#x518D;&#x4F7F;&#x7528;armeabi&#xFF0C;&#x800C;&#x662F;&#x4F7F;&#x7528;armeabi-v7a&#x3002;&#x5E76;&#x4E14;&#x6839;&#x636E;&#x7EDF;&#x8BA1;&#xFF0C;&#x5E02;&#x9762;&#x4E0A;&#x4E5F;&#x57FA;&#x672C;&#x6CA1;&#x6709;armeabi&#x7684;&#x8BBE;&#x5907;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x4F7F;&#x7528;armeabi-v7a&#x662F;&#x5B8C;&#x5168;&#x6CA1;&#x6709;&#x95EE;&#x9898;&#x7684;&#x3002;</p><p>&#x4F46;&#x662F;&#x7531;&#x4E8E;&#x79CD;&#x79CD;&#x539F;&#x56E0;&#xFF0C;&#x53EF;&#x80FD;&#x4E00;&#x4E9B;&#x7B2C;&#x4E09;&#x65B9;&#x5E93;&#x53EA;&#x63D0;&#x4F9B;&#x4E86;armeabi&#x7684;&#x52A8;&#x6001;&#x5E93;&#xFF0C;&#x4ECE;&#x800C;&#x4F7F;&#x6211;&#x4EEC;&#x5728;app&#x4E2D;&#x4E0D;&#x5F97;&#x4E0D;&#x4F7F;&#x7528;armeabi&#x3002;</p><p>&#x7531;&#x4E8E;Flutter&#x4F9D;&#x8D56;&#x7684;&#x4E00;&#x4E9B;&#x7B2C;&#x4E09;&#x65B9;&#x5E93;&#x53EA;&#x652F;&#x6301;armeabi-v7a&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x4FEE;&#x6539;&#x5F15;&#x64CE;&#x7F16;&#x8BD1;&#x51FA;armeabi&#x7684;&#x4EA7;&#x7269;&#x5176;&#x5B9E;&#x4F1A;&#x6709;&#x96BE;&#x5EA6;&#xFF0C;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x5F88;&#x591A;&#x5730;&#x65B9;&#x3002;&#x6240;&#x4EE5;&#x6362;&#x4E00;&#x79CD;&#x601D;&#x8DEF;&#xFF0C;&#x5728;&#x6784;&#x5EFA;App&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;armeabi-v7a&#x7684;&#x4EA7;&#x7269;&#x62F7;&#x8D1D;&#x5230;armeabi&#x4E2D;&#x5B8C;&#x6210;&#x517C;&#x5BB9;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x63D0;&#x4F9B;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x5904;&#x7406;&#xFF1A;</p><ul><li>&#x4FEE;&#x6539;flutter.jar</li><li>&#x4FEE;&#x6539;gradle&#x811A;&#x672C;&#x6CE8;&#x5165;armeabi&#x4EA7;&#x7269;&#x4F9D;&#x8D56;</li></ul><p>&#x5BF9;&#x4E8E;&#x7B2C;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x7F8E;&#x56E2;&#x5176;&#x5B9E;&#x5728;&#x5176;&#x6587;&#x7AE0;&#x4E2D;&#x8FDB;&#x884C;&#x4E86;&#x4ECB;&#x7ECD;&#xFF0C;&#x8BE6;&#x60C5;&#x89C1; <a href="https://tech.meituan.com/2018/08/09/waimai-flutter-practice.html" target="_blank" rel="noopener">Flutter&#x539F;&#x7406;&#x4E0E;&#x5B9E;&#x8DF5;#SO&#x5E93;&#x517C;&#x5BB9;&#x6027;&#x90E8;&#x5206;</a></p><p>&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x4F9D;&#x8D56;&#x4E8E;&#x4FEE;&#x6539;&#x4EA7;&#x7269;flutter.jar&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x4EA7;&#x7269;&#x91CD;&#x65B0;&#x751F;&#x6210;&#x6216;&#x8005;&#x7248;&#x672C;&#x4FEE;&#x6539;&#xFF0C;&#x5176;&#x5B9E;&#x6709;&#x65F6;&#x5019;&#x5BB9;&#x6613;&#x5FD8;&#x8BB0;&#x4FEE;&#x6539;&#xFF0C;&#x51FA;&#x73B0;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x4ECB;&#x7ECD;&#x53E6;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x901A;&#x8FC7;gradle&#x811A;&#x672C;&#x6CE8;&#x5165;armeabi&#x4EA7;&#x7269;&#x3002;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x4F9D;&#x8D56;&#x4E8E;&#x4FEE;&#x6539; packages/flutter_tools/gradle/flutter.gradle &#x6587;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x4FEE;&#x6539;flutter.jar&#x5B58;&#x5728;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5B83;&#x4E5F;&#x4F1A;&#x5B58;&#x5728;&#xFF0C;&#x552F;&#x4E00;&#x7684;&#x533A;&#x522B;&#x662F;&#x524D;&#x8005;&#x901A;&#x8FC7;&#x76F4;&#x63A5;&#x4FEE;&#x6539;&#x4EA7;&#x7269;&#xFF0C;&#x540E;&#x8005;&#x901A;&#x8FC7;&#x7F16;&#x8BD1;&#x671F;&#x6CE8;&#x5165;&#x4EA7;&#x7269;&#x3002;&#x4E2A;&#x4EBA;&#x66F4;&#x503E;&#x5411;&#x4E8E;&#x4F7F;&#x7528;gradle&#x7684;&#x65B9;&#x5F0F;&#x3002;</p><p>&#x5728;flutter.gradle&#x4E2D;&#x52A0;&#x5165;&#x51E0;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x7528;&#x4E8E;&#x5EFA;&#x7ACB;&#x5BF9;armeabi&#x52A8;&#x6001;&#x5E93;&#x7684;&#x4F9D;&#x8D56;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * create armeabi task</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">Task</span> createArmeabiTask(<span class="keyword">Project</span> <span class="keyword">project</span>, String taskName, <span class="keyword">File</span> flutterJar, <span class="keyword">File</span> flutterArmV7Jar) {</span><br><span class="line">    <span class="keyword">def</span> flutterArmeabiJarTask = <span class="keyword">project</span>.tasks.create(taskName, Jar) {</span><br><span class="line">        <span class="keyword">destinationDir</span> flutterArmV7Jar.parentFile</span><br><span class="line">        archiveName flutterArmV7Jar.name</span><br><span class="line">        <span class="keyword">from</span>(<span class="keyword">project</span>.zipTree(flutterJar).matching {</span><br><span class="line">            <span class="comment">//&#x4EC5;&#x5305;&#x542B;armeabi-v7a&#x7684;so</span></span><br><span class="line">            <span class="keyword">include</span> <span class="string">&quot;lib/armeabi-v7a/libflutter.so&quot;</span></span><br><span class="line">        }) {</span><br><span class="line">            <span class="keyword">eachFile</span> {<span class="keyword">def</span> fcp -&gt;</span><br><span class="line">                <span class="keyword">if</span> (fcp.relativePath.pathString.contains(<span class="string">&quot;lib/armeabi-v7a/libflutter.so&quot;</span>)) {</span><br><span class="line">                    <span class="comment">//&#x91CD;&#x547D;&#x540D;&#x8DEF;&#x5F84;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x62F7;&#x8D1D;&#x5230;v7a&#x76EE;&#x5F55;</span></span><br><span class="line">                    fcp.path = <span class="string">&quot;lib/armeabi/libflutter.so&quot;</span></span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    <span class="comment">//&#x975E;so&#x6392;&#x9664;</span></span><br><span class="line">                    fcp.<span class="keyword">exclude</span>()</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> flutterArmeabiJarTask</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * add armeabi so for local engine</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> addFlutterArmeabiJarApiDependencyForLocalEngine(<span class="keyword">Project</span> <span class="keyword">project</span>, <span class="keyword">File</span> localFlutterJar) {</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.flutterJar == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">File</span> flutterJar = localFlutterJar</span><br><span class="line">    <span class="keyword">File</span> flutterArmV7Jar = <span class="keyword">project</span>.<span class="keyword">file</span>(<span class="string">&quot;${project.buildDir}/${AndroidProject.FD_INTERMEDIATES}/flutter/armeabi/flutter-armeabi.jar&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> flutterArmeabiJarTask = createArmeabiTask(<span class="keyword">project</span>, <span class="string">&quot;${flutterBuildPrefix}ArmeabiJar&quot;</span>, flutterJar, flutterArmV7Jar)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (flutterArmeabiJarTask == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Task</span> preBuildTask = <span class="keyword">project</span>.tasks.findByName(<span class="string">&quot;preBuild&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> (preBuildTask) {</span><br><span class="line">        preBuildTask.dependsOn flutterArmeabiJarTask</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">project</span>.<span class="keyword">dependencies</span> {</span><br><span class="line">        String configuration;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">project</span>.getConfigurations().findByName(<span class="string">&quot;api&quot;</span>)) {</span><br><span class="line">            configuration = <span class="string">&quot;api&quot;</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            configuration = <span class="string">&quot;compile&quot;</span>;</span><br><span class="line">        }</span><br><span class="line">        add(configuration, <span class="keyword">project</span>.files {</span><br><span class="line">            flutterArmeabiJarTask</span><br><span class="line">        })</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * add armeabi so for prebuilt engine</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> addFlutterArmeabiJarApiDependency(<span class="keyword">Project</span> <span class="keyword">project</span>, <span class="keyword">def</span> buildType, String targetArch) {</span><br><span class="line">    <span class="keyword">def</span> flutterArmeabiJarTask = <span class="keyword">null</span></span><br><span class="line">    <span class="keyword">if</span> (targetArch == <span class="string">&apos;arm&apos;</span>) {</span><br><span class="line">        <span class="keyword">File</span> flutterJar = flutterJarFor(buildModeFor(buildType))</span><br><span class="line">        <span class="keyword">File</span> flutterArmV7Jar = <span class="keyword">project</span>.<span class="keyword">file</span>(<span class="string">&quot;${project.buildDir}/${AndroidProject.FD_INTERMEDIATES}/flutter/armeabi/${buildType.name}/flutter-armeabi.jar&quot;</span>)</span><br><span class="line">        flutterArmeabiJarTask = createArmeabiTask(<span class="keyword">project</span>, <span class="string">&quot;${flutterBuildPrefix}${buildType.name.capitalize()}ArmeabiJar&quot;</span>, flutterJar, flutterArmV7Jar)</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (flutterArmeabiJarTask == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Task</span> javacTask = <span class="keyword">project</span>.tasks.findByName(<span class="string">&quot;compile${buildType.name.capitalize()}JavaWithJavac&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> (javacTask) {</span><br><span class="line">        javacTask.dependsOn flutterArmeabiJarTask</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">Task</span> kotlinTask = <span class="keyword">project</span>.tasks.findByName(<span class="string">&quot;compile${buildType.name.capitalize()}Kotlin&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> (kotlinTask) {</span><br><span class="line">        kotlinTask.dependsOn flutterArmeabiJarTask</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">project</span>.<span class="keyword">dependencies</span> {</span><br><span class="line">        String configuration;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">project</span>.getConfigurations().findByName(<span class="string">&quot;api&quot;</span>)) {</span><br><span class="line">            configuration = buildType.name + <span class="string">&quot;Api&quot;</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            configuration = buildType.name + <span class="string">&quot;Compile&quot;</span>;</span><br><span class="line">        }</span><br><span class="line">        add(configuration, <span class="keyword">project</span>.files {</span><br><span class="line">            flutterArmeabiJarTask</span><br><span class="line">        })</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x627E;&#x5230;if (project.hasProperty(&#x2018;localEngineOut&#x2019;)) &#x903B;&#x8F91;&#x90E8;&#x5206;</p><p>&#x5C06;&#x5982;&#x4E0B;&#x903B;&#x8F91;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">project</span>.<span class="keyword">dependencies</span> {</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">project</span>.getConfigurations().findByName(<span class="string">&quot;api&quot;</span>)) {</span><br><span class="line">        api <span class="keyword">project</span>.files(flutterJar)</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">compile</span> <span class="keyword">project</span>.files(flutterJar)</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4FEE;&#x6539;&#x4E3A;&#x6CE8;&#x5165;&#x6211;&#x4EEC;&#x7684;&#x903B;&#x8F91;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">project</span>.<span class="keyword">dependencies</span> {</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">project</span>.getConfigurations().findByName(<span class="string">&quot;api&quot;</span>)) {</span><br><span class="line">        api <span class="keyword">project</span>.files(flutterJar)</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">compile</span> <span class="keyword">project</span>.files(flutterJar)</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x52A0;&#x5165;&#x5982;&#x4E0B;&#x51FD;&#x6570;&#x8C03;&#x7528;</span></span><br><span class="line">    addFlutterArmeabiJarApiDependencyForLocalEngine(<span class="keyword">project</span>, flutterJar)</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5728;if (project.hasProperty(&#x2018;localEngineOut&#x2019;))&#x7684; else &#x90E8;&#x5206;&#x903B;&#x8F91;&#x4E2D;&#x627E;&#x5230;&#x5982;&#x4E0B;&#x903B;&#x8F91;&#x90E8;&#x5206;</p><p>&#x5C06;&#x5982;&#x4E0B;&#x903B;&#x8F91;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">project.android.buildTypes.each {</span><br><span class="line">    add<span class="constructor">FlutterJarApiDependency(<span class="params">project</span>, <span class="params">it</span>, <span class="params">flutterX86JarTask</span>)</span></span><br><span class="line">}</span><br><span class="line">project.android.buildTypes.whenObjectAdded {</span><br><span class="line">    add<span class="constructor">FlutterJarApiDependency(<span class="params">project</span>, <span class="params">it</span>, <span class="params">flutterX86JarTask</span>)</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4FEE;&#x6539;&#x4E3A;&#x6CE8;&#x5165;&#x6211;&#x4EEC;&#x7684;&#x903B;&#x8F91;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">project.android.buildTypes.each {</span><br><span class="line">    add<span class="constructor">FlutterJarApiDependency(<span class="params">project</span>, <span class="params">it</span>, <span class="params">flutterX86JarTask</span>)</span></span><br><span class="line">    <span class="comment">//&#x52A0;&#x5165;&#x5982;&#x4E0B;&#x51FD;&#x6570;&#x8C03;&#x7528;</span></span><br><span class="line">    add<span class="constructor">FlutterArmeabiJarApiDependency(<span class="params">project</span>, <span class="params">it</span>, <span class="params">targetArch</span>)</span></span><br><span class="line">}</span><br><span class="line">project.android.buildTypes.whenObjectAdded {</span><br><span class="line">    add<span class="constructor">FlutterJarApiDependency(<span class="params">project</span>, <span class="params">it</span>, <span class="params">flutterX86JarTask</span>)</span></span><br><span class="line">    <span class="comment">//&#x52A0;&#x5165;&#x5982;&#x4E0B;&#x51FD;&#x6570;&#x8C03;&#x7528;</span></span><br><span class="line">    add<span class="constructor">FlutterArmeabiJarApiDependency(<span class="params">project</span>, <span class="params">it</span>, <span class="params">targetArch</span>)</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;&#x5728;&#x6267;&#x884C;gradlew assembleDebug&#x6216;&#x8005;gradlew assembleRelease&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x4F1A;&#x81EA;&#x52A8;&#x5EFA;&#x7ACB;&#x5BF9;&#x6211;&#x4EEC;&#x4E2D;&#x95F4;&#x4E34;&#x65F6;&#x751F;&#x6210;&#x7684;flutter-armeabi.jar&#x7684;&#x4F9D;&#x8D56;&#xFF0C;&#x8BE5;jar&#x6587;&#x4EF6;&#x4E2D;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x5373;armeabi&#x76EE;&#x5F55;&#x4E0B;&#x7684;libflutter.so&#x6587;&#x4EF6;&#xFF0C;&#x4ECE;&#x800C;&#x5B8C;&#x6210;&#x5BF9;armeabi&#x7684;&#x517C;&#x5BB9;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x6211;&#x5C06;&#x5176;&#x5C01;&#x88C5;&#x6210;&#x4E86;gradle&#x63D2;&#x4EF6;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x53EF;&#x4EE5;&#x53C2;&#x8003; <a href="https://github.com/lizhangqu/plugin-flutter-armeabi" target="_blank" rel="noopener">plugin-flutter-armeabi</a></p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">buildscript</span> {</span><br><span class="line">    <span class="keyword">repositories</span> {</span><br><span class="line">        jcenter()</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">dependencies</span> {</span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">&quot;io.github.lizhangqu:plugin-flutter-armeabi:1.0.0&quot;</span></span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">apply plugin: <span class="string">&apos;flutter.armeabi&apos;</span></span><br></pre></td></tr></table></figure><h3 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h3><p>&#x6574;&#x4E2A;Flutter Engine&#x7F16;&#x8BD1;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x5176;&#x5B9E;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x5DF2;&#x7ECF;&#x5F88;&#x8BE6;&#x7EC6;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x8981;&#x5C06;&#x76F8;&#x5173;&#x8054;&#x7684;&#x6587;&#x6863;&#x7EC4;&#x5408;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x6700;&#x7EC8;&#x5C31;&#x80FD;&#x7F16;&#x8BD1;&#x51FA;Flutter Engine&#x5E76;&#x8FDB;&#x884C;&#x4F7F;&#x7528;&#x3002;&#x5F53;&#x7136;&#x4E5F;&#x6709;&#x4E00;&#x4E9B;&#x5730;&#x65B9;&#x662F;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x4E2D;&#x6CA1;&#x6709;&#x7684;&#xFF0C;&#x9700;&#x8981;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x60F3;&#x529E;&#x6CD5;&#x89E3;&#x51B3;&#x7684;&#xFF0C;&#x6BD4;&#x5982;&#x6587;&#x4E2D;&#x6700;&#x5F00;&#x59CB;&#x7684;&#x4EE3;&#x7406;&#x7684;&#x914D;&#x7F6E;&#xFF0C;&#x6587;&#x7AE0;&#x6700;&#x540E;&#x63D0;&#x5230;&#x7684;Android armeabi&#x7684;&#x652F;&#x6301;&#x7B49;&#x7B49;&#xFF0C;&#x8FD9;&#x79CD;&#x5C31;&#x5B8C;&#x5168;&#x53EA;&#x80FD;&#x6839;&#x636E;&#x7ECF;&#x9A8C;&#x8FDB;&#x884C;&#x5224;&#x65AD;&#x5230;&#x5E95;&#x662F;&#x4EC0;&#x4E48;&#x5730;&#x65B9;&#x51FA;&#x73B0;&#x4E86;&#x95EE;&#x9898;&#xFF0C;&#x5E76;&#x901A;&#x8FC7;&#x5B9E;&#x8DF5;&#x8FDB;&#x884C;&#x89E3;&#x51B3;&#x3002;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x5176;&#x5B9E;&#x5F88;&#x591A;&#x4E1C;&#x897F;&#x90FD;&#x662F;&#x76F8;&#x901A;&#x7684;&#xFF0C;&#x5C31;&#x50CF;Flutter&#x7528;&#x4E86;&#x5F88;&#x591A;&#x548C;Chromium&#x4E00;&#x6837;&#x7684;&#x6784;&#x5EFA;&#x5DE5;&#x5177;&#x4E00;&#x6837;&#x3002;</p><h3 id="&#x53C2;&#x8003;&#x94FE;&#x63A5;"><a href="#&#x53C2;&#x8003;&#x94FE;&#x63A5;" class="headerlink" title="&#x53C2;&#x8003;&#x94FE;&#x63A5;"></a>&#x53C2;&#x8003;&#x94FE;&#x63A5;</h3><ul><li><a href="https://github.com/flutter/flutter/wiki/Setting-up-the-Engine-development-environment" target="_blank" rel="noopener">Setting-up-the-Engine-development-environment</a></li><li><a href="https://github.com/flutter/flutter/wiki/Compiling-the-engine" target="_blank" rel="noopener">Compiling-the-engine</a></li><li><a href="https://github.com/flutter/flutter/wiki/Flutter%27s-modes" target="_blank" rel="noopener">Flutter&#x2019;s-modes</a></li><li><a href="https://github.com/flutter/flutter/wiki/Supporting-legacy-platforms" target="_blank" rel="noopener">Supporting-legacy-platforms</a></li><li><a href="https://dev.chromium.org/developers/how-tos/depottools" target="_blank" rel="noopener">Using depot_tools</a></li><li><a href="https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html" target="_blank" rel="noopener">depot_tools_tutorial</a></li><li><a href="https://ninja-build.org/manual.html" target="_blank" rel="noopener">The Ninja build system</a></li><li><a href="https://github.com/alexey-lysiuk/macos-sdk" target="_blank" rel="noopener">macos-sdk</a></li><li><a href="https://tech.meituan.com/2018/08/09/waimai-flutter-practice.html" target="_blank" rel="noopener">Flutter&#x539F;&#x7406;&#x4E0E;&#x5B9E;&#x8DF5;</a></li></ul>]]></content>
      <categories>
        <category>Flutter</category>
      </categories>
      <tags>
        <tag>flutter</tag>
        <tag>engine</tag>
        <tag>compile</tag>
      </tags>
  </entry>
  <entry>
    <title>art dex2oat 加载加速浅析</title>
    <url>/2018/12/30/art-dex2oat%E5%8A%A0%E8%BD%BD%E5%8A%A0%E9%80%9F%E6%B5%85%E6%9E%90/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>&#x624B;&#x6DD8;&#x7684;&#x63D2;&#x4EF6;&#x5316;&#x6846;&#x67B6;Atlas&#x5728;ART&#x4E0A;&#x9996;&#x6B21;&#x542F;&#x52A8;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x901A;&#x8FC7;&#x7981;&#x7528;dex2oat&#x6765;&#x8FBE;&#x5230;&#x63D2;&#x4EF6;&#x8FC5;&#x901F;&#x542F;&#x52A8;&#x7684;&#x76EE;&#x7684;&#x3002;&#x4E4B;&#x540E;&#x540E;&#x53F0;&#x8FDB;&#x884C;dex2oat&#xFF0C;&#x4E0B;&#x6B21;&#x542F;&#x52A8;&#x5982;&#x679C;dex2oat&#x5B8C;&#x6210;&#x4E86;&#x5219;&#x542F;&#x7528;dex2oat&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5B8C;&#x6210;&#x5219;&#x7EE7;&#x7EED;&#x7981;&#x7528;dex2oat&#x3002;&#x4F46;&#x662F;&#x8FD9;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x6DD8;&#x5B9D;&#x5E76;&#x6CA1;&#x6709;&#x5F00;&#x6E90;&#x3002;&#x4E14;&#x7531;&#x4E8E;Atlas&#x540E;&#x7EED;&#x6301;&#x7EED;&#x7EF4;&#x62A4;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x6781;&#x4F4E;&#xFF0C;&#x52A0;&#x4E0A;Android 9.0&#x4E0A;&#x7981;&#x7528;&#x5931;&#x8D25;&#x53CA;64&#x4F4D;&#x52A8;&#x6001;&#x5E93;&#x5728;&#x90E8;&#x5206;&#x7CFB;&#x7EDF;&#x4E0A;&#x7981;&#x7528;&#x4F1A;&#x53D1;&#x751F;crash&#xFF0C;&#x5BF9;&#x4E8E;&#x6838;&#x5FC3;&#x6280;&#x672F;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x80FD;&#x638C;&#x63E1;&#x5728;&#x81EA;&#x5DF1;&#x624B;&#x4E2D;&#x3002;&#x6B64;&#x6587;&#x7ED3;&#x5408;&#x9006;&#x5411;&#x4E0E;&#x6B63;&#x5411;&#x7684;&#x89D2;&#x5EA6;&#x6765;&#x5206;&#x6790;Atlas&#x662F;&#x901A;&#x8FC7;&#x4EC0;&#x4E48;&#x624B;&#x6BB5;&#x8FBE;&#x5230;&#x7981;&#x7528;dex2oat&#x7684;&#xFF0C;&#x4EE5;&#x53CA;&#x5982;&#x4F55;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x8FBE;&#x5230;&#x7981;&#x7528;&#x7684;&#x76EE;&#x7684;&#x3002;</p><a id="more"></a><h3 id="&#x9006;&#x5411;&#x65E5;&#x5FD7;&#x5206;&#x6790;"><a href="#&#x9006;&#x5411;&#x65E5;&#x5FD7;&#x5206;&#x6790;" class="headerlink" title="&#x9006;&#x5411;&#x65E5;&#x5FD7;&#x5206;&#x6790;"></a>&#x9006;&#x5411;&#x65E5;&#x5FD7;&#x5206;&#x6790;</h3><p>&#x7531;&#x4E8E;&#x624B;&#x6DD8;Atlas&#x8FD9;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x662F;&#x95ED;&#x6E90;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x65E0;&#x6CD5;&#x6B63;&#x5411;&#x5206;&#x6790;&#x5176;&#x539F;&#x7406;&#x3002;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4ECE;&#x9006;&#x5411;&#x7684;&#x89D2;&#x5EA6;&#x8FDB;&#x884C;&#x5206;&#x6790;&#x3002;&#x9006;&#x5411;&#x5206;&#x6790;&#x7684;&#x5173;&#x952E;&#x4E00;&#x6B65;&#x5C31;&#x662F;&#x61C2;&#x5F97;&#x770B;&#x63A7;&#x5236;&#x53F0;&#x65E5;&#x5FD7;&#xFF0C;&#x4ECE;&#x65E5;&#x5FD7;&#x4E2D;&#x5165;&#x624B;&#x8FDB;&#x884C;&#x5206;&#x6790;&#x3002;</p><p>&#x901A;&#x8FC7;&#x5728;Android 5.0&#xFF0C;Android 6.0&#xFF0C;Android 7.0&#xFF0C;Android 8.0 &#x548C; Android 9.0&#x4E0A;&#x8FD0;&#x884C;&#x63D2;&#x4EF6;&#x5316;&#x7684;App&#xFF0C;&#x6211;&#x4EEC;&#x53D1;&#x73B0;&#xFF0C;&#x63A7;&#x5236;&#x53F0;&#x4F1A;&#x8F93;&#x51FA;&#x4E00;&#x90E8;&#x5206;&#x5173;&#x952E;&#x6027;&#x7684;&#x65E5;&#x5FD7;&#x3002;&#x5185;&#x5BB9;&#x5982;&#x4E0B;</p><p><img src="/2018/12/30/art-dex2oat%E5%8A%A0%E8%BD%BD%E5%8A%A0%E9%80%9F%E6%B5%85%E6%9E%90/dex2oat-log.png" alt="dex2oat-log.png"></p><p>&#x901A;&#x8FC7;&#x5728;AOSP&#x4E2D;&#x67E5;&#x627E;&#x5173;&#x952E;&#x65E5;&#x5FD7; Generation of oat file &#x2026;. not attempt because dex2oat is disabled &#x5373;&#x53EF;&#x7EE7;&#x7EED;&#x53D1;&#x73B0;&#x732B;&#x817B;&#x3002;&#x6700;&#x7EC8;&#x6211;&#x4EEC;&#x4F1A;&#x53D1;&#x73B0;&#x8FD9;&#x90E8;&#x5206;&#x4FE1;&#x606F;&#x51FA;&#x73B0;&#x5728;&#x4E86;class_linker.cc&#x7C7B;&#x6216;&#x8005;oat_file_manager.cc&#x7C7B;&#x4E2D;&#x3002;</p><h3 id="&#x6B63;&#x5411;&#x6E90;&#x7801;&#x5206;&#x6790;"><a href="#&#x6B63;&#x5411;&#x6E90;&#x7801;&#x5206;&#x6790;" class="headerlink" title="&#x6B63;&#x5411;&#x6E90;&#x7801;&#x5206;&#x6790;"></a>&#x6B63;&#x5411;&#x6E90;&#x7801;&#x5206;&#x6790;</h3><p>&#x6709;&#x4E86;&#x4EE5;&#x4E0A;&#x57FA;&#x7840;&#xFF0C;&#x6211;&#x4EEC;&#x5C1D;&#x8BD5;&#x4ECE;&#x6E90;&#x7801;&#x89D2;&#x5EA6;&#x8FDB;&#x884C;&#x6B63;&#x5411;&#x5206;&#x6790;&#x3002;</p><p>&#x5728;Java&#x5C42;&#x6211;&#x4EEC;&#x52A0;&#x8F7D;&#x4E00;&#x4E2A;Dex&#x662F;&#x901A;&#x8FC7;DexFile.loadDex()&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x52A0;&#x8F7D;&#x3002;&#x6B64;&#x65B9;&#x6CD5;&#x6700;&#x7EC8;&#x4F1A;&#x8D70;&#x5230;native&#x65B9;&#x6CD5; openDexFileNative&#xFF0C;Android 5.0&#x7684;&#x6E90;&#x7801;&#x5982;&#x4E0B;</p><ul><li><a href="https://android.googlesource.com/platform/art/+/android-5.0.0_r7/runtime/native/dalvik_system_DexFile.cc#101" target="_blank" rel="noopener">android-5.0.0_r7/runtime/native/dalvik_system_DexFile.cc#101</a></li></ul><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> jlong <span class="title">DexFile_openDexFileNative</span><span class="params">(JNIEnv* env, jclass, jstring javaSourceName, jstring javaOutputName, jint)</span> </span>{</span><br><span class="line">  <span class="function">ScopedUtfChars <span class="title">sourceName</span><span class="params">(env, javaSourceName)</span></span>;</span><br><span class="line">  <span class="keyword">if</span> (sourceName.c_str() == <span class="literal">NULL</span>) {</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  <span class="function">NullableScopedUtfChars <span class="title">outputName</span><span class="params">(env, javaOutputName)</span></span>;</span><br><span class="line">  <span class="keyword">if</span> (env-&gt;ExceptionCheck()) {</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  }</span><br><span class="line">  ClassLinker* linker = Runtime::Current()-&gt;GetClassLinker();</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">unique_ptr</span>&lt;<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">const</span> DexFile*&gt;&gt; dex_files(<span class="keyword">new</span> <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">const</span> DexFile*&gt;());</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; error_msgs;</span><br><span class="line">  <span class="comment">//&#x5173;&#x952E;&#x8C03;&#x7528;&#x5728;&#x8FD9;&#x91CC;</span></span><br><span class="line">  <span class="keyword">bool</span> success = linker-&gt;OpenDexFilesFromOat(sourceName.c_str(), outputName.c_str(), &amp;error_msgs,</span><br><span class="line">                                             dex_files.get());</span><br><span class="line">  <span class="keyword">if</span> (success || !dex_files-&gt;empty()) {</span><br><span class="line">    <span class="comment">// In the case of non-success, we have not found or could not generate the oat file.</span></span><br><span class="line">    <span class="comment">// But we may still have found a dex file that we can use.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">static_cast</span>&lt;jlong&gt;(<span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">uintptr_t</span>&gt;(dex_files.release()));</span><br><span class="line">  } <span class="keyword">else</span> {</span><br><span class="line">    <span class="comment">// The vector should be empty after a failed loading attempt.</span></span><br><span class="line">    DCHECK_EQ(<span class="number">0U</span>, dex_files-&gt;size());</span><br><span class="line">    <span class="function">ScopedObjectAccess <span class="title">soa</span><span class="params">(env)</span></span>;</span><br><span class="line">    CHECK(!error_msgs.empty());</span><br><span class="line">    <span class="comment">// The most important message is at the end. So set up nesting by going forward, which will</span></span><br><span class="line">    <span class="comment">// wrap the existing exception as a cause for the following one.</span></span><br><span class="line">    <span class="keyword">auto</span> it = error_msgs.begin();</span><br><span class="line">    <span class="keyword">auto</span> itEnd = error_msgs.end();</span><br><span class="line">    <span class="keyword">for</span> (; it != itEnd; ++it) {</span><br><span class="line">      ThrowWrappedIOException(<span class="string">&quot;%s&quot;</span>, it-&gt;c_str());</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6700;&#x7EC8;&#x4F1A;&#x8C03;&#x7528;&#x5230;ClassLinker&#x4E2D;&#x7684;OpenDexFilesFromOat&#x65B9;&#x6CD5;</p><p>&#x5BF9;&#x5E94;&#x4EE3;&#x7801;&#x8FC7;&#x957F;&#xFF0C;&#x8FD9;&#x91CC;&#x4E0D;&#x8D34;&#x4E86;&#xFF0C;&#x89C1;</p><ul><li><a href="https://android.googlesource.com/platform/art/+/android-5.0.0_r7/runtime/class_linker.cc#811" target="_blank" rel="noopener">android-5.0.0_r7/runtime/class_linker.cc#811</a></li></ul><p>OpenDexFilesFromOat&#x51FD;&#x6570;&#x4E3B;&#x8981;&#x505A;&#x4E86;&#x5982;&#x4E0B;&#x51E0;&#x6B65;</p><ul><li>1&#x3001;&#x68C0;&#x6D4B;&#x6211;&#x4EEC;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x6709;&#x4E00;&#x4E2A;&#x6253;&#x5F00;&#x7684;oat&#x6587;&#x4EF6;</li><li>2&#x3001;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5DF2;&#x7ECF;&#x6253;&#x5F00;&#x7684;oat&#x6587;&#x4EF6;&#xFF0C;&#x5219;&#x4ECE;&#x78C1;&#x76D8;&#x4E0A;&#x68C0;&#x6D4B;&#x662F;&#x5426;&#x6709;&#x4E00;&#x4E2A;&#x5DF2;&#x7ECF;&#x751F;&#x6210;&#x7684;oat&#x6587;&#x4EF6;</li><li>3&#x3001;&#x5982;&#x679C;&#x78C1;&#x76D8;&#x4E0A;&#x6709;&#x4E00;&#x4E2A;&#x751F;&#x6210;&#x7684;oat&#x6587;&#x4EF6;&#xFF0C;&#x5219;&#x68C0;&#x6D4B;&#x8BE5;oat&#x6587;&#x4EF6;&#x662F;&#x5426;&#x8FC7;&#x671F;&#x4E86;&#x4EE5;&#x53CA;&#x662F;&#x5426;&#x5305;&#x542B;&#x4E86;&#x6211;&#x4EEC;&#x6240;&#x6709;&#x7684;dex&#x6587;&#x4EF6;</li><li>4&#x3001;&#x5982;&#x679C;&#x4EE5;&#x4E0A;&#x90FD;&#x4E0D;&#x6EE1;&#x8DB3;&#xFF0C;&#x5219;&#x4F1A;&#x91CD;&#x65B0;&#x751F;&#x6210;</li></ul><p>&#x9996;&#x6B21;&#x6253;&#x5F00;&#x65F6;&#xFF0C;1-3&#x6B65;&#x5FC5;&#x7136;&#x662F;&#x4E0D;&#x6EE1;&#x8DB3;&#x7684;&#xFF0C;&#x6700;&#x7EC8;&#x4F1A;&#x8D70;&#x5230;&#x7B2C;&#x56DB;&#x4E2A;&#x903B;&#x8F91;&#xFF0C;&#x8FD9;&#x4E00;&#x6B65;&#x6709;&#x4E00;&#x4E2A;&#x5173;&#x952E;&#x6027;&#x7684;&#x4EE3;&#x7801;&#x76F4;&#x63A5;&#x51B3;&#x5B9A;&#x4E86;&#x751F;&#x6210;oat&#x6587;&#x4EF6;&#x662F;&#x5426;&#x751F;&#x6210;&#x6210;&#x529F;</p><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="function"><span class="params">(Runtime::Current()-&gt;IsDex2OatEnabled() &amp;&amp; has_flock &amp;&amp; scoped_flock.HasFile())</span> {</span></span><br><span class="line"><span class="function">   // <span class="title">Create</span> <span class="title">the</span> <span class="title">oat</span> <span class="title">file</span>.</span></span><br><span class="line"><span class="function">   <span class="title">open_oat_file</span>.<span class="title">reset</span><span class="params">(CreateOatFileForDexLocation(dex_location, scoped_flock.GetFile()-&gt;Fd(),</span></span></span><br><span class="line"><span class="function"><span class="params">                                                   oat_location, error_msgs))</span>;</span></span><br><span class="line"><span class="function">}</span></span><br></pre></td></tr></table></figure><p>&#x6838;&#x5FC3;&#x51FD;&#x6570;Runtime::Current()-&gt;IsDex2OatEnabled()&#xFF0C;&#x5224;&#x65AD;dex2oat&#x662F;&#x5426;&#x5F00;&#x542F;&#xFF0C;&#x5982;&#x679C;&#x5F00;&#x542F;&#xFF0C;&#x5219;&#x521B;&#x5EFA;oat&#x6587;&#x4EF6;&#x5E76;&#x8FDB;&#x884C;&#x66F4;&#x65B0;&#x3002;</p><p>&#x4EE5;&#x4E0A;&#x662F;Android 5.0&#x7684;&#x6E90;&#x7801;&#xFF0C;Android 6.0-Android 9.0&#x4F1A;&#x6709;&#x6240;&#x5DEE;&#x5F02;&#x3002;DexFile_openDexFileNative&#x6700;&#x7EC8;&#x4F1A;&#x8C03;&#x7528;&#x5230;runtime-&gt;GetOatFileManager().OpenDexFilesFromOat()&#xFF0C;&#x7EE7;&#x7EED;&#x4F1A;&#x8C03;&#x7528;&#x5230;OatFileAssistant&#x7C7B;&#x4E2D;&#x7684;MakeUpToDate&#x51FD;&#x6570;&#xFF0C;&#x4E00;&#x76F4;&#x8C03;&#x7528;&#x5230;GenerateOatFile(Androiod 6.0-7.0)&#x6216;GenerateOatFileNoChecks(Android 8.0-9.0)&#x7B49;&#x7C7B;&#x578B;&#x51FD;&#x6570;&#xFF0C;&#x76F8;&#x5173;&#x4EE3;&#x7801;&#x89C1;&#x5982;&#x4E0B;&#x94FE;&#x63A5;&#x3002;</p><ul><li><a href="https://android.googlesource.com/platform/art/+/android-9.0.0_r18/runtime/native/dalvik_system_DexFile.cc#267" target="_blank" rel="noopener">android-9.0.0_r18/runtime/native/dalvik_system_DexFile.cc#267</a></li><li><a href="https://android.googlesource.com/platform/art/+/android-9.0.0_r18/runtime/oat_file_manager.cc#394" target="_blank" rel="noopener">android-9.0.0_r18/runtime/oat_file_manager.cc#394</a></li><li><a href="https://android.googlesource.com/platform/art/+/android-7.0.0_r1/runtime/oat_file_assistant.cc#206" target="_blank" rel="noopener">android-7.0.0_r1/runtime/oat_file_assistant.cc#206 (Androiod 6.0-7.0)</a></li><li><a href="https://android.googlesource.com/platform/art/+/android-9.0.0_r18/runtime/oat_file_assistant.cc#251" target="_blank" rel="noopener">android-9.0.0_r18/runtime/oat_file_assistant.cc#251 (Android 8.0-9.0)</a></li></ul><p>&#x6700;&#x7EC8;&#x6211;&#x4EEC;&#x4E5F;&#x4F1A;&#x53D1;&#x73B0;&#x4E00;&#x6BB5;&#x5173;&#x952E;&#x6027;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5982;&#x4E0B;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Runtime</span>* <span class="keyword">runtime</span> = <span class="keyword">Runtime</span>::Current();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">runtime</span>-&gt;IsDex2OatEnabled()) {</span><br><span class="line">    *error_msg = <span class="string">&quot;Generation of oat file for dex location &quot;</span> + dex_location_</span><br><span class="line">                 + <span class="string">&quot; not attempted because dex2oat is disabled.&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> kUpdateNotAttempted;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x770B;&#x5230;&#x4E86;&#x6211;&#x4EEC;&#x9006;&#x5411;&#x65E5;&#x5FD7;&#x5206;&#x6790;&#x65F6;&#xFF0C;&#x4ECE;&#x63A7;&#x5236;&#x53F0;&#x770B;&#x5230;&#x7684;&#x65E5;&#x5FD7;&#x5185;&#x5BB9;&#xFF0C;Generation of oat file&#x2026;.not attempted because dex2oat is disabled&#xFF0C;&#x8FD9;&#x8BF4;&#x660E;&#x6211;&#x4EEC;&#x6E90;&#x7801;&#x627E;&#x5BF9;&#x4E86;&#x3002;</p><p>&#x901A;&#x8FC7;&#x4EE5;&#x4E0A;&#x5206;&#x6790;&#xFF0C;&#x6211;&#x4EEC;&#x53D1;&#x73B0;Android 5.0-Android 9.0&#x6700;&#x7EC8;&#x90FD;&#x4F1A;&#x8D70;&#x5230;Runtime::Current()-&gt;IsDex2OatEnabled()&#x51FD;&#x6570;&#xFF0C;&#x5982;&#x679C;dex2oat&#x6CA1;&#x6709;&#x5F00;&#x542F;&#xFF0C;&#x5219;&#x4E0D;&#x4F1A;&#x8FDB;&#x884C;&#x540E;&#x7EED;oat&#x6587;&#x4EF6;&#x751F;&#x6210;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;&#x662F;&#x76F4;&#x63A5;return&#x8FD4;&#x56DE;&#x3002;&#x6240;&#x4EE5;&#x7ED3;&#x8BBA;&#x5DF2;&#x7ECF;&#x5F88;&#x660E;&#x786E;&#x4E86;&#xFF0C;&#x5C31;&#x662F;&#x901A;&#x8FC7;&#x8BBE;&#x7F6E;&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x4E3A;false&#xFF0C;&#x8FBE;&#x5230;&#x7981;&#x7528;dex2oat&#x7684;&#x76EE;&#x7684;&#x3002;</p><p>&#x901A;&#x8FC7;&#x67E5;&#x770B;Runtime&#x7C7B;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;IsDex2OatEnabled&#x5176;&#x5B9E;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x8FD4;&#x56DE;&#x4E86;&#x4E00;&#x4E2A;dex2oat_enabled_&#x6210;&#x5458;&#x53D8;&#x91CF;&#x4E0E;&#x53E6;&#x4E00;&#x4E2A;image_dex2oat_enabled_&#x6210;&#x5458;&#x53D8;&#x91CF;&#x3002;&#x6E90;&#x7801;&#x89C1;&#xFF1A;</p><ul><li><a href="https://android.googlesource.com/platform/art/+/android-5.0.0_r7/runtime/runtime.h#109" target="_blank" rel="noopener">android-5.0.0_r7/runtime/runtime.h#109</a></li><li><a href="https://android.googlesource.com/platform/art/+/android-9.0.0_r18/runtime/runtime.h#145" target="_blank" rel="noopener">android-9.0.0_r18/runtime/runtime.h#145</a></li></ul><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsDex2OatEnabled</span><span class="params">()</span> <span class="keyword">const</span> </span>{</span><br><span class="line">    <span class="keyword">return</span> dex2oat_enabled_ &amp;&amp; IsImageDex2OatEnabled();</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">IsImageDex2OatEnabled</span><span class="params">()</span> <span class="keyword">const</span> </span>{</span><br><span class="line">    <span class="keyword">return</span> image_dex2oat_enabled_;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x56E0;&#x6B64;&#x6700;&#x7EC8;&#x6211;&#x4EEC;&#x7684;&#x76EE;&#x7684;&#x5C31;&#x5F88;&#x660E;&#x786E;&#x4E86;&#xFF0C;&#x53EA;&#x8981;&#x628A;&#x6210;&#x5458;&#x53D8;&#x91CF;dex2oat_enabled_&#x7684;&#x503C;&#x548C;image_dex2oat_enabled_&#x7684;&#x503C;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#xFF0C;&#x5C06;&#x5B83;&#x4EEC;&#x4FEE;&#x6539;&#x6210;false&#xFF0C;&#x5C31;&#x8FBE;&#x5230;&#x4E86;&#x76F4;&#x63A5;&#x7981;&#x7528;&#x7684;&#x76EE;&#x7684;&#x3002;&#x5982;&#x679C;&#x8981;&#x91CD;&#x65B0;&#x5F00;&#x542F;&#xFF0C;&#x5219;&#x91CD;&#x65B0;&#x8FD8;&#x539F;&#x4ED6;&#x4EEC;&#x7684;&#x503C;&#x4E3A;true&#x5373;&#x53EF;&#xFF0C;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8BE5;&#x503C;&#x59CB;&#x7EC8;&#x662F;true&#x3002;</p><p>&#x4E0D;&#x8FC7;&#x7ECF;&#x8FC7;&#x9A8C;&#x8BC1;&#x540E;&#x53D1;&#x73B0;&#x624B;&#x6DD8;Atlas&#x662F;&#x901A;&#x8FC7;&#x7981;&#x7528;IsImageDex2OatEnabled()&#x8FBE;&#x5230;&#x76EE;&#x7684;&#x7684;&#xFF0C;&#x5373;&#x5B83;&#x662F;&#x901A;&#x8FC7;&#x4FEE;&#x6539;image_dex2oat_enabled_&#x800C;&#x4E0D;&#x662F;dex2oat_enabled_&#xFF0C;&#x8FD9;&#x4E00;&#x70B9;&#x5728;&#x517C;&#x5BB9;&#x6027;&#x65B9;&#x9762;&#x5341;&#x5206;&#x91CD;&#x8981;&#xFF0C;&#x5728;&#x4E00;&#x5B9A;&#x7A0B;&#x5EA6;&#x4E0A;&#x4FDD;&#x969C;&#x4E86;&#x90E8;&#x5206;&#x673A;&#x578B;&#x7684;&#x517C;&#x5BB9;&#x6027;&#xFF08;&#x6BD4;&#x5982;&#x4E00;&#x52A0;&#xFF0C;8.0&#x4E4B;&#x540E;&#x52A0;&#x5165;&#x4E86;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#xFF0C;&#x5BFC;&#x81F4;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5411;&#x540E;&#x504F;&#x79FB;1&#x5B57;&#x8282;&#xFF1B;VIVO/OPPO&#x90E8;&#x5206;&#x673A;&#x578B;&#x52A0;&#x5165;&#x53D8;&#x91CF;&#xFF0C;&#x5BFC;&#x81F4;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5411;&#x540E;&#x504F;&#x79FB;1&#x5B57;&#x8282;&#xFF09;&#xFF0C;&#x56E0;&#x6B64;&#x4E3A;&#x4E86;&#x4FDD;&#x6301;&#x7B56;&#x7565;&#x4E0A;&#x7684;&#x4E00;&#x81F4;&#x6027;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x4FEE;&#x6539;image_dex2oat_enabled_&#xFF0C;&#x4E0D;&#x4FEE;&#x6539;dex2oat_enabled_&#x3002;</p><h3 id="&#x539F;&#x7406;&#x4E0E;&#x5B9E;&#x73B0;"><a href="#&#x539F;&#x7406;&#x4E0E;&#x5B9E;&#x73B0;" class="headerlink" title="&#x539F;&#x7406;&#x4E0E;&#x5B9E;&#x73B0;"></a>&#x539F;&#x7406;&#x4E0E;&#x5B9E;&#x73B0;</h3><p>&#x6709;&#x4E86;&#x4EE5;&#x4E0A;&#x7406;&#x8BBA;&#x57FA;&#x7840;&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x8FDB;&#x884C;&#x5B9E;&#x8DF5;&#xFF0C;&#x7528;&#x7ED3;&#x8BBA;&#x9A8C;&#x8BC1;&#x731C;&#x60F3;&#xFF0C;&#x624D;&#x4F1A;&#x6709;&#x8BF4;&#x670D;&#x529B;&#x4E86;&#x3002;</p><p>&#x4E0A;&#x9762;&#x5DF2;&#x7ECF;&#x8BF4;&#x5230;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x4FEE;&#x6539;Runtime&#x4E2D;image_dex2oat_enabled_&#x6210;&#x5458;&#x53D8;&#x91CF;&#x7684;&#x503C;&#xFF0C;&#x5C06;&#x5176;&#x5BF9;&#x5E94;&#x7684;image_dex2oat_enabled_&#x53D8;&#x91CF;&#x4FEE;&#x6539;&#x4E3A;false&#x5373;&#x53EF;&#x3002;</p><p>&#x56E0;&#x6B64;&#x7B2C;&#x4E00;&#x6B65;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x62FF;&#x5230;&#x8FD9;&#x4E2A;Runtime&#x7684;&#x5730;&#x5740;&#x3002;</p><p>&#x5728;JNI&#x4E2D;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;Java&#x4E2D;&#x7684;native&#x65B9;&#x6CD5;&#x5BF9;&#x5E94;&#x7684;jni&#x51FD;&#x6570;&#xFF0C;&#x90FD;&#x6709;&#x4E00;&#x4E2A;JNIEnv* &#x6307;&#x9488;&#x5165;&#x53C2;&#xFF0C;&#x901A;&#x8FC7;&#x8BE5;&#x6307;&#x9488;&#x53D8;&#x91CF;&#x7684;GetJavaVM&#x51FD;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x62FF;&#x5230;&#x4E00;&#x4E2A;JavaVM*&#x7684;&#x6307;&#x9488;&#x53D8;&#x91CF;<br></p><figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">JavaVM *javaVM<span class="comment">;</span></span><br><span class="line">env-&gt;GetJavaVM(<span class="name">&amp;javaVM</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure><br>&#x800C;JavaVm&#x5728;JNI&#x4E2D;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5B9A;&#x4E49;&#x4E3A;&#xFF08;&#x6E90;&#x7801;&#x5730;&#x5740;&#x89C1; <a href="https://android.googlesource.com/platform/libnativehelper/+/android-9.0.0_r20/include_jni/jni.h" target="_blank" rel="noopener">android-9.0.0_r20/include_jni/jni.h</a>&#xFF09;<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> _JavaVM JavaVM;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">JavaVM</span> {</span></span><br><span class="line">    <span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">JNIInvokeInterface</span>* <span class="title">functions</span>;</span></span><br><span class="line">};</span><br></pre></td></tr></table></figure><br>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x53EA;&#x6709;&#x4E00;&#x4E2A;JNIInvokeInterface*&#x6307;&#x9488;&#x53D8;&#x91CF;<p></p><p>&#x800C;&#x5728;Android&#x4E2D;&#xFF0C;&#x5B9E;&#x9645;&#x4F7F;&#x7528;&#x7684;&#x662F;JavaVMExt&#xFF08;&#x6E90;&#x7801;&#x5730;&#x5740;&#x89C1; <a href="https://android.googlesource.com/platform/art/+/android-9.0.0_r20/runtime/java_vm_ext.h" target="_blank" rel="noopener">android-9.0.0_r20/runtime/java_vm_ext.h</a>&#xFF09;&#xFF0C;&#x5B83;&#x7EE7;&#x627F;&#x4E86;JavaVM&#xFF0C;&#x5B83;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x7406;&#x89E3;&#x4E3A;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="symbol">JavaVMExt</span> : <span class="symbol">public</span> <span class="symbol">JavaVM</span> {</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Runtime* <span class="keyword">const</span> runtime_;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6839;&#x636E;&#x5185;&#x5B58;&#x5E03;&#x5C40;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C06;JavaVMExt&#x7B49;&#x6548;&#x5B9A;&#x4E49;&#x4E3A;<br></p><figure class="highlight thrift"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">JavaVMExt</span> </span>{</span><br><span class="line">    <span class="keyword">void</span> *functions;</span><br><span class="line">    <span class="keyword">void</span> *runtime;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><br>&#x6307;&#x9488;&#x7C7B;&#x578B;&#xFF0C;&#x5728;32&#x4F4D;&#x4E0A;&#x5360;4&#x5B57;&#x8282;&#xFF0C;&#x5728;64&#x4F4D;&#x4E0A;&#x5360;8&#x5B57;&#x8282;&#x3002;<p></p><p>&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x5C06;&#x6211;&#x4EEC;&#x4E4B;&#x524D;&#x62FF;&#x5230;&#x7684;JavaVM *&#x6307;&#x9488;&#xFF0C;&#x5F3A;&#x5236;&#x8F6C;&#x6362;&#x4E3A;JavaVMExt*&#x6307;&#x9488;&#xFF0C;&#x901A;&#x8FC7;JavaVMExt*&#x6307;&#x9488;&#x62FF;&#x5230;Runtime*&#x6307;&#x9488;<br></p><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">JavaVM </span>*<span class="keyword">javaVM;</span></span><br><span class="line"><span class="keyword">env-&gt;GetJavaVM(&amp;javaVM);</span></span><br><span class="line"><span class="keyword">JavaVMExt </span>*<span class="keyword">javaVMExt </span>= (<span class="keyword">JavaVMExt </span>*) <span class="keyword">javaVM;</span></span><br><span class="line"><span class="keyword">void </span>*runtime = <span class="keyword">javaVMExt-&gt;runtime;</span></span><br></pre></td></tr></table></figure><p></p><p>&#x5269;&#x4E0B;&#x7684;&#x4E8B;&#x5C31;&#x975E;&#x5E38;&#x7B80;&#x5355;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x5C06;Runtime&#x6570;&#x636E;&#x7ED3;&#x6784;&#x91CD;&#x65B0;&#x5B9A;&#x4E49;&#x4E00;&#x904D;&#xFF0C;&#x8FD9;&#x91CC;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;Android&#x5404;&#x7248;&#x672C;Runtime&#x6570;&#x636E;&#x7ED3;&#x6784;&#x4E0D;&#x4E00;&#x81F4;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x533A;&#x5206;&#xFF0C;&#x8FD9;&#x91CC;&#x4EE5;Android 9.0&#x4E3A;&#x4F8B;&#x3002;</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 9.0, GcRoot&#x4E2D;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x662F;class&#x7C7B;&#x578B;&#xFF0C;&#x6240;&#x4EE5;&#x7528;int&#x4EE3;&#x66FF;GcRoot</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PartialRuntime90</span> {</span></span><br><span class="line">    <span class="comment">// 64 bit so that we can share the same asm offsets for both 32 and 64 bits.</span></span><br><span class="line">    <span class="keyword">uint64_t</span> callee_save_methods_[kCalleeSaveSize90];</span><br><span class="line">    <span class="keyword">int</span> pre_allocated_OutOfMemoryError_;</span><br><span class="line">    <span class="keyword">int</span> pre_allocated_NoClassDefFoundError_;</span><br><span class="line">    <span class="keyword">void</span> *resolution_method_;</span><br><span class="line">    <span class="keyword">void</span> *imt_conflict_method_;</span><br><span class="line">    <span class="comment">// Unresolved method has the same behavior as the conflict method, it is used by the class linker</span></span><br><span class="line">    <span class="comment">// for differentiating between unfilled imt slots vs conflict slots in superclasses.</span></span><br><span class="line">    <span class="keyword">void</span> *imt_unimplemented_method_;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// Special sentinel object used to invalid conditions in JNI (cleared weak references) and</span></span><br><span class="line">    <span class="comment">// JDWP (invalid references).</span></span><br><span class="line">    <span class="keyword">int</span> sentinel_;</span><br><span class="line"> </span><br><span class="line">    InstructionSet instruction_set_;</span><br><span class="line">    QuickMethodFrameInfo callee_save_method_frame_infos_[kCalleeSaveSize90]; <span class="comment">// QuickMethodFrameInfo = uint32_t * 3</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">void</span> *compiler_callbacks_;</span><br><span class="line">    <span class="keyword">bool</span> is_zygote_;</span><br><span class="line">    <span class="keyword">bool</span> must_relocate_;</span><br><span class="line">    <span class="keyword">bool</span> is_concurrent_gc_enabled_;</span><br><span class="line">    <span class="keyword">bool</span> is_explicit_gc_disabled_;</span><br><span class="line">    <span class="keyword">bool</span> dex2oat_enabled_;</span><br><span class="line">    <span class="keyword">bool</span> image_dex2oat_enabled_;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> compiler_executable_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> patchoat_executable_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; compiler_options_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; image_compiler_options_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> image_location_;</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> boot_class_path_string_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> class_path_string_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; properties_;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p>&#x6CE8;&#x610F;&#xFF0C;&#x5C24;&#x5176;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x5185;&#x90E8;&#x5E03;&#x5C40;&#x4E2D;&#x5B58;&#x5728;&#x5BF9;&#x9F50;&#x95EE;&#x9898;&#xFF0C;&#x5373; &#x4E00;&#x3001;&#x7ED3;&#x6784;&#x4F53;&#x53D8;&#x91CF;&#x4E2D;&#x6210;&#x5458;&#x7684;&#x504F;&#x79FB;&#x91CF;&#x5FC5;&#x987B;&#x662F;&#x6210;&#x5458;&#x5927;&#x5C0F;&#x7684;&#x6574;&#x6570;&#x500D;&#xFF08;0&#x88AB;&#x8BA4;&#x4E3A;&#x662F;&#x4EFB;&#x4F55;&#x6570;&#x7684;&#x6574;&#x6570;&#x500D;&#xFF09; &#x4E8C;&#x3001;&#x7ED3;&#x6784;&#x4F53;&#x5927;&#x5C0F;&#x5FC5;&#x987B;&#x662F;&#x6240;&#x6709;&#x6210;&#x5458;&#x5927;&#x5C0F;&#x7684;&#x6574;&#x6570;&#x500D;&#x3002;</p><p>&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x5B8C;&#x6574;&#x7684;&#x5B9A;&#x4E49;&#x539F;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x4E0D;&#x80FD;&#x5B58;&#x5728;&#x504F;&#x79FB;&#x3002;&#x5426;&#x5219;&#x7ED3;&#x6784;&#x4F53;&#x5730;&#x5740;&#x5C31;&#x4F1A;&#x9519;&#x4E71;&#x3002;</p><p>&#x4E4B;&#x540E;&#x5C06;runtime&#x5F3A;&#x5236;&#x8F6C;&#x6362;&#x4E3A;PartialRuntime90*&#x5373;&#x53EF;</p><figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">PartialRuntime90 *partialRuntime = (PartialRuntime90 *) runtime<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>&#x62FF;&#x5230;PartialRuntime90&#x4E4B;&#x540E;&#xFF0C;&#x76F4;&#x63A5;&#x4FEE;&#x6539;&#x8BE5;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x4E2D;&#x7684;image_dex2oat_enabled_&#x5373;&#x53EF;&#x5B8C;&#x6210;&#x7981;&#x7528;</p><figure class="highlight xl"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">partialRuntime</span>-&gt;</span>image_dex2oat_enabled_ = <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>&#x4E0D;&#x8FC7;&#x8FD9;&#x6574;&#x4E2A;&#x6D41;&#x7A0B;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x51E0;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x901A;&#x8FC7;&#x517C;&#x5BB9;&#x6027;&#x6D4B;&#x8BD5;&#x62A5;&#x544A;&#x53CD;&#x9988;&#x6765;&#x770B;&#xFF0C;&#x5B58;&#x5728;&#x4E86;&#x5982;&#x4E0B;&#x51E0;&#x4E2A;&#x95EE;&#x9898;<br>1&#x3001;Android 5.1-Android 9.0&#x517C;&#x5BB9;&#x6027;&#x6781;&#x597D;<br>2&#x3001;Android 5.0&#x5B58;&#x5728;&#x90E8;&#x5206;&#x4EA7;&#x5546;&#x81EA;&#x5B9A;&#x4E49;&#x8BE5;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x52A0;&#x5165;&#x4E86;&#x6210;&#x5458;&#x5BFC;&#x81F4;image_dex2oat_enabled_&#x5411;&#x540E;&#x504F;&#x79FB;4&#x5B57;&#x8282;&#xFF0C;&#x53C8;&#x6216;&#x662F;&#x90E8;&#x5206;&#x4EA7;&#x5546;Android 5.0&#x4F7F;&#x7528;&#x4E86;Android 5.1&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5BFC;&#x81F4;&#x3002;<br>3&#x3001;&#x90E8;&#x5206;x86&#x7684;PAD&#x8FD0;&#x884C;arm&#x7684;APP&#xFF0C;&#x6B64;&#x79CD;&#x573A;&#x666F;&#x5341;&#x5206;&#x7279;&#x6B8A;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x9009;&#x62E9;&#x65E0;&#x89C6;&#x6B64;&#x79CD;&#x673A;&#x578B;&#xFF0C;&#x4E0D;&#x5904;&#x7406;<br>4&#x3001;&#x8003;&#x8651;&#x6821;&#x9A8C;&#x6027;&#x95EE;&#x9898;&#xFF0C;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x6821;&#x9A8C;&#x6211;&#x4EEC;&#x662F;&#x5426;&#x5BFB;&#x5740;&#x6B63;&#x786E;&#xFF0C;&#x8FDB;&#x884C;&#x9002;&#x5F53;&#x964D;&#x7EA7;&#x64CD;&#x4F5C;&#xFF0C;&#x6211;&#x4EEC;&#x9009;&#x62E9;&#x4EE5;&#x6307;&#x4EE4;&#x96C6;&#x53D8;&#x91CF;instruction_set_&#x4F5C;&#x4E3A;&#x53C2;&#x8003;&#x3002;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x679A;&#x4E3E;&#x53D8;&#x91CF;&#xFF0C;&#x6B63;&#x5E38;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x4E3A;int &#x7C7B;&#x578B; 1-7&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x503C;&#x4E0D;&#x6EE1;&#x8DB3;&#xFF0C;&#x6211;&#x4EEC;&#x9009;&#x62E9;&#x4E0D;&#x5904;&#x7406;&#xFF0C;&#x907F;&#x514D;&#x4E0D;&#x5FC5;&#x8981;&#x7684;crash&#x95EE;&#x9898;&#x3002;<br>5&#x3001;&#x4E00;&#x65E6;&#x5BFB;&#x5740;&#x5931;&#x8D25;&#xFF0C;&#x6211;&#x4EEC;&#x9009;&#x62E9;&#x4F7F;&#x7528;&#x515C;&#x5E95;&#x7B56;&#x7565;&#x8FDB;&#x884C;&#x91CD;&#x8BD5;&#xFF0C;&#x76F4;&#x63A5;&#x67E5;&#x627E;&#x6307;&#x4EE4;&#x96C6;&#x53D8;&#x91CF;instruction_set_&#x504F;&#x79FB;&#x503C;&#xFF0C;&#x8F6C;&#x6362;&#x4E3A;&#x53E6;&#x4E00;&#x4E2A;&#x516C;&#x5171;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7C7B;&#x578B;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;</p><p>&#x8FD9;&#x91CC;&#x8D34;&#x51FA;Android 5.0-9.0&#x5404;&#x7CFB;&#x7EDF;Runtime&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;<br></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 5.0&#xFF0C;GcRoot&#x4E2D;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x662F;&#x6307;&#x9488;&#x7C7B;&#x578B;&#xFF0C;&#x6240;&#x4EE5;&#x7528;void*&#x4EE3;&#x66FF;GcRoot</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PartialRuntime50</span> {</span></span><br><span class="line">    <span class="keyword">void</span> *callee_save_methods_[kCalleeSaveSize50]; <span class="comment">//5.0 5.1 void *</span></span><br><span class="line">    <span class="keyword">void</span> *pre_allocated_OutOfMemoryError_;</span><br><span class="line">    <span class="keyword">void</span> *pre_allocated_NoClassDefFoundError_;</span><br><span class="line">    <span class="keyword">void</span> *resolution_method_;</span><br><span class="line">    <span class="keyword">void</span> *imt_conflict_method_;</span><br><span class="line">    <span class="keyword">void</span> *default_imt_; <span class="comment">//5.0 5.1</span></span><br><span class="line"></span><br><span class="line">    InstructionSet instruction_set_;</span><br><span class="line">    QuickMethodFrameInfo callee_save_method_frame_infos_[kCalleeSaveSize50]; <span class="comment">// QuickMethodFrameInfo = uint32_t * 3</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> *compiler_callbacks_;</span><br><span class="line">    <span class="keyword">bool</span> is_zygote_;</span><br><span class="line">    <span class="keyword">bool</span> must_relocate_;</span><br><span class="line">    <span class="keyword">bool</span> is_concurrent_gc_enabled_;</span><br><span class="line">    <span class="keyword">bool</span> is_explicit_gc_disabled_;</span><br><span class="line">    <span class="keyword">bool</span> dex2oat_enabled_;</span><br><span class="line">    <span class="keyword">bool</span> image_dex2oat_enabled_;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> compiler_executable_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> patchoat_executable_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; compiler_options_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; image_compiler_options_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> image_location_;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> boot_class_path_string_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> class_path_string_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; properties_;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 5.1&#xFF0C;GcRoot&#x4E2D;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x662F;&#x6307;&#x9488;&#x7C7B;&#x578B;&#xFF0C;&#x6240;&#x4EE5;&#x7528;void*&#x4EE3;&#x66FF;GcRoot</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PartialRuntime51</span> {</span></span><br><span class="line">    <span class="keyword">void</span> *callee_save_methods_[kCalleeSaveSize50];  <span class="comment">//5.0 5.1 void *</span></span><br><span class="line">    <span class="keyword">void</span> *pre_allocated_OutOfMemoryError_;</span><br><span class="line">    <span class="keyword">void</span> *pre_allocated_NoClassDefFoundError_;</span><br><span class="line">    <span class="keyword">void</span> *resolution_method_;</span><br><span class="line">    <span class="keyword">void</span> *imt_conflict_method_;</span><br><span class="line">    <span class="comment">// Unresolved method has the same behavior as the conflict method, it is used by the class linker</span></span><br><span class="line">    <span class="comment">// for differentiating between unfilled imt slots vs conflict slots in superclasses.</span></span><br><span class="line">    <span class="keyword">void</span> *imt_unimplemented_method_;</span><br><span class="line">    <span class="keyword">void</span> *default_imt_;  <span class="comment">//5.0 5.1</span></span><br><span class="line"></span><br><span class="line">    InstructionSet instruction_set_;</span><br><span class="line">    QuickMethodFrameInfo callee_save_method_frame_infos_[kCalleeSaveSize50]; <span class="comment">// QuickMethodFrameInfo = uint32_t * 3</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> *compiler_callbacks_;</span><br><span class="line">    <span class="keyword">bool</span> is_zygote_;</span><br><span class="line">    <span class="keyword">bool</span> must_relocate_;</span><br><span class="line">    <span class="keyword">bool</span> is_concurrent_gc_enabled_;</span><br><span class="line">    <span class="keyword">bool</span> is_explicit_gc_disabled_;</span><br><span class="line">    <span class="keyword">bool</span> dex2oat_enabled_;</span><br><span class="line">    <span class="keyword">bool</span> image_dex2oat_enabled_;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> compiler_executable_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> patchoat_executable_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; compiler_options_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; image_compiler_options_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> image_location_;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> boot_class_path_string_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> class_path_string_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; properties_;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 6.0-7.1&#xFF0C;GcRoot&#x4E2D;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x662F;class&#x7C7B;&#x578B;&#xFF0C;&#x6240;&#x4EE5;&#x7528;int&#x4EE3;&#x66FF;GcRoot</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PartialRuntime60</span> {</span></span><br><span class="line">    <span class="comment">// 64 bit so that we can share the same asm offsets for both 32 and 64 bits.</span></span><br><span class="line">    <span class="keyword">uint64_t</span> callee_save_methods_[kCalleeSaveSize50];</span><br><span class="line">    <span class="keyword">int</span> pre_allocated_OutOfMemoryError_;</span><br><span class="line">    <span class="keyword">int</span> pre_allocated_NoClassDefFoundError_;</span><br><span class="line">    <span class="keyword">void</span> *resolution_method_;</span><br><span class="line">    <span class="keyword">void</span> *imt_conflict_method_;</span><br><span class="line">    <span class="comment">// Unresolved method has the same behavior as the conflict method, it is used by the class linker</span></span><br><span class="line">    <span class="comment">// for differentiating between unfilled imt slots vs conflict slots in superclasses.</span></span><br><span class="line">    <span class="keyword">void</span> *imt_unimplemented_method_;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Special sentinel object used to invalid conditions in JNI (cleared weak references) and</span></span><br><span class="line">    <span class="comment">// JDWP (invalid references).</span></span><br><span class="line">    <span class="keyword">int</span> sentinel_;</span><br><span class="line"></span><br><span class="line">    InstructionSet instruction_set_;</span><br><span class="line">    QuickMethodFrameInfo callee_save_method_frame_infos_[kCalleeSaveSize50]; <span class="comment">// QuickMethodFrameInfo = uint32_t * 3</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> *compiler_callbacks_;</span><br><span class="line">    <span class="keyword">bool</span> is_zygote_;</span><br><span class="line">    <span class="keyword">bool</span> must_relocate_;</span><br><span class="line">    <span class="keyword">bool</span> is_concurrent_gc_enabled_;</span><br><span class="line">    <span class="keyword">bool</span> is_explicit_gc_disabled_;</span><br><span class="line">    <span class="keyword">bool</span> dex2oat_enabled_;</span><br><span class="line">    <span class="keyword">bool</span> image_dex2oat_enabled_;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> compiler_executable_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> patchoat_executable_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; compiler_options_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; image_compiler_options_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> image_location_;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> boot_class_path_string_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> class_path_string_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; properties_;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 8.0-8.1, GcRoot&#x4E2D;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x662F;class&#x7C7B;&#x578B;&#xFF0C;&#x6240;&#x4EE5;&#x7528;int&#x4EE3;&#x66FF;GcRoot</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PartialRuntime80</span> {</span></span><br><span class="line">    <span class="comment">// 64 bit so that we can share the same asm offsets for both 32 and 64 bits.</span></span><br><span class="line">    <span class="keyword">uint64_t</span> callee_save_methods_[kCalleeSaveSize80];</span><br><span class="line">    <span class="keyword">int</span> pre_allocated_OutOfMemoryError_;</span><br><span class="line">    <span class="keyword">int</span> pre_allocated_NoClassDefFoundError_;</span><br><span class="line">    <span class="keyword">void</span> *resolution_method_;</span><br><span class="line">    <span class="keyword">void</span> *imt_conflict_method_;</span><br><span class="line">    <span class="comment">// Unresolved method has the same behavior as the conflict method, it is used by the class linker</span></span><br><span class="line">    <span class="comment">// for differentiating between unfilled imt slots vs conflict slots in superclasses.</span></span><br><span class="line">    <span class="keyword">void</span> *imt_unimplemented_method_;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Special sentinel object used to invalid conditions in JNI (cleared weak references) and</span></span><br><span class="line">    <span class="comment">// JDWP (invalid references).</span></span><br><span class="line">    <span class="keyword">int</span> sentinel_;</span><br><span class="line"></span><br><span class="line">    InstructionSet instruction_set_;</span><br><span class="line">    QuickMethodFrameInfo callee_save_method_frame_infos_[kCalleeSaveSize80]; <span class="comment">// QuickMethodFrameInfo = uint32_t * 3</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> *compiler_callbacks_;</span><br><span class="line">    <span class="keyword">bool</span> is_zygote_;</span><br><span class="line">    <span class="keyword">bool</span> must_relocate_;</span><br><span class="line">    <span class="keyword">bool</span> is_concurrent_gc_enabled_;</span><br><span class="line">    <span class="keyword">bool</span> is_explicit_gc_disabled_;</span><br><span class="line">    <span class="keyword">bool</span> dex2oat_enabled_;</span><br><span class="line">    <span class="keyword">bool</span> image_dex2oat_enabled_;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> compiler_executable_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> patchoat_executable_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; compiler_options_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; image_compiler_options_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> image_location_;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> boot_class_path_string_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> class_path_string_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; properties_;</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 9.0, GcRoot&#x4E2D;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x662F;class&#x7C7B;&#x578B;&#xFF0C;&#x6240;&#x4EE5;&#x7528;int&#x4EE3;&#x66FF;GcRoot</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PartialRuntime90</span> {</span></span><br><span class="line">    <span class="comment">// 64 bit so that we can share the same asm offsets for both 32 and 64 bits.</span></span><br><span class="line">    <span class="keyword">uint64_t</span> callee_save_methods_[kCalleeSaveSize90];</span><br><span class="line">    <span class="keyword">int</span> pre_allocated_OutOfMemoryError_;</span><br><span class="line">    <span class="keyword">int</span> pre_allocated_NoClassDefFoundError_;</span><br><span class="line">    <span class="keyword">void</span> *resolution_method_;</span><br><span class="line">    <span class="keyword">void</span> *imt_conflict_method_;</span><br><span class="line">    <span class="comment">// Unresolved method has the same behavior as the conflict method, it is used by the class linker</span></span><br><span class="line">    <span class="comment">// for differentiating between unfilled imt slots vs conflict slots in superclasses.</span></span><br><span class="line">    <span class="keyword">void</span> *imt_unimplemented_method_;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Special sentinel object used to invalid conditions in JNI (cleared weak references) and</span></span><br><span class="line">    <span class="comment">// JDWP (invalid references).</span></span><br><span class="line">    <span class="keyword">int</span> sentinel_;</span><br><span class="line"></span><br><span class="line">    InstructionSet instruction_set_;</span><br><span class="line">    QuickMethodFrameInfo callee_save_method_frame_infos_[kCalleeSaveSize90]; <span class="comment">// QuickMethodFrameInfo = uint32_t * 3</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> *compiler_callbacks_;</span><br><span class="line">    <span class="keyword">bool</span> is_zygote_;</span><br><span class="line">    <span class="keyword">bool</span> must_relocate_;</span><br><span class="line">    <span class="keyword">bool</span> is_concurrent_gc_enabled_;</span><br><span class="line">    <span class="keyword">bool</span> is_explicit_gc_disabled_;</span><br><span class="line">    <span class="keyword">bool</span> dex2oat_enabled_;</span><br><span class="line">    <span class="keyword">bool</span> image_dex2oat_enabled_;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> compiler_executable_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> patchoat_executable_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; compiler_options_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; image_compiler_options_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> image_location_;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> boot_class_path_string_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> class_path_string_;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="built_in">std</span>::<span class="built_in">string</span>&gt; properties_;</span><br><span class="line">};</span><br></pre></td></tr></table></figure><p></p><p>&#x6570;&#x636E;&#x7ED3;&#x6784;&#x8F6C;&#x6362;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x7B80;&#x5355;&#x7684;&#x6821;&#x9A8C;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x7279;&#x5F81;&#x8FDB;&#x884C;&#x6821;&#x9A8C;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x6821;&#x9A8C;&#x6307;&#x4EE4;&#x96C6;&#x53D8;&#x91CF;instruction_set_&#x662F;&#x5426;&#x53D6;&#x503C;&#x6B63;&#x786E;&#xFF0C;&#x8BE5;&#x503C;&#x662F;&#x4E00;&#x4E2A;&#x679A;&#x4E3E;&#xFF0C;&#x6B63;&#x5E38;&#x53D6;&#x503C;&#x8303;&#x56F4;1-7</p><figure class="highlight autohotkey"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * instruction set</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">enum class InstructionSet {</span><br><span class="line"><span class="built_in">    kNone,</span></span><br><span class="line"><span class="built_in">    kArm,</span></span><br><span class="line"><span class="built_in">    kArm64,</span></span><br><span class="line"><span class="built_in">    kThumb2,</span></span><br><span class="line"><span class="built_in">    kX86,</span></span><br><span class="line"><span class="built_in">    kX86_64,</span></span><br><span class="line"><span class="built_in">    kMips,</span></span><br><span class="line"><span class="built_in">    kMips64,</span></span><br><span class="line"><span class="built_in">    kLast,</span></span><br><span class="line">}<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>&#x53EA;&#x8981;&#x8BE5;&#x503C;&#x4E0D;&#x5728;&#x8303;&#x56F4;&#x5185;&#xFF0C;&#x5219;&#x8BA4;&#x4E3A;&#x5BFB;&#x5740;&#x5931;&#x8D25;<br></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (partialInstructionSetRuntime-&gt;instruction_set_ &lt;= InstructionSet::kNone ||</span><br><span class="line">    partialInstructionSetRuntime-&gt;instruction_set_ &gt;= InstructionSet::kLast) {</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">NULL</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p></p><p>&#x5BFB;&#x5740;&#x5931;&#x8D25;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x8FD0;&#x884C;&#x671F;&#x6307;&#x4EE4;&#x96C6;&#x7279;&#x5F81;&#x53D8;&#x91CF;&#x8FDB;&#x884C;&#x91CD;&#x8BD5;&#x67E5;&#x627E;</p><p>&#x5728;C++&#x4E2D;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5B8F;&#x5B9A;&#x4E49;&#xFF0C;&#x7B80;&#x5355;&#x83B7;&#x53D6;&#x8FD0;&#x884C;&#x671F;&#x7684;&#x6307;&#x4EE4;&#x96C6;<br></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(__arm__)</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">constexpr</span> InstructionSet kRuntimeISA = InstructionSet::kArm;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> defined(__aarch64__)</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">constexpr</span> InstructionSet kRuntimeISA = InstructionSet::kArm64;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> defined(__mips__) &amp;&amp; !defined(__LP64__)</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">constexpr</span> InstructionSet kRuntimeISA = InstructionSet::kMips;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> defined(__mips__) &amp;&amp; defined(__LP64__)</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">constexpr</span> InstructionSet kRuntimeISA = InstructionSet::kMips64;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> defined(__i386__)</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">constexpr</span> InstructionSet kRuntimeISA = InstructionSet::kX86;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> defined(__x86_64__)</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">constexpr</span> InstructionSet kRuntimeISA = InstructionSet::kX86_64;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">constexpr</span> InstructionSet kRuntimeISA = InstructionSet::kNone;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><br>&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x5982;&#x679C;&#x662F;InstructionSet::kArm&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4F18;&#x5148;&#x5C06;&#x5176;&#x8F6C;&#x4E3A;&#x6210;InstructionSet::kThumb2&#x8FDB;&#x884C;&#x67E5;&#x627E;&#x3002;&#x5982;&#x679C;C++&#x4E2D;&#x7684;&#x8FD0;&#x884C;&#x671F;&#x6307;&#x4EE4;&#x96C6;&#x53D8;&#x91CF;&#x67E5;&#x627E;&#x5931;&#x8D25;&#xFF0C;&#x5219;&#x6211;&#x4EEC;&#x4F7F;&#x7528;Java&#x5C42;&#x83B7;&#x53D6;&#x7684;&#x6307;&#x4EE4;&#x96C6;&#x53D8;&#x91CF;&#x8FDB;&#x884C;&#x67E5;&#x627E;<p></p><p>&#x5728;Java&#x4E2D;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x53CD;&#x5C04;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x8FD0;&#x884C;&#x671F;&#x6307;&#x4EE4;&#x96C6;<br></p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> static Integer currentInstructionSet = null;</span><br><span class="line"></span><br><span class="line">enum InstructionSet {</span><br><span class="line">    k<span class="constructor">None(0)</span>,</span><br><span class="line">    k<span class="constructor">Arm(1)</span>,</span><br><span class="line">    k<span class="constructor">Arm64(2)</span>,</span><br><span class="line">    k<span class="constructor">Thumb2(3)</span>,</span><br><span class="line">    k<span class="constructor">X86(4)</span>,</span><br><span class="line">    k<span class="constructor">X86_64(5)</span>,</span><br><span class="line">    k<span class="constructor">Mips(6)</span>,</span><br><span class="line">    k<span class="constructor">Mips64(7)</span>,</span><br><span class="line">    k<span class="constructor">Last(8)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> instructionSet;</span><br><span class="line"></span><br><span class="line">    <span class="constructor">InstructionSet(<span class="params">int</span> <span class="params">instructionSet</span>)</span> {</span><br><span class="line">        this.instructionSet = instructionSet;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public <span class="built_in">int</span> get<span class="constructor">InstructionSet()</span> {</span><br><span class="line">        return instructionSet;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x5F53;&#x524D;&#x6307;&#x4EE4;&#x96C6;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;Android 5.0&#x4EE5;&#x4E0A;&#x652F;&#x6301;&#xFF0C;&#x4EE5;&#x4E0B;&#x8FD4;&#x56DE;null</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> static String get<span class="constructor">CurrentInstructionSetString()</span> {</span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &lt; <span class="number">21</span>) {</span><br><span class="line">        return null;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        Class&lt;?&gt; clazz = <span class="module-access"><span class="module"><span class="identifier">Class</span>.</span></span>for<span class="constructor">Name(<span class="string">&quot;dalvik.system.VMRuntime&quot;</span>)</span>;</span><br><span class="line">        Method currentGet = clazz.get<span class="constructor">DeclaredMethod(<span class="string">&quot;getCurrentInstructionSet&quot;</span>)</span>;</span><br><span class="line">        return (String) currentGet.invoke(null);</span><br><span class="line">    } catch (Throwable e) {</span><br><span class="line">        e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">    }</span><br><span class="line">    return null;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x5F53;&#x524D;&#x6307;&#x4EE4;&#x96C6;&#x679A;&#x4E3E;int&#x503C;&#xFF0C;Android 5.0&#x4EE5;&#x4E0A;&#x652F;&#x6301;&#xFF0C;&#x4EE5;&#x4E0B;&#x8FD4;&#x56DE;0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> static <span class="built_in">int</span> get<span class="constructor">CurrentInstructionSet()</span> {</span><br><span class="line">    <span class="keyword">if</span> (currentInstructionSet != null) {</span><br><span class="line">        return currentInstructionSet;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        String invoke = get<span class="constructor">CurrentInstructionSetString()</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;arm&quot;</span>.equals(invoke)) {</span><br><span class="line">            currentInstructionSet = <span class="module-access"><span class="module"><span class="identifier">InstructionSet</span>.</span></span>kArm.get<span class="constructor">InstructionSet()</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;arm64&quot;</span>.equals(invoke)) {</span><br><span class="line">            currentInstructionSet = <span class="module-access"><span class="module"><span class="identifier">InstructionSet</span>.</span></span>kArm64.get<span class="constructor">InstructionSet()</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;x86&quot;</span>.equals(invoke)) {</span><br><span class="line">            currentInstructionSet = <span class="module-access"><span class="module"><span class="identifier">InstructionSet</span>.</span></span>kX86.get<span class="constructor">InstructionSet()</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;x86_64&quot;</span>.equals(invoke)) {</span><br><span class="line">            currentInstructionSet = <span class="module-access"><span class="module"><span class="identifier">InstructionSet</span>.</span></span>kX86_64.get<span class="constructor">InstructionSet()</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;mips&quot;</span>.equals(invoke)) {</span><br><span class="line">            currentInstructionSet = <span class="module-access"><span class="module"><span class="identifier">InstructionSet</span>.</span></span>kMips.get<span class="constructor">InstructionSet()</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;mips64&quot;</span>.equals(invoke)) {</span><br><span class="line">            currentInstructionSet = <span class="module-access"><span class="module"><span class="identifier">InstructionSet</span>.</span></span>kMips64.get<span class="constructor">InstructionSet()</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;none&quot;</span>.equals(invoke)) {</span><br><span class="line">            currentInstructionSet = <span class="module-access"><span class="module"><span class="identifier">InstructionSet</span>.</span></span>kNone.get<span class="constructor">InstructionSet()</span>;</span><br><span class="line">        }</span><br><span class="line">    } catch (Throwable e) {</span><br><span class="line">        currentInstructionSet = <span class="module-access"><span class="module"><span class="identifier">InstructionSet</span>.</span></span>kNone.get<span class="constructor">InstructionSet()</span>;</span><br><span class="line">    }</span><br><span class="line">    return currentInstructionSet != null ? currentInstructionSet : <span class="module-access"><span class="module"><span class="identifier">InstructionSet</span>.</span></span>kNone.get<span class="constructor">InstructionSet()</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p></p><p>&#x5728;C++&#x548C;JAVA&#x5C42;&#x83B7;&#x53D6;&#x5230;&#x6307;&#x4EE4;&#x96C6;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x8BE5;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x8FDB;&#x884C;&#x5BFB;&#x5740;<br></p><figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">template&lt;typename T&gt;</span><br><span class="line">int findOffset(<span class="name">void</span> *start, int regionStart, int regionEnd, T value) {</span><br><span class="line"></span><br><span class="line">    if (NULL == start || regionEnd &lt;= 0 || regionStart &lt; 0) {</span><br><span class="line">        return -1;</span><br><span class="line">    }</span><br><span class="line">    char *c_start = (<span class="name">char</span> *) start;</span><br><span class="line"></span><br><span class="line">    for (int i = regionStart; i &lt; regionEnd; i += 4) {</span><br><span class="line">        T *current_value = (<span class="name">T</span> *) (c_start + i);</span><br><span class="line">        if (value == *current_value) {</span><br><span class="line">            LOGE(<span class="string">&quot;found offset: %d&quot;</span>, i)<span class="comment">;</span></span><br><span class="line">            return i<span class="comment">;</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    return <span class="number">-2</span><span class="comment">;</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">//&#x5982;&#x679C;&#x662F;arm&#x5219;&#x4F18;&#x5148;&#x4F7F;&#x7528;kThumb2&#x67E5;&#x627E;&#xFF0C;&#x67E5;&#x627E;&#x4E0D;&#x5230;&#x5219;&#x518D;&#x4F7F;&#x7528;arm&#x91CD;&#x8BD5;</span><br><span class="line">int isa = (<span class="name">int</span>) kRuntimeISA<span class="comment">;</span></span><br><span class="line">int instructionSetOffset = <span class="number">-1</span><span class="comment">;</span></span><br><span class="line">instructionSetOffset = findOffset(<span class="name">runtime</span>, <span class="number">0</span>, <span class="number">100</span>, isa == (<span class="name">int</span>) InstructionSet:<span class="symbol">:kArm</span></span><br><span class="line">                                                   ? (<span class="name">int</span>) InstructionSet:<span class="symbol">:kThumb2</span></span><br><span class="line">                                                   : isa)<span class="comment">;</span></span><br><span class="line">if (<span class="name">instructionSetOffset</span> &lt; <span class="number">0</span> <span class="symbol">&amp;&amp;</span> isa == (<span class="name">int</span>) InstructionSet:<span class="symbol">:kArm</span>) {</span><br><span class="line">    //&#x5982;&#x679C;&#x662F;arm&#x7528;thumb2&#x67E5;&#x627E;&#x5931;&#x8D25;&#xFF0C;&#x5219;&#x4F7F;&#x7528;arm&#x91CD;&#x8BD5;&#x67E5;&#x627E;</span><br><span class="line">    LOGE(<span class="string">&quot;retry find offset when thumb2 fail: %d&quot;</span>, InstructionSet:<span class="symbol">:kArm</span>)<span class="comment">;</span></span><br><span class="line">    instructionSetOffset = findOffset(<span class="name">runtime</span>, <span class="number">0</span>, <span class="number">100</span>, InstructionSet:<span class="symbol">:kArm</span>)<span class="comment">;</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">//&#x5982;&#x679C;kRuntimeISA&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x5219;&#x4F7F;&#x7528;java&#x5C42;&#x4F20;&#x5165;&#x7684;currentInstructionSet&#xFF0C;&#x8BE5;&#x503C;&#x7531;java&#x5C42;&#x53CD;&#x5C04;&#x83B7;&#x53D6;&#x5230;&#x4F20;&#x5165;jni&#x51FD;&#x6570;&#x4E2D;</span><br><span class="line">if (<span class="name">instructionSetOffset</span> &lt;= <span class="number">0</span>) {</span><br><span class="line">    isa = currentInstructionSet<span class="comment">;</span></span><br><span class="line">    LOGE(<span class="string">&quot;retry find offset with currentInstructionSet: %d&quot;</span>, isa == (<span class="name">int</span>) InstructionSet:<span class="symbol">:kArm</span></span><br><span class="line">                                                             ? (<span class="name">int</span>) InstructionSet:<span class="symbol">:kThumb2</span></span><br><span class="line">                                                             : isa)<span class="comment">;</span></span><br><span class="line">    instructionSetOffset = findOffset(<span class="name">runtime</span>, <span class="number">0</span>, <span class="number">100</span>, isa == (<span class="name">int</span>) InstructionSet:<span class="symbol">:kArm</span></span><br><span class="line">                                                       ? (<span class="name">int</span>) InstructionSet:<span class="symbol">:kThumb2</span> : isa)<span class="comment">;</span></span><br><span class="line">    if (<span class="name">instructionSetOffset</span> &lt; <span class="number">0</span> <span class="symbol">&amp;&amp;</span> isa == (<span class="name">int</span>) InstructionSet:<span class="symbol">:kArm</span>) {</span><br><span class="line">        LOGE(<span class="string">&quot;retry find offset with currentInstructionSet when thumb2 fail: %d&quot;</span>,</span><br><span class="line">             InstructionSet:<span class="symbol">:kArm</span>)<span class="comment">;</span></span><br><span class="line">        //&#x5982;&#x679C;&#x662F;arm&#x7528;thumb2&#x67E5;&#x627E;&#x5931;&#x8D25;&#xFF0C;&#x5219;&#x4F7F;&#x7528;arm&#x91CD;&#x8BD5;&#x67E5;&#x627E;</span><br><span class="line">        instructionSetOffset = findOffset(<span class="name">runtime</span>, <span class="number">0</span>, <span class="number">100</span>, InstructionSet:<span class="symbol">:kArm</span>)<span class="comment">;</span></span><br><span class="line">    }</span><br><span class="line">    if (<span class="name">instructionSetOffset</span> &lt;= <span class="number">0</span>) {</span><br><span class="line">        return NULL<span class="comment">;</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><br>&#x67E5;&#x627E;&#x5230;instructionSetOffset&#x7684;&#x5730;&#x5740;&#x504F;&#x79FB;&#x540E;&#xFF0C;&#x901A;&#x8FC7;&#x5404;&#x7CFB;&#x7EDF;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x8BA1;&#x7B97;&#x51FA;image_dex2oat_enabled_&#x5730;&#x5740;&#x504F;&#x79FB;&#x5373;&#x53EF;&#xFF0C;&#x8FD9;&#x91CC;&#x4E0D;&#x518D;&#x8BE6;&#x7EC6;&#x8BF4;&#x660E;&#x3002;<p></p><h3 id="&#x6DF1;&#x5751;&#x4E4B;Xposed"><a href="#&#x6DF1;&#x5751;&#x4E4B;Xposed" class="headerlink" title="&#x6DF1;&#x5751;&#x4E4B;Xposed"></a>&#x6DF1;&#x5751;&#x4E4B;Xposed</h3><p>&#x5F53;&#x4F60;&#x89C9;&#x5F97;&#x4E00;&#x5207;&#x5F88;&#x7F8E;&#x597D;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E00;&#x4E2A;&#x6DF1;&#x5751;&#x7A81;&#x7136;&#x5192;&#x4E86;&#x51FA;&#x6765;&#xFF0C;Xposed&#xFF01;&#x7531;&#x4E8E;Xposed&#x8FD0;&#x884C;&#x671F;&#x5BF9;art&#x8FDB;&#x884C;&#x4E86;hook&#xFF0C;&#x5B9E;&#x9645;&#x4F7F;&#x7528;&#x7684;&#x662F;libxposed_art.so&#x800C;&#x4E0D;&#x662F;libart.so&#xFF0C;&#x5E76;&#x4E14;&#x5BF9;&#x5E94;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5B58;&#x5728;&#x7BE1;&#x6539;&#x73B0;&#x8C61;&#xFF0C;&#x4EE5;5.0-6.0&#x7BE1;&#x6539;&#x7684;&#x6700;&#x4E3A;&#x6076;&#x52A3;&#xFF0C;&#x5176;&#x9879;&#x76EE;&#x5730;&#x5740;&#x4E3A; <a href="https://github.com/rovo89/android_art" target="_blank" rel="noopener">https://github.com/rovo89/android_art</a></p><ul><li><a href="https://github.com/rovo89/android_art/blob/v89-sdk21/runtime/runtime.h" target="_blank" rel="noopener">https://github.com/rovo89/android_art/blob/v89-sdk21/runtime/runtime.h</a></li><li><a href="https://github.com/rovo89/android_art/blob/v89-sdk22/runtime/runtime.h" target="_blank" rel="noopener">https://github.com/rovo89/android_art/blob/v89-sdk22/runtime/runtime.h</a></li><li><a href="https://github.com/rovo89/android_art/blob/v89-sdk23/runtime/runtime.h" target="_blank" rel="noopener">https://github.com/rovo89/android_art/blob/v89-sdk23/runtime/runtime.h</a></li><li><a href="https://github.com/rovo89/android_art/blob/v89-sdk24/runtime/runtime.h" target="_blank" rel="noopener">https://github.com/rovo89/android_art/blob/v89-sdk24/runtime/runtime.h</a></li><li><a href="https://github.com/rovo89/android_art/blob/v89-sdk25/runtime/runtime.h" target="_blank" rel="noopener">https://github.com/rovo89/android_art/blob/v89-sdk25/runtime/runtime.h</a></li></ul><p>5.0 runtime.h</p><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool </span>is_recompiling_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>is_zygote_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>is_minimal_framework_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>must_relocate_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>is_concurrent_gc_enabled_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>is_explicit_gc_disabled_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>dex2oat_enabled_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>image_dex2oat_enabled_<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>5.1 runtime.h</p><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool </span>is_recompiling_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>is_zygote_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>is_minimal_framework_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>must_relocate_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>is_concurrent_gc_enabled_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>is_explicit_gc_disabled_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>dex2oat_enabled_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>image_dex2oat_enabled_<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>6.0 runtime.h</p><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bool </span>is_zygote_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>is_minimal_framework_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>must_relocate_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>is_concurrent_gc_enabled_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>is_explicit_gc_disabled_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>dex2oat_enabled_<span class="comment">;</span></span><br><span class="line"><span class="keyword">bool </span>image_dex2oat_enabled_<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5728;5.0&#x548C;5.1&#x4E0A;&#xFF0C;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x591A;&#x4E86;is_recompiling_&#x548C;is_minimal_framework_&#xFF0C;&#x5B9E;&#x9645;image_dex2oat_enabled_&#x5B58;&#x5728;&#x5411;&#x540E;&#x504F;&#x79FB;2&#x5B57;&#x8282;&#x7684;&#x95EE;&#x9898;&#xFF1B;&#x5728;6.0&#x4E0A;&#xFF0C;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x591A;&#x4E86;is_minimal_framework_&#xFF0C;&#x5B9E;&#x9645;image_dex2oat_enabled_&#x5B58;&#x5728;&#x5411;&#x540E;&#x504F;&#x79FB;1&#x5B57;&#x8282;&#x7684;&#x95EE;&#x9898;&#xFF1B;&#x800C;&#x5728;Android 7.0&#x53CA;&#x4EE5;&#x4E0A;&#xFF0C;&#x6682;&#x65F6;&#x672A;&#x5B58;&#x5728;&#x7BE1;&#x6539;runtime.h&#x7684;&#x73B0;&#x8C61;&#x3002;&#x56E0;&#x6B64;&#x53EF;&#x5728;native&#x5C42;&#x5224;&#x65AD;&#x662F;&#x5426;&#x5B58;&#x5728;xposed&#x6846;&#x67B6;&#xFF0C;&#x5B58;&#x5728;&#x5219;&#x624B;&#x52A8;&#x6821;&#x51C6;&#x504F;&#x79FB;&#x503C;&#x3002;</p><p>&#x5224;&#x65AD;&#x662F;&#x5426;&#x5B58;&#x5728;xposed&#x51FD;&#x6570;&#x5982;&#x4E0B;</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">bool</span> initedXposedInstalled = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">bool</span> xposedInstalled = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * xposed&#x662F;&#x5426;&#x5B89;&#x88C5;</span></span><br><span class="line"><span class="comment"> * /system/framework/XposedBridge.jar</span></span><br><span class="line"><span class="comment"> * /data/data/de.robv.android.xposed.installer/bin/XposedBridge.jar</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isXposedInstalled</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (initedXposedInstalled) {</span><br><span class="line">        <span class="keyword">return</span> xposedInstalled;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (!initedXposedInstalled) {</span><br><span class="line">        <span class="keyword">char</span> *classPath = getenv(<span class="string">&quot;CLASSPATH&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (classPath == <span class="literal">NULL</span>) {</span><br><span class="line">            xposedInstalled = <span class="literal">false</span>;</span><br><span class="line">            initedXposedInstalled = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">char</span> *subString = <span class="built_in">strstr</span>(classPath, <span class="string">&quot;XposedBridge.jar&quot;</span>);</span><br><span class="line">        xposedInstalled = subString != <span class="literal">NULL</span>;</span><br><span class="line">        initedXposedInstalled = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> xposedInstalled;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> xposedInstalled;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x8FDB;&#x884C;&#x504F;&#x79FB;&#x6821;&#x51C6;&#xFF0C;&#x8FD9;&#x91CC;&#x4E5F;&#x4E0D;&#x518D;&#x7EC6;&#x8BF4;&#x3002;</p><h3 id="&#x517C;&#x5BB9;&#x6027;"><a href="#&#x517C;&#x5BB9;&#x6027;" class="headerlink" title="&#x517C;&#x5BB9;&#x6027;"></a>&#x517C;&#x5BB9;&#x6027;</h3><p>&#x505A;&#x5230;&#x4E86;&#x5982;&#x4E0A;&#x7684;&#x51E0;&#x6B65;&#x4E4B;&#x540E;&#xFF0C;&#x5176;&#x5B9E;&#x517C;&#x5BB9;&#x6027;&#x662F;&#x76F8;&#x5F53;&#x4E0D;&#x9519;&#x4E86;&#xFF0C;&#x901A;&#x8FC7;testin&#x7684;&#x517C;&#x5BB9;&#x6027;&#x6D4B;&#x8BD5;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x57FA;&#x672C;&#x5DF2;&#x7ECF;&#x8986;&#x76D6;&#x5E38;&#x89C1;&#x673A;&#x578B;&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x4E8E;testin&#x7684;&#x517C;&#x5BB9;&#x6027;&#x53EA;&#x80FD;&#x8986;&#x76D6;testin&#x4E0A;&#x7EA6;50%&#x5DE6;&#x53F3;&#x7684;&#x673A;&#x578B;&#xFF0C;&#x5269;&#x4F59;50%&#x673A;&#x578B;&#x65E0;&#x6CD5;&#x8986;&#x76D6;&#x5230;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x9009;&#x62E9;&#x4E86;&#x4EBA;&#x8089;&#x8FDC;&#x7A0B;&#x771F;&#x673A;&#x8C03;&#x8BD5;&#xFF0C;&#x8986;&#x76D6;&#x5269;&#x4F59;50%&#x673A;&#x578B;&#xFF0C;&#x7ECF;&#x8FC7;&#x9A8C;&#x8BC1;&#x540E;&#xFF0C;&#x5BF9;testin&#x4E0A;99%+&#x7684;&#x673A;&#x578B;&#x90FD;&#x662F;&#x652F;&#x6301;&#x7684;&#xFF0C;&#x4E14;&#x540C;&#x65F6;&#x652F;&#x6301;32&#x4F4D;&#x548C;64&#x4F4D;&#x52A8;&#x6001;&#x5E93;&#xFF0C;&#x5728;&#x517C;&#x5BB9;&#x6027;&#x65B9;&#x9762;&#xFF0C;&#x5DF2;&#x7ECF;&#x8FDC;&#x8FDC;&#x8D85;&#x8D8A;Atlas&#x3002;</p><p>&#x5728;&#x517C;&#x5BB9;&#x6027;&#x6D4B;&#x8BD5;&#x4E2D;&#xFF0C;&#x53D1;&#x73B0;&#x4E00;&#x90E8;&#x5206;&#x673A;&#x578B;runtime&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5B58;&#x5728;&#x7BE1;&#x6539;&#x95EE;&#x9898;&#xFF0C;&#x8FDB;&#x4E00;&#x6B65;&#x9A8C;&#x8BC1;&#x4E86;Atlas&#x4E3A;&#x4EC0;&#x4E48;&#x4FEE;&#x6539;image_dex2oat_enabled_&#x53D8;&#x91CF;&#x800C;&#x4E0D;&#x662F;&#x4FEE;&#x6539;dex2oat_enabled_&#x53D8;&#x91CF;&#xFF0C;&#x56E0;&#x4E3A;dex2oat_enabled_&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x5411;&#x540E;&#x504F;&#x79FB;&#x4E00;&#x5B57;&#x8282;&#x7684;&#x95EE;&#x9898;(&#x751A;&#x81F3;&#x662F;2&#x5B57;&#x8282;&#xFF0C;&#x5982;xposed&#x548C;&#x4E00;&#x52A0;9.0.2&#x6BD4;&#x8F83;&#x65B0;&#x7684;&#x7CFB;&#x7EDF;&#x5C31;&#x5B58;&#x5728;2&#x5B57;&#x8282;&#x504F;&#x79FB;)&#xFF0C;&#x5BFC;&#x81F4;&#x5BFB;&#x5740;&#x9519;&#x8BEF;&#xFF0C;&#x4FEE;&#x6539;&#x7684;&#x5176;&#x5B9E;&#x662F;&#x5176;&#x539F;&#x6765;&#x7684;&#x5730;&#x5740;&#xFF08;&#x5373;&#x73B0;&#x6709;&#x771F;&#x5B9E;&#x5730;&#x5740;&#x7684;&#x524D;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#xFF09;&#xFF0C;&#x5BFC;&#x81F4;&#x7981;&#x7528;&#x5931;&#x8D25;&#x3002;&#x800C;&#x901A;&#x8FC7;&#x4FEE;&#x6539;image_dex2oat_enabled_&#x53D8;&#x91CF;&#xFF0C;&#x5373;&#x4F7F;dex2oat_enabled_&#x5411;&#x540E;&#x504F;&#x79FB;&#x4E00;&#x5B57;&#x8282;&#xFF0C;&#x7531;&#x4E8E;&#x4FEE;&#x6539;&#x7684;&#x662F;image_dex2oat_enabled_&#xFF0C;&#x6240;&#x4EE5;&#x5B9E;&#x9645;&#x4FEE;&#x6539;&#x7684;&#x5176;&#x5B9E;&#x5C31;&#x662F;dex2oat_enabled_&#x73B0;&#x5728;&#x504F;&#x79FB;&#x540E;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x8FD8;&#x662F;&#x8FBE;&#x5230;&#x4E86;&#x7981;&#x7528;&#x7684;&#x6548;&#x679C;&#x3002;&#x8FD9;&#x91CC;&#x6709;&#x70B9;&#x7ED5;&#xFF0C;&#x53EF;&#x4EE5;&#x7EC6;&#x7EC6;&#x54C1;&#x5473;&#x4E00;&#x4E0B;&#x3002;&#x8FD9;&#x4E2A;&#x64CD;&#x4F5C;&#xFF0C;&#x53EF;&#x4EE5;&#x517C;&#x5BB9;&#x5927;&#x90E8;&#x5206;&#x673A;&#x578B;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x8D34;&#x51FA;&#x4E00;&#x90E8;&#x5206;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5B58;&#x5728;&#x504F;&#x79FB;&#x7684;&#x673A;&#x578B;&#x3002;<br><img src="/2018/12/30/art-dex2oat%E5%8A%A0%E8%BD%BD%E5%8A%A0%E9%80%9F%E6%B5%85%E6%9E%90/art-address-error1.png" alt="art-address-error1.png"><br><img src="/2018/12/30/art-dex2oat%E5%8A%A0%E8%BD%BD%E5%8A%A0%E9%80%9F%E6%B5%85%E6%9E%90/art-address-error2.png" alt="art-address-error2.png"><br><img src="/2018/12/30/art-dex2oat%E5%8A%A0%E8%BD%BD%E5%8A%A0%E9%80%9F%E6%B5%85%E6%9E%90/art-address-error3.png" alt="art-address-error3.png"></p><h3 id="&#x9898;&#x5916;&#x8BDD;-Dalvik&#x4E0A;dex2opt&#x52A0;&#x901F;"><a href="#&#x9898;&#x5916;&#x8BDD;-Dalvik&#x4E0A;dex2opt&#x52A0;&#x901F;" class="headerlink" title="&#x9898;&#x5916;&#x8BDD; Dalvik&#x4E0A;dex2opt&#x52A0;&#x901F;"></a>&#x9898;&#x5916;&#x8BDD; Dalvik&#x4E0A;dex2opt&#x52A0;&#x901F;</h3><p>&#x5728;art&#x4E0A;&#x9996;&#x6B21;&#x52A0;&#x8F7D;&#x63D2;&#x4EF6;&#xFF0C;&#x4F1A;&#x901A;&#x8FC7;&#x7981;&#x7528;dex2oat&#x8FBE;&#x5230;&#x52A0;&#x901F;&#x6548;&#x679C;&#xFF0C;&#x90A3;&#x4E48;&#x5728;dalvik&#x4E0A;&#x9996;&#x6B21;&#x52A0;&#x8F7D;&#x63D2;&#x4EF6;&#xFF0C;&#x5176;&#x5B9E;&#x4E5F;&#x5B58;&#x5728;&#x7C7B;&#x4F3C;&#x7684;&#x95EE;&#x9898;&#xFF0C;dalvik&#x4E0A;&#x662F;&#x901A;&#x8FC7;dexopt&#x8FDB;&#x884C;dex&#x7684;&#x4F18;&#x5316;&#x64CD;&#x4F5C;&#xFF0C;&#x8FD9;&#x4E2A;&#x64CD;&#x4F5C;&#xFF0C;&#x4E5F;&#x662F;&#x6BD4;&#x8F83;&#x8017;&#x65F6;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x5728;dalvik&#x4E0A;&#xFF0C;&#x9700;&#x8981;&#x4E00;&#x79CD;&#x7C7B;&#x4F3C;&#x4E8E;dex2oat&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x8FBE;&#x5230;&#x7981;&#x7528;dex2opt&#x7684;&#x6548;&#x679C;&#x3002;&#x7ECF;&#x8FC7;&#x9A8C;&#x8BC1;&#x540E;&#xFF0C;&#x53D1;&#x73B0;Atlas&#x662F;&#x901A;&#x8FC7;&#x7981;&#x7528;verify&#x8FBE;&#x5230;&#x4E00;&#x5B9A;&#x7684;&#x52A0;&#x901F;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x7981;&#x7528;class verify&#x5373;&#x53EF;&#x3002;</p><p>&#x6E90;&#x7801;&#x4EE5;Android 4.4.4&#x8FDB;&#x884C;&#x5206;&#x6790;&#xFF0C;&#x89C1; <a href="https://android.googlesource.com/platform/dalvik/+/android-4.4.4_r2/vm/" target="_blank" rel="noopener">https://android.googlesource.com/platform/dalvik/+/android-4.4.4_r2/vm/</a></p><p>&#x5728;Java&#x5C42;&#x6211;&#x4EEC;&#x52A0;&#x8F7D;&#x4E00;&#x4E2A;Dex&#x662F;&#x901A;&#x8FC7;DexFile.loadDex()&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x52A0;&#x8F7D;&#x3002;&#x6B64;&#x65B9;&#x6CD5;&#x6700;&#x7EC8;&#x4F1A;&#x8D70;&#x5230;native&#x65B9;&#x6CD5; openDexFileNative&#xFF0C;Android 4.4.4&#x7684;&#x6E90;&#x7801;&#x5982;&#x4E0B;</p><p><a href="https://android.googlesource.com/platform/dalvik/+/android-4.4.4_r2/vm/native/dalvik_system_DexFile.cpp#151" target="_blank" rel="noopener">https://android.googlesource.com/platform/dalvik/+/android-4.4.4_r2/vm/native/dalvik_system_DexFile.cpp#151</a></p><p>&#x6700;&#x7EC8;&#x4F1A;&#x8C03;&#x7528;&#x5230;dvmRawDexFileOpen&#x6216;&#x8005;dvmJarFileOpen</p><p>&#x8FD9;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x6700;&#x7EC8;&#x90FD;&#x4F1A;&#x5148;&#x67E5;&#x627E;&#x7F13;&#x5B58;&#x6587;&#x4EF6;&#x662F;&#x5426;&#x5B58;&#x5728;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x6700;&#x7EC8;&#x90FD;&#x4F1A;&#x8C03;&#x7528;&#x5230;dvmOptimizeDexFile&#x51FD;&#x6570;&#xFF0C;&#x89C1;&#xFF1A;</p><p><a href="https://android.googlesource.com/platform/dalvik/+/android-4.4.4_r2/vm/analysis/DexPrepare.cpp#351" target="_blank" rel="noopener">https://android.googlesource.com/platform/dalvik/+/android-4.4.4_r2/vm/analysis/DexPrepare.cpp#351</a></p><p>&#x800C;dvmOptimizeDexFile&#x51FD;&#x6570;&#x5F00;&#x5934;&#x6709;&#x8FD9;&#x4E48;&#x4E00;&#x6BB5;&#x903B;&#x8F91;</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">dvmOptimizeDexFile</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">off_t</span> dexOffset, <span class="keyword">long</span> dexLength,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">const</span> <span class="keyword">char</span>* fileName, u4 modWhen, u4 crc, <span class="keyword">bool</span> isBootstrap)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* lastPart = <span class="built_in">strrchr</span>(fileName, <span class="string">&apos;/&apos;</span>);</span><br><span class="line">    <span class="keyword">if</span> (lastPart != <span class="literal">NULL</span>)</span><br><span class="line">        lastPart++;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        lastPart = fileName;</span><br><span class="line">    ALOGD(<span class="string">&quot;DexOpt: --- BEGIN &apos;%s&apos; (bootstrap=%d) ---&quot;</span>, lastPart, isBootstrap);</span><br><span class="line">    <span class="keyword">pid_t</span> pid;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * This could happen if something in our bootclasspath, which we thought</span></span><br><span class="line"><span class="comment">     * was all optimized, got rejected.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">//&#x5173;&#x952E;&#x4EE3;&#x7801;</span></span><br><span class="line">    <span class="keyword">if</span> (gDvm.optimizing) {</span><br><span class="line">        ALOGW(<span class="string">&quot;Rejecting recursive optimization attempt on &apos;%s&apos;&quot;</span>, fileName);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x6B64;&#x5904;&#x7701;&#x7565;n&#x884C;&#x4EE3;&#x7801;</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4E5F;&#x5C31;&#x662F;&#x8BF4;gDvm.optimizing&#x7684;&#x503C;&#x4E3A;true&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x76F4;&#x63A5;&#x88AB;return&#x4E86;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x6B64;&#x503C;&#x4E3A;true&#xFF0C;&#x5373;&#x53EF;&#x8FBE;&#x5230;&#x7981;&#x7528;dexopt&#x7684;&#x76EE;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5F53;&#x8BBE;&#x6B64;&#x503C;&#x4E3A;true&#x65F6;&#xFF0C;&#x90A3;&#x6240;&#x6709;dexopt&#x64CD;&#x4F5C;&#x90FD;&#x4F1A;&#x53D1;&#x751F;IOException&#xFF0C;&#x5BFC;&#x81F4;&#x7C7B;&#x52A0;&#x8F7D;&#x5931;&#x8D25;&#xFF0C;&#x5B58;&#x5728;crash&#x98CE;&#x9669;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x80FD;&#x4FEE;&#x6539;&#x6B64;&#x503C;&#xFF0C;&#x770B;&#x6765;&#x53EA;&#x80FD;&#x4FEE;&#x6539;class verify&#x4E3A;&#x4E0D;&#x6821;&#x9A8C;&#x4E86;&#xFF0C;&#x6CA1;&#x6709;&#x5176;&#x4ED6;&#x597D;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x4E8B;&#x5B9E;&#x8BC1;&#x660E;&#xFF0C;&#x53BB;&#x6389;&#x8FD9;&#x4E00;&#x6B65;&#x6821;&#x9A8C;&#x53EF;&#x4EE5;&#x8282;&#x7EA6;&#x81F3;&#x5C11;1&#x500D;&#x7684;&#x65F6;&#x95F4;&#x3002;</p><p>&#x6B64;&#x5916;&#x53D1;&#x73B0;&#x90E8;&#x5206;4.2.2&#x548C;4.4.4&#x5B58;&#x5728;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x504F;&#x79FB;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x901A;&#x8FC7;&#x51E0;&#x4E2A;&#x7279;&#x5F81;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x8FDB;&#x884C;&#x91CD;&#x8BD5;&#xFF0C;&#x91CD;&#x65B0;&#x5B9A;&#x4F4D;&#x5173;&#x952E;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x8FDB;&#x884C;&#x91CD;&#x8BD5;&#x3002;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x901A;&#x8FC7; dexOptMode&#xFF0C;classVerifyMode&#xFF0C;registerMapMode&#xFF0C;executionMode&#x56DB;&#x4E2A;&#x7279;&#x5F81;&#x53D8;&#x91CF;&#x7684;&#x53D6;&#x503C;&#x8303;&#x56F4;&#x8FDB;&#x884C;&#x91CD;&#x8BD5;&#x5B9A;&#x4F4D;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x81EA;&#x884C;&#x7814;&#x7A76;&#x4E00;&#x4E0B;&#xFF0C;&#x4E0D;&#x518D;&#x7EC6;&#x8BF4;&#x3002;</p><p>&#x901A;&#x8FC7;&#x67E5;&#x770B;&#x6E90;&#x7801;&#x53D1;&#x73B0;gDvm&#x662F;&#x5BFC;&#x51FA;&#x7684;&#xFF0C;&#x89C1; <a href="https://android.googlesource.com/platform/dalvik/+/android-4.4.4_r2/vm/Globals.h#740" target="_blank" rel="noopener">https://android.googlesource.com/platform/dalvik/+/android-4.4.4_r2/vm/Globals.h#740</a></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="class"><span class="keyword">struct</span> <span class="title">DvmGlobals</span> <span class="title">gDvm</span>;</span></span><br></pre></td></tr></table></figure><p>&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x501F;&#x52A9;dlopen&#x548C;dlsym&#x62FF;&#x5230;&#x6574;&#x4E2A;DvmGlobals&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x8D77;&#x59CB;&#x5730;&#x5740;&#xFF0C;&#x4FEE;&#x6539;&#x5BF9;&#x5E94;&#x7684;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x5373;&#x53EF;&#x3002;&#x4E0D;&#x8FC7;&#x4E0D;&#x5E78;&#x7684;&#x662F;&#xFF0C;Android 4.0-4.4&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5404;&#x7248;&#x672C;&#x90FD;&#x4E0D;&#x5927;&#x4E00;&#x81F4;&#xFF0C;&#x9700;&#x8981;&#x5224;&#x65AD;&#x7248;&#x672C;&#x8FDB;&#x884C;&#x9002;&#x914D;&#x64CD;&#x4F5C;&#x3002;&#x8FD9;&#x91CC;&#x4EE5;Android 4.4&#x4E3A;&#x4F8B;&#x3002;</p><p>&#x9996;&#x5148;&#x4F7F;&#x7528;dlopen&#x548C;dlsym&#x83B7;&#x5F97;&#x5BF9;&#x5E94;&#x5BFC;&#x51FA;&#x7B26;&#x53F7;&#x8868;&#x5730;&#x5740;</p><figure class="highlight sas"><table><tr><td class="code"><pre><span class="line">void <span class="comment">*dvm_handle = dlopen(&quot;libdvm.so&quot;, RTLD_LAZY);</span></span><br><span class="line">dlerror();//&#x6E05;&#x7A7A;&#x9519;&#x8BEF;&#x4FE1;&#x606F;</span><br><span class="line"><span class="meta">if</span> (dvm_handle == <span class="meta">NULL</span>) {</span><br><span class="line">    <span class="meta">return</span>;</span><br><span class="line">}</span><br><span class="line">void <span class="comment">*symbol = dlsym(dvm_handle, &quot;gDvm&quot;);</span></span><br><span class="line">const char <span class="comment">*error = dlerror();</span></span><br><span class="line"><span class="meta">if</span> (<span class="meta">error</span> != <span class="meta">NULL</span>) {</span><br><span class="line">    d<span class="meta">lclose(</span>dvm_handle);</span><br><span class="line">    <span class="meta">return</span>;</span><br><span class="line">}</span><br><span class="line"><span class="meta">if</span> (symbol == <span class="meta">NULL</span>) {</span><br><span class="line">    LOGE(<span class="string">&quot;can&apos;t get symbol.&quot;</span>);</span><br><span class="line">    d<span class="meta">lclose(</span>dvm_handle);</span><br><span class="line">    <span class="meta">return</span>;</span><br><span class="line">}</span><br><span class="line">DvmGlobals44 <span class="comment">*dvmGlobals = (DvmGlobals44 *) symbol;</span></span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x76F4;&#x63A5;&#x4FEE;&#x6539;classVerifyMode&#x7684;&#x503C;&#x5373;&#x53EF;</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">dvmGlobals-&gt;classVerifyMode = DexClassVerifyMode::VERIFY_MODE_NONE;</span><br></pre></td></tr></table></figure><p>&#x81F3;&#x6B64;&#xFF0C;&#x5C31;&#x5B8C;&#x6210;&#x4E86;dexopt&#x7684;&#x7981;&#x7528;class verify&#x64CD;&#x4F5C;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x6574;&#x4E2A;&#x903B;&#x8F91;&#x548C;art&#x4E0A;&#x7981;&#x7528;dex2oat&#x5341;&#x5206;&#x76F8;&#x4F3C;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#xFF0C;&#x4FEE;&#x6539;&#x5B83;&#x5373;&#x53EF;&#x3002;</p><p>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x8FD9;&#x91CC;&#x6709;&#x5F88;&#x591A;&#x673A;&#x578B;&#xFF0C;&#x5B58;&#x5728;&#x90E8;&#x5206;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5411;&#x540E;&#x504F;&#x79FB;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x8FD9;&#x91CC;&#x5F97;&#x901A;&#x8FC7;&#x51E0;&#x4E2A;&#x7279;&#x5F81;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x8FDB;&#x884C;&#x5B9A;&#x4F4D;&#xFF0C;&#x4ECE;&#x800C;&#x5F97;&#x5230;&#x76EE;&#x6807;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x8FD9;&#x91CC;&#x91C7;&#x7528;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x4E3A;</p><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">struct DvmGlobalsRetry {</span><br><span class="line">    DexOptimizerMode *dexOptMode<span class="comment">;</span></span><br><span class="line">    DexClassVerifyMode *classVerifyMode<span class="comment">;</span></span><br><span class="line">    RegisterMapMode *registerMapMode<span class="comment">;</span></span><br><span class="line">    ExecutionMode *executionMode<span class="comment">;</span></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * VM init management.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">bool </span>*initializing<span class="comment">;</span></span><br><span class="line">    <span class="keyword">bool </span>*optimizing<span class="comment">;</span></span><br><span class="line">}<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x53D8;&#x91CF;&#x7684;&#x8303;&#x56F4;&#x503C;&#xFF0C;&#x4F18;&#x5148;&#x627E;&#x5230;DexOptimizerMode&#x548C;DexClassVerifyMode&#x7684;&#x504F;&#x79FB;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x4ECE;DexClassVerifyMode&#x4E4B;&#x540E;&#x627E;&#x5230;RegisterMapMode&#x7684;&#x504F;&#x79FB;&#x503C;&#xFF0C;&#x4ECE;RegisterMapMode&#x4E4B;&#x540E;&#x627E;&#x5230;ExecutionMode&#x7684;&#x504F;&#x79FB;&#x503C;&#xFF0C;&#x6700;&#x7EC8;&#x5F97;&#x5230;classVerifyMode&#x7684;&#x504F;&#x79FB;&#x503C;&#xFF0C;&#x7ECF;&#x8FC7;&#x9A8C;&#x8BC1;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;99%+&#x80FD;&#x5F97;&#x5230;&#x6B63;&#x786E;&#x7684;&#x504F;&#x79FB;&#x503C;&#xFF0C;&#x4ECE;&#x800C;&#x8FDB;&#x884C;&#x91CD;&#x8BD5;&#x3002;</p><p>&#x90E8;&#x5206;&#x5F02;&#x5E38;&#x673A;&#x578B;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x504F;&#x79FB;&#x5982;&#x4E0B;</p><p><img src="/2018/12/30/art-dex2oat%E5%8A%A0%E8%BD%BD%E5%8A%A0%E9%80%9F%E6%B5%85%E6%9E%90/dalvik-address-error1.png" alt="dalvik-address-error1.png"><br><img src="/2018/12/30/art-dex2oat%E5%8A%A0%E8%BD%BD%E5%8A%A0%E9%80%9F%E6%B5%85%E6%9E%90/dalvik-address-error2.png" alt="dalvik-address-error2.png"></p><p>&#x601D;&#x8003;&#xFF1A;&#x662F;&#x5426;AOSP&#x4E2D;&#x95F4;&#x67D0;&#x4E00;&#x4E2A;&#x7248;&#x672C;&#x5B58;&#x5728;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x504F;&#x79FB;? &#x901A;&#x8FC7;&#x67E5;&#x770B;AOSP&#x6E90;&#x7801;&#x53D1;&#x73B0;&#x5E76;&#x6CA1;&#x6709;&#x7C7B;&#x4F3C;&#x504F;&#x79FB;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x5F97;&#x800C;&#x77E5;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD9;&#x4E9B;Android 4.2.2&#x4E2D;dexOptMode&#x5411;&#x540E;&#x504F;&#x79FB;4&#x5B57;&#x8282;&#xFF0C;Android 4.4.4&#x4E2D;dexOptMode&#x5411;&#x540E;&#x504F;&#x79FB;16&#x5B57;&#x8282;&#x3002;&#x504F;&#x79FB;&#x503C;&#x662F;&#x5982;&#x6B64;&#x60CA;&#x4EBA;&#x7684;&#x4E00;&#x81F4;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x80FD;&#x7684;&#x786E;&#x5B58;&#x5728;&#x4E00;&#x4E2A;git&#x63D0;&#x4EA4;&#xFF0C;&#x8BE5;&#x63D0;&#x4EA4;&#x4E2D;DvmGlobals&#x6570;&#x636E;&#x7ED3;&#x6784;&#x521A;&#x597D;&#x5B58;&#x5728;&#x5982;&#x4E0A;&#x504F;&#x79FB;&#x5BFC;&#x81F4;&#x3002;</p><p>Android 4.0-Android 4.4.4&#xFF0C;&#x9664;&#x4E2A;&#x522B;&#x673A;&#x578B;&#x504F;&#x79FB;&#x503C;&#x65E0;&#x6CD5;&#x8BA1;&#x7B97;&#x51FA;&#x6765;&#x4E4B;&#x5916;&#xFF0C;&#x4EE5;&#x53CA;dlsym&#x65E0;&#x6CD5;&#x83B7;&#x53D6;&#x5BFC;&#x51FA;&#x7B26;&#x53F7;&#x8868;&#xFF08;&#x57FA;&#x672C;&#x90FD;&#x662F;X86&#x7684;PAD&#xFF09;&#xFF0C;&#x8FD9;&#x4E24;&#x79CD;case&#x4E0D;&#x4E88;&#x652F;&#x6301;&#xFF0C;&#x5176;&#x4F59;testin&#x4E0A;4.0-4.4&#x673A;&#x578B;&#x5168;&#x90E8;&#x8986;&#x76D6;&#xFF0C;&#x517C;&#x5BB9;&#x6027;&#x51E0;&#x4E4E;100%&#xFF08;&#x90E8;&#x5206;&#x504F;&#x79FB;&#x503C;&#x9519;&#x8BEF;&#x53EF;&#x901A;&#x8FC7;4&#x4E2A;&#x7279;&#x5F81;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x8FDB;&#x884C;&#x5B9A;&#x4F4D;&#xFF0C;&#x6700;&#x7EC8;&#x5F97;&#x5230;&#x6B63;&#x786E;&#x7684;&#x504F;&#x79FB;&#x503C;&#xFF09;</p><h3 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h3><p>&#x81F3;&#x6B64;&#xFF0C;&#x5B8C;&#x6210;&#x4E86;art&#x4E0A;dex2oat&#x7981;&#x7528;&#x8FBE;&#x5230;&#x52A0;&#x901F;&#x4EE5;&#x53CA;dalvik&#x4E0A;dex2opt&#x7981;&#x7528;class verify&#x8FBE;&#x5230;&#x52A0;&#x901F;&#xFF0C;&#x524D;&#x540E;&#x4ECE;&#x6280;&#x672F;&#x65B9;&#x6848;&#x786E;&#x5B9A;&#x5230;&#x7F16;&#x7801;&#xFF0C;&#x518D;&#x5230;&#x517C;&#x5BB9;&#x6027;&#x6D4B;&#x8BD5;&#xFF0C;&#x5DEE;&#x4E0D;&#x591A;&#x7ECF;&#x5386;&#x4E86;&#x4E00;&#x4E2A;&#x6708;&#xFF0C;&#x82B1;&#x8D39;&#x4E86;&#x5927;&#x91CF;&#x7684;&#x7CBE;&#x529B;&#x3002;&#x5B8C;&#x6210;&#x4E00;&#x4EF6;&#x4E8B;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x4F46;&#x662F;&#x8981;&#x628A;&#x4E00;&#x4EF6;&#x4E8B;&#x505A;&#x5B8C;&#x7F8E;&#xFF0C;&#x771F;&#x7684;&#x4E0D;&#x6613;&#x3002;&#x4E14;&#x770B;&#x4E14;&#x73CD;&#x60DC;&#x3002;</p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>ART</tag>
        <tag>dex2oat</tag>
      </tags>
  </entry>
  <entry>
    <title>再谈 aapt2 资源分区</title>
    <url>/2018/10/05/%E5%86%8D%E8%B0%88aapt2%E8%B5%84%E6%BA%90%E5%88%86%E5%8C%BA/</url>
    <content><![CDATA[<p>&#x5728;buildTools 28.0.0&#x4EE5;&#x524D;&#xFF0C;aapt2&#x81EA;&#x5E26;&#x4E86;&#x8D44;&#x6E90;&#x5206;&#x533A;&#xFF0C;&#x901A;&#x8FC7;&#x2013;package-id&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x3002;&#x4F46;&#x662F;&#x8BE5;&#x5206;&#x533A;&#x53EA;&#x652F;&#x6301;&gt;0x7f&#x7684;PP&#x6BB5;&#xFF0C;&#x800C;&#x5728;Android 8.0&#x4E4B;&#x524D;&#xFF0C;&#x662F;&#x4E0D;&#x652F;&#x6301;&gt;0x7f&#x7684;PP&#x6BB5;&#x8D44;&#x6E90;&#x7684;&#xFF0C;&#x8FD0;&#x884C;&#x65F6;&#x4F1A;&#x629B;&#x5F02;&#x5E38;&#x3002;&#x4F46;&#x662F;&#x5F53;&#x6307;&#x5B9A;&#x4E86;&#x4E00;&#x4E2A;&lt;0x7f&#x7684;PP&#x6BB5;&#x8D44;&#x6E90;&#x540E;&#xFF0C;&#x7F16;&#x8BD1;&#x8D44;&#x6E90;&#x65F6;&#x5374;&#x4F1A;&#x62A5;&#x9519;</p><figure class="highlight subunit"><table><tr><td class="code"><pre><span class="line"><span class="keyword">error: </span>invalid package ID 0x15. Must be in the range 0x7f<span class="string">-0</span>xff..</span><br></pre></td></tr></table></figure><a id="more"></a><p>&#x6240;&#x4EE5;&#x5BF9;&#x4E8E;Android P&#x4E4B;&#x524D;&#x4F7F;&#x7528;&#x7684;buildTools&#x7248;&#x672C;(&lt;28.0.0)&#xFF0C;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x901A;&#x8FC7;&#x4FEE;&#x6539;aapt2&#x7684;&#x6E90;&#x7801;&#x8FBE;&#x5230;&#x8D44;&#x6E90;&#x5206;&#x533A;&#x7684;&#x76EE;&#x7684;&#x3002;&#x5F53;&#x7136;&#x7531;&#x4E8E;aapt2&#x7684;&#x6E90;&#x7801;&#x6269;&#x5C55;&#x6027;&#x6781;&#x5F3A;&#xFF0C;&#x4FEE;&#x6539;&#x7684;&#x4EE3;&#x7801;&#x4E5F;&#x5F88;&#x7B80;&#x5355;&#x3002;</p><p>&#x76EE;&#x524D;&#x5E02;&#x9762;&#x4E0A;&#x8D44;&#x6E90;&#x5206;&#x533A;&#x65E0;&#x5916;&#x4E4E;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A;</p><ul><li>&#x4E00;&#x79CD;&#x662F;&#x76F4;&#x63A5;&#x64CD;&#x4F5C;arsc&#x4E8C;&#x8FDB;&#x5236;&#x6587;&#x4EF6;&#xFF08;Small&#xFF0C;VirtualAPK&#xFF0C;Neptune&#xFF09;</li><li>&#x53E6;&#x4E00;&#x79CD;&#x5C31;&#x662F;&#x76F4;&#x63A5;&#x4FEE;&#x6539;aapt&#x6E90;&#x7801;&#xFF08;&#x5FAE;&#x5E97;&#x63D2;&#x4EF6;&#x5316;&#x6846;&#x67B6;&#xFF0C;atlas&#xFF0C;ACDD&#xFF0C;DynamicAPK&#xFF0C;&#x638C;&#x9605;&#x63D2;&#x4EF6;&#x5316;&#x6846;&#x67B6;&#xFF09;</li></ul><p>&#x8FD9;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x8BBA;&#x7EF4;&#x62A4;&#x6210;&#x672C;&#xFF0C;&#x4E8C;&#x8FDB;&#x5236;&#x4FEE;&#x6539;&#x7684;&#x65B9;&#x5F0F;&#x4E0D;&#x4F1A;&#x6BD4;&#x4FEE;&#x6539;&#x6E90;&#x7801;&#x7684;&#x65B9;&#x5F0F;&#x8981;&#x4F4E;&#xFF0C;&#x51FA;&#x9519;&#x7A0B;&#x5EA6;&#x4E5F;&#x4F1A;&#x76F8;&#x5BF9;&#x9AD8;&#x4E00;&#x70B9;&#xFF0C;&#x4E2A;&#x522B;&#x573A;&#x666F;&#x4E0D;&#x80FD;&#x5B8C;&#x7F8E;&#x7684;&#x5929;&#x7136;&#x652F;&#x6301;&#xFF0C;&#x5982;&#x8D44;&#x6E90;id&#x56FA;&#x5B9A;&#xFF0C;&#x8D44;&#x6E90;provided&#x5F15;&#x7528;&#x7B49;&#x7B49;&#x3002;&#x6240;&#x4EE5;&#x76EE;&#x524D;&#x6027;&#x4EF7;&#x6BD4;&#x6700;&#x9AD8;&#x7684;&#x5206;&#x533A;&#x65B9;&#x5F0F;&#x4F9D;&#x65E7;&#x662F;&#x4FEE;&#x6539;aapt&#x6E90;&#x7801;&#x7684;&#x65B9;&#x5F0F;&#x3002;</p><p>&#x800C;aapt&#x4FEE;&#x6539;&#x65B9;&#x5F0F;&#x7684;&#x6210;&#x672C;&#x5C31;&#x662F;&#x9700;&#x8981;&#x68C0;&#x51FA;AOSP&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6781;&#x5176;&#x5360;&#x7528;&#x786C;&#x76D8;&#x8D44;&#x6E90;&#xFF0C;&#x56E0;&#x6B64;&#x4E4B;&#x524D;&#x6211;&#x5BF9;&#x5176;&#x505A;&#x4E86;cmake&#x8DE8;&#x5E73;&#x53F0;&#x7F16;&#x8BD1;&#x7684;&#x652F;&#x6301;&#xFF0C;&#x53EA;&#x9700;&#x5360;&#x7528;&#x7EA6;10GB&#x7684;&#x786C;&#x76D8;&#x8D44;&#x6E90;&#x5373;&#x53EF;&#x3002;&#x76EE;&#x524D;&#x5DF2;&#x7ECF;&#x652F;&#x6301;&#x5230;Android 9.0&#x3002;&#x8BE6;&#x7EC6;&#x53EF;&#x4EE5;&#x53C2;&#x8003;</p><ul><li><a href="https://github.com/lizhangqu/aapt-repo-manifest" target="_blank" rel="noopener">aapt-repo-manifest</a></li><li><a href="https://github.com/lizhangqu/aapt-cmake-buildscript" target="_blank" rel="noopener">aapt-cmake-buildscript</a></li></ul><p>&#x6700;&#x8FD1;&#x5728;&#x66F4;&#x65B0;AOSP&#x4EE3;&#x7801;&#x5230;Android 9.0&#xFF0C;&#x53D1;&#x73B0;&#x4E86;&#x4E00;&#x4E9B;&#x8BA9;&#x4EBA;&#x6B23;&#x559C;&#x7684;&#x4FEE;&#x6539;&#x4E4B;&#x5904;&#xFF0C;&#x5728;buildTools 28.0.0&#x4E4B;&#x540E;&#xFF0C;&#x8FD9;&#x4E00;&#x5207;&#x90FD;&#x53D1;&#x751F;&#x4E86;&#x6539;&#x53D8;&#x3002;aapt2&#x652F;&#x6301;&#x4E86;&lt;0x7f&#x9884;&#x7559;PP&#x6BB5;&#x5206;&#x533A;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x5373;&#x53EF;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E0B;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;</p><figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line">--allow-reserved-<span class="class"><span class="keyword">package</span>-<span class="title">id</span></span></span><br></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">Allows the <span class="keyword">use</span> <span class="keyword">of</span> a reserved <span class="keyword">package</span> <span class="title">ID. Th</span><span class="keyword">is</span> should on be used <span class="keyword">for</span> packages <span class="keyword">with</span> a pre-O min-sdk</span><br></pre></td></tr></table></figure><p>&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x2013;package-id&#x6307;&#x5B9A;PP&#x6BB5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x518D;&#x6307;&#x5B9A;&#x2013;allow-reserved-package-id&#x4E3A;true&#xFF0C;&#x5373;&#x53EF;&#x5B9E;&#x73B0;&lt;0x7f&#x7684;PP&#x6BB5;&#x8D44;&#x6E90;&#x5206;&#x533A;&#xFF0C;&#x7ECF;&#x8FC7;&#x6D4B;&#x8BD5;&#xFF0C;&#x53D1;&#x73B0;&#x6700;&#x7EC8;&#x8FBE;&#x5230;&#x7684;&#x6548;&#x679C;&#x548C;&#x4FEE;&#x6539;&#x6E90;&#x7801;&#x662F;&#x4E00;&#x81F4;&#x7684;&#xFF0C;&#x5E76;&#x4E14;&#x53EF;&#x4EE5;&#x5168;&#x7248;&#x672C;&#x517C;&#x5BB9;&#x8FD0;&#x884C;&#x3002;</p><p>&#x6B64;&#x5916;&#xFF0C;buildTools 28.0.0&#x5F00;&#x59CB;&#x7684;aapt2&#x8FD8;&#x65B0;&#x589E;&#x4E86;&#x4E00;&#x4E2A;&#x53C2;&#x6570;</p><figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">--warn-manifest-validation  Treat manifest validation <span class="built_in">errors</span> as <span class="built_in">warnings</span>.</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x6709;&#x4EC0;&#x4E48;&#x7528;&#x5462;&#xFF1F;&#x5FAE;&#x5E97;&#x7684;&#x63D2;&#x4EF6;&#x5316;&#x6846;&#x67B6;&#x5728;AndroidManifest.xml&#x4E2D;&#x589E;&#x52A0;&#x4E86;&#x4E09;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x8282;&#x70B9;&#xFF0C;&#x5373;dependent-bundle&#xFF0C;local-service&#x548C;bridge-service&#xFF0C;&#x8FD9;&#x51E0;&#x4E2A;&#x8282;&#x70B9;&#x5728;aapt&#x7F16;&#x8BD1;&#x65F6;&#x662F;&#x6CA1;&#x95EE;&#x9898;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x4F7F;&#x7528;aapt2&#x7F16;&#x8BD1;&#x5C31;&#x4F1A;&#x51FA;&#x73B0;&#x975E;&#x6CD5;&#x8282;&#x70B9;&#x7684;&#x8D44;&#x6E90;&#x7F16;&#x8BD1;&#x9519;&#x8BEF;&#x3002;&#x4EE5;&#x81F3;&#x4E8E;&#x5F53;&#x65F6;&#x4E3A;&#x4E86;&#x9002;&#x914D;aapt2&#xFF0C;&#x5728;&#x63D2;&#x4EF6;&#x7F16;&#x8BD1;&#x671F;&#x4ECE;AndroidManifest.xml&#x4E2D;&#x79FB;&#x9664;&#x4E86;&#x8FD9;&#x4E9B;&#x8282;&#x70B9;&#xFF0C;&#x8F6C;&#x4E3A;json&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x5B58;&#x50A8;&#x3002;&#x5982;&#x679C;&#x4EC0;&#x4E48;&#x90FD;&#x4E0D;&#x4FEE;&#x6539;&#xFF0C;&#x7F16;&#x8BD1;&#x65F6;&#x5C31;&#x4F1A;&#x62A5;&#x9519;&#xFF0C;&#x5BF9;&#x5E94;&#x7684;&#x9519;&#x8BEF;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">unexpected <span class="keyword">element</span> `dependent-bundle` found <span class="keyword">in</span> manifest</span><br><span class="line">unexpected <span class="keyword">element</span> `<span class="built_in">local</span>-service` found <span class="keyword">in</span> manifest</span><br><span class="line">unexpected <span class="keyword">element</span> `bridge-service` found <span class="keyword">in</span> manifest</span><br></pre></td></tr></table></figure><p>&#x4F46;&#x662F;&#x6709;&#x4E86;&#x2013;warn-manifest-validation&#x53C2;&#x6570;&#x5C31;&#x4E0D;&#x4E00;&#x6837;&#x4E86;&#xFF0C;&#x53EA;&#x8981;&#x7F16;&#x8BD1;&#x65F6;&#x6DFB;&#x52A0;&#x8BE5;&#x53C2;&#x6570;&#xFF0C;&#x5C31;&#x4F1A;&#x5C06;&#x8FD9;&#x4E9B;&#x9519;&#x8BEF;&#x8BA4;&#x4E3A;&#x662F;&#x8B66;&#x544A;&#xFF0C;&#x7F16;&#x8BD1;&#x5C31;&#x4E0D;&#x4F1A;&#x62A5;&#x9519;&#x3002;</p><p>&#x7531;&#x6B64;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;&#x4E00;&#x4E2A;&#x7ED3;&#x8BBA;&#xFF0C;buildTools 28.0.0&#x4E4B;&#x524D;&#x7684;aapt2&#x8FD8;&#x4E0D;&#x591F;&#x6210;&#x719F;&#xFF0C;28.0.0&#x5F00;&#x59CB;&#x7684;aapt2&#x5F00;&#x59CB;&#x8003;&#x8651;&#x4E86;&#x5411;&#x4E0B;&#x517C;&#x5BB9;&#x6027;&#x3002;&#x771F;&#x662F;&#x7740;&#x5B9E;&#x8BA9;&#x4EBA;&#x6B23;&#x559C;&#x3002;</p><p>&#x5E76;&#x4E14;&#x4ECE;28.0.0&#x5F00;&#x59CB;&#x7684;aapt2&#xFF0C;&#x5176;compile&#x4EA7;&#x751F;&#x7684;flat&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#x4E5F;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;&#xFF0C;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x53EF;&#x4EE5;&#x68C0;&#x51FA;Android 9.0&#x7684;&#x6E90;&#x7801;&#x7814;&#x7A76;&#x4E00;&#x4E0B;&#x3002;</p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>aapt2</tag>
        <tag>资源分区</tag>
      </tags>
  </entry>
  <entry>
    <title>一种纯 Java 层绕过 Android P 私有函数调用限制的方式</title>
    <url>/2018/10/05/%E4%B8%80%E7%A7%8D%E7%BA%AFJava%E5%B1%82%E7%BB%95%E8%BF%87Android-P%E7%A7%81%E6%9C%89%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E9%99%90%E5%88%B6%E7%9A%84%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<p>&#x6838;&#x5FC3;&#x601D;&#x60F3;&#x5C31;&#x662F;&#x4F7F;&#x7528;UnSafe&#x76F4;&#x63A5;&#x64CD;&#x4F5C;&#x5185;&#x5B58;</p><a id="more"></a><p>&#x5148;&#x6765;&#x770B;&#x4E00;&#x6BB5;&#x4EE3;&#x7801;&#xFF1A;</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">template</span>&lt;typename T&gt;</span><br><span class="line"><span class="keyword">inline</span> Action GetMemberAction(T* member,</span><br><span class="line">                              Thread* self,</span><br><span class="line">                              std::<span class="keyword">function</span>&lt;<span class="type">bool</span>(Thread*)&gt; fn_caller_is_trusted,</span><br><span class="line">                              AccessMethod access_method)</span><br><span class="line">    REQUIRES_SHARED(Locks::mutator_lock_) {</span><br><span class="line">  DCHECK(member != nullptr);</span><br><span class="line">  // Decode hidden API <span class="keyword">access</span> flags.</span><br><span class="line">  // NB Multiple threads might try <span class="keyword">to</span> <span class="keyword">access</span> (<span class="keyword">and</span> overwrite) these simultaneously,</span><br><span class="line">  // causing a race. We <span class="keyword">only</span> <span class="keyword">do</span> that <span class="keyword">if</span> <span class="keyword">access</span> has <span class="keyword">not</span> been denied, so the race</span><br><span class="line">  // cannot change Java semantics. We should, however, decode the <span class="keyword">access</span> flags</span><br><span class="line">  // once <span class="keyword">and</span> use it throughout this <span class="keyword">function</span>, otherwise we may <span class="keyword">get</span> inconsistent</span><br><span class="line">  // results, e.g. print whitelist warnings (b/<span class="number">78327881</span>).</span><br><span class="line">  HiddenApiAccessFlags::ApiList api_list = member-&gt;GetHiddenApiAccessFlags();</span><br><span class="line">  Action action = GetActionFromAccessFlags(member-&gt;GetHiddenApiAccessFlags());</span><br><span class="line">  <span class="keyword">if</span> (action == kAllow) {</span><br><span class="line">    // <span class="keyword">Nothing</span> <span class="keyword">to</span> <span class="keyword">do</span>.</span><br><span class="line">    <span class="keyword">return</span> action;</span><br><span class="line">  }</span><br><span class="line">  // Member <span class="keyword">is</span> hidden. Invoke `fn_caller_in_platform` <span class="keyword">and</span> find the origin <span class="keyword">of</span> the <span class="keyword">access</span>.</span><br><span class="line">  // This can be *very* expensive. Save it <span class="keyword">for</span> last.</span><br><span class="line">  <span class="keyword">if</span> (fn_caller_is_trusted(self)) {</span><br><span class="line">    // Caller <span class="keyword">is</span> <span class="keyword">trusted</span>. <span class="keyword">Exit</span>.</span><br><span class="line">    <span class="keyword">return</span> kAllow;</span><br><span class="line">  }</span><br><span class="line">  // Member <span class="keyword">is</span> hidden <span class="keyword">and</span> caller <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">in</span> the platform.</span><br><span class="line">  <span class="keyword">return</span> detail::GetMemberActionImpl(member, api_list, action, access_method);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4ECE;&#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x5F53;&#x8C03;&#x7528;&#x8005;&#x6765;&#x81EA;&#x7CFB;&#x7EDF;classloader&#x52A0;&#x8F7D;&#x65F6;&#xFF0C;&#x5373;fn_caller_is_trusted(self)&#x8FD4;&#x56DE;&#x4E86;true&#x5373;&#x53EF;&#x7ED5;&#x8FC7;&#x9650;&#x5236;&#xFF0C;&#x56E0;&#x6B64;&#x95EE;&#x9898;&#x53D8;&#x6210;&#x4E86;&#x5982;&#x4F55;&#x5C06;&#x5BF9;&#x5E94;&#x7C7B;&#x7684;class&#x5BF9;&#x8C61;&#x4E2D;&#x7684;classloader&#x8BBE;&#x4E3A;null&#xFF0C;&#x5373;BootClassLoader&#x52A0;&#x8F7D;&#x3002;</p><p>&#x53CD;&#x5C04;&#x76F4;&#x63A5;&#x62FF;classloader&#x662F;&#x884C;&#x4E0D;&#x901A;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x8BE5;&#x5B57;&#x6BB5;&#x5728;&#x6DF1;&#x7070;&#x540D;&#x5355;&#x4E2D;&#xFF0C;&#x4F1A;&#x629B;NoSuchFiledException&#x3002;</p><p>&#x56E0;&#x6B64;&#x95EE;&#x9898;&#x5C31;&#x53D8;&#x5F97;&#x590D;&#x6742;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x4ECB;&#x7ECD;&#x4E00;&#x4E2A;Java&#x4E2D;&#x7684;&#x4E0A;&#x5E1D;&#x7C7B;sun.misc.Unsafe&#xFF0C;&#x8BE5;&#x7C7B;&#x5F88;&#x5F3A;&#x5927;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x64CD;&#x4F5C;&#x5BF9;&#x8C61;&#x5185;&#x5B58;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x53D6;&#x540D;&#x4E3A;Unsafe&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x76F8;&#x5173;&#x4F7F;&#x7528;&#x53EF;&#x4EE5;&#x770B; <a href="http://mishadoff.com/blog/java-magic-part-4-sun-dot-misc-dot-unsafe/" target="_blank" rel="noopener">http://mishadoff.com/blog/java-magic-part-4-sun-dot-misc-dot-unsafe/</a> &#x4F60;&#x53EF;&#x80FD;&#x4E4B;&#x524D;&#x4ECE;&#x6765;&#x6CA1;&#x6709;&#x4F7F;&#x7528;&#x8FC7;&#x8FD9;&#x4E2A;&#x7C7B;&#xFF0C;&#x4F46;&#x662F;&#x5176;&#x5B9E;&#x4F60;&#x5DF2;&#x7ECF;&#x4E0D;&#x77E5;&#x4E0D;&#x89C9;&#x4E2D;&#x4F7F;&#x7528;&#x5230;&#x4E86;&#xFF0C;Gson&#x4E2D;&#x5C31;&#x4F7F;&#x7528;&#x4E86;&#x8BE5;&#x7C7B;&#x8FDB;&#x884C;&#x5BF9;&#x8C61;&#x521B;&#x5EFA;&#x5DE5;&#x4F5C;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x7C7B;&#x6709;&#x4E00;&#x4E2A;&#x9759;&#x6001;&#x65B9;&#x6CD5;getUnsafe&#xFF0C;&#x4F46;&#x662F;&#x8BE5;&#x65B9;&#x6CD5;&#x505A;&#x4E86;&#x8C03;&#x7528;&#x9650;&#x5236;&#xFF0C;&#x53EA;&#x5141;&#x8BB8;&#x7CFB;&#x7EDF;Classloader&#x52A0;&#x8F7D;&#x7684;&#x7C7B;&#x8FDB;&#x884C;&#x8C03;&#x7528;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x629B;&#x5F02;&#x5E38;&#x3002;&#x4F46;&#x662F;&#x5B83;&#x6709;&#x4E00;&#x4E2A;&#x9759;&#x6001;&#x53D8;&#x91CF;theUnsafe&#xFF0C;&#x8BE5;&#x5B57;&#x6BB5;&#x5728;Android P&#x4E2D;&#x662F;&#x6D45;&#x7070;&#x540D;&#x5355;&#xFF0C;&#x53EF;&#x4EE5;&#x5B89;&#x5168;&#x8C03;&#x7528;&#x3002;&#x5E76;&#x4E14;&#x8FD9;&#x4E2A;&#x7C7B;&#x5728;android.jar&#x4E2D;&#x662F;&#x5F15;&#x7528;&#x4E0D;&#x5230;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x5FC5;&#x987B;&#x505A;&#x4E00;&#x5C42;&#x5C01;&#x88C5;&#x624D;&#x53EF;&#x8FDB;&#x884C;&#x8C03;&#x7528;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">package github.io.lizhangqu.unsafe;</span><br><span class="line"></span><br><span class="line">import android.annotation.TargetApi;</span><br><span class="line"></span><br><span class="line">import sun.misc.Unsafe;</span><br><span class="line"></span><br><span class="line">import java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line">@<span class="constructor">SuppressWarnings({<span class="string">&quot;unchecked&quot;</span>, <span class="string">&quot;unused&quot;</span>, <span class="string">&quot;WeakerAccess&quot;</span>})</span></span><br><span class="line">public <span class="keyword">class</span> UnSafeWrapper {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> static final UnSafeWrapper THE_ONE = <span class="keyword">new</span> <span class="constructor">UnSafeWrapper()</span>;</span><br><span class="line">    <span class="keyword">private</span> static final UnSafeWrapper theUnsafe = THE_ONE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> static final Unsafe unsafe;</span><br><span class="line"></span><br><span class="line">    static {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            final Field field = <span class="module-access"><span class="module"><span class="identifier">Unsafe</span>.</span></span><span class="keyword">class</span>.get<span class="constructor">DeclaredField(<span class="string">&quot;theUnsafe&quot;</span>)</span>;</span><br><span class="line">            field.set<span class="constructor">Accessible(<span class="params">true</span>)</span>;</span><br><span class="line">            unsafe = (Unsafe) field.get(null);</span><br><span class="line">        } catch (Throwable e) {</span><br><span class="line">            throw <span class="keyword">new</span> <span class="constructor">RuntimeException(<span class="params">e</span>)</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    public static UnSafeWrapper get<span class="constructor">UnSafe()</span> {</span><br><span class="line">        return THE_ONE;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Allocates an instance of the given class without running the constructor.</span></span><br><span class="line"><span class="comment">     * The class&apos; will be run, if necessary.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public &lt;T&gt; T allocate<span class="constructor">Instance(Class&lt;T&gt; <span class="params">clazz</span>)</span> throws InstantiationException {</span><br><span class="line">        return (T) unsafe.allocate<span class="constructor">Instance(<span class="params">clazz</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Gets the offset from the start of an array object&apos;s memory to</span></span><br><span class="line"><span class="comment">     * the memory used to store its initial (zeroeth) element.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param clazz non-null; class in question; must be an array class</span></span><br><span class="line"><span class="comment">     * @return the offset to the initial element</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public <span class="built_in">int</span> <span class="built_in">array</span><span class="constructor">BaseOffset(Class&lt;?&gt; <span class="params">clazz</span>)</span> {</span><br><span class="line">        return unsafe.<span class="built_in">array</span><span class="constructor">BaseOffset(<span class="params">clazz</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Gets the size of each element of the given array class.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param clazz non-null; class in question; must be an array class</span></span><br><span class="line"><span class="comment">     * @return &amp;gt; 0; the size of each element of the array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public <span class="built_in">int</span> <span class="built_in">array</span><span class="constructor">IndexScale(Class&lt;?&gt; <span class="params">clazz</span>)</span> {</span><br><span class="line">        return unsafe.<span class="built_in">array</span><span class="constructor">IndexScale(<span class="params">clazz</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Performs a compare-and-set operation on an &lt;code&gt;int&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * field within the given object.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param obj           non-null; object containing the field</span></span><br><span class="line"><span class="comment">     * @param offset        offset to the field within &lt;code&gt;obj&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * @param expectedValue expected value of the field</span></span><br><span class="line"><span class="comment">     * @param newValue      new value to store in the field if the contents are</span></span><br><span class="line"><span class="comment">     *                      as expected</span></span><br><span class="line"><span class="comment">     * @return &lt;code&gt;true&lt;/code&gt; if the new value was in fact stored, and</span></span><br><span class="line"><span class="comment">     * &lt;code&gt;false&lt;/code&gt; if not</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public boolean compare<span class="constructor">AndSwapInt(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>, <span class="params">int</span> <span class="params">expectedValue</span>, <span class="params">int</span> <span class="params">newValue</span>)</span> {</span><br><span class="line">        return unsafe.compare<span class="constructor">AndSwapInt(<span class="params">obj</span>, <span class="params">offset</span>, <span class="params">expectedValue</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Performs a compare-and-set operation on a &lt;code&gt;long&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * field within the given object.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param obj           non-null; object containing the field</span></span><br><span class="line"><span class="comment">     * @param offset        offset to the field within &lt;code&gt;obj&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * @param expectedValue expected value of the field</span></span><br><span class="line"><span class="comment">     * @param newValue      new value to store in the field if the contents are</span></span><br><span class="line"><span class="comment">     *                      as expected</span></span><br><span class="line"><span class="comment">     * @return &lt;code&gt;true&lt;/code&gt; if the new value was in fact stored, and</span></span><br><span class="line"><span class="comment">     * &lt;code&gt;false&lt;/code&gt; if not</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public boolean compare<span class="constructor">AndSwapLong(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>, <span class="params">long</span> <span class="params">expectedValue</span>, <span class="params">long</span> <span class="params">newValue</span>)</span> {</span><br><span class="line">        return unsafe.compare<span class="constructor">AndSwapLong(<span class="params">obj</span>, <span class="params">offset</span>, <span class="params">expectedValue</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Performs a compare-and-set operation on an &lt;code&gt;Object&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * field (that is, a reference field) within the given object.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param obj           non-null; object containing the field</span></span><br><span class="line"><span class="comment">     * @param offset        offset to the field within &lt;code&gt;obj&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * @param expectedValue expected value of the field</span></span><br><span class="line"><span class="comment">     * @param newValue      new value to store in the field if the contents are</span></span><br><span class="line"><span class="comment">     *                      as expected</span></span><br><span class="line"><span class="comment">     * @return &lt;code&gt;true&lt;/code&gt; if the new value was in fact stored, and</span></span><br><span class="line"><span class="comment">     * &lt;code&gt;false&lt;/code&gt; if not</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public boolean compare<span class="constructor">AndSwapObject(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>, Object <span class="params">expectedValue</span>, Object <span class="params">newValue</span>)</span> {</span><br><span class="line">        return unsafe.compare<span class="constructor">AndSwapObject(<span class="params">obj</span>, <span class="params">offset</span>, <span class="params">expectedValue</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Gets an &lt;code&gt;int&lt;/code&gt; field from the given object.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param obj    non-null; object containing the field</span></span><br><span class="line"><span class="comment">     * @param offset offset to the field within &lt;code&gt;obj&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * @return the retrieved value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public <span class="built_in">int</span> get<span class="constructor">Int(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>)</span> {</span><br><span class="line">        return unsafe.get<span class="constructor">Int(<span class="params">obj</span>, <span class="params">offset</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Gets an &lt;code&gt;int&lt;/code&gt; field from the given object,</span></span><br><span class="line"><span class="comment">     * using &lt;code&gt;volatile&lt;/code&gt; semantics.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param obj    non-null; object containing the field</span></span><br><span class="line"><span class="comment">     * @param offset offset to the field within &lt;code&gt;obj&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * @return the retrieved value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public <span class="built_in">int</span> get<span class="constructor">IntVolatile(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>)</span> {</span><br><span class="line">        return unsafe.get<span class="constructor">IntVolatile(<span class="params">obj</span>, <span class="params">offset</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Gets a &lt;code&gt;long&lt;/code&gt; field from the given object,</span></span><br><span class="line"><span class="comment">     * using &lt;code&gt;volatile&lt;/code&gt; semantics.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param obj    non-null; object containing the field</span></span><br><span class="line"><span class="comment">     * @param offset offset to the field within &lt;code&gt;obj&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * @return the retrieved value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public long get<span class="constructor">Long(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>)</span> {</span><br><span class="line">        return unsafe.get<span class="constructor">Long(<span class="params">obj</span>, <span class="params">offset</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Gets a &lt;code&gt;long&lt;/code&gt; field from the given object,</span></span><br><span class="line"><span class="comment">     * using &lt;code&gt;volatile&lt;/code&gt; semantics.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param obj    non-null; object containing the field</span></span><br><span class="line"><span class="comment">     * @param offset offset to the field within &lt;code&gt;obj&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * @return the retrieved value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public long get<span class="constructor">LongVolatile(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>)</span> {</span><br><span class="line">        return unsafe.get<span class="constructor">LongVolatile(<span class="params">obj</span>, <span class="params">offset</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Gets an &lt;code&gt;Object&lt;/code&gt; field from the given object.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param obj    non-null; object containing the field</span></span><br><span class="line"><span class="comment">     * @param offset offset to the field within &lt;code&gt;obj&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * @return the retrieved value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public Object get<span class="constructor">Object(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>)</span> {</span><br><span class="line">        return unsafe.get<span class="constructor">Object(<span class="params">obj</span>, <span class="params">offset</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Gets an &lt;code&gt;Object&lt;/code&gt; field from the given object,</span></span><br><span class="line"><span class="comment">     * using &lt;code&gt;volatile&lt;/code&gt; semantics.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param obj    non-null; object containing the field</span></span><br><span class="line"><span class="comment">     * @param offset offset to the field within &lt;code&gt;obj&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * @return the retrieved value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public Object get<span class="constructor">ObjectVolatile(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>)</span> {</span><br><span class="line">        return unsafe.get<span class="constructor">ObjectVolatile(<span class="params">obj</span>, <span class="params">offset</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Gets the raw byte offset from the start of an object&apos;s memory to</span></span><br><span class="line"><span class="comment">     * the memory used to store the indicated instance field.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param field non-null; the field in question, which must be an</span></span><br><span class="line"><span class="comment">     *              instance field</span></span><br><span class="line"><span class="comment">     * @return the offset to the field</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public long object<span class="constructor">FieldOffset(Field <span class="params">field</span>)</span> {</span><br><span class="line">        return unsafe.object<span class="constructor">FieldOffset(<span class="params">field</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Parks the calling thread for the specified amount of time,</span></span><br><span class="line"><span class="comment">     * unless the &quot;permit&quot; for the thread is already available (due to</span></span><br><span class="line"><span class="comment">     * a previous call to {@link #unpark}. This method may also return</span></span><br><span class="line"><span class="comment">     * spuriously (that is, without the thread being told to unpark</span></span><br><span class="line"><span class="comment">     * and without the indicated amount of time elapsing).</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;See {@link java.util.concurrent.locks.LockSupport} for more</span></span><br><span class="line"><span class="comment">     * in-depth information of the behavior of this method.&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param absolute whether the given time value is absolute</span></span><br><span class="line"><span class="comment">     *                 milliseconds-since-the-epoch (&lt;code&gt;true&lt;/code&gt;) or relative</span></span><br><span class="line"><span class="comment">     *                 nanoseconds-from-now (&lt;code&gt;false&lt;/code&gt;)</span></span><br><span class="line"><span class="comment">     * @param time     the (absolute millis or relative nanos) time value</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public void park(boolean absolute, long time) {</span><br><span class="line">        unsafe.park(absolute, time);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Unparks the given object, which must be a {@link Thread}.</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;See {@link java.util.concurrent.locks.LockSupport} for more</span></span><br><span class="line"><span class="comment">     * in-depth information of the behavior of this method.&lt;/p&gt;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param obj non-null; the object to unpark</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public void unpark(Object obj) {</span><br><span class="line">        unsafe.unpark(obj);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Stores an &lt;code&gt;int&lt;/code&gt; field into the given object.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param obj      non-null; object containing the field</span></span><br><span class="line"><span class="comment">     * @param offset   offset to the field within &lt;code&gt;obj&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * @param newValue the value to store</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public void put<span class="constructor">Int(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>, <span class="params">int</span> <span class="params">newValue</span>)</span> {</span><br><span class="line">        unsafe.put<span class="constructor">Int(<span class="params">obj</span>, <span class="params">offset</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Stores an &lt;code&gt;int&lt;/code&gt; field into the given object,</span></span><br><span class="line"><span class="comment">     * using &lt;code&gt;volatile&lt;/code&gt; semantics.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param obj      non-null; object containing the field</span></span><br><span class="line"><span class="comment">     * @param offset   offset to the field within &lt;code&gt;obj&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * @param newValue the value to store</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public void put<span class="constructor">IntVolatile(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>, <span class="params">int</span> <span class="params">newValue</span>)</span> {</span><br><span class="line">        unsafe.put<span class="constructor">IntVolatile(<span class="params">obj</span>, <span class="params">offset</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Stores a &lt;code&gt;long&lt;/code&gt; field into the given object.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param obj      non-null; object containing the field</span></span><br><span class="line"><span class="comment">     * @param offset   offset to the field within &lt;code&gt;obj&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * @param newValue the value to store</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public void put<span class="constructor">Long(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>, <span class="params">long</span> <span class="params">newValue</span>)</span> {</span><br><span class="line">        unsafe.put<span class="constructor">Long(<span class="params">obj</span>, <span class="params">offset</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Stores a &lt;code&gt;long&lt;/code&gt; field into the given object,</span></span><br><span class="line"><span class="comment">     * using &lt;code&gt;volatile&lt;/code&gt; semantics.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param obj      non-null; object containing the field</span></span><br><span class="line"><span class="comment">     * @param offset   offset to the field within &lt;code&gt;obj&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * @param newValue the value to store</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public void put<span class="constructor">LongVolatile(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>, <span class="params">long</span> <span class="params">newValue</span>)</span> {</span><br><span class="line">        unsafe.put<span class="constructor">LongVolatile(<span class="params">obj</span>, <span class="params">offset</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Stores an &lt;code&gt;Object&lt;/code&gt; field into the given object.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param obj      non-null; object containing the field</span></span><br><span class="line"><span class="comment">     * @param offset   offset to the field within &lt;code&gt;obj&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * @param newValue the value to store</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public void put<span class="constructor">Object(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>, Object <span class="params">newValue</span>)</span> {</span><br><span class="line">        unsafe.put<span class="constructor">Object(<span class="params">obj</span>, <span class="params">offset</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Stores an &lt;code&gt;Object&lt;/code&gt; field into the given object,</span></span><br><span class="line"><span class="comment">     * using &lt;code&gt;volatile&lt;/code&gt; semantics.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param obj      non-null; object containing the field</span></span><br><span class="line"><span class="comment">     * @param offset   offset to the field within &lt;code&gt;obj&lt;/code&gt;</span></span><br><span class="line"><span class="comment">     * @param newValue the value to store</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public void put<span class="constructor">ObjectVolatile(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>, Object <span class="params">newValue</span>)</span> {</span><br><span class="line">        unsafe.put<span class="constructor">ObjectVolatile(<span class="params">obj</span>, <span class="params">offset</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Lazy set an int field.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public void put<span class="constructor">OrderedInt(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>, <span class="params">int</span> <span class="params">newValue</span>)</span> {</span><br><span class="line">        unsafe.put<span class="constructor">OrderedInt(<span class="params">obj</span>, <span class="params">offset</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Lazy set a long field.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public void put<span class="constructor">OrderedLong(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>, <span class="params">long</span> <span class="params">newValue</span>)</span> {</span><br><span class="line">        unsafe.put<span class="constructor">OrderedLong(<span class="params">obj</span>, <span class="params">offset</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Lazy set an object field.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public void put<span class="constructor">OrderedObject(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>, Object <span class="params">newValue</span>)</span> {</span><br><span class="line">        unsafe.put<span class="constructor">OrderedObject(<span class="params">obj</span>, <span class="params">offset</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public <span class="built_in">int</span> address<span class="constructor">Size()</span> {</span><br><span class="line">        return unsafe.address<span class="constructor">Size()</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public <span class="built_in">int</span> page<span class="constructor">Size()</span> {</span><br><span class="line">        return unsafe.page<span class="constructor">Size()</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public long allocate<span class="constructor">Memory(<span class="params">long</span> <span class="params">bytes</span>)</span> {</span><br><span class="line">        return unsafe.allocate<span class="constructor">Memory(<span class="params">bytes</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public void free<span class="constructor">Memory(<span class="params">long</span> <span class="params">address</span>)</span> {</span><br><span class="line">        unsafe.free<span class="constructor">Memory(<span class="params">address</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public void set<span class="constructor">Memory(<span class="params">long</span> <span class="params">address</span>, <span class="params">long</span> <span class="params">bytes</span>, <span class="params">byte</span> <span class="params">value</span>)</span> {</span><br><span class="line">        unsafe.set<span class="constructor">Memory(<span class="params">address</span>, <span class="params">bytes</span>, <span class="params">value</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public byte get<span class="constructor">Byte(<span class="params">long</span> <span class="params">address</span>)</span> {</span><br><span class="line">        return unsafe.get<span class="constructor">Byte(<span class="params">address</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public void put<span class="constructor">Byte(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>, <span class="params">byte</span> <span class="params">newValue</span>)</span> {</span><br><span class="line">        unsafe.put<span class="constructor">Byte(<span class="params">obj</span>, <span class="params">offset</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public short get<span class="constructor">Short(<span class="params">long</span> <span class="params">address</span>)</span> {</span><br><span class="line">        return unsafe.get<span class="constructor">Short(<span class="params">address</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public void put<span class="constructor">Short(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>, <span class="params">short</span> <span class="params">newValue</span>)</span> {</span><br><span class="line">        unsafe.put<span class="constructor">Short(<span class="params">obj</span>, <span class="params">offset</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public <span class="built_in">char</span> get<span class="constructor">Char(<span class="params">long</span> <span class="params">address</span>)</span> {</span><br><span class="line">        return unsafe.get<span class="constructor">Char(<span class="params">address</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public void put<span class="constructor">Char(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>, <span class="params">char</span> <span class="params">newValue</span>)</span> {</span><br><span class="line">        unsafe.put<span class="constructor">Char(<span class="params">obj</span>, <span class="params">offset</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public <span class="built_in">int</span> get<span class="constructor">Int(<span class="params">long</span> <span class="params">address</span>)</span> {</span><br><span class="line">        return unsafe.get<span class="constructor">Int(<span class="params">address</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public long get<span class="constructor">Long(<span class="params">long</span> <span class="params">address</span>)</span> {</span><br><span class="line">        return unsafe.get<span class="constructor">Long(<span class="params">address</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public <span class="built_in">float</span> get<span class="constructor">Float(<span class="params">long</span> <span class="params">address</span>)</span> {</span><br><span class="line">        return unsafe.get<span class="constructor">Float(<span class="params">address</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public void put<span class="constructor">Float(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>, <span class="params">float</span> <span class="params">newValue</span>)</span> {</span><br><span class="line">        unsafe.put<span class="constructor">Float(<span class="params">obj</span>, <span class="params">offset</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public double get<span class="constructor">Double(<span class="params">long</span> <span class="params">address</span>)</span> {</span><br><span class="line">        return unsafe.get<span class="constructor">Double(<span class="params">address</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public void put<span class="constructor">Double(Object <span class="params">obj</span>, <span class="params">long</span> <span class="params">offset</span>, <span class="params">double</span> <span class="params">newValue</span>)</span> {</span><br><span class="line">        unsafe.put<span class="constructor">Double(<span class="params">obj</span>, <span class="params">offset</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public void copy<span class="constructor">Memory(<span class="params">long</span> <span class="params">srcAddr</span>, <span class="params">long</span> <span class="params">dstAddr</span>, <span class="params">long</span> <span class="params">bytes</span>)</span> {</span><br><span class="line">        unsafe.copy<span class="constructor">Memory(<span class="params">srcAddr</span>, <span class="params">dstAddr</span>, <span class="params">bytes</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// The following contain CAS-based Java implementations used on</span></span><br><span class="line">    <span class="comment">// platforms not supporting native instructions</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Atomically adds the given value to the current value of a field</span></span><br><span class="line"><span class="comment">     * or array element within the given object {@code o}</span></span><br><span class="line"><span class="comment">     * at the given {@code offset}.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param o      object/array to update the field/element in</span></span><br><span class="line"><span class="comment">     * @param offset field/element offset</span></span><br><span class="line"><span class="comment">     * @param delta  the value to add</span></span><br><span class="line"><span class="comment">     * @return the previous value</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// @HotSpotIntrinsicCandidate</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public <span class="built_in">int</span> get<span class="constructor">AndAddInt(Object <span class="params">o</span>, <span class="params">long</span> <span class="params">offset</span>, <span class="params">int</span> <span class="params">delta</span>)</span> {</span><br><span class="line">        return unsafe.get<span class="constructor">AndAddInt(<span class="params">o</span>, <span class="params">offset</span>, <span class="params">delta</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Atomically adds the given value to the current value of a field</span></span><br><span class="line"><span class="comment">     * or array element within the given object {@code o}</span></span><br><span class="line"><span class="comment">     * at the given {@code offset}.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param o      object/array to update the field/element in</span></span><br><span class="line"><span class="comment">     * @param offset field/element offset</span></span><br><span class="line"><span class="comment">     * @param delta  the value to add</span></span><br><span class="line"><span class="comment">     * @return the previous value</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// @HotSpotIntrinsicCandidate</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public long get<span class="constructor">AndAddLong(Object <span class="params">o</span>, <span class="params">long</span> <span class="params">offset</span>, <span class="params">long</span> <span class="params">delta</span>)</span> {</span><br><span class="line">        return unsafe.get<span class="constructor">AndAddLong(<span class="params">o</span>, <span class="params">offset</span>, <span class="params">delta</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Atomically exchanges the given value with the current value of</span></span><br><span class="line"><span class="comment">     * a field or array element within the given object {@code o}</span></span><br><span class="line"><span class="comment">     * at the given {@code offset}.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param o        object/array to update the field/element in</span></span><br><span class="line"><span class="comment">     * @param offset   field/element offset</span></span><br><span class="line"><span class="comment">     * @param newValue new value</span></span><br><span class="line"><span class="comment">     * @return the previous value</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// @HotSpotIntrinsicCandidate</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public <span class="built_in">int</span> get<span class="constructor">AndSetInt(Object <span class="params">o</span>, <span class="params">long</span> <span class="params">offset</span>, <span class="params">int</span> <span class="params">newValue</span>)</span> {</span><br><span class="line">        return unsafe.get<span class="constructor">AndSetInt(<span class="params">o</span>, <span class="params">offset</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Atomically exchanges the given value with the current value of</span></span><br><span class="line"><span class="comment">     * a field or array element within the given object {@code o}</span></span><br><span class="line"><span class="comment">     * at the given {@code offset}.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param o        object/array to update the field/element in</span></span><br><span class="line"><span class="comment">     * @param offset   field/element offset</span></span><br><span class="line"><span class="comment">     * @param newValue new value</span></span><br><span class="line"><span class="comment">     * @return the previous value</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// @HotSpotIntrinsicCandidate</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public long get<span class="constructor">AndSetLong(Object <span class="params">o</span>, <span class="params">long</span> <span class="params">offset</span>, <span class="params">long</span> <span class="params">newValue</span>)</span> {</span><br><span class="line">        return unsafe.get<span class="constructor">AndSetLong(<span class="params">o</span>, <span class="params">offset</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Atomically exchanges the given reference value with the current</span></span><br><span class="line"><span class="comment">     * reference value of a field or array element within the given</span></span><br><span class="line"><span class="comment">     * object {@code o} at the given {@code offset}.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param o        object/array to update the field/element in</span></span><br><span class="line"><span class="comment">     * @param offset   field/element offset</span></span><br><span class="line"><span class="comment">     * @param newValue new value</span></span><br><span class="line"><span class="comment">     * @return the previous value</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// @HotSpotIntrinsicCandidate</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public Object get<span class="constructor">AndSetObject(Object <span class="params">o</span>, <span class="params">long</span> <span class="params">offset</span>, Object <span class="params">newValue</span>)</span> {</span><br><span class="line">        return unsafe.get<span class="constructor">AndSetObject(<span class="params">o</span>, <span class="params">offset</span>, <span class="params">newValue</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Ensures that loads before the fence will not be reordered with loads and</span></span><br><span class="line"><span class="comment">     * stores after the fence; a &quot;LoadLoad plus LoadStore barrier&quot;.</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * Corresponds to C11 atomic_thread_fence(memory_order_acquire)</span></span><br><span class="line"><span class="comment">     * (an &quot;acquire fence&quot;).</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * A pure LoadLoad fence is not provided, since the addition of LoadStore</span></span><br><span class="line"><span class="comment">     * is almost always desired, and most current hardware instructions that</span></span><br><span class="line"><span class="comment">     * provide a LoadLoad barrier also provide a LoadStore barrier for free.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// @HotSpotIntrinsicCandidate</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public void load<span class="constructor">Fence()</span> {</span><br><span class="line">        unsafe.load<span class="constructor">Fence()</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Ensures that loads and stores before the fence will not be reordered with</span></span><br><span class="line"><span class="comment">     * stores after the fence; a &quot;StoreStore plus LoadStore barrier&quot;.</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * Corresponds to C11 atomic_thread_fence(memory_order_release)</span></span><br><span class="line"><span class="comment">     * (a &quot;release fence&quot;).</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * A pure StoreStore fence is not provided, since the addition of LoadStore</span></span><br><span class="line"><span class="comment">     * is almost always desired, and most current hardware instructions that</span></span><br><span class="line"><span class="comment">     * provide a StoreStore barrier also provide a LoadStore barrier for free.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// @HotSpotIntrinsicCandidate</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public void store<span class="constructor">Fence()</span> {</span><br><span class="line">        unsafe.store<span class="constructor">Fence()</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Ensures that loads and stores before the fence will not be reordered</span></span><br><span class="line"><span class="comment">     * with loads and stores after the fence.  Implies the effects of both</span></span><br><span class="line"><span class="comment">     * loadFence() and storeFence(), and in addition, the effect of a StoreLoad</span></span><br><span class="line"><span class="comment">     * barrier.</span></span><br><span class="line"><span class="comment">     * &lt;p&gt;</span></span><br><span class="line"><span class="comment">     * Corresponds to C11 atomic_thread_fence(memory_order_seq_cst).</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @since 1.8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// @HotSpotIntrinsicCandidate</span></span><br><span class="line">    @<span class="constructor">TargetApi(24)</span></span><br><span class="line">    public void full<span class="constructor">Fence()</span> {</span><br><span class="line">        unsafe.full<span class="constructor">Fence()</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6240;&#x4EE5;&#x6700;&#x7EC8;&#x95EE;&#x9898;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#x5982;&#x4F55;&#x7528;Unsafe&#x5C06;classloader&#x8BBE;&#x4E3A;null&#xFF0C;&#x5373;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x5B57;&#x6BB5;&#x3002;</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Class</span>&lt;<span class="type">T</span>&gt; <span class="title">implements</span> <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span>,<span class="type"></span></span></span><br><span class="line">                              GenericDeclaration,</span><br><span class="line">                              Type,</span><br><span class="line">                              AnnotatedElement {</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="comment">/** defining class loader, or null for the &quot;bootstrap&quot; system loader. */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">transient</span> ClassLoader classLoader;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>java.lang.Class&#x5BF9;&#x8C61;&#x9690;&#x5F0F;&#x7EE7;&#x627F;&#x81EA;java.lang.Object</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> Object {</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">transient</span> <span class="keyword">Class</span>&lt;?&gt; shadow$_klass_;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">transient</span> <span class="keyword">int</span> shadow$_monitor_;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x56E0;&#x6B64;&#x8981;&#x5C06;classLoader&#x8BBE;&#x4E3A;null&#xFF0C;&#x5373;&#x9700;&#x8981;&#x627E;&#x5230;&#x8BE5;&#x5B57;&#x6BB5;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x504F;&#x79FB;&#x5730;&#x5740;&#x3002;</p><p>&#x6211;&#x4EEC;&#x901A;&#x8FC7;&#x6784;&#x9020;&#x4E00;&#x4E2A;&#x548C;java.lang.Class&#x4E00;&#x6837;&#x7684;&#x7C7B;&#xFF0C;&#x7528;&#x4E8E;&#x8F85;&#x52A9;&#x627E;&#x5230;&#x8BE5;&#x504F;&#x79FB;&#x5730;&#x5740;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">ReflectWrapper</span> {</span><br><span class="line">    <span class="comment">//just for finding the java.lang.Class classLoader field&apos;s offset</span></span><br><span class="line">    @Keep</span><br><span class="line">    <span class="keyword">private</span> Object classLoaderOffsetHelper;</span><br><span class="line"> </span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>classLoaderOffsetHelper&#x5BF9;&#x8C61;&#x7684;&#x504F;&#x79FB;&#x5730;&#x5740;&#x5C31;&#x662F;classLoader&#x7684;&#x504F;&#x79FB;&#x5730;&#x5740;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;<br>&#x56E0;&#x4E3A;&#x4ED6;&#x4EEC;&#x90FD;&#x9690;&#x5F0F;&#x7EE7;&#x627F;&#x81EA;java.lang.Object&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x4E14;&#x90FD;&#x662F;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#x3002;</p><p>&#x9996;&#x5148;&#x53CD;&#x5C04;&#x62FF;&#x5230;&#x8BE5;&#x5B57;&#x6BB5;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">Field classLoader = <span class="module-access"><span class="module"><span class="identifier">ReflectWrapper</span>.</span></span><span class="keyword">class</span>.get<span class="constructor">DeclaredField(<span class="string">&quot;classLoaderOffsetHelper&quot;</span>)</span>;</span><br></pre></td></tr></table></figure><p>&#x4F7F;&#x7528;Unsafe&#x5F97;&#x5230;&#x8BE5;&#x5B57;&#x6BB5;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x7684;&#x504F;&#x79FB;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">long classLoaderOffset = <span class="module-access"><span class="module"><span class="identifier">UnSafeWrapper</span>.</span></span>get<span class="constructor">UnSafe()</span>.object<span class="constructor">FieldOffset(<span class="params">classLoader</span>)</span>;</span><br></pre></td></tr></table></figure><p>&#x6821;&#x9A8C;&#x8BE5;&#x504F;&#x79FB;&#x6307;&#x5411;&#x7684;&#x5730;&#x5740;&#x662F;&#x5426;&#x662F;ClassLoader&#x5BF9;&#x8C61;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="module-access"><span class="module"><span class="identifier">UnSafeWrapper</span>.</span></span>get<span class="constructor">UnSafe()</span>.get<span class="constructor">Object(ReflectWrapper.<span class="params">class</span>, <span class="params">classLoaderOffset</span>)</span> instanceof ClassLoader) {</span><br><span class="line">    <span class="comment">//todo</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5C06;&#x8BE5;&#x504F;&#x79FB;&#x6307;&#x5411;&#x7684;&#x5BF9;&#x8C61;&#x8FDB;&#x884C;&#x66FF;&#x6362;&#xFF0C;&#x8BBE;&#x6210;null</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">Object originalClassLoader = <span class="module-access"><span class="module"><span class="identifier">UnSafeWrapper</span>.</span></span>get<span class="constructor">UnSafe()</span>.get<span class="constructor">AndSetObject(ReflectWrapper.<span class="params">class</span>, <span class="params">classLoaderOffset</span>, <span class="params">null</span>)</span>;</span><br></pre></td></tr></table></figure><p>&#x5B8C;&#x6574;&#x7684;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">@Keep</span><br><span class="line">public <span class="keyword">class</span> ReflectWrapper {</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//just for finding the java.lang.Class classLoader field&apos;s offset</span></span><br><span class="line">    @Keep</span><br><span class="line">    <span class="keyword">private</span> Object classLoaderOffsetHelper;</span><br><span class="line"> </span><br><span class="line">    static {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            Class&lt;?&gt; VersionClass = <span class="module-access"><span class="module"><span class="identifier">Class</span>.</span></span>for<span class="constructor">Name(<span class="string">&quot;android.os.Build$VERSION&quot;</span>)</span>;</span><br><span class="line">            Field sdkIntField = <span class="module-access"><span class="module"><span class="identifier">VersionClass</span>.</span></span>get<span class="constructor">DeclaredField(<span class="string">&quot;SDK_INT&quot;</span>)</span>;</span><br><span class="line">            sdkIntField.set<span class="constructor">Accessible(<span class="params">true</span>)</span>;</span><br><span class="line">            <span class="built_in">int</span> sdkInt = sdkIntField.get<span class="constructor">Int(<span class="params">null</span>)</span>;</span><br><span class="line">            <span class="keyword">if</span> (sdkInt &gt;= <span class="number">28</span>) {</span><br><span class="line">                Field classLoader = <span class="module-access"><span class="module"><span class="identifier">ReflectWrapper</span>.</span></span><span class="keyword">class</span>.get<span class="constructor">DeclaredField(<span class="string">&quot;classLoaderOffsetHelper&quot;</span>)</span>;</span><br><span class="line">                long classLoaderOffset = <span class="module-access"><span class="module"><span class="identifier">UnSafeWrapper</span>.</span></span>get<span class="constructor">UnSafe()</span>.object<span class="constructor">FieldOffset(<span class="params">classLoader</span>)</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="module-access"><span class="module"><span class="identifier">UnSafeWrapper</span>.</span></span>get<span class="constructor">UnSafe()</span>.get<span class="constructor">Object(ReflectWrapper.<span class="params">class</span>, <span class="params">classLoaderOffset</span>)</span> instanceof ClassLoader) {</span><br><span class="line">                    Object originalClassLoader = <span class="module-access"><span class="module"><span class="identifier">UnSafeWrapper</span>.</span></span>get<span class="constructor">UnSafe()</span>.get<span class="constructor">AndSetObject(ReflectWrapper.<span class="params">class</span>, <span class="params">classLoaderOffset</span>, <span class="params">null</span>)</span>;</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    throw <span class="keyword">new</span> <span class="constructor">RuntimeException(<span class="string">&quot;not support&quot;</span>)</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        } catch (Exception e) {</span><br><span class="line">            throw <span class="keyword">new</span> <span class="constructor">RuntimeException(<span class="params">e</span>)</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4E4B;&#x540E;&#x7684;&#x4E8B;&#x60C5;&#x5C31;&#x53D8;&#x5F97;&#x5F88;&#x7B80;&#x5355;&#x4E86;&#xFF0C;&#x6240;&#x6709;&#x53CD;&#x5C04;&#x5DE5;&#x4F5C;&#x90FD;&#x901A;&#x8FC7;ReflectWrapper&#x8FDB;&#x884C;&#x8C03;&#x7528;&#xFF0C;&#x73B0;&#x5728;&#x8BE5;&#x7C7B;&#x5C31;&#x662F;&#x4E0A;&#x5E1D;&#x7C7B;&#xFF0C;&#x53EF;&#x4EE5;&#x4E3A;&#x6240;&#x6B32;&#x4E3A;&#x3002;</p><p>&#x5BF9;&#x5E94;&#x5B9E;&#x73B0;&#x53EF;&#x4EE5;&#x53C2;&#x8003;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> github.io.lizhangqu.reflect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.annotation.Keep;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> github.io.lizhangqu.unsafe.UnSafeWrapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lizhangqu</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> V1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2018-06-30 12:30</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Keep</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectWrapper</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="comment">//just for finding the java.lang.Class classLoader field&apos;s offset</span></span><br><span class="line">    <span class="meta">@Keep</span></span><br><span class="line">    <span class="keyword">private</span> Object classLoaderOffsetHelper;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            Class&lt;?&gt; VersionClass = Class.forName(<span class="string">&quot;android.os.Build$VERSION&quot;</span>);</span><br><span class="line">            Field sdkIntField = VersionClass.getDeclaredField(<span class="string">&quot;SDK_INT&quot;</span>);</span><br><span class="line">            sdkIntField.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            <span class="keyword">int</span> sdkInt = sdkIntField.getInt(<span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (sdkInt &gt;= <span class="number">28</span>) {</span><br><span class="line">                Field classLoader = ReflectWrapper.class.getDeclaredField(<span class="string">&quot;classLoaderOffsetHelper&quot;</span>);</span><br><span class="line">                <span class="keyword">long</span> classLoaderOffset = UnSafeWrapper.getUnSafe().objectFieldOffset(classLoader);</span><br><span class="line">                <span class="keyword">if</span> (UnSafeWrapper.getUnSafe().getObject(ReflectWrapper.class, classLoaderOffset) <span class="keyword">instanceof</span> ClassLoader) {</span><br><span class="line">                    Object originalClassLoader = UnSafeWrapper.getUnSafe().getAndSetObject(ReflectWrapper.class, classLoaderOffset, <span class="keyword">null</span>);</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;not support&quot;</span>);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Locates a given field anywhere in the class inheritance hierarchy.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> instance an object to search the field into.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name     field name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a field object</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NoSuchFieldException if the field cannot be located</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title">findField</span><span class="params">(Object instance, String name)</span> <span class="keyword">throws</span> NoSuchFieldException </span>{</span><br><span class="line">        <span class="keyword">for</span> (Class&lt;?&gt; clazz = instance.getClass(); clazz != <span class="keyword">null</span>; clazz = clazz.getSuperclass()) {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                Field field = clazz.getDeclaredField(name);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!field.isAccessible()) {</span><br><span class="line">                    field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> field;</span><br><span class="line">            } <span class="keyword">catch</span> (NoSuchFieldException e) {</span><br><span class="line">                <span class="comment">// ignore and search next</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchFieldException(<span class="string">&quot;Field &quot;</span> + name + <span class="string">&quot; not found in &quot;</span> + instance.getClass());</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Field <span class="title">findField</span><span class="params">(Class&lt;?&gt; originClazz, String name)</span> <span class="keyword">throws</span> NoSuchFieldException </span>{</span><br><span class="line">        <span class="keyword">for</span> (Class&lt;?&gt; clazz = originClazz; clazz != <span class="keyword">null</span>; clazz = clazz.getSuperclass()) {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                Field field = clazz.getDeclaredField(name);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!field.isAccessible()) {</span><br><span class="line">                    field.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> field;</span><br><span class="line">            } <span class="keyword">catch</span> (NoSuchFieldException e) {</span><br><span class="line">                <span class="comment">// ignore and search next</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchFieldException(<span class="string">&quot;Field &quot;</span> + name + <span class="string">&quot; not found in &quot;</span> + originClazz);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Locates a given method anywhere in the class inheritance hierarchy.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> instance       an object to search the method into.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name           method name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> parameterTypes method parameter types</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a method object</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NoSuchMethodException if the method cannot be located</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Method <span class="title">findMethod</span><span class="params">(Object instance, String name, Class&lt;?&gt;... parameterTypes)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> NoSuchMethodException </span>{</span><br><span class="line">        <span class="keyword">for</span> (Class&lt;?&gt; clazz = instance.getClass(); clazz != <span class="keyword">null</span>; clazz = clazz.getSuperclass()) {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                Method method = clazz.getDeclaredMethod(name, parameterTypes);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!method.isAccessible()) {</span><br><span class="line">                    method.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> method;</span><br><span class="line">            } <span class="keyword">catch</span> (NoSuchMethodException e) {</span><br><span class="line">                <span class="comment">// ignore and search next</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchMethodException(<span class="string">&quot;Method &quot;</span></span><br><span class="line">                + name</span><br><span class="line">                + <span class="string">&quot; with parameters &quot;</span></span><br><span class="line">                + Arrays.asList(parameterTypes)</span><br><span class="line">                + <span class="string">&quot; not found in &quot;</span> + instance.getClass());</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Locates a given method anywhere in the class inheritance hierarchy.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> clazz          a class to search the method into.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name           method name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> parameterTypes method parameter types</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a method object</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NoSuchMethodException if the method cannot be located</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Method <span class="title">findMethod</span><span class="params">(Class&lt;?&gt; clazz, String name, Class&lt;?&gt;... parameterTypes)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> NoSuchMethodException </span>{</span><br><span class="line">        <span class="keyword">for</span> (; clazz != <span class="keyword">null</span>; clazz = clazz.getSuperclass()) {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                Method method = clazz.getDeclaredMethod(name, parameterTypes);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!method.isAccessible()) {</span><br><span class="line">                    method.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> method;</span><br><span class="line">            } <span class="keyword">catch</span> (NoSuchMethodException e) {</span><br><span class="line">                <span class="comment">// ignore and search next</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchMethodException(<span class="string">&quot;Method &quot;</span></span><br><span class="line">                + name</span><br><span class="line">                + <span class="string">&quot; with parameters &quot;</span></span><br><span class="line">                + Arrays.asList(parameterTypes)</span><br><span class="line">                + <span class="string">&quot; not found in &quot;</span> + clazz);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Constructor&lt;?&gt; findConstructor(Class&lt;?&gt; originClazz, Class&lt;?&gt;... parameterTypes) <span class="keyword">throws</span> NoSuchMethodException {</span><br><span class="line">        <span class="keyword">for</span> (Class&lt;?&gt; clazz = originClazz; clazz != <span class="keyword">null</span>; clazz = clazz.getSuperclass()) {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                Constructor&lt;?&gt; ctor = clazz.getDeclaredConstructor(parameterTypes);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!ctor.isAccessible()) {</span><br><span class="line">                    ctor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> ctor;</span><br><span class="line">            } <span class="keyword">catch</span> (NoSuchMethodException e) {</span><br><span class="line">                <span class="comment">// ignore and search next</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchMethodException(<span class="string">&quot;Constructor&quot;</span></span><br><span class="line">                + <span class="string">&quot; with parameters &quot;</span></span><br><span class="line">                + Arrays.asList(parameterTypes)</span><br><span class="line">                + <span class="string">&quot; not found in &quot;</span> + originClazz);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Locates a given constructor anywhere in the class inheritance hierarchy.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> instance       an object to search the constructor into.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> parameterTypes constructor parameter types</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> a constructor object</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> NoSuchMethodException if the constructor cannot be located</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Constructor&lt;?&gt; findConstructor(Object instance, Class&lt;?&gt;... parameterTypes)</span><br><span class="line">            <span class="keyword">throws</span> NoSuchMethodException {</span><br><span class="line">        <span class="keyword">for</span> (Class&lt;?&gt; clazz = instance.getClass(); clazz != <span class="keyword">null</span>; clazz = clazz.getSuperclass()) {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                Constructor&lt;?&gt; ctor = clazz.getDeclaredConstructor(parameterTypes);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!ctor.isAccessible()) {</span><br><span class="line">                    ctor.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> ctor;</span><br><span class="line">            } <span class="keyword">catch</span> (NoSuchMethodException e) {</span><br><span class="line">                <span class="comment">// ignore and search next</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchMethodException(<span class="string">&quot;Constructor&quot;</span></span><br><span class="line">                + <span class="string">&quot; with parameters &quot;</span></span><br><span class="line">                + Arrays.asList(parameterTypes)</span><br><span class="line">                + <span class="string">&quot; not found in &quot;</span> + instance.getClass());</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>UnSafe</tag>
      </tags>
  </entry>
  <entry>
    <title>给个推 Push SDK 打 Call</title>
    <url>/2018/10/04/%E7%BB%99%E4%B8%AA%E6%8E%A8Push-SDK%E6%89%93Call/</url>
    <content><![CDATA[<p>&#x4E2A;&#x63A8;Push SDK 2.12.5.0&#x521D;&#x59CB;&#x5316;&#x51FD;&#x6570;&#x4E2D;&#x4F1A;&#x8C03;&#x7528;boolean com.igexin.push.util.a.b(Context context);&#x51FD;&#x6570;&#x3002;</p><p>&#x8BE5;&#x65B9;&#x6CD5;&#x5BF9;libgetuiext3.so&#x505A;&#x4E86;&#x5B58;&#x5728;&#x6027;&#x6821;&#x9A8C;&#xFF0C;&#x4F46;&#x662F;&#x63D2;&#x4EF6;&#x5316;&#x540E;&#xFF0C;&#x5BF9;&#x5E94;&#x52A8;&#x6001;&#x5E93;&#x4E0D;&#x5728;&#x539F;&#x59CB;&#x76EE;&#x5F55;&#x4E0A;&#xFF0C;&#x6821;&#x9A8C;&#x5931;&#x8D25;&#xFF0C;&#x5BFC;&#x81F4;&#x4E2A;&#x63A8;&#x4E0D;&#x521D;&#x59CB;&#x5316;&#xFF0C;push&#x529F;&#x80FD;&#x5F02;&#x5E38;&#x3002;</p><p>&#x4E4B;&#x6240;&#x4EE5;&#x4F1A;&#x6821;&#x9A8C;&#x5931;&#x8D25;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x63D2;&#x4EF6;&#x5316;&#x540E;&#x8BE5;&#x52A8;&#x6001;&#x5E93;&#x4F4D;&#x4E8E;/data/data/packageName/app_plugins/pluginName/pluginVersion/lib/libgetuiext3.so&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x4E0D;&#x5728;&#x5E38;&#x89C4;&#x76EE;&#x5F55;&#x4E0B;</p><a id="more"></a><p>&#x5BF9;&#x5E94;&#x6821;&#x9A8C;&#x65B9;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> b(Context var0) {</span><br><span class="line">    <span class="built_in">File</span> var1 = <span class="keyword">new</span> <span class="built_in">File</span>(var0.getApplicationInfo().nativeLibraryDir, <span class="string">&quot;libgetuiext3.so&quot;</span>);</span><br><span class="line">    <span class="built_in">if</span> (!var1.<span class="built_in">exists</span>()) {</span><br><span class="line">        <span class="keyword">String</span> var2 = <span class="string">&quot;libgetuiext3.so not found in path: &quot;</span> + var1.getAbsolutePath();</span><br><span class="line">        <span class="built_in">if</span> ((var0.getApplicationInfo().flags &amp; <span class="number">2</span>) != <span class="number">0</span>) {</span><br><span class="line">            (<span class="keyword">new</span> Handler(Looper.getMainLooper())).post(<span class="keyword">new</span> com.igexin.push.util.b(var0, var2));</span><br><span class="line">        }</span><br><span class="line"> </span><br><span class="line">        Log.e(a, var2);</span><br><span class="line">    }</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">return</span> var1.<span class="built_in">exists</span>();</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4E2A;&#x63A8;&#x521D;&#x59CB;&#x5316;&#x51FD;&#x6570;&#x4E2D;&#x8C03;&#x7528;&#x4E86;&#x8BE5;&#x6821;&#x9A8C;&#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x4E14;&#x6821;&#x9A8C;&#x5931;&#x8D25;&#x540E;&#x76F4;&#x63A5;return</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">public &lt;T extends Service&gt; void initialize(Context var1, Class&lt;T&gt; var2) {</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        String var3 = var1.get<span class="constructor">ApplicationContext()</span>.get<span class="constructor">PackageName()</span>;</span><br><span class="line">        String var4 = com.igexin.push.util.a.a(var1);</span><br><span class="line">        <span class="keyword">if</span> (var4 != null<span class="operator"> &amp;&amp; </span>(var4.contains(<span class="string">&quot;gtsync&quot;</span>)<span class="operator"> || </span>var4.contains(<span class="string">&quot;gtdms&quot;</span>))) {</span><br><span class="line">            com.igexin.b.a.c.b.a(<span class="string">&quot;PushManager|init by default = &quot;</span> + var4);</span><br><span class="line">            return;</span><br><span class="line">        }</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (!com.igexin.push.util.a.a(<span class="string">&quot;PushManager&quot;</span>, var1, var2)) {</span><br><span class="line">            com.igexin.b.a.c.b.a(<span class="string">&quot;PushManager|init checkServiceSetCorrectly false&quot;</span>);</span><br><span class="line">            return;</span><br><span class="line">        }</span><br><span class="line"> </span><br><span class="line">        <span class="comment">//&#x6587;&#x4EF6;&#x6821;&#x9A8C;&#x4E0D;&#x901A;&#x8FC7;&#xFF0C;&#x62D2;&#x7EDD;&#x521D;&#x59CB;&#x5316;</span></span><br><span class="line">        <span class="keyword">if</span> (!com.igexin.push.util.a.b(var1)) {</span><br><span class="line">            return;</span><br><span class="line">        }</span><br><span class="line"> </span><br><span class="line">        Class var5;</span><br><span class="line">        <span class="keyword">if</span> (var2 != null<span class="operator"> &amp;&amp; </span>!com.igexin.push.core.a.n.equals(var2.get<span class="constructor">Name()</span>)) {</span><br><span class="line">            var5 = var2;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            var5 = <span class="module-access"><span class="module"><span class="identifier">PushService</span>.</span></span><span class="keyword">class</span>;</span><br><span class="line">        }</span><br><span class="line"> </span><br><span class="line">        Intent var6 = <span class="keyword">new</span> <span class="constructor">Intent(<span class="params">var1</span>.<span class="params">getApplicationContext</span>()</span>, var5);</span><br><span class="line">        var6.put<span class="constructor">Extra(<span class="string">&quot;action&quot;</span>, PushConsts.ACTION_SERVICE_INITIALIZE)</span>;</span><br><span class="line">        var6.put<span class="constructor">Extra(<span class="string">&quot;op_app&quot;</span>, <span class="params">var3</span>)</span>;</span><br><span class="line">        var6.put<span class="constructor">Extra(<span class="string">&quot;us&quot;</span>, <span class="params">var5</span>.<span class="params">getName</span>()</span>);</span><br><span class="line">        <span class="keyword">if</span> (this.f != null) {</span><br><span class="line">            var6.put<span class="constructor">Extra(<span class="string">&quot;uis&quot;</span>, <span class="params">this</span>.<span class="params">f</span>)</span>;</span><br><span class="line">        }</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">if</span> (this.g != null) {</span><br><span class="line">            var6.put<span class="constructor">Extra(<span class="string">&quot;ua&quot;</span>, <span class="params">this</span>.<span class="params">g</span>)</span>;</span><br><span class="line">        }</span><br><span class="line"> </span><br><span class="line">        var1.get<span class="constructor">ApplicationContext()</span>.start<span class="constructor">Service(<span class="params">var6</span>)</span>;</span><br><span class="line">        this.e = var5;</span><br><span class="line">    } catch (Throwable var7) {</span><br><span class="line">        com.igexin.b.a.c.b.a(<span class="string">&quot;PushManager|initialize|&quot;</span> + var7.<span class="keyword">to</span><span class="constructor">String()</span>);</span><br><span class="line">    }</span><br><span class="line"> </span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x867D;&#x7136;&#x4F1A;&#x8FDB;&#x884C;&#x8BE5;&#x6821;&#x9A8C;&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x52A0;&#x8F7D;&#x7684;so&#x5176;&#x5B9E;&#x8FD8;&#x662F;&#x7531;&#x6211;&#x4EEC;&#x63D2;&#x4EF6;&#x5316;&#x7684;&#x6846;&#x67B6;&#x63A7;&#x5236;&#xFF0C;&#x52A0;&#x8F7D;&#x7684;&#x771F;&#x6B63;&#x7684;&#x6587;&#x4EF6;&#x662F;&#x63D2;&#x4EF6;&#x76EE;&#x5F55;&#x4E0B;&#x7684;so&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x53EA;&#x8981;&#x7ED5;&#x8FC7;&#x4E0A;&#x8FF0;&#x5B58;&#x5728;&#x6027;&#x6821;&#x9A8C;&#x5373;&#x53EF;&#x3002;</p><p>&#x76EE;&#x524D;&#x5171;&#x6709;&#x51E0;&#x79CD;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x4F46;&#x90FD;&#x4E0D;&#x5B8C;&#x7F8E;&#xFF1A;</p><p>1&#x3001;&#x8BA9;&#x4E2A;&#x63A8;&#x6253;&#x4E00;&#x4E2A;&#x5B9A;&#x5236;&#x7248;&#xFF0C;&#x53BB;&#x6389;so&#x8DEF;&#x5F84;&#x6821;&#x9A8C;&#x3002;&#x5FFD;&#x7565;&#x6B64;&#x65B9;&#x6848;&#xFF0C;&#x4F9D;&#x8D56;&#x4E2A;&#x63A8;&#x3002;<br>2&#x3001;&#x5728;&#x5BBF;&#x4E3B;&#x4E2D;&#x653E;&#x4E00;&#x4E2A;&#x7A7A;&#x7684;&#x540C;&#x540D;so&#x6587;&#x4EF6;&#xFF0C;&#x6B64;&#x65B9;&#x6848;&#x867D;&#x7136;&#x53EF;&#x884C;&#xFF0C;&#x4F46;&#x662F;&#x4F1A;&#x5728;&#x5BBF;&#x4E3B;&#x83AB;&#x540D;&#x5176;&#x5999;&#x7684;&#x591A;&#x4E00;&#x4E2A;&#x7A7A;&#x6587;&#x4EF6;&#x5B58;&#x5728;&#xFF0C;&#x5E76;&#x4E0D;&#x5B8C;&#x7F8E;&#xFF0C;&#x4F5C;&#x4E3A;&#x5907;&#x9009;&#x65B9;&#x6848;&#x3002;<br>3&#x3001;&#x7F16;&#x8BD1;&#x671F;&#x5229;&#x7528;AOP&#x8FDB;&#x884C;&#x73AF;&#x7ED5;&#x901A;&#x77E5;&#x5207;&#x9664;&#xFF0C;&#x4FEE;&#x6539;&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x503C;&#x3002;&#x6B64;&#x65B9;&#x6848;&#x867D;&#x7136;&#x53EF;&#x884C;&#xFF0C;&#x4F46;&#x662F;&#x4F1A;&#x989D;&#x5916;&#x5F15;&#x5165;AspectJ&#x4F9D;&#x8D56;&#xFF0C;&#x4E0D;&#x8003;&#x8651;&#x3002;</p><p>&#x6700;&#x7EC8;&#x91C7;&#x53D6;&#x65B9;&#x6CD5;3&#x8FDB;&#x884C;&#x5B9E;&#x884C;&#xFF0C;&#x65E2;&#x4E0D;&#x4F9D;&#x8D56;&#x4E2A;&#x63A8;&#xFF0C;&#x53C8;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x3002;</p><p>&#x63A5;&#x7740;&#x5C31;&#x662F;&#x7F16;&#x5199;&#x4E00;&#x4E2A;&#x811A;&#x672C;&#xFF0C;&#x4F7F;&#x7528;javassist&#x5C06;&#x8BE5;&#x6821;&#x9A8C;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#xFF0C;&#x5F3A;&#x5236;&#x8FD4;&#x56DE;true&#x5373;&#x53EF;&#x3002;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">project.afterEvaluate {</span><br><span class="line">        project.tasks.create(<span class="string">&quot;hackPushSDK&quot;</span>) {</span><br><span class="line">            set<span class="constructor">Group(<span class="string">&quot;push&quot;</span>)</span></span><br><span class="line">            doLast {</span><br><span class="line">                <span class="comment">//&#x6307;&#x5411;&#x4E2A;&#x63A8;aar&#x6587;&#x4EF6;</span></span><br><span class="line">                File aar = <span class="keyword">new</span> <span class="constructor">File(<span class="string">&quot;/path/to/sdk-2.12.5.0.aar&quot;</span>)</span></span><br><span class="line">                ClassPool classPool = <span class="keyword">new</span> <span class="constructor">ClassPool(<span class="params">true</span>)</span>;</span><br><span class="line"> </span><br><span class="line">                File jar = <span class="keyword">new</span> <span class="constructor">File(<span class="params">aar</span>.<span class="params">getParentFile</span>()</span>, aar.get<span class="constructor">Name()</span> + <span class="string">&quot;.jar&quot;</span>)</span><br><span class="line">                File classFile = <span class="keyword">new</span> <span class="constructor">File(<span class="params">aar</span>.<span class="params">getParentFile</span>()</span>, aar.get<span class="constructor">Name()</span> + <span class="string">&quot;.class&quot;</span>)</span><br><span class="line">                File destAar = <span class="keyword">new</span> <span class="constructor">File(<span class="params">aar</span>.<span class="params">getParentFile</span>()</span>, aar.get<span class="constructor">Name()</span> + <span class="string">&quot;.aar&quot;</span>)</span><br><span class="line"> </span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">GFileUtils</span>.</span></span>delete<span class="constructor">Quietly(<span class="params">jar</span>)</span></span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">GFileUtils</span>.</span></span>mkdirs(jar.get<span class="constructor">ParentFile()</span>)</span><br><span class="line"> </span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">GFileUtils</span>.</span></span>delete<span class="constructor">Quietly(<span class="params">classFile</span>)</span></span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">GFileUtils</span>.</span></span>mkdirs(classFile.get<span class="constructor">ParentFile()</span>)</span><br><span class="line"> </span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">GFileUtils</span>.</span></span>delete<span class="constructor">Quietly(<span class="params">destAar</span>)</span></span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">GFileUtils</span>.</span></span>mkdirs(destAar.get<span class="constructor">ParentFile()</span>)</span><br><span class="line"> </span><br><span class="line">                <span class="comment">//&#x63D0;&#x53D6;aar&#x4E2D;&#x7684;classes.jar&#x8FDB;&#x884C;&#x9884;&#x5904;&#x7406;</span></span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">ZipUtil</span>.</span></span>unpack<span class="constructor">Entry(<span class="params">aar</span>, <span class="string">&quot;classes.jar&quot;</span>, <span class="params">jar</span>)</span></span><br><span class="line">                <span class="comment">//&#x6B64;&#x76EE;&#x5F55;&#x66FF;&#x6362;&#x6210;&#x81EA;&#x5DF1;&#x7535;&#x8111;&#x4E0A;&#x7684;&#x76EE;&#x5F55;</span></span><br><span class="line">                classPool.insert<span class="constructor">ClassPath(<span class="string">&quot;/Users/lizhangqu/AndroidSDK/platforms/android-26/android.jar&quot;</span>)</span></span><br><span class="line">                classPool.insert<span class="constructor">ClassPath(<span class="params">jar</span>.<span class="params">getAbsolutePath</span>()</span>)</span><br><span class="line"> </span><br><span class="line">                <span class="comment">//&#x83B7;&#x53D6;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x7684;&#x7C7B;</span></span><br><span class="line">                def ctClass = classPool.get<span class="constructor">CtClass(<span class="string">&quot;com.igexin.push.util.a&quot;</span>)</span></span><br><span class="line">                def contextCtClass = classPool.get<span class="constructor">CtClass(<span class="string">&quot;android.content.Context&quot;</span>)</span></span><br><span class="line"> </span><br><span class="line">                <span class="comment">//&#x83B7;&#x53D6;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x7684;&#x51FD;&#x6570;</span></span><br><span class="line">                def ctMethod = ctClass.get<span class="constructor">DeclaredMethod(<span class="string">&quot;b&quot;</span>, [<span class="params">contextCtClass</span>] <span class="params">as</span> CtClass[])</span></span><br><span class="line">                <span class="comment">//&#x5C06;&#x8BE5;&#x65B9;&#x6CD5;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x4FEE;&#x6539;&#x4E3A;true</span></span><br><span class="line">                ctMethod.set<span class="constructor">Body(<span class="string">&quot;{return true;}&quot;</span>)</span></span><br><span class="line"> </span><br><span class="line">                <span class="comment">//&#x66FF;&#x6362;classes.jar&#x4E2D;&#x8BE5;&#x6587;&#x4EF6;</span></span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">ZipUtil</span>.</span></span>replace<span class="constructor">Entry(<span class="params">jar</span>, <span class="string">&quot;com/igexin/push/util/a.class&quot;</span>, <span class="params">ctClass</span>.<span class="params">toBytecode</span>()</span>)</span><br><span class="line"> </span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">GFileUtils</span>.</span></span>copy<span class="constructor">File(<span class="params">aar</span>, <span class="params">destAar</span>)</span></span><br><span class="line"> </span><br><span class="line">                <span class="comment">//&#x66FF;&#x6362;aar&#x4E2D;&#x7684;classes.jar&#x4E3A;&#x5904;&#x7406;&#x540E;&#x7684;&#x6587;&#x4EF6;</span></span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">ZipUtil</span>.</span></span>replace<span class="constructor">Entry(<span class="params">destAar</span>, <span class="string">&quot;classes.jar&quot;</span>, <span class="params">jar</span>)</span></span><br><span class="line"> </span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5C06;&#x4FEE;&#x6539;&#x5B8C;&#x6210;&#x540E;&#x7684;aar&#x53D1;&#x5E03;&#x5230;&#x79C1;&#x670D;&#x4E0A;&#xFF0C;&#x5F15;&#x7528;&#x4FEE;&#x6539;&#x540E;&#x7684;aar&#x5373;&#x53EF;&#x3002;</p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Gradle</tag>
        <tag>Javassist</tag>
      </tags>
  </entry>
  <entry>
    <title>Android App Bundle 构建流程浅析</title>
    <url>/2018/05/25/Android-App-Bundle%E6%9E%84%E5%BB%BA%E6%B5%81%E7%A8%8B%E6%B5%85%E6%9E%90/</url>
    <content><![CDATA[<p>2018 I/O&#x5927;&#x4F1A;&#x4E0A;&#xFF0C;Google&#x63A8;&#x51FA;&#x4E86;&#x4E00;&#x79CD;&#x540D;&#x4E3A;Android App Bundle&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x501F;&#x52A9;Spilt Apk&#x673A;&#x5236;&#x6765;&#x5B8C;&#x6210;&#x52A8;&#x6001;&#x52A0;&#x8F7D;&#xFF0C;&#x5927;&#x5BB6;&#x90FD;&#x79F0;Android App Bundle&#x4E3A;&#x52A8;&#x6001;&#x5316;&#x6846;&#x67B6;&#xFF0C;&#x5176;&#x5B9E;&#x8FD9;&#x662F;&#x9519;&#x8BEF;&#x7684;&#xFF0C;&#x6216;&#x8BB8;&#x53EF;&#x4EE5;&#x5C06;&#x5176;&#x79F0;&#x4E3A;&#x4E00;&#x4E2A;&#x57FA;&#x4E8E;ProtoBuffer&#x683C;&#x5F0F;&#x7684;&#x5E8F;&#x5217;&#x5316;&#x548C;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x6846;&#x67B6;&#xFF0C;&#x4E14;&#x5B83;&#x662F;&#x4E00;&#x4E2A;zip&#x5305;&#x3002;&#x800C;&#x4E14;&#x5B83;&#x672C;&#x8EAB;&#x5E76;&#x4E0D;&#x652F;&#x6301;&#x52A8;&#x6001;&#x5316;&#xFF0C;&#x53EA;&#x662F;&#x52A8;&#x6001;&#x5316;&#x7684;&#x4E00;&#x4E2A;&#x8F7D;&#x4F53;&#x6587;&#x4EF6;&#xFF0C;&#x771F;&#x6B63;&#x5B9E;&#x73B0;&#x903B;&#x8F91;&#x5E76;&#x4E0D;&#x662F;&#x5B83;&#x3002;</p><a id="more"></a><p>bundle&#x6587;&#x4EF6;&#x7684;&#x540E;&#x7F00;&#x662F;aab&#xFF0C;bundle&#x6587;&#x4EF6;&#x7684;spilt&#x5206;&#x5305;&#x7B56;&#x7565;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;android.bundle&#x7684;dsl&#x5B9A;&#x4E49;&#x8FDB;&#x884C;&#x914D;&#x7F6E;&#xFF0C;&#x4E3B;&#x8981;&#x6709;&#x4E09;&#x4E2A;&#x7EF4;&#x5EA6;&#xFF0C;abi, density&#x548C;language&#xFF0C;&#x914D;&#x7F6E;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">android</span> {</span><br><span class="line">    <span class="section">bundle</span> {</span><br><span class="line">        <span class="section">abi</span> {</span><br><span class="line">            <span class="attribute">enableSplit</span> = <span class="literal">true</span></span><br><span class="line">        }</span><br><span class="line">        density {</span><br><span class="line">            <span class="attribute">enableSplit</span> = <span class="literal">true</span></span><br><span class="line">        }</span><br><span class="line">        language {</span><br><span class="line">            <span class="attribute">enableSplit</span> = <span class="literal">true</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4ECE;bundle&#x6587;&#x4EF6;&#x4E2D;&#x53EF;&#x4EE5;&#x751F;&#x6210;apk&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x91CC;&#x4F1A;&#x6709;&#x4E00;&#x4E2A;apks&#x540E;&#x7F00;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x751F;&#x6210;&#x5404;&#x79CD;apk&#x7684;&#x4E00;&#x4E2A;zip&#x538B;&#x7F29;&#x5305;&#x3002;</p><p>&#x53C2;&#x4E0E;bundle&#x6253;&#x5305;&#x548C;&#x751F;&#x6210;apk&#x7684;&#x4EFB;&#x52A1;&#x4E3B;&#x8981;&#x6709;&#x4E09;&#x4E2A;&#xFF0C;PerModuleBundleTask&#xFF08;&#x5E94;&#x8BE5;&#x662F;PreModuleBundleTask&#xFF0C;&#x62FC;&#x5199;&#x9519;&#x8BEF;&#x5BFC;&#x81F4;&#x53D8;&#x6210;&#x4E86;Per&#xFF0C;&#x6B64;&#x4EFB;&#x52A1;&#x7528;&#x4E8E;&#x9884;&#x5148;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x751F;&#x6210;bundle&#x5305;&#x7684;zip&#x6587;&#x4EF6;&#xFF09;, BundleTask&#xFF08;&#x6B64;&#x4EFB;&#x52A1;&#x7528;&#x4E8E;&#x751F;&#x6210;bundle&#x6587;&#x4EF6;&#xFF09;, BundleToApkTask&#xFF08;&#x6B64;&#x4EFB;&#x52A1;&#x7528;&#x4E8E;&#x4ECE;bunldle&#x6587;&#x4EF6;&#x4E2D;&#x751F;&#x6210;apks&#x6587;&#x4EF6;&#xFF0C;&#x6B64;&#x6587;&#x4EF6;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;zip&#x6587;&#x4EF6;&#xFF0C;&#x91CC;&#x9762;&#x6709;n&#x4E2A;apk&#x6587;&#x4EF6;&#xFF09;&#x3002;</p><p>&#x9996;&#x5148;&#x6765;&#x770B;&#x4E0B;PerModuleBundleTask&#xFF0C;&#x8BE5;&#x4EFB;&#x52A1;&#x5C06;&#x9700;&#x8981;&#x7684;&#x6587;&#x4EF6;&#x538B;&#x7F29;&#x6210;&#x4E00;&#x4E2A;base.zip&#x6587;&#x4EF6;&#xFF0C;&#x538B;&#x7F29;&#x89C4;&#x5219;&#x5982;&#x4E0B;&#xFF1A;</p><p>1, &#x5C06;assets&#x6587;&#x4EF6;&#x538B;&#x5165;zip&#x6839;&#x76EE;&#x5F55;&#x7684;assets&#x76EE;&#x5F55;&#x4E0B;<br>2, &#x5C06;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x538B;&#x5165;zip&#x6839;&#x76EE;&#x5F55;&#x4E0B;res&#x76EE;&#x5F55;&#xFF0C;&#x5176;&#x4E2D;AndroidManifest.xml&#x6587;&#x4EF6;&#xFF0C;&#x4F1A;&#x88AB;&#x538B;&#x5165;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x7684;manifest&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;resources.pb&#x6587;&#x4EF6;&#x4F1A;&#x88AB;&#x538B;&#x5165;&#x6839;&#x76EE;&#x5F55;<br>3, &#x5C06;dex&#x6587;&#x4EF6;&#x538B;&#x5165;zip&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x7684;dex&#x76EE;&#x5F55;<br>4, &#x5C06;&#x52A8;&#x6001;&#x5E93;&#x538B;&#x5165;zip&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x7684;lib&#x76EE;&#x5F55;&#x4E0B;<br>5, &#x5C06;java resources&#x6587;&#x4EF6;&#x538B;&#x5165;zip&#x6587;&#x4EF6;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x7684;root&#x76EE;&#x5F55;&#x4E2D;</p><p>&#x6700;&#x7EC8;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;base.zip&#x6587;&#x4EF6;&#xFF0C;&#x8BE5;&#x6587;&#x4EF6;&#x4F4D;&#x4E8E;build/intermediates/module_bundle/\$flavorType/\$buildType/build\$flavorType\$buildTypePreBundle/out/base.zip</p><p>&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;<br><img src="/2018/05/25/Android-App-Bundle%E6%9E%84%E5%BB%BA%E6%B5%81%E7%A8%8B%E6%B5%85%E6%9E%90/base_zip.png" alt="base_zip.png"></p><p>&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x5982;&#x56FE;&#x6240;&#x793A;<br><img src="/2018/05/25/Android-App-Bundle%E6%9E%84%E5%BB%BA%E6%B5%81%E7%A8%8B%E6%B5%85%E6%9E%90/base_zip_content.png" alt="base_zip_content.png"></p><p>&#x518D;&#x6765;&#x770B;&#x770B;&#x5404;&#x6587;&#x4EF6;&#x7684;&#x6765;&#x6E90;</p><p>1, assets&#x6587;&#x4EF6;&#x6765;&#x81EA;mergeAsstes&#x4EFB;&#x52A1;&#xFF0C;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x4ECE;3.2.0&#x5F00;&#x59CB;&#xFF0C;&#x6B64;&#x76EE;&#x5F55;&#x4ECE;build/intermediates/assets&#x4FEE;&#x6539;&#x4E3A;build/intermediates/merged_assets&#xFF0C;&#x4E14;&#x5927;&#x90E8;&#x5206;&#x7684;&#x4EFB;&#x52A1;&#x7684;&#x8F93;&#x51FA;&#x547D;&#x540D;&#x89C4;&#x5219;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;&#xFF0C;&#x5047;&#x8BBE;build/intermediates/merged_assets&#x662F;&#x5176;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x5219;&#x8FD9;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#x8DDF;&#x968F;&#x7740;flavorType&#x76EE;&#x5F55;&#xFF0C;buildType&#x76EE;&#x5F55;&#xFF0C;&#x4EFB;&#x52A1;&#x540D;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x63A5;&#x7740;&#x8DDF;&#x7740;&#x4E00;&#x4E2A;out&#x6587;&#x4EF6;&#x5939;&#xFF0C;out&#x4E0B;&#x5C31;&#x662F;&#x6700;&#x7EC8;&#x4EA7;&#x7269;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2018/05/25/Android-App-Bundle%E6%9E%84%E5%BB%BA%E6%B5%81%E7%A8%8B%E6%B5%85%E6%9E%90/merge_assets.png" alt="merge_assets.png"></p><p>2&#xFF0C;dex&#x6587;&#x4EF6;&#x6CA1;&#x4EC0;&#x4E48;&#x597D;&#x8BF4;&#x7684;&#xFF0C;&#x6765;&#x81EA;transform&#x4EA7;&#x751F;&#x7684;dex&#x6587;&#x4EF6;<br>3&#xFF0C;java resources&#x6587;&#x4EF6;&#x548C;dex&#x4E00;&#x6837;&#xFF0C;&#x6765;&#x81EA;transform&#x4EA7;&#x751F;&#x7684;java resources&#x6587;&#x4EF6;<br>4&#xFF0C;&#x52A8;&#x6001;&#x5E93;&#x4E5F;&#x662F;&#x548C;dex&#x4E00;&#x6837;&#xFF0C;&#x6765;&#x81EA;transform&#x4EA7;&#x751F;&#x7684;&#x52A8;&#x6001;&#x5E93;&#x6587;&#x4EF6;</p><p>2&#xFF0C;3&#xFF0C;4&#x6765;&#x6E90;&#x6587;&#x4EF6;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;<br><img src="/2018/05/25/Android-App-Bundle%E6%9E%84%E5%BB%BA%E6%B5%81%E7%A8%8B%E6%B5%85%E6%9E%90/transform.png" alt="transform.png"></p><p>5, &#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x6765;&#x81EA;bundleResources&#x4EFB;&#x52A1;&#xFF0C;&#x5176;&#x5B9E;&#x73B0;&#x7C7B;&#x4E3A;com.android.build.gradle.internal.res.LinkAndroidResForBundleTask&#xFF0C;&#x548C;processResources&#x4EFB;&#x52A1;&#x7684;&#x7B80;&#x5355;&#x533A;&#x522B;&#x5C31;&#x662F;&#x8BE5;&#x4EFB;&#x52A1;link&#x4EA7;&#x751F;&#x7684;resource&#x6587;&#x4EF6;&#x662F;&#x57FA;&#x4E8E;proto buffer&#x683C;&#x5F0F;&#x7684;&#xFF0C;aapt&#x7684;link&#x53C2;&#x6570;&#x591A;&#x4E86;<strong>&#x2013;proto-format</strong>&#x53C2;&#x6570;&#xFF0C;&#x5176;&#x4EA7;&#x7269;&#x6587;&#x4EF6;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2018/05/25/Android-App-Bundle%E6%9E%84%E5%BB%BA%E6%B5%81%E7%A8%8B%E6%B5%85%E6%9E%90/link_res.png" alt="link_res.png"></p><p>&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x8BE5;task&#x8F93;&#x51FA;&#x7684;&#x4EA7;&#x7269;&#x7684;&#x547D;&#x540D;&#x89C4;&#x5219;&#x548C;mergeAssets&#x4EFB;&#x52A1;&#x662F;&#x7C7B;&#x4F3C;&#x7684;</p><p>&#x8BE5;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2018/05/25/Android-App-Bundle%E6%9E%84%E5%BB%BA%E6%B5%81%E7%A8%8B%E6%B5%85%E6%9E%90/bundle_ap.png" alt="bundle_ap.png"></p><p>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x8FD9;&#x4E9B;&#x6587;&#x4EF6;&#x90FD;&#x4E0D;&#x662F;&#x6700;&#x7EC8;&#x7F16;&#x8BD1;&#x4EA7;&#x751F;&#x7684;Andorid&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#xFF0C;&#x5176;&#x5B9E;&#x9645;&#x5185;&#x5BB9;&#x90FD;&#x662F;proto buffer&#x683C;&#x5F0F;&#x7684;&#xFF0C;&#x5FC5;&#x987B;&#x8FDB;&#x884C;&#x518D;&#x6B21;&#x8F6C;&#x6362;&#x624D;&#x662F;&#x6700;&#x7EC8;&#x7684;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x3002;</p><p>&#x4EE5;&#x4E0A;&#x6587;&#x4EF6;&#xFF0C;&#x7EC4;&#x6210;&#x4E86;base.zip&#x6587;&#x4EF6;&#xFF0C;&#x5373;buildPreBundle&#x4EFB;&#x52A1;&#x7684;&#x8F93;&#x51FA;&#x6587;&#x4EF6;</p><p>&#x63A5;&#x4E0B;&#x6765;&#x770B;packageBundle&#x4EFB;&#x52A1;&#xFF0C;&#x5176;&#x5B9E;&#x73B0;&#x7C7B;&#x4E3A;com.android.build.gradle.internal.tasks.BundleTask&#xFF0C;&#x8BE5;&#x4EFB;&#x52A1;&#x4F1A;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;bundle.aab&#x6587;&#x4EF6;&#xFF0C;&#x5176;&#x4EA7;&#x7269;&#x76EE;&#x5F55;&#x4E3A;<br><img src="/2018/05/25/Android-App-Bundle%E6%9E%84%E5%BB%BA%E6%B5%81%E7%A8%8B%E6%B5%85%E6%9E%90/bundle_out.png" alt="bundle_out.png"></p><p>&#x8FD9;&#x4E2A;&#x4EFB;&#x52A1;&#x5176;&#x5B9E;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x5C06;&#x4E09;&#x4E2A;spilt&#x7EF4;&#x5EA6;&#x5C01;&#x88C5;&#x6210;&#x4E00;&#x4E2A;SplitsConfig&#xFF0C;&#x5C06;bundle&#x6253;&#x5305;&#x7684;&#x4E00;&#x4E9B;&#x914D;&#x7F6E;&#x5C01;&#x88C5;&#x6210;bundleConfig&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6700;&#x7EC8;bundle&#x91CC;&#x7684;BundleConfig.pb&#x6587;&#x4EF6;&#xFF0C;&#x8C03;&#x7528;bundletool&#x7684;BuildBundleCommand&#x7C7B;&#x8FDB;&#x884C;&#x751F;&#x6210;bundle&#x6587;&#x4EF6;&#xFF0C;&#x6587;&#x4EF6;&#x751F;&#x6210;&#x540E;&#xFF0C;&#x8C03;&#x7528;JarSigner&#x5BF9;bundle&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x7B7E;&#x540D;&#xFF0C;&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x5FC5;&#x987B;&#x662F;JarSigner&#x800C;&#x4E0D;&#x662F;ApkSigner&#xFF0C;&#x5177;&#x4F53;&#x539F;&#x56E0;&#x672A;&#x77E5;&#xFF0C;google&#x8FD9;&#x4E48;&#x8BF4;&#x7684;&#x3002;</p><p>&#x81F3;&#x4E8E;bundletool&#x600E;&#x4E48;&#x751F;&#x6210;bundle&#x6587;&#x4EF6;&#x7684;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x81EA;&#x5DF1;&#x53BB;&#x770B;&#xFF0C;<a href="https://github.com/google/bundletool/blob/master/src/main/java/com/android/tools/build/bundletool/commands/BuildBundleCommand.java" target="_blank" rel="noopener">https://github.com/google/bundletool/blob/master/src/main/java/com/android/tools/build/bundletool/commands/BuildBundleCommand.java</a></p><p>&#x6700;&#x7EC8;&#x751F;&#x6210;&#x7684;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x5982;&#x4E0B;</p><p><img src="/2018/05/25/Android-App-Bundle%E6%9E%84%E5%BB%BA%E6%B5%81%E7%A8%8B%E6%B5%85%E6%9E%90/aab_content.png" alt="aab_content.png"></p><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x548C;base.zip&#x6587;&#x4EF6;&#x7684;&#x533A;&#x522B;&#x5C31;&#x662F;&#x628A;base.zip&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x6587;&#x4EF6;&#x90FD;&#x6254;&#x5230;&#x4E86;base&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x5E76;&#x4E14;&#x591A;&#x4E86;&#x4E00;&#x4E2A;BundleConfig.pb&#x6587;&#x4EF6;&#xFF0C;&#x4EE5;&#x53CA;&#x591A;&#x4E86;&#x4E00;&#x4E2A;native.pb&#x548C;assets.pb&#x6587;&#x4EF6;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5176;&#x5B9E;BuildBundleCommand&#x5C31;&#x662F;&#x5E72;&#x4E86;zip&#x5305;&#x6587;&#x4EF6;&#x7684;&#x62F7;&#x8D1D;&#xFF0C;&#x751F;&#x6210;&#x4E09;&#x4E2A;pb&#x6587;&#x4EF6;&#x7684;&#x6D3B;&#xFF0C;&#x5E76;&#x505A;&#x4E86;&#x4E00;&#x4E9B;&#x6587;&#x4EF6;&#x6821;&#x9A8C;&#x4E0A;&#x7684;&#x6D3B;&#xFF0C;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x6280;&#x672F;&#x542B;&#x91CF;&#x3002;</p><p>&#x6700;&#x540E;&#x770B;&#x4E0B;google play&#x600E;&#x4E48;&#x6839;&#x636E;bundle&#x6587;&#x4EF6;&#x751F;&#x6210;apk&#x6587;&#x4EF6;&#x7684;&#xFF0C;&#x8FD9;&#x4E00;&#x6B65;&#x662F;&#x91CD;&#x70B9;&#x3002;gradle&#x63D2;&#x4EF6;&#x91CC;&#x6A21;&#x62DF;&#x751F;&#x6210;apk&#x7684;&#x4EFB;&#x52A1;&#x662F;makeApkFromBundle&#xFF0C;&#x5176;&#x5B9E;&#x73B0;&#x7C7B;&#x4E3A;com.android.build.gradle.internal.tasks.BundleToApkTask</p><p>&#x5982;&#x679C;&#x4F60;&#x53BB;&#x770B;&#x8FD9;&#x4E2A;&#x7C7B;&#xFF0C;&#x5176;&#x5B9E;&#x5E76;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x4E1C;&#x897F;&#xFF0C;&#x5B83;&#x505A;&#x7684;&#x5DE5;&#x4F5C;&#x5C31;&#x662F;&#x83B7;&#x53D6;&#x5DE5;&#x7A0B;&#x7684;&#x7B7E;&#x540D;&#x6587;&#x4EF6;&#x548C;&#x751F;&#x6210;&#x7684;bundle&#x6587;&#x4EF6;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#xFF0C;&#x5C06;&#x5176;&#x4F20;&#x5165;bundletool&#x4E2D;&#x7684;BuildApksCommand&#x7C7B;&#x8FDB;&#x884C;&#x751F;&#x6210;&#x3002;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x6709;&#x5174;&#x8DA3;&#x7684;&#x81EA;&#x5DF1;&#x53BB;&#x770B;<a href="https://github.com/google/bundletool/blob/master/src/main/java/com/android/tools/build/bundletool/commands/BuildApksCommand.java" target="_blank" rel="noopener">https://github.com/google/bundletool/blob/master/src/main/java/com/android/tools/build/bundletool/commands/BuildApksCommand.java</a></p><p>&#x8BE5;&#x7C7B;&#x5C31;&#x662F;&#x6839;&#x636E;&#x5206;&#x5305;&#x89C4;&#x5219;&#xFF0C;&#x751F;&#x6210;&#x4E00;&#x7CFB;&#x5217;&#x7684;apk&#x6587;&#x4EF6;&#xFF0C;&#x5305;&#x542B;&#x5B8C;&#x6574;&#x7684;apk&#xFF0C;&#x4E5F;&#x5305;&#x542B;base.apk&#xFF0C;&#x540C;&#x65F6;&#x4E5F;&#x4F1A;&#x5305;&#x542B;&#x4E00;&#x4E9B;&#x4E0D;&#x540C;&#x7EF4;&#x5EA6;&#x7684;spilt&#x5305;&#xFF0C;&#x53D6;&#x51B3;&#x4E8E;&#x81EA;&#x5DF1;&#x914D;&#x7F6E;&#x7684;&#x5206;&#x5305;&#x7B56;&#x7565;&#xFF0C;&#x5177;&#x4F53;&#x7684;&#x751F;&#x6210;&#x6B65;&#x9AA4;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x53CD;&#x5E8F;&#x5217;&#x5316;&#x7684;&#x6B65;&#x9AA4;&#xFF0C;&#x9700;&#x8981;aapt2&#x7684;&#x53C2;&#x4E0E;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8C03;&#x7528;aapt2&#x7684;convert&#x547D;&#x4EE4;&#xFF0C;&#x5C06;proto buffer&#x683C;&#x5F0F;&#x7684;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#xFF0C;&#x751F;&#x6210;android&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7684;&#x6700;&#x7EC8;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x3002;</p><p>convert&#x7684;&#x76F8;&#x5173;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A;<br><img src="/2018/05/25/Android-App-Bundle%E6%9E%84%E5%BB%BA%E6%B5%81%E7%A8%8B%E6%B5%85%E6%9E%90/convert.png" alt="convert.png"></p><p>BundleToApkTask&#x4EFB;&#x52A1;&#x4EA7;&#x751F;&#x7684;&#x6587;&#x4EF6;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;:</p><p><img src="/2018/05/25/Android-App-Bundle%E6%9E%84%E5%BB%BA%E6%B5%81%E7%A8%8B%E6%B5%85%E6%9E%90/apks.png" alt="apks.png"></p><p>&#x5176;&#x5B9E;bundletool&#x8FD8;&#x6709;&#x5F88;&#x591A;command&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x89C1; <a href="https://github.com/google/bundletool/tree/master/src/main/java/com/android/tools/build/bundletool/commands" target="_blank" rel="noopener">https://github.com/google/bundletool/tree/master/src/main/java/com/android/tools/build/bundletool/commands</a></p><p>&#x4E0D;&#x77E5;&#x9053;&#x5927;&#x5BB6;&#x6709;&#x6CA1;&#x6709;&#x6CE8;&#x610F;&#x5230;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5C31;&#x662F;bundle.aab&#x6587;&#x4EF6;&#x751F;&#x6210;&#x540E;&#xFF0C;android gradle plugin&#x4F1A;&#x5C06;&#x5176;&#x8FDB;&#x884C;&#x7B7E;&#x540D;&#xFF0C;&#x7136;&#x540E;&#x7528;&#x6237;&#x8981;&#x5C06;&#x5176;&#x4E0A;&#x4F20;&#x5230;google play&#x4E0A;&#xFF0C;&#x7531;google play&#x53BB;&#x751F;&#x6210;&#x7528;&#x6237;&#x5B89;&#x88C5;&#x6240;&#x9700;&#x7684;&#x5404;&#x79CD;apk&#x6587;&#x4EF6;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E9B;&#x751F;&#x6210;&#x7684;apk&#x6587;&#x4EF6;&#x7684;&#x7B7E;&#x540D;&#x600E;&#x4E48;&#x529E;&#xFF0C;&#x5176;&#x5B9E;&#x8FD9;&#x4E2A;&#x7B7E;&#x540D;&#x9700;&#x8981;&#x5F00;&#x53D1;&#x8005;&#x4E3B;&#x52A8;&#x4E0A;&#x4F20;&#x5230;google play&#xFF0C;&#x7531;google play&#x5BF9;apk&#x7B7E;&#x540D;&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x5B8C;&#x5168;&#x6258;&#x7BA1;&#xFF0C;&#x5E76;&#x5BF9;&#x751F;&#x6210;&#x7684;apk&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x7B7E;&#x540D;&#xFF0C;&#x8BE6;&#x60C5;&#x89C1; <a href="https://support.google.com/googleplay/android-developer/answer/7384423?hl=zh-Hans" target="_blank" rel="noopener">https://support.google.com/googleplay/android-developer/answer/7384423?hl=zh-Hans</a></p><p>&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5176;&#x5B9E;&#x8FD9;&#x4EF6;&#x4E8B;&#x60C5;&#xFF0C;google&#x662F;&#x6700;&#x5927;&#x7684;&#x6D41;&#x6C13;&#xFF0C;&#x638C;&#x63E1;&#x4E86;&#x6211;&#x4EEC;&#x7684;app&#x7B7E;&#x540D;&#xFF0C;&#x6709;&#x4EC0;&#x4E48;&#x4E8B;&#x60C5;&#x4E0D;&#x80FD;&#x505A;&#x7684;&#xFF1F;&#x751A;&#x81F3;&#x6211;&#x53EF;&#x4EE5;&#x5C06;&#x5176;&#x603B;&#x7ED3;&#x4E3A;&#xFF1A;&#x628A;&#x6E90;&#x4EE3;&#x7801;&#x6258;&#x7BA1;&#x5230;google play&#xFF0C;&#x7531;google play&#x5E2E;&#x4F60;&#x7F16;&#x8BD1;&#x4EE3;&#x7801;&#xFF0C;&#x8FDB;&#x884C;apk&#x7684;&#x4E0B;&#x53D1;&#x5DE5;&#x4F5C;&#xFF0C;&#x662F;&#x4E0D;&#x662F;&#x66F4;&#x5C4C;&#xFF01;&#xFF01;&#xFF01;&#x5E76;&#x4E14;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#xFF0C;bundletool&#x5E72;&#x4E86;&#x6240;&#x6709;&#x6838;&#x5FC3;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;&#x6240;&#x4EE5;&#x5982;&#x679C;&#x8981;&#x6DF1;&#x5165;&#x4E86;&#x89E3;&#x7684;&#x8BDD;&#xFF0C;&#x5EFA;&#x8BAE;&#x770B;&#x4E0B;&#x4EE3;&#x7801;&#xFF0C;&#x89C1; <a href="https://github.com/google/bundletool" target="_blank" rel="noopener">https://github.com/google/bundletool</a></p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>gradle</tag>
        <tag>android</tag>
        <tag>aab</tag>
        <tag>bundle</tag>
      </tags>
  </entry>
  <entry>
    <title>一种全局拦截并监控 DNS 的方式</title>
    <url>/2018/04/16/%E4%B8%80%E7%A7%8D%E5%85%A8%E5%B1%80%E6%8B%A6%E6%88%AA%E5%B9%B6%E7%9B%91%E6%8E%A7DNS%E7%9A%84%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<p>&#x5982;&#x679C;&#x7F51;&#x7EDC;&#x5E93;&#x4F7F;&#x7528;&#x7684;&#x662F;OkHttp&#xFF0C;&#x90A3;&#x4E48;OkHttp&#x63D0;&#x4F9B;&#x4E86;Dns&#x63A5;&#x53E3;&#xFF0C;&#x7528;&#x4E8E;&#x81EA;&#x5B9A;&#x4E49;dns&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x4E00;&#x822C;HttpDNS&#x5C31;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x53BB;&#x5B9E;&#x73B0;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x6709;&#x4E00;&#x4E2A;&#x5DE8;&#x5927;&#x7684;&#x5C40;&#x9650;&#x6027;&#xFF0C;&#x5C31;&#x662F;&#x53EA;&#x80FD;&#x62E6;&#x622A;&#x5230;&#x5F53;&#x524D;&#x4F7F;&#x7528;&#x7684;OkHttpClient&#x7684;DNS&#xFF0C;&#x65E0;&#x6CD5;&#x62E6;&#x622A;&#x5176;&#x4ED6;&#x5E93;&#x4E2D;&#x7684;OkHttpClient&#x7684;DNS&#x89E3;&#x6790;&#x884C;&#x4E3A;&#xFF0C;&#x800C;&#x4E14;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x7684;&#x4E0D;&#x662F;OkHttp&#xFF0C;&#x5219;&#x4E00;&#x5F8B;&#x62E6;&#x622A;&#x4E0D;&#x5230;&#x3002;&#x90A3;&#x4E48;&#x6709;&#x6CA1;&#x6709;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x53EF;&#x4EE5;&#x62E6;&#x622A;&#x5230;&#x6574;&#x4E2A;App&#x7684;DNS&#x89E3;&#x6790;&#x800C;&#x4E0D;&#x4F9D;&#x8D56;OkHttp&#x5462;&#xFF1F;</p><a id="more"></a><p>&#x524D;&#x51E0;&#x5929;&#x770B;&#x4E86;&#x4E24;&#x7BC7;&#x6587;&#x7AE0;</p><ul><li><a href="https://mp.weixin.qq.com/s/BVF24W6pyfhtoZo9cTbtpA" target="_blank" rel="noopener">&#x300A;&#x5BA2;&#x5385;TV-APP HttpDNS&#x6280;&#x672F;&#x63A5;&#x5165;&#x4E0E;&#x5B9E;&#x6218;&#x300B;</a></li><li><a href="https://juejin.im/entry/5a11c3db51882561a20a11cc" target="_blank" rel="noopener">&#x5982;&#x4F55;&#x4E3A;Android&#x5E94;&#x7528;&#x63D0;&#x4F9B;&#x5168;&#x5C40;&#x7684;HttpDNS&#x670D;&#x52A1;</a></li></ul><p>&#x89C9;&#x5F97;&#x53EF;&#x884C;&#xFF0C;&#x81EA;&#x5DF1;&#x8BD5;&#x9A8C;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x6700;&#x7EC8;&#x5F97;&#x51FA;&#x7ED3;&#x8BBA;&#xFF1A;</p><blockquote><p>&#x53EF;&#x4EE5;&#x62E6;&#x622A;&#x6574;&#x4E2A;App&#x7684;DNS&#x89E3;&#x6790;&#x5E76;&#x8FDB;&#x884C;&#x76D1;&#x63A7;&#xFF08;&#x5982;&#x5224;&#x65AD;&#x662F;&#x5426;&#x88AB;&#x52AB;&#x6301;&#x4E86;&#xFF09;&#xFF0C;&#x751A;&#x81F3;&#x8FDE;WebView&#x4E2D;&#x7684;DNS&#x89E3;&#x6790;&#x4E5F;&#x53EF;&#x4EE5;&#x62E6;&#x622A;&#x5230;&#xFF0C;&#x4F7F;WebView&#x4F7F;&#x7528;HttpDNS&#x6210;&#x4E3A;&#x53EF;&#x80FD;&#x3002;</p></blockquote><p>&#x90A3;&#x4E48;&#x5177;&#x4F53;&#x600E;&#x4E48;&#x62E6;&#x622A;&#x5462;&#xFF1F;</p><p>&#x6211;&#x4EEC;&#x77E5;&#x9053;&#xFF0C;Java&#x5C42;&#x83B7;&#x53D6;&#x57DF;&#x540D;&#x5BF9;&#x5E94;IP&#x662F;&#x901A;&#x8FC7;InetAddress.getAllByName(&#x201C;your.domain.com&#x201D;)&#x6765;&#x83B7;&#x53D6;&#x7684;&#xFF0C;&#x800C;&#x5728;Android&#x4E0A;&#xFF0C;&#x5176;&#x5B9E;&#x73B0;&#x5927;&#x81F4;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> InetAddressImpl impl = <span class="keyword">new</span> Inet6AddressImpl();</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> InetAddress[] getAllByName(<span class="keyword">String</span> host)</span><br><span class="line">    <span class="keyword">throws</span> UnknownHostException {</span><br><span class="line">    <span class="keyword">return</span> impl.lookupAllHostAddr(host, NETID_UNSET).clone();</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6700;&#x7EC8;&#x8C03;&#x7528;&#x7684;&#x662F;Inet6AddressImpl&#x5BF9;&#x8C61;&#x7684;lookupAllHostAddr&#x65B9;&#x6CD5;&#xFF0C;&#x800C;Inet6AddressImpl&#x662F;InetAddressImpl&#x63A5;&#x53E3;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#xFF0C;&#x53EF;&#x4EE5;&#x5B8C;&#x6210;ipv4&#x548C;ipv6&#x7684;dns&#x89E3;&#x6790;&#x3002;</p><p>&#x901A;&#x8FC7;&#x4E0A;&#x9762;&#x7684;&#x5206;&#x6790;&#xFF0C;&#x53D1;&#x73B0;InetAddressImpl&#x662F;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x4EE3;&#x7406;&#x6389;&#x539F;&#x6765;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x6CD5;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x5E78;&#x7684;&#x662F;&#x8BE5;&#x63A5;&#x53E3;&#x4E0D;&#x662F;public&#x8BBF;&#x95EE;&#x7B26;&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x53EA;&#x6709;&#x4E00;&#x79CD;&#x4EE3;&#x7406;&#x65B9;&#x5F0F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x3002;</p><p>&#x4F46;&#x662F;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;impl&#x662F;final&#x7684;&#xFF0C;&#x5728;android&#x4E0A;&#x4FEE;&#x6539;final&#x5B57;&#x6BB5;&#x548C;java&#x5E73;&#x53F0;&#x6709;&#x70B9;&#x533A;&#x522B;&#xFF0C;android&#x4E0A;&#x662F;&#x5426;&#x662F;final&#x8FD9;&#x4E2A;&#x5B57;&#x6BB5;&#x662F;&#x8BB0;&#x5F55;&#x5728;Field&#x4E2D;&#x7684;accessFlags&#x4E2D;&#xFF0C;&#x800C;&#x4E0D;&#x662F;java&#x5E73;&#x53F0;&#x4E0A;&#x7684;modifiers&#x5B57;&#x6BB5;&#x4E2D;&#xFF0C;&#x56E0;&#x6B64;&#x53CD;&#x5C04;&#x4FEE;&#x6539;&#x7684;&#x65F6;&#x5019;&#x8981;&#x7279;&#x522B;&#x6CE8;&#x610F;&#x3002;</p><p>&#x7B80;&#x5355;&#x7684;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> {</span><br><span class="line">    <span class="comment">//&#x83B7;&#x53D6;InetAddress&#x4E2D;&#x7684;impl</span></span><br><span class="line">    Field impl = <span class="module-access"><span class="module"><span class="identifier">InetAddress</span>.</span></span><span class="keyword">class</span>.get<span class="constructor">DeclaredField(<span class="string">&quot;impl&quot;</span>)</span>;</span><br><span class="line">    impl.set<span class="constructor">Accessible(<span class="params">true</span>)</span>;</span><br><span class="line">    <span class="comment">//&#x83B7;&#x53D6;accessFlags</span></span><br><span class="line">    Field modifiersField = <span class="module-access"><span class="module"><span class="identifier">Field</span>.</span></span><span class="keyword">class</span>.get<span class="constructor">DeclaredField(<span class="string">&quot;accessFlags&quot;</span>)</span>;</span><br><span class="line">    modifiersField.set<span class="constructor">Accessible(<span class="params">true</span>)</span>;</span><br><span class="line">    <span class="comment">//&#x53BB;final</span></span><br><span class="line">    modifiersField.set<span class="constructor">Int(<span class="params">impl</span>, <span class="params">impl</span>.<span class="params">getModifiers</span>()</span> &amp; ~java.lang.reflect.Modifier.FINAL);</span><br><span class="line">    <span class="comment">//&#x83B7;&#x53D6;&#x539F;&#x59CB;InetAddressImpl&#x5BF9;&#x8C61;</span></span><br><span class="line">    final Object originalImpl = impl.get(null);</span><br><span class="line">    <span class="comment">//&#x6784;&#x5EFA;&#x52A8;&#x6001;&#x4EE3;&#x7406;InetAddressImpl&#x5BF9;&#x8C61;</span></span><br><span class="line">    Object dynamicImpl = <span class="module-access"><span class="module"><span class="identifier">Proxy</span>.</span></span><span class="keyword">new</span><span class="constructor">ProxyInstance(<span class="params">originalImpl</span>.<span class="params">getClass</span>()</span>.get<span class="constructor">ClassLoader()</span>, originalImpl.get<span class="constructor">Class()</span>.get<span class="constructor">Interfaces()</span>, <span class="keyword">new</span> <span class="constructor">InvocationHandler()</span> {</span><br><span class="line">        final Object lock = <span class="keyword">new</span> <span class="constructor">Object()</span>;</span><br><span class="line">        Constructor&lt;Inet4Address&gt; constructor = null;</span><br><span class="line"></span><br><span class="line">        @Override</span><br><span class="line">        public Object invoke(Object proxy, Method <span class="keyword">method</span>, Object<span class="literal">[]</span> args) throws Throwable {</span><br><span class="line">            <span class="comment">//&#x5982;&#x679C;&#x51FD;&#x6570;&#x540D;&#x4E3A;lookupAllHostAddr&#xFF0C;&#x5E76;&#x4E14;&#x53C2;&#x6570;&#x957F;&#x5EA6;&#x4E3A;2&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F;host&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x662F;netId</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">method</span>.get<span class="constructor">Name()</span>.equals(<span class="string">&quot;lookupAllHostAddr&quot;</span>)<span class="operator"> &amp;&amp; </span>args != null<span class="operator"> &amp;&amp; </span>args.length<span class="operator"> == </span><span class="number">2</span>) {</span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>e(<span class="string">&quot;TAG&quot;</span>, <span class="string">&quot;lookupAllHostAddr&#xFF1A;&quot;</span> + <span class="module-access"><span class="module"><span class="identifier">Arrays</span>.</span></span><span class="keyword">as</span><span class="constructor">List(<span class="params">args</span>)</span>);</span><br><span class="line">                <span class="comment">//&#x83B7;&#x53D6;Inet4Address&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x53EF;&#x80FD;&#x8FD8;&#x9700;&#x8981;Inet6Address&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x4E3A;&#x4E86;&#x6F14;&#x793A;&#xFF0C;&#x7B80;&#x5355;&#x5904;&#x7406;</span></span><br><span class="line">                <span class="keyword">if</span> (constructor<span class="operator"> == </span>null) {</span><br><span class="line">                    synchronized (lock) {</span><br><span class="line">                        <span class="keyword">if</span> (constructor<span class="operator"> == </span>null) {</span><br><span class="line">                            <span class="keyword">try</span> {</span><br><span class="line">                                constructor = <span class="module-access"><span class="module"><span class="identifier">Inet4Address</span>.</span></span><span class="keyword">class</span>.get<span class="constructor">DeclaredConstructor(String.<span class="params">class</span>, <span class="params">byte</span>[].<span class="params">class</span>)</span>;</span><br><span class="line">                                constructor.set<span class="constructor">Accessible(<span class="params">true</span>)</span>;</span><br><span class="line">                            } catch (Exception e) {</span><br><span class="line">                                e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">                            }</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">if</span> (constructor != null) {</span><br><span class="line">                    <span class="comment">//&#x8FD9;&#x91CC;&#x5B9E;&#x73B0;&#x81EA;&#x5DF1;&#x7684;&#x903B;&#x8F91;</span></span><br><span class="line">                    <span class="comment">//&#x6784;&#x9020;&#x4E00;&#x4E2A;mock&#x7684;dns&#x89E3;&#x6790;&#x5E76;&#x8FD4;&#x56DE;</span></span><br><span class="line">                    <span class="keyword">if</span> (args<span class="literal">[<span class="number">0</span>]</span> != null<span class="operator"> &amp;&amp; </span><span class="string">&quot;www.baidu.com&quot;</span>.equals<span class="constructor">IgnoreCase(<span class="params">args</span>[0].<span class="params">toString</span>()</span>)) {</span><br><span class="line">                        <span class="keyword">try</span> {</span><br><span class="line">                            Inet4Address inetAddress = constructor.<span class="keyword">new</span><span class="constructor">Instance(<span class="params">null</span>, <span class="params">new</span> <span class="params">byte</span>[]{(<span class="params">byte</span>)</span> <span class="number">61</span>, (byte) <span class="number">135</span>, (byte) <span class="number">169</span>, (byte) <span class="number">121</span>});</span><br><span class="line">                            return <span class="keyword">new</span> InetAddress<span class="literal">[]</span>{inetAddress};</span><br><span class="line">                        } catch (Exception e) {</span><br><span class="line">                            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            return <span class="keyword">method</span>.invoke(originalImpl, args);</span><br><span class="line">        }</span><br><span class="line">    });</span><br><span class="line">    <span class="comment">//&#x66FF;&#x6362;impl&#x4E3A;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;</span></span><br><span class="line">    impl.set(null, dynamicImpl);</span><br><span class="line">    <span class="comment">//&#x8FD8;&#x539F;final</span></span><br><span class="line">    modifiersField.set<span class="constructor">Int(<span class="params">impl</span>, <span class="params">impl</span>.<span class="params">getModifiers</span>()</span> &amp; java.lang.reflect.Modifier.FINAL);</span><br><span class="line">} catch (Exception e) {</span><br><span class="line">    e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7279;&#x522B;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x52A8;&#x6001;&#x4EE3;&#x7406;&#x5BF9;&#x8C61;&#x4E2D;&#xFF0C;&#x4E0D;&#x80FD;&#x518D;&#x8C03;&#x7528;InetAddress.getAllByName(&#x201C;your.domain.com&#x201D;)&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x51FA;&#x73B0;&#x6B7B;&#x5FAA;&#x73AF;&#xFF0C;&#x9020;&#x6210;java.lang.StackOverflowError&#x5F02;&#x5E38;&#xFF0C;&#x6240;&#x4EE5;&#x53EA;&#x80FD;&#x901A;&#x8FC7;&#x53CD;&#x5C04;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x6784;&#x9020;&#x4E00;&#x4E2A;InetAddress&#x6570;&#x7EC4;&#x5BF9;&#x8C61;&#x8FD4;&#x56DE;&#x3002;</p><p>&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x7684;&#x4F18;&#x70B9;&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x53EF;&#x4EE5;&#x62E6;&#x622A;Java&#x5C42;&#x7684;&#x6240;&#x6709;dns&#x89E3;&#x6790;&#xFF0C;<strong>&#x5E76;&#x4E14;&#x8FDE;WebView&#x4E2D;&#x7684;dns&#x89E3;&#x6790;&#x4E5F;&#x80FD;&#x62E6;&#x622A;&#x5230;&#xFF0C;&#x4E3A;WebView&#x4E2D;&#x4F7F;&#x7528;HttpDns&#x63D0;&#x4F9B;&#x4E86;&#x53EF;&#x80FD;</strong>&#x3002;<br>&#x7F3A;&#x70B9;&#x4E5F;&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x9700;&#x8981;&#x53CD;&#x5C04;&#xFF0C;&#x5728;&#x4E0D;&#x540C;&#x7CFB;&#x7EDF;&#x7248;&#x672C;&#x4E0A;&#x53EF;&#x80FD;&#x5B58;&#x5728;&#x517C;&#x5BB9;&#x6027;&#x95EE;&#x9898;&#xFF0C;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x9002;&#x914D;&#x3002;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x5E76;&#x6CA1;&#x6709;&#x8FDB;&#x884C;&#x8FC7;&#x517C;&#x5BB9;&#x6027;&#x6D4B;&#x8BD5;&#xFF0C;&#x5982;&#x679C;&#x9700;&#x8981;&#x4F7F;&#x7528;&#xFF0C;&#x81EA;&#x884C;&#x6D4B;&#x8BD5;&#x3002;</p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>DNS</tag>
      </tags>
  </entry>
  <entry>
    <title>当 OkHttp 遇上 Http 2.0</title>
    <url>/2018/04/16/%E5%BD%93OkHttp%E9%81%87%E4%B8%8AHttp-2-0/</url>
    <content><![CDATA[<p>&#x6700;&#x8FD1;&#x9047;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x5947;&#x8469;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6709;&#x4E2A;&#x522B;&#x7528;&#x6237;&#x53CD;&#x9988;App&#x4E0A;&#x7684;&#x83CA;&#x82B1;&#x4E00;&#x76F4;&#x5728;&#x8F6C;&#x6D88;&#x5931;&#x4E0D;&#x6389;&#xFF0C;&#x5F53;&#x65F6;&#x4EA7;&#x751F;&#x4E86;&#x51E0;&#x4E2A;&#x731C;&#x60F3;&#xFF1A;</p><p>1&#x3001;dns&#x89E3;&#x6790;&#x51FA;&#x95EE;&#x9898;&#x4E86;<br>2&#x3001;&#x670D;&#x52A1;&#x7AEF;&#x6709;&#x95EE;&#x9898;<br>3&#x3001;&#x54EA;&#x91CC;&#x8D85;&#x65F6;&#x4E86;<br>4&#x3001;&#x54EA;&#x91CC;&#x6B7B;&#x5FAA;&#x73AF;&#x4E86;</p><p>&#x4E00;&#x5F00;&#x59CB;&#x4EE5;&#x4E3A;&#x662F;&#x5076;&#x7136;&#xFF0C;&#x7ED3;&#x679C;&#x77ED;&#x77ED;&#x4E00;&#x5929;&#x5185;&#xFF0C;&#x6709;&#x597D;&#x51E0;&#x4E2A;&#x7528;&#x6237;&#x53CD;&#x9988;&#x6709;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x7EDD;&#x5BF9;&#x4E0D;&#x662F;&#x5076;&#x7136;&#xFF0C;&#x4E00;&#x5B9A;&#x662F;&#x6709;&#x4E00;&#x4E2A;&#x6761;&#x4EF6;&#x89E6;&#x53D1;&#x4E86;&#x8FD9;&#x4E2A;bug&#x3002;</p><a id="more"></a><p>&#x7531;&#x4E8E;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x8C03;&#x5EA6;&#x4E86;dns&#xFF0C;&#x6240;&#x4EE5;&#x4E00;&#x5F00;&#x59CB;&#x6211;&#x4EEC;&#x4EE5;&#x4E3A;&#x662F;httpdns&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x662F;&#x901A;&#x8FC7;&#x7B80;&#x5355;&#x7684;&#x65E5;&#x5FD7;&#x5206;&#x6790;&#xFF0C;&#x53D1;&#x73B0;&#x5176;&#x5B9E;&#x5E76;&#x4E0D;&#x662F;httpdns&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x56E0;&#x4E3A;httpdns&#x8FD4;&#x56DE;&#x7684;&#x89E3;&#x6790;&#x7ED3;&#x679C;&#x548C;localdns&#x7684;&#x7ED3;&#x679C;&#x662F;&#x5B8C;&#x5168;&#x4E00;&#x81F4;&#x7684;&#x3002;&#x6240;&#x4EE5;&#x57FA;&#x672C;&#x6392;&#x9664;&#x4E86;dns&#x89E3;&#x6790;&#x51FA;&#x95EE;&#x9898;&#x4E86;&#x8FD9;&#x4E2A;&#x53EF;&#x80FD;&#x3002;</p><p>&#x7136;&#x540E;&#x5F00;&#x59CB;&#x6000;&#x7591;&#x670D;&#x52A1;&#x7AEF;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x662F;&#x901A;&#x8FC7;&#x53D1;&#x5E03;&#x7CFB;&#x7EDF;&#x67E5;&#x770B;&#x53D1;&#x5E03;&#x8BB0;&#x5F55;&#xFF0C;&#x8FD9;&#x51E0;&#x5929;&#x5E76;&#x6CA1;&#x6709;&#x53D1;&#x8FC7;&#xFF0C;&#x552F;&#x4E00;&#x7684;&#x4E00;&#x4E2A;&#x6539;&#x53D8;&#x5C31;&#x662F;&#x8FD0;&#x7EF4;&#x5207;&#x6362;&#x4E86;&#x516C;&#x7F51;&#x51FA;&#x53E3;IP&#xFF0C;&#x4F46;&#x662F;&#x901A;&#x8FC7;httpdns&#x65E5;&#x5FD7;&#x5DF2;&#x7ECF;&#x6392;&#x9664;&#x4E86;dns&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x56E0;&#x6B64;&#x4E5F;&#x4E0D;&#x662F;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;</p><p>&#x5728;&#x6BEB;&#x65E0;&#x5934;&#x7EEA;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x6253;&#x4E86;&#x4E00;&#x4E2A;&#x65E5;&#x5FD7;&#x5145;&#x8DB3;&#x7684;&#x5305;&#xFF0C;&#x8BA9;&#x6709;&#x95EE;&#x9898;&#x7684;&#x7528;&#x6237;&#x5B89;&#x88C5;&#xFF0C;&#x7ED3;&#x679C;&#x5F88;&#x8BA9;&#x4EBA;&#x610F;&#x5916;&#xFF0C;&#x7ADF;&#x7136;&#x662F;&#x7F51;&#x7EDC;&#x5E93;&#x4E2D;&#x7684;&#x56DE;&#x8C03;&#x6CA1;&#x6709;&#x56DE;&#x6765;&#x3002;&#x4E8E;&#x662F;&#x53BB;&#x67E5;&#x770B;&#x7F51;&#x7EDC;&#x5E93;&#x7684;&#x9519;&#x8BEF;&#x57CB;&#x70B9;&#x65E5;&#x5FD7;&#xFF0C;&#x7ED3;&#x679C;&#x66F4;&#x8BA9;&#x4EBA;&#x610F;&#x5916;&#xFF0C;<strong>&#x8BE5;APP&#x4E00;&#x5929;&#x5185;&#x6709;150w&#x7684;timeout</strong>&#xFF0C;&#x7A76;&#x7ADF;&#x662F;&#x4EC0;&#x4E48;&#x5BFC;&#x81F4;&#x4E86;&#x8FD9;&#x4E48;&#x5927;&#x91CF;&#x7684;timeout&#x5462;&#xFF1F;&#x6240;&#x4EE5;&#x4E00;&#x5F00;&#x59CB;&#x76F4;&#x63A5;&#x628A;&#x9505;&#x4E22;&#x7ED9;&#x4E86;timeout&#xFF0C;&#x53EF;&#x662F;&#x540E;&#x6765;&#x4E00;&#x60F3;&#x6709;&#x70B9;&#x4E0D;&#x5BF9;&#x52B2;&#xFF0C;&#x54EA;&#x91CC;&#x4E0D;&#x5BF9;&#x52B2;&#x5462;&#xFF1F;</p><p>1&#x3001;&#x6211;&#x4EEC;&#x6709;&#x4E24;&#x4E2A;App&#xFF0C;&#x8BE5;App&#x4E00;&#x5929;&#x6709;150w&#x7684;timeout&#xFF0C; &#x4F46;&#x662F;&#x53E6;&#x4E00;&#x4E2A;App&#x53EA;&#x6709;1w&#x7684;timeout&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;App&#x6709;&#x4EC0;&#x4E48;&#x4E0D;&#x540C;&#x5462;&#xFF1F;&#x4E0D;&#x540C;&#x7684;&#x5730;&#x65B9;&#x53EA;&#x6709;okhttp&#x7684;&#x7248;&#x672C;&#xFF0C;150w&#x7684;timeout&#x7684;App&#x7528;&#x7684;okhttp&#x7248;&#x672C;&#x662F;3.4.1&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;1w&#x7684;timeout&#x7684;App&#x7528;&#x7684;okhttp&#x7248;&#x672C;&#x662F;3.9.1<br>2&#x3001;timeout&#x53EA;&#x4F1A;&#x8D85;&#x65F6;&#xFF0C;&#x8D85;&#x65F6;&#x65F6;&#x95F4;&#x5230;&#x4E86;&#x8FD8;&#x662F;&#x4F1A;&#x56DE;&#x8C03;&#x5230;error&#x91CC;&#xFF0C;&#x6700;&#x7EC8;&#x83CA;&#x82B1;&#x4F1A;&#x6D88;&#x5931;&#xFF0C;&#x4F46;&#x662F;&#x73B0;&#x5728;&#x7684;&#x60C5;&#x51B5;&#x662F;&#x56DE;&#x8C03;&#x6CA1;&#x6709;&#x8FDB;&#x6765;&#x3002;</p><p>&#x4E8E;&#x662F;&#x6392;&#x9664;&#x4E86;timeout&#x7684;&#x53EF;&#x80FD;&#xFF0C;<strong>&#x4F46;timeout&#x7684;&#x91CF;&#x8FC7;&#x5927;&#xFF0C;&#x8FD9;&#x7EDD;&#x5BF9;&#x4E5F;&#x662F;&#x4E2A;&#x95EE;&#x9898;</strong>&#xFF0C;&#x81F3;&#x4E8E;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD9;&#x4E48;&#x5927;&#xFF0C;&#x4EE5;&#x53CA;&#x600E;&#x4E48;&#x89E3;&#x51B3;&#xFF0C;&#x540E;&#x9762;&#x518D;&#x7EC6;&#x8BF4;&#x3002;</p><p>&#x7531;&#x4E8E;&#x7528;&#x6237;&#x9891;&#x7E41;&#x9047;&#x5230;&#x4E86;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x8003;&#x8651;&#x5230;&#x53EF;&#x80FD;&#x662F;okhttp&#x7684;bug&#xFF0C;&#x4E8E;&#x662F;&#x5C06;okhttp&#x5347;&#x5230;3.9.1&#x91CD;&#x65B0;&#x7ED9;&#x7528;&#x6237;&#x4E00;&#x4E2A;&#x65B0;&#x5305;&#xFF0C;&#x795E;&#x5947;&#x7684;&#x662F;&#x7528;&#x6237;&#x6CA1;&#x6709;&#x518D;&#x53CD;&#x9988;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4E86;&#x3002;&#x6240;&#x4EE5;&#x57FA;&#x672C;&#x65AD;&#x5B9A;&#x662F;okhttp&#x7684;bug&#x4E86;&#x3002;</p><p>&#x90A3;&#x4E48;&#x95EE;&#x9898;&#x5230;&#x5E95;&#x51FA;&#x5728;&#x54EA;&#x5462;&#xFF0C;&#x901A;&#x8FC7;&#x5BF9;okhttp&#x7684;issue&#x7684;&#x641C;&#x7D22;&#xFF0C;&#x57FA;&#x672C;&#x65AD;&#x5B9A;&#x662F;3.4.1&#x8BE5;&#x7248;&#x672C;&#x7684;bug&#xFF0C;&#x901A;&#x8FC7;&#x67E5;&#x770B;changelog&#x53D1;&#x73B0;&#x4E86;&#x732B;&#x817B;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">Version <span class="number">3.4</span><span class="number">.2</span></span><br><span class="line"><span class="number">2016</span><span class="number">-11</span><span class="number">-03</span></span><br><span class="line"></span><br><span class="line">Fix: Recover gracefully when an HTTP/<span class="number">2</span> connection <span class="keyword">is</span> shutdown.</span><br><span class="line">We had a bug where shutdown HTTP/<span class="number">2</span> connections were considered usable.</span><br><span class="line">This caused infinite loops when calls attempted to recover.</span><br><span class="line"></span><br><span class="line">Version <span class="number">3.4</span><span class="number">.1</span></span><br><span class="line"><span class="number">2016</span><span class="number">-07</span><span class="number">-10</span></span><br><span class="line"></span><br><span class="line">Fix a major bug <span class="keyword">in</span> encoding HTTP headers.</span><br><span class="line">In <span class="number">3.4</span><span class="number">.0</span> <span class="keyword">and</span> <span class="number">3.4</span><span class="number">.0</span>-RC1 OkHttp had an off-by-one bug <span class="keyword">in</span> our HPACK encoder.</span><br><span class="line">This bug could have caused the wrong headers to be emitted after a sequence of HTTP/<span class="number">2</span> requests! </span><br><span class="line">Everyone who <span class="keyword">is</span> using OkHttp <span class="number">3.4</span><span class="number">.0</span> <span class="keyword">or</span> <span class="number">3.4</span><span class="number">.0</span>-RC1 should upgrade <span class="keyword">for</span> <span class="keyword">this</span> bug fix.</span><br></pre></td></tr></table></figure><p>&#x5B98;&#x65B9;&#x53D1;&#x5E03;&#x8FC7;&#x4E00;&#x4E2A;3.4.2&#x7684;&#x7248;&#x672C;&#xFF0C;&#x4FEE;&#x590D;okhttp&#x5728;http2.0&#x4E0B;&#x4F7F;&#x7528;&#x4E86;&#x88AB;&#x5173;&#x95ED;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x5BFC;&#x81F4;&#x51FA;&#x73B0;&#x65E0;&#x9650;&#x6B7B;&#x5FAA;&#x73AF;&#x3002;</p><p>&#x5982;Changlog&#x6240;&#x8BF4;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x662F;&#x4FEE;&#x590D;http2.0&#x7684;&#xFF0C;&#x800C;&#x6211;&#x4EEC;&#x5DF2;&#x7ECF;&#x5168;&#x7AD9;https&#x4E86;&#xFF0C;&#x5E76;&#x4E14;&#x5DF2;&#x7ECF;&#x5F88;&#x4E45;&#x4E86;&#xFF0C;&#x4ECE;App&#x7684;&#x53CD;&#x9988;&#x4FE1;&#x606F;&#x4E0A;&#x6765;&#x770B;&#xFF0C;&#x5DF2;&#x7ECF;&#x6709;95+%&#x7684;&#x8BF7;&#x6C42;&#x662F;Http 2.0&#x7684;&#x4E86;&#xFF0C;&#x57FA;&#x672C;&#x7B26;&#x5408;&#x8FD9;&#x4E00;&#x6761;&#x4EF6;&#x3002;&#x6240;&#x4EE5;&#x95EE;&#x9898;&#x57FA;&#x672C;&#x5B9A;&#x4F4D;&#x5728;&#x4E86;&#x54EA;&#x91CC;&#x51FA;&#x73B0;&#x4E86;&#x6B7B;&#x5FAA;&#x73AF;&#x4E86;&#xFF0C;&#x6700;&#x7EC8;&#x5BFC;&#x81F4;&#x56DE;&#x8C03;&#x6CA1;&#x6709;&#x56DE;&#x6765;&#x3002;</p><p>&#x95EE;&#x9898;&#x627E;&#x5230;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x600E;&#x4E48;&#x590D;&#x73B0;&#x5462;&#xFF1F;&#x8FD9;&#x662F;&#x4E2A;&#x5F88;&#x5934;&#x75BC;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5728;&#x5B8C;&#x5168;&#x6293;&#x778E;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x590D;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;&#x793C;&#x62DC;&#xFF0C;&#x7ED3;&#x679C;&#x4F9D;&#x65E7;&#x6CA1;&#x6709;&#x590D;&#x73B0;&#x51FA;&#x6765;&#x3002;&#x5728;&#x4E00;&#x4E2A;&#x5076;&#x7136;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x7A81;&#x7136;&#x590D;&#x73B0;&#x51FA;&#x4E86;&#x4E00;&#x4E2A;&#x6B7B;&#x5FAA;&#x73AF;&#xFF0C;&#x4F46;&#x662F;&#x5B8C;&#x5168;&#x662F;&#x4E0D;&#x77E5;&#x9053;&#x600E;&#x4E48;&#x590D;&#x73B0;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x80AF;&#x5B9A;&#xFF0C;&#x80AF;&#x5B9A;&#x662F;&#x4F1A;&#x51FA;&#x73B0;&#x6B7B;&#x5FAA;&#x73AF;&#x7684;&#x3002;</p><p>&#x5728;&#x6BEB;&#x65E0;&#x5934;&#x7EEA;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x628A;okhttp&#x76F8;&#x5173;&#x7684;issue&#x90FD;&#x6D4F;&#x89C8;&#x4E86;&#x4E00;&#x904D;&#xFF0C;&#x7A81;&#x7136;&#x8111;&#x6D1E;&#x5927;&#x5F00;&#x3002;&#x65E2;&#x7136;&#x662F;&#x4FEE;&#x590D;&#x5DF2;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#x88AB;&#x9519;&#x8BEF;&#x4F7F;&#x7528;&#xFF0C;&#x90A3;&#x4E48;&#x53EA;&#x8981;&#x5236;&#x9020;&#x51FA;&#x4E00;&#x4E2A;&#x5DF2;&#x7ECF;&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#x7136;&#x540E;&#x5C06;&#x5176;&#x610F;&#x5916;&#x5173;&#x95ED;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x8BA9;okhttp&#x77E5;&#x9053;&#x5B83;&#x5173;&#x95ED;&#x4E86;&#x4E0D;&#x5C31;&#x597D;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x600E;&#x4E48;&#x590D;&#x73B0;&#x8FD9;&#x4E2A;&#x573A;&#x666F;&#x5462;&#xFF0C;&#x5176;&#x5B9E;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><pre><code>1. &#x4F7F;&#x7528;http2.0&#x534F;&#x8BAE;&#x8DDF;url&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x5173;&#x95ED;&#x5B83;
2. &#x65AD;&#x7F51;
3. &#x8054;&#x7F51;
4. &#x518D;&#x6B21;&#x5411;url&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x4F1A;&#x9519;&#x8BEF;&#x590D;&#x7528;&#x5DF2;&#x5173;&#x95ED;&#x8FDE;&#x63A5;
5. &#x6B7B;&#x5FAA;&#x73AF;&#x51FA;&#x73B0;
</code></pre><p>&#x4E3A;&#x4E86;&#x9A8C;&#x8BC1;&#x6211;&#x7684;&#x731C;&#x60F3;&#xFF0C;&#x7B80;&#x5355;&#x5199;&#x4E86;&#x4E00;&#x4E2A;demo&#x7528;&#x4E8E;&#x590D;&#x73B0;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x4E00;&#x6BB5;&#x795E;&#x5947;&#x7684;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x4EE3;&#x7801;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">final OkHttpClient httpClient = <span class="keyword">new</span> OkHttpClient.<span class="constructor">Builder()</span></span><br><span class="line">       .follow<span class="constructor">Redirects(<span class="params">false</span>)</span> <span class="comment">//&#x4E3A;&#x4E86;&#x5236;&#x9020;&#x975E;200&#x72B6;&#x6001;&#x7801;&#xFF0C;&#x7981;&#x6B62;302&#x8DF3;&#x8F6C;</span></span><br><span class="line">       .protocols(<span class="module-access"><span class="module"><span class="identifier">Collections</span>.</span></span>unmodifiable<span class="constructor">List(Arrays.<span class="params">asList</span>(Protocol.HTTP_1_1, Protocol.HTTP_2)</span>))<span class="comment">//&#x542F;&#x7528;http2.0&#x534F;&#x8BAE;</span></span><br><span class="line">       .add<span class="constructor">NetworkInterceptor(<span class="params">new</span> Interceptor()</span> {</span><br><span class="line">           @Override</span><br><span class="line">           public Response intercept(Chain chain) throws IOException {</span><br><span class="line">               Request request = chain.request<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">               <span class="keyword">try</span> {</span><br><span class="line">                   Connection connection = chain.connection<span class="literal">()</span>;</span><br><span class="line">                   <span class="keyword">if</span> (connection != null) {</span><br><span class="line">                       Route route = connection.route<span class="literal">()</span>;</span><br><span class="line">                       <span class="comment">//&#x4E3A;&#x4E86;&#x5224;&#x65AD;&#x6B7B;&#x5FAA;&#x73AF;&#xFF0C;&#x6253;&#x5370;&#x8DEF;&#x7531;&#x4FE1;&#x606F;</span></span><br><span class="line">                       <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>e(<span class="string">&quot;TAG&quot;</span>, <span class="string">&quot;x-route:&quot;</span> + route.socket<span class="constructor">Address()</span>.<span class="keyword">to</span><span class="constructor">String()</span> + <span class="string">&quot;&quot;</span>);</span><br><span class="line">                   }</span><br><span class="line">               } catch (Throwable e) {</span><br><span class="line">                   e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">               }</span><br><span class="line">               return chain.proceed(request);</span><br><span class="line">           }</span><br><span class="line">       })</span><br><span class="line">       .build<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">public String get<span class="constructor">Result(<span class="params">final</span> String <span class="params">url</span>)</span> {</span><br><span class="line">       Request request = <span class="keyword">new</span> Request.<span class="constructor">Builder()</span></span><br><span class="line">               .url(url)</span><br><span class="line">               .<span class="keyword">method</span>(<span class="string">&quot;GET&quot;</span>, null)</span><br><span class="line">               .build<span class="literal">()</span>;</span><br><span class="line">       ResponseBody responseBody = null;</span><br><span class="line">       String result = null;</span><br><span class="line">       <span class="keyword">try</span> {</span><br><span class="line">           Response response = httpClient.<span class="keyword">new</span><span class="constructor">Call(<span class="params">request</span>)</span>.execute<span class="literal">()</span>;</span><br><span class="line">           <span class="keyword">if</span> (response.code<span class="literal">()</span><span class="operator"> == </span><span class="number">200</span>) {</span><br><span class="line">               responseBody = response.body<span class="literal">()</span>;</span><br><span class="line">               result = responseBody.<span class="built_in">string</span><span class="literal">()</span>;</span><br><span class="line">           }</span><br><span class="line">           <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>e(<span class="string">&quot;TAG&quot;</span>, <span class="string">&quot;Successful-&gt; protocol:&quot;</span> + response.protocol<span class="literal">()</span> + <span class="string">&quot; code:&quot;</span> + response.code<span class="literal">()</span>);</span><br><span class="line">           return result;</span><br><span class="line">       } catch (Exception e) {</span><br><span class="line">           e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">           <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>e(<span class="string">&quot;TAG&quot;</span>, <span class="string">&quot;Unsuccessful-&gt; &quot;</span>, e);</span><br><span class="line">       } finally {</span><br><span class="line">           <span class="keyword">if</span> (responseBody != null) {</span><br><span class="line">               <span class="keyword">try</span> {</span><br><span class="line">                   responseBody.close<span class="literal">()</span>;</span><br><span class="line">               } catch (Exception e) {</span><br><span class="line">                   e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">               }</span><br><span class="line">           }</span><br><span class="line">       }</span><br><span class="line">       return null;</span><br><span class="line">   }</span><br></pre></td></tr></table></figure><p>&#x7B80;&#x5355;&#x770B;&#x4E0A;&#x9762;&#x7684;getResult&#x51FD;&#x6570;&#xFF0C;&#x5176;&#x529F;&#x80FD;&#x662F;&#x5411;&#x5BF9;&#x5E94;url&#x53D1;&#x9001;&#x4E00;&#x4E2A;get&#x8BF7;&#x6C42;&#xFF0C;&#x5E76;&#x4E14;&#x7981;&#x6B62;&#x4E86;302&#x8DF3;&#x8F6C;&#xFF0C;&#x542F;&#x7528;&#x4E86;Http2.0&#x534F;&#x8BAE;&#xFF0C;&#x5728;&#x62E6;&#x622A;&#x5668;&#x4E2D;&#x6253;&#x5370;&#x4E86;&#x8DEF;&#x7531;&#x4FE1;&#x606F;&#xFF0C;&#x5728;&#x72B6;&#x6001;&#x7801;&#x4E3A;200&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD4;&#x56DE;&#x4E86;&#x7ED3;&#x679C;&#xFF0C;&#x5B8C;&#x5168;&#x6CA1;&#x6709;&#x6BDB;&#x75C5;&#x3002;<strong>&#x5176;&#x5B9E;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5B58;&#x5728;&#x4E86;&#x4E00;&#x4E2A;&#x81F4;&#x547D;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x521A;&#x597D;&#x89E6;&#x53D1;&#x4E86;okhttp&#x7684;&#x8FD9;&#x4E2A;bug&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x5728;http code!=200&#x7684;&#x65F6;&#x5019;&#xFF0C;responseBody&#x6CA1;&#x6709;&#x5173;&#x95ED;</strong>&#x3002;</p><p>&#x8BA9;&#x6211;&#x4EEC;&#x4E00;&#x8D77;&#x6765;&#x590D;&#x73B0;&#x4E00;&#x4E0B;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;</p><p>1&#x3001; &#x9996;&#x5148;&#x5F00;&#x542F;&#x7F51;&#x7EDC;<br>2&#x3001; &#x53D1;&#x9001;&#x4E00;&#x4E2A;http code&#x8FD4;&#x56DE;&#x975E;200&#x7684;&#x8BF7;&#x6C42;&#xFF0C;&#x5BFC;&#x81F4;&#x6D41;&#x6CA1;&#x6709;&#x88AB;&#x5173;&#x95ED;</p><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() {</span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="built_in">run</span>() {</span><br><span class="line">        <span class="comment">//&#x4F1A;&#x51FA;&#x73B0;http code 302&#xFF0C;&#x5BFC;&#x81F4;&#x8FDE;&#x63A5;&#x672A;&#x5173;&#x95ED;</span></span><br><span class="line">        <span class="built_in">getResult</span>(<span class="string">&quot;https://h5.weidian.com/&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">}).start();</span><br></pre></td></tr></table></figure><p>3&#x3001; &#x5173;&#x95ED;&#x7F51;&#x7EDC;&#xFF0C;&#x5982;&#x8FDB;&#x5165;&#x98DE;&#x884C;&#x6A21;&#x5F0F;<br>4&#x3001; &#x5F00;&#x542F;&#x7F51;&#x7EDC;&#xFF0C;&#x5982;&#x9000;&#x51FA;&#x98DE;&#x884C;&#x6A21;&#x5F0F;<br>5&#x3001; &#x53D1;&#x9001;&#x4E00;&#x4E2A;http code &#x8FD4;&#x56DE;200&#x7684;&#x8BF7;&#x6C42;</p><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() {</span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="built_in">run</span>() {</span><br><span class="line">        <span class="comment">//&#x4F1A;&#x51FA;&#x73B0;http code 200</span></span><br><span class="line">        <span class="built_in">getResult</span>(<span class="string">&quot;https://h5.weidian.com/m/weidian-buyer/error/index.html&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">}).start();</span><br></pre></td></tr></table></figure><p>6&#x3001; &#x5F00;&#x59CB;&#x4E0A;&#x6F14;&#x6B7B;&#x5FAA;&#x73AF;&#x60B2;&#x5267;&#xFF0C;&#x5982;&#x56FE;&#x6240;&#x793A;<br><img src="/2018/04/16/%E5%BD%93OkHttp%E9%81%87%E4%B8%8AHttp-2-0/loop.png" alt="loop.png"></p><p>&#x5F88;&#x5B8C;&#x7F8E;&#x7684;&#x590D;&#x73B0;&#x51FA;&#x4E86;&#x8FD9;&#x4E2A;&#x6B7B;&#x5FAA;&#x73AF;&#x95EE;&#x9898;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x4F1A;&#x4EA7;&#x751F;&#x6B7B;&#x5FAA;&#x73AF;&#x5462;&#xFF1F;&#x901A;&#x8FC7;&#x67E5;&#x770B;okhttp&#x7684;&#x4EE3;&#x7801;&#x53D1;&#x73B0;&#xFF0C;okhttp&#x4EE3;&#x7801;&#x6709;&#x592A;&#x591A;&#x7684;while(true)&#x4E86;&#xFF0C;&#x4E00;&#x4E0D;&#x5C0F;&#x5FC3;&#x5C31;break&#x4E0D;&#x4E86;&#x9677;&#x5165;&#x6B7B;&#x5FAA;&#x73AF;&#x3002;&#x6BD4;&#x5982;&#x5728;&#x62E6;&#x622A;&#x5668;&#x91CC;&#x968F;&#x4FBF;&#x629B;&#x4E00;&#x4E2A;IOException&#xFF0C;&#x968F;&#x968F;&#x4FBF;&#x4FBF;&#x6B7B;&#x5FAA;&#x73AF;&#xFF0C;3.3.0&#x4E4B;&#x540E;&#x7684;&#x7248;&#x672C;&#x5168;&#x90E8;&#x4E2D;&#x62DB;&#xFF0C;&#x5305;&#x62EC;&#x6700;&#x65B0;&#x7248;3.10.0&#x3002;</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">//</span>&#x4EC5;&#x4F9B;&#x6F14;&#x793A;&#xFF0C;&#x8BF7;&#x52FF;&#x6A21;&#x4EFF;</span><br><span class="line"><span class="regexp">//</span>.addNetworkInterceptor(new Interceptor() {</span><br><span class="line"><span class="regexp">//</span>    @Override</span><br><span class="line"><span class="regexp">//</span>    public Response intercept(Chain chain) throws IOException {</span><br><span class="line"><span class="regexp">//</span>        throw new IOException(<span class="string">&quot;mock io exception&quot;</span>);</span><br><span class="line"><span class="regexp">//</span>    }</span><br><span class="line"><span class="regexp">//</span>})</span><br></pre></td></tr></table></figure><p>&#x5728;RetryAndFollowUpInterceptor&#x4E2D;&#x6709;&#x8FD9;&#x4E48;&#x4E00;&#x6BB5;&#x4EE3;&#x7801;</p><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">RetryAndFollowUpInterceptor</span> <span class="keyword">implements</span> <span class="title">Interceptor</span> </span>{</span><br><span class="line"> </span><br><span class="line">  <span class="meta">@Override</span> <span class="keyword">public</span> <span class="function">Response <span class="title">intercept</span><span class="params">(Chain chain)</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">    <span class="comment">//....&#x7701;&#x7565;n&#x884C;&#x4EE3;&#x7801;</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) {</span><br><span class="line">      </span><br><span class="line">      <span class="comment">//....&#x7701;&#x7565;n&#x884C;&#x4EE3;&#x7801;</span></span><br><span class="line">      Response response = <span class="keyword">null</span>;</span><br><span class="line">      <span class="keyword">boolean</span> releaseConnection = <span class="keyword">true</span>;</span><br><span class="line">      <span class="keyword">try</span> {</span><br><span class="line">      	<span class="comment">//&#x590D;&#x7528;&#x5DF2;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#xFF0C;&#x51FA;&#x73B0;IOException(&quot;shutdown&quot;)</span></span><br><span class="line">        response = ((RealInterceptorChain) chain).<span class="keyword">proceed</span>(request, streamAllocation, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">        releaseConnection = <span class="keyword">false</span>;</span><br><span class="line">      } <span class="keyword">catch</span> (RouteException e) {</span><br><span class="line">        <span class="comment">// The attempt to connect via a route failed. The request will not have been sent.</span></span><br><span class="line">        <span class="keyword">if</span> (!recover(e.getLastConnectException(), <span class="keyword">true</span>, request)) <span class="keyword">throw</span> e.getLastConnectException();</span><br><span class="line">        releaseConnection = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">      	<span class="comment">//&#x5F02;&#x5E38;&#x88AB;&#x6355;&#x83B7;&#xFF0C;&#x5C1D;&#x8BD5;&#x6062;&#x590D;</span></span><br><span class="line">        <span class="comment">// An attempt to communicate with a server failed. The request may have been sent.</span></span><br><span class="line">        <span class="keyword">if</span> (!recover(e, <span class="keyword">false</span>, request)) <span class="keyword">throw</span> e;</span><br><span class="line">        <span class="comment">//&#x5982;&#x679C;&#x4E0D;&#x80FD;&#x6062;&#x590D;&#xFF0C;&#x629B;&#x5F02;&#x5E38;&#xFF0C;&#x5982;&#x679C;&#x80FD;&#x6062;&#x590D;&#xFF0C;&#x8FDB;&#x884C;&#x91CD;&#x8BD5;</span></span><br><span class="line">        <span class="comment">//&#x5F88;&#x4E0D;&#x5E78;&#x8BE5;&#x573A;&#x666F;&#x4E0B;&#xFF0C;&#x8FD9;&#x91CC;&#x4E00;&#x76F4;&#x8FD4;&#x56DE;&#x4E86;true</span></span><br><span class="line">        releaseConnection = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      } <span class="keyword">finally</span> {</span><br><span class="line">        <span class="comment">// We&apos;re throwing an unchecked exception. Release any resources.</span></span><br><span class="line">        <span class="keyword">if</span> (releaseConnection) {</span><br><span class="line">          streamAllocation.streamFailed(<span class="keyword">null</span>);</span><br><span class="line">          streamAllocation.release();</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="comment">//&#x7701;&#x7565;n&#x884C;&#x4EE3;&#x7801;</span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">boolean</span> <span class="title">recover</span><span class="params">(IOException e, <span class="keyword">boolean</span> routeException, Request userRequest)</span> </span>{</span><br><span class="line">    streamAllocation.streamFailed(e);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// The application layer has forbidden retries.</span></span><br><span class="line">    <span class="keyword">if</span> (!client.retryOnConnectionFailure()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// We can&apos;t send the request body again.</span></span><br><span class="line">    <span class="keyword">if</span> (!routeException &amp;&amp; userRequest.body() <span class="keyword">instanceof</span> UnrepeatableRequestBody) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This exception is fatal.</span></span><br><span class="line">    <span class="keyword">if</span> (!isRecoverable(e, routeException)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// No more routes to attempt.</span></span><br><span class="line">    <span class="keyword">if</span> (!streamAllocation.hasMoreRoutes()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// For failure recovery, use the same route selector with a new connection.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="function"><span class="keyword">boolean</span> <span class="title">isRecoverable</span><span class="params">(IOException e, <span class="keyword">boolean</span> routeException)</span> </span>{</span><br><span class="line">    <span class="comment">// If there was a protocol problem, don&apos;t recover.</span></span><br><span class="line">    <span class="keyword">if</span> (e <span class="keyword">instanceof</span> ProtocolException) {</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If there was an interruption don&apos;t recover, but if there was a timeout connecting to a route</span></span><br><span class="line">    <span class="comment">// we should try the next route (if there is one).</span></span><br><span class="line">    <span class="keyword">if</span> (e <span class="keyword">instanceof</span> InterruptedIOException) {</span><br><span class="line">      <span class="keyword">return</span> e <span class="keyword">instanceof</span> SocketTimeoutException &amp;&amp; routeException;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Look for known client-side or negotiation errors that are unlikely to be fixed by trying</span></span><br><span class="line">    <span class="comment">// again with a different route.</span></span><br><span class="line">    <span class="keyword">if</span> (e <span class="keyword">instanceof</span> SSLHandshakeException) {</span><br><span class="line">      <span class="comment">// If the problem was a CertificateException from the X509TrustManager,</span></span><br><span class="line">      <span class="comment">// do not retry.</span></span><br><span class="line">      <span class="keyword">if</span> (e.getCause() <span class="keyword">instanceof</span> CertificateException) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (e <span class="keyword">instanceof</span> SSLPeerUnverifiedException) {</span><br><span class="line">      <span class="comment">// e.g. a certificate pinning error.</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// An example of one we might want to retry with a different route is a problem connecting to a</span></span><br><span class="line">    <span class="comment">// proxy and would manifest as a standard IOException. Unless it is one we know we should not</span></span><br><span class="line">    <span class="comment">// retry, we return true and try a new route.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5988;&#x7684;&#x6700;&#x5916;&#x5C42;&#x4E00;&#x4E2A;while(true)&#xFF0C;&#x5728;&#x6267;&#x884C;response = ((RealInterceptorChain) chain).proceed(request, streamAllocation, null, null);&#x65F6;&#x53D1;&#x751F;&#x4E86;IOException(&#x201C;shutdown&#x201D;)&#xFF0C;&#x88AB;&#x6355;&#x83B7;&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;recover&#x51FD;&#x6570;&#x5C1D;&#x8BD5;&#x6062;&#x590D;&#x8FDE;&#x63A5;&#xFF0C;&#x4F46;&#x662F;&#x5F88;&#x4E0D;&#x5E78;&#x7684;&#x662F;recover&#x8FD4;&#x56DE;&#x4E86;true&#xFF0C;&#x800C;&#x6B64;&#x65F6;&#x8FDE;&#x63A5;&#x5374;&#x5DF2;&#x7ECF;&#x88AB;&#x610F;&#x5916;&#x5173;&#x95ED;&#x7684;&#xFF08;&#x65AD;&#x7F51;&#x518D;&#x8054;&#x7F51;&#xFF09;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x540E;&#x7EED;&#x5C06;&#x590D;&#x7528;&#x4E00;&#x4E2A;&#x5DF2;&#x5173;&#x95ED;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x60B2;&#x5267;&#x7684;&#x5BFC;&#x81F4;&#x4E86;&#x65E0;&#x9650;&#x6B7B;&#x5FAA;&#x73AF;&#x3002;&#x4E0D;&#x770B;&#x4E0D;&#x77E5;&#x9053;&#xFF0C;&#x4E00;&#x770B;&#x5413;&#x4E00;&#x8DF3;&#xFF0C;&#x9664;&#x4E86;&#x8FD9;&#x4E00;&#x5904;while(true)&#xFF0C;okhttp&#x5176;&#x4ED6;&#x5730;&#x65B9;&#x8FD8;&#x6709;&#x5F88;&#x591A;while(true)&#xFF0C;&#x8FD9;&#x8981;&#x662F;&#x4E00;&#x4E2A;&#x4E0D;&#x5C0F;&#x5FC3;&#xFF0C;&#x5C31;&#x6389;&#x5751;&#x91CC;&#x4E86;&#x3002;</p><p>&#x95EE;&#x9898;&#x627E;&#x5230;&#x4E86;&#x5417;&#xFF1F;&#x786E;&#x5207;&#x7684;&#x8BF4;&#x662F;&#x627E;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x8FD8;&#x6709;&#x5F88;&#x591A;&#x95EE;&#x9898;&#x6CA1;&#x6709;&#x627E;&#x5230;&#xFF0C;&#x8FD9;&#x91CC;&#x53EA;&#x662F;&#x627E;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x590D;&#x73B0;&#x573A;&#x666F;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#x7528;&#x6237;&#x7684;&#x590D;&#x73B0;&#x8DEF;&#x5F84;&#x662F;&#x600E;&#x4E48;&#x6837;&#x7684;&#xFF0C;&#x4F46;&#x81F3;&#x5C11;&#x5DF2;&#x7ECF;&#x9A8C;&#x8BC1;&#x4E86;&#x731C;&#x60F3;&#x3002;</p><p>&#x90A3;&#x4E48;&#x8981;&#x600E;&#x4E48;&#x4FEE;&#x590D;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5462;&#xFF1F;&#x5176;&#x5B9E;&#x975E;&#x5E38;&#x7B80;&#x5355;&#x3002;</p><p>1&#x3001;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x53EA;&#x6709;&#x5728;Http 2.0&#x4E0B;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x56E0;&#x4E3A;Http 2.0&#x4F7F;&#x7528;&#x591A;&#x8DEF;&#x590D;&#x7528;&#xFF0C;&#x4E00;&#x4E2A;&#x57DF;&#x540D;&#x4E0D;&#x4F1A;&#x5EFA;&#x7ACB;&#x591A;&#x4E2A;connection&#xFF0C;&#x6240;&#x6709;&#x8BF7;&#x6C42;&#x8FDB;&#x884C;&#x591A;&#x8DEF;&#x590D;&#x7528;&#x4F7F;&#x7528;&#x540C;&#x4E00;&#x4E2A;connection&#xFF0C;&#x56E0;&#x6B64;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x65E0;&#x9650;&#x6B7B;&#x5FAA;&#x73AF;&#x7684;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#x7981;&#x7528;Http 2.0&#xFF0C;&#x4F46;&#x663E;&#x7136;&#x662F;&#x65E0;&#x6CD5;&#x63A5;&#x53D7;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x4E0D;&#x4E88;&#x8003;&#x8651;&#xFF0C;&#x4E0D;&#x8FC7;&#x4E5F;&#x7ED9;&#x51FA;OkHttp&#x7981;&#x7528;http 2.0&#x7684;&#x65B9;&#x5F0F;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">OkHttpClient httpClient = <span class="keyword">new</span> OkHttpClient.<span class="constructor">Builder()</span></span><br><span class="line">            .protocols(<span class="module-access"><span class="module"><span class="identifier">Collections</span>.</span></span>unmodifiable<span class="constructor">List(Arrays.<span class="params">asList</span>(Protocol.HTTP_1_1)</span>))<span class="comment">//&#x542F;&#x7528;http1.1&#xFF0C;&#x7981;&#x7528;http 2.0</span></span><br><span class="line">            .build<span class="literal">()</span>;</span><br></pre></td></tr></table></figure><p>2&#x3001;okhttp&#x5728;&#x8FDE;&#x63A5;&#x5931;&#x8D25;&#x65F6;&#x4F1A;&#x8FDB;&#x884C;&#x91CD;&#x8BD5;&#xFF0C;&#x4ECE;&#x800C;&#x5BFC;&#x81F4;&#x4E86;&#x8FD9;&#x4E2A;&#x65E0;&#x9650;&#x91CD;&#x8BD5;&#x7684;&#x60B2;&#x5267;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x5173;&#x95ED;&#x5931;&#x8D25;&#x91CD;&#x8BD5;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4F1A;&#x964D;&#x4F4E;&#x8BF7;&#x6C42;&#x6210;&#x529F;&#x7387;&#xFF0C;&#x4E5F;&#x662F;&#x4E0D;&#x80FD;&#x63A5;&#x53D7;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x4E5F;&#x4E0D;&#x4E88;&#x8003;&#x8651;&#xFF0C;&#x4E0D;&#x8FC7;&#x4E5F;&#x7ED9;&#x51FA;&#x5BF9;&#x5E94;&#x4EE3;&#x7801;&#x3002;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">OkHttpClient httpClient = <span class="keyword">new</span> OkHttpClient.<span class="constructor">Builder()</span></span><br><span class="line">            .retry<span class="constructor">OnConnectionFailure(<span class="params">false</span>)</span></span><br><span class="line">            .build<span class="literal">()</span></span><br></pre></td></tr></table></figure><p>3&#x3001;&#x7ECF;&#x8FC7;&#x6D4B;&#x8BD5;&#xFF0C;&#x53D1;&#x73B0;&#x4EE5;&#x4E0A;&#x7684;&#x65E0;&#x9650;&#x6B7B;&#x5FAA;&#x73AF;&#x95EE;&#x9898;&#x5728;okhttp [3.3.0,3.5.0]&#x5168;&#x90E8;&#x4E2D;&#x62DB;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;3.2.0&#x7248;&#x672C;&#x6216;&#x8005;&#x4F7F;&#x7528;&#x6700;&#x65B0;&#x7684;3.10.0&#x7248;&#x672C;&#xFF0C;&#x53EF;&#x4EE5;&#x4ECE;&#x4E00;&#x5B9A;&#x7A0B;&#x5EA6;&#x4E0A;&#x675C;&#x7EDD;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x662F;&#x4E5F;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#x4E00;&#x5B9A;&#x4E0D;&#x4F1A;&#x518D;&#x51FA;&#x73B0;&#x6B7B;&#x5FAA;&#x73AF;&#xFF0C;&#x4E5F;&#x8BB8;&#x8FD8;&#x6709;&#x5176;&#x4ED6;&#x89E6;&#x53D1;&#x6761;&#x4EF6;&#x5462;&#xFF0C;&#x8C01;&#x4E5F;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#x3002;&#x6240;&#x4EE5;&#x5347;&#x7EA7;okhttp&#x662F;&#x5FC5;&#x8981;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x3002;</p><p>4&#x3001;&#x65E2;&#x7136;http code!=200&#x65F6;&#x6D41;&#x672A;&#x5173;&#x95ED;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FDE;&#x63A5;&#x610F;&#x5916;&#x4E2D;&#x65AD;&#x89E6;&#x53D1;&#x4E86;&#x8FD9;&#x4E2A;&#x6B7B;&#x5FAA;&#x73AF;&#xFF0C;&#x90A3;&#x4E48;&#x907F;&#x514D;&#x95EE;&#x9898;&#x51FA;&#x73B0;&#x7684;&#x7B80;&#x5355;&#x6709;&#x6548;&#x7684;&#x9014;&#x5F84;&#x5C31;&#x662F;&#x6211;&#x7BA1;&#x4F60;http code&#x4E3A;&#x591A;&#x5C11;&#xFF0C;&#x7EDF;&#x7EDF;&#x5173;&#x95ED;&#x5C31;&#x597D;&#x4E86;&#xFF0C;&#x5BF9;&#x5E94;&#x4FEE;&#x6539;&#x540E;&#x7684;getResult&#x51FD;&#x6570;&#x5982;&#x4E0B;:</p><figure class="highlight vbscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">String</span> getResult(final <span class="built_in">String</span> url) {</span><br><span class="line">       <span class="built_in">Request</span> <span class="built_in">request</span> = <span class="keyword">new</span> <span class="built_in">Request</span>.Builder()</span><br><span class="line">               .url(url)</span><br><span class="line">               .method(<span class="string">&quot;GET&quot;</span>, <span class="literal">null</span>)</span><br><span class="line">               .build();</span><br><span class="line">       <span class="built_in">Response</span> <span class="built_in">response</span> = <span class="literal">null</span>;</span><br><span class="line">       <span class="built_in">String</span> result = <span class="literal">null</span>;</span><br><span class="line">       try {</span><br><span class="line">           <span class="built_in">response</span> = httpClient.newCall(<span class="built_in">request</span>).<span class="keyword">execute</span>();</span><br><span class="line">           <span class="keyword">if</span> (<span class="built_in">response</span>.code() == <span class="number">200</span>) {</span><br><span class="line">               ResponseBody responseBody = <span class="built_in">response</span>.body();</span><br><span class="line">               result = responseBody.<span class="built_in">string</span>();</span><br><span class="line">           }</span><br><span class="line">           <span class="built_in">Log</span>.e(<span class="string">&quot;TAG&quot;</span>, <span class="string">&quot;Successful-&gt; protocol:&quot;</span> + <span class="built_in">response</span>.protocol() + <span class="string">&quot; code:&quot;</span> + <span class="built_in">response</span>.code());</span><br><span class="line">           return result;</span><br><span class="line">       } catch (Exception e) {</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">           <span class="built_in">Log</span>.e(<span class="string">&quot;TAG&quot;</span>, <span class="string">&quot;Unsuccessful-&gt; &quot;</span>, e);</span><br><span class="line">       } finally {</span><br><span class="line">           <span class="keyword">if</span> (<span class="built_in">response</span> != <span class="literal">null</span>) {</span><br><span class="line">               try {</span><br><span class="line">                   <span class="built_in">response</span>.close();</span><br><span class="line">               } catch (Exception e) {</span><br><span class="line">                   e.printStackTrace();</span><br><span class="line">               }</span><br><span class="line">           }</span><br><span class="line">       }</span><br><span class="line">       return <span class="literal">null</span>;</span><br><span class="line">   }</span><br></pre></td></tr></table></figure><p>&#x4F46;&#x662F;&#x8FD9;&#x53EA;&#x662F;&#x907F;&#x514D;&#x4E86;&#x6D41;&#x6CA1;&#x6709;&#x5173;&#x95ED;&#x89E6;&#x53D1;&#x7684;&#x6B7B;&#x5FAA;&#x73AF;&#xFF0C;&#x907F;&#x514D;&#x4E0D;&#x4E86;&#x5176;&#x4ED6;&#x6761;&#x4EF6;&#x89E6;&#x53D1;&#x7684;&#x6B7B;&#x5FAA;&#x73AF;&#xFF0C;&#x9700;&#x8981;&#x7279;&#x522B;&#x6CE8;&#x610F;&#x8FD9;&#x4E00;&#x70B9;&#x3002;</p><p>bug&#x5DEE;&#x4E0D;&#x591A;&#x4FEE;&#x5B8C;&#x4E86;&#xFF0C;&#x8FD8;&#x5269;&#x4E0B;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x5F85;&#x89E3;&#x51B3;&#xFF0C;150w&#x7684;timeout&#x662F;&#x4ECE;&#x54EA;&#x91CC;&#x6765;&#x7684;&#xFF1F;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x6211;&#x6CA1;&#x529E;&#x6CD5;&#x5728;&#x73B0;&#x6709;&#x624B;&#x5934;&#x4E0A;&#x7684;&#x771F;&#x673A;&#x590D;&#x73B0;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x5728;genymotion&#x6A21;&#x62DF;&#x5668;&#x4E0A;&#x590D;&#x73B0;&#x4E86;&#x51FA;&#x6765;&#xFF0C;&#x6240;&#x6709;&#x6211;&#x731C;&#x60F3;&#x5FC5;&#x7136;&#x8FD8;&#x4F1A;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x673A;&#x578B;&#x590D;&#x73B0;&#x51FA;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x53EA;&#x662F;&#x76EE;&#x524D;&#x624B;&#x5934;&#x4E0A;&#x7684;&#x673A;&#x578B;&#x6CA1;&#x6709;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x800C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x524D;&#x63D0;&#x6761;&#x4EF6;&#x4E5F;&#x5FC5;&#x987B;&#x662F;Http 2.0&#xFF0C;&#x590D;&#x73B0;&#x65B9;&#x5F0F;&#x4E5F;&#x662F;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF1A;</p><p>1&#x3001;&#x8054;&#x7F51;<br>2&#x3001;&#x53D1;&#x9001;&#x4E00;&#x4E2A;Http2.0&#x8BF7;&#x6C42;&#x5EFA;&#x7ACB;&#x8FDE;&#x63A5;&#xFF0C;&#x4F7F;&#x7528;&#x5B8C;&#x540E;&#x5173;&#x95ED;&#x8FDE;&#x63A5;&#xFF08;Http 2.0&#x4E0B;&#x4F1A;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x5E27;&#xFF09;<br>3&#x3001;&#x65AD;&#x7F51;<br>4&#x3001;&#x8054;&#x7F51;<br>5&#x3001;&#x53D1;&#x9001;Http2.0&#x8BF7;&#x6C42;&#xFF0C;&#x8D85;&#x65F6;&#x65F6;&#x95F4;&#x5230;&#x4E86;&#x540E;&#xFF0C;&#x4F1A;&#x89E6;&#x53D1;timeout<br>6&#x3001;&#x4E4B;&#x540E;&#x53D1;&#x9001;n&#x4E2A;&#x8BF7;&#x6C42;&#xFF0C;&#x90FD;&#x4E0D;&#x4F1A;&#x6210;&#x529F;&#xFF0C;&#x76F4;&#x5230;&#x8FDE;&#x63A5;&#x590D;&#x7528;&#x6C60;&#x4E2D;&#x5DF2;&#x5173;&#x95ED;&#x7684;&#x8FDE;&#x63A5;&#x88AB;&#x6E05;&#x7406;&#x6389;&#xFF08;&#x9ED8;&#x8BA4;5&#x5206;&#x949F;&#xFF0C;5&#x5206;&#x949F;&#x540E;&#x624D;&#x4F1A;&#x6709;&#x6210;&#x529F;&#x7684;&#x8BF7;&#x6C42;&#x4EA7;&#x751F;&#xFF09;</p><p>&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x4E5F;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF1A;</p><p>1&#x3001;&#x5347;&#x7EA7;okhttp&#x5230;&#x6700;&#x65B0;3.10.0&#x7684;&#x7248;&#x672C;&#xFF0C;&#x9AD8;&#x7248;&#x672C;&#x5BF9;&#x590D;&#x7528;&#x6C60;&#x4E2D;&#x7684;&#x8FDE;&#x63A5;&#x505A;&#x4E86;&#x4E25;&#x683C;&#x7684;ping pong&#x7684;&#x9A8C;&#x8BC1;&#xFF0C;&#x4E00;&#x5B9A;&#x7A0B;&#x5EA6;&#x4E0A;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x88AB;&#x4F7F;&#x7528;&#x7684;&#x8FDE;&#x63A5;&#x662F;&#x6CA1;&#x6709;&#x88AB;&#x5173;&#x95ED;&#x7684;&#xFF0C;&#x5373;&#x4F7F;&#x88AB;&#x5173;&#x95ED;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x91CD;&#x8BD5;&#x91CD;&#x65B0;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8FDE;&#x63A5;&#x3002;</p><p>2&#x3001;&#x6355;&#x6349;SocketTimeoutException&#x5F02;&#x5E38;&#xFF0C;&#x6E05;&#x7406;&#x8FDE;&#x63A5;&#x6C60;&#x4E2D;&#x65E0;&#x7528;&#x8FDE;&#x63A5;&#xFF0C;&#x8FD9;&#x4E2A;&#x4EE3;&#x7801;&#x4E2D;&#x7A0D;&#x5FAE;&#x5904;&#x7406;&#x4E00;&#x4E0B;&#x5C31;&#x597D;&#x4E86;&#xFF0C;&#x5BF9;&#x5E94;&#x7684;&#x4EE3;&#x7801;&#x5982;&#x4E0B;:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">okhttp3.Response response = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">    response = call.execute();</span><br><span class="line">    <span class="comment">//read response content</span></span><br><span class="line">} <span class="keyword">catch</span> (SocketTimeoutException e) {</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        okhttpclient.connectionPool().evictAll();</span><br><span class="line">    } <span class="keyword">catch</span> (<span class="keyword">Exception</span> e1) {</span><br><span class="line">        e1.printStackTrace();</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">throw</span> e;</span><br><span class="line">} <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">    <span class="keyword">throw</span> e;</span><br><span class="line">} <span class="keyword">finally</span> {</span><br><span class="line">    <span class="keyword">if</span>(response != <span class="keyword">null</span>){</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            response.close();</span><br><span class="line">        } <span class="keyword">catch</span> (<span class="keyword">Exception</span> e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x9664;&#x4E86;&#x8FD9;&#x4E2A;timeout&#x5F02;&#x5E38;&#x4E4B;&#x5916;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x5F02;&#x5E38;&#x4E5F;&#x7279;&#x522B;&#x591A;&#xFF0C;&#x5C31;&#x662F;UnknownHostException&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;timeout&#x7684;&#x590D;&#x73B0;&#x6B65;&#x9AA4;&#x590D;&#x73B0;&#x51FA;&#x6765;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x4E2A;&#x5F02;&#x5E38;&#x53D1;&#x751F;&#x65F6;&#xFF0C;&#x4E5F;&#x6700;&#x597D;&#x6E05;&#x7406;&#x4E00;&#x4E0B;&#x8FDE;&#x63A5;&#x6C60;&#x4E2D;&#x7684;&#x65E0;&#x7528;&#x8FDE;&#x63A5;&#x3002;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">java.net.UnknownHostException: Unable <span class="keyword">to</span> resolve host <span class="string">&quot;your.domain.com&quot;</span>: <span class="literal">No</span><span class="built_in"> address </span>associated with hostname</span><br></pre></td></tr></table></figure><p>&#x4F18;&#x5316;&#x540E;&#x7684;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">okhttp3.Response response = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> {</span><br><span class="line">    response = call.execute();</span><br><span class="line">    <span class="comment">//read response content</span></span><br><span class="line">} <span class="keyword">catch</span> (SocketTimeoutException e) {</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        okhttpclient.connectionPool().evictAll();</span><br><span class="line">    } <span class="keyword">catch</span> (<span class="keyword">Exception</span> e1) {</span><br><span class="line">        e1.printStackTrace();</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">throw</span> e;</span><br><span class="line">} <span class="keyword">catch</span> (UnknownHostException e) {</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        okhttpclient.connectionPool().evictAll();</span><br><span class="line">    } <span class="keyword">catch</span> (<span class="keyword">Exception</span> e1) {</span><br><span class="line">        e1.printStackTrace();</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">throw</span> e;</span><br><span class="line">} <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">    <span class="keyword">throw</span> e;</span><br><span class="line">} <span class="keyword">finally</span> {</span><br><span class="line">    <span class="keyword">if</span>(response != <span class="keyword">null</span>){</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            response.close();</span><br><span class="line">        } <span class="keyword">catch</span> (<span class="keyword">Exception</span> e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6392;&#x67E5;&#x4E86;&#x4E00;&#x4E2A;&#x793C;&#x62DC;&#xFF0C;&#x6700;&#x7EC8;&#x603B;&#x7B97;&#x628A;&#x95EE;&#x9898;&#x7ED9;&#x89E3;&#x51B3;&#x4E86;&#xFF0C;&#x4E5F;&#x7B97;&#x662F;&#x4E00;&#x8EAB;&#x8F7B;&#x677E;&#x4E86;&#x3002;</p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Http/2.0</tag>
        <tag>OkHttp</tag>
        <tag>timeout</tag>
        <tag>endless</tag>
      </tags>
  </entry>
  <entry>
    <title>Application ProvidedAar 完结篇</title>
    <url>/2018/03/31/Application-ProvidedAar%E5%AE%8C%E7%BB%93%E7%AF%87/</url>
    <content><![CDATA[<p>&#x4E4B;&#x524D;&#x5199;&#x8FC7;&#x4E24;&#x7BC7;providedAar&#x7CFB;&#x5217;&#x7684;&#x6587;&#x7AE0;&#xFF0C;&#x89C1;&#xFF1A;</p><ul><li><a href="/2017/12/24/Android-application&#x4E2D;&#x4F7F;&#x7528;provided-aar&#x5E76;&#x6CA1;&#x6709;&#x90A3;&#x4E48;&#x7B80;&#x5355;/">Android application&#x4E2D;&#x4F7F;&#x7528;provided aar&#x5E76;&#x6CA1;&#x6709;&#x90A3;&#x4E48;&#x7B80;&#x5355;</a></li><li><a href="/2018/03/19/&#x518D;&#x8C08;Application-ProvidedAar/">&#x518D;&#x8C08;Application ProvidedAar</a></li></ul><p>&#x57FA;&#x672C;&#x4E0A;&#x5DF2;&#x7ECF;&#x5B8C;&#x7F8E;&#x7684;&#x5B9E;&#x73B0;&#x4E86;Android Gradle Plugin [1.3.0,3.2.0+)&#x7248;&#x672C;com.android.application&#x4E2D;&#x4F7F;&#x7528;provided aar&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x652F;&#x6301;&#x4EE3;&#x7801;&#x548C;&#x8D44;&#x6E90;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x540C;&#x65F6;&#x4E0D;&#x5C06;&#x4EE3;&#x7801;&#x548C;&#x8D44;&#x6E90;&#x7F16;&#x8BD1;&#x8FDB;&#x53BB;&#xFF0C;&#x4F46;&#x662F;&#x8FD8;&#x9057;&#x7559;&#x4E86;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x5934;&#x75BC;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x90A3;&#x5C31;&#x662F;configurate&#x9636;&#x6BB5;&#x548C;&#x6784;&#x5EFA;&#x9636;&#x6BB5;&#x4F1A;&#x88AB;&#x8B66;&#x544A;&#x65E5;&#x5FD7;&#x5237;&#x5C4F;&#x3002;</p><a id="more"></a><p>&#x5177;&#x4F53;&#x73B0;&#x8C61;&#x5982;&#x4E0B;&#xFF1A;</p><p><img src="/2018/03/31/Application-ProvidedAar%E5%AE%8C%E7%BB%93%E7%AF%87/warn.png" alt="warn"></p><p>&#x4F9D;&#x8D56;&#x5C11;&#x7684;&#x65F6;&#x5019;&#x8FD8;&#x597D;&#xFF0C;&#x4F46;&#x662F;&#x4F9D;&#x8D56;&#x4E00;&#x591A;&#x6216;&#x8005;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#x4E00;&#x591A;&#xFF0C;&#x6574;&#x4E2A;&#x63A7;&#x5236;&#x53F0;&#x5C31;&#x88AB;&#x8FD9;&#x79CD;&#x65E5;&#x5FD7;&#x5237;&#x5C4F;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x5FC5;&#x987B;&#x89E3;&#x51B3;&#x4E00;&#x4E0B;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;&#x5177;&#x4F53;&#x89E3;&#x51B3;&#x601D;&#x8DEF;&#x5C31;&#x662F;&#x628A;&#x8FD9;&#x79CD;&#x65E5;&#x5FD7;&#x7684;&#x7EA7;&#x522B;&#x8C03;&#x6574;&#x4E3A;info&#x7EA7;&#x522B;&#xFF0C;&#x7531;&#x4E8E;&#x6B63;&#x5E38;&#x6784;&#x5EFA;&#x4E0D;&#x4F1A;&#x8F93;&#x51FA;info&#x7EA7;&#x522B;&#x7684;&#x65E5;&#x5FD7;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x79CD;&#x65E5;&#x5FD7;&#x5C31;&#x4E0D;&#x4F1A;&#x5237;&#x5C4F;&#x4E86;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x53EA;&#x6709;&#x5728;Android Gradle Plugin 2.3.3&#x53CA;&#x4EE5;&#x4E0B;&#x4F1A;&#x5B58;&#x5728;&#xFF0C;3.0.0&#x53CA;&#x4EE5;&#x4E0A;&#x4E0D;&#x5B58;&#x5728;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EA;&#x8981;&#x89E3;&#x51B3;2.3.3&#x53CA;&#x4EE5;&#x4E0B;&#x7248;&#x672C;&#x5373;&#x53EF;&#x3002;</p><p>&#x4E00;&#x5F00;&#x59CB;&#x7684;&#x89E3;&#x51B3;&#x601D;&#x8DEF;&#x662F;&#x5229;&#x7528;groovy&#x7684;MOP&#xFF0C;&#x8FD0;&#x884C;&#x671F;&#x52A8;&#x6001;&#x4FEE;&#x6539;&#x51FD;&#x6570;&#x6307;&#x5411;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x7684;&#x8C03;&#x7528;&#xFF0C;&#x5177;&#x4F53;&#x7684;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">project</span>.getLogger().getMetaClass().warn = {<span class="keyword">String</span> msg -&gt;</span><br><span class="line">    <span class="keyword">if</span> (msg &#x6EE1;&#x8DB3;&#x6211;&#x4EEC;&#x62E6;&#x622A;&#x7684;&#x4FE1;&#x606F;){</span><br><span class="line">        originalLogger.info(msg)</span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">    }</span><br><span class="line">    &#x8C03;&#x7528;&#x539F;&#x6765;&#x7684;&#x903B;&#x8F91;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7ED3;&#x679C;&#x53D1;&#x73B0;&#x8BD5;&#x4E86;n&#x591A;&#x79CD;MOP&#x65B9;&#x5F0F;&#xFF0C;&#x90FD;&#x65E0;&#x6CD5;&#x5B8C;&#x6210;&#x65B9;&#x6CD5;&#x66FF;&#x6362;&#xFF0C;&#x7ED3;&#x8BBA;&#x662F;groovy&#x7684;MOP&#x65E0;&#x6CD5;&#x4FEE;&#x6539;java&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x8C03;&#x7528;&#xFF0C;&#x53EA;&#x80FD;&#x5BF9;groovy&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x8C03;&#x7528;&#x751F;&#x6548;&#xFF0C;&#x800C;Android Gradle Plugin&#x7684;&#x4EE3;&#x7801;&#x548C;gradle&#x7684;&#x76F8;&#x5173;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x662F;&#x7531;java&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x56E0;&#x6B64;MOP&#x8FD9;&#x79CD;&#x573A;&#x666F;&#x4E0B;&#x4E0D;&#x9002;&#x7528;&#x3002;</p><p>&#x4E8E;&#x662F;&#x6362;&#x4E00;&#x79CD;&#x601D;&#x8DEF;&#x3002;&#x901A;&#x8FC7;&#x67E5;&#x770B;gradle&#x7684;&#x4EE3;&#x7801;&#x53D1;&#x73B0;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x62E6;&#x622A;&#x5230;&#x5177;&#x4F53;&#x7684;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#x903B;&#x8F91;&#xFF0C;&#x76F8;&#x5173;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> void log(LogLevel logLevel, Throwable throwable, String message) {</span><br><span class="line">    Object buildOperationId = <span class="module-access"><span class="module"><span class="identifier">BuildOperationIdentifierRegistry</span>.</span></span>get<span class="constructor">CurrentOperationIdentifier()</span>;</span><br><span class="line">    LogEvent logEvent = <span class="keyword">new</span> <span class="constructor">LogEvent(<span class="params">clock</span>.<span class="params">getCurrentTime</span>()</span>, name, logLevel, message, throwable, buildOperationId);</span><br><span class="line">    OutputEventListener outputEventListener = context.get<span class="constructor">OutputEventListener()</span>;</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        outputEventListener.on<span class="constructor">Output(<span class="params">logEvent</span>)</span>;</span><br><span class="line">    } catch (Throwable e) {</span><br><span class="line">        <span class="comment">// fall back to standard out</span></span><br><span class="line">        e.print<span class="constructor">StackTrace(System.<span class="params">out</span>)</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x6700;&#x7EC8;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#x662F;&#x8C03;&#x7528;outputEventListener&#x7684;onOutput&#x51FD;&#x6570;&#xFF0C;&#x4F20;&#x9012;&#x4E00;&#x4E2A;LogEvent&#x643A;&#x5E26;&#x65E5;&#x5FD7;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x8F93;&#x51FA;&#x7684;&#xFF0C;&#x800C;outputEventListener&#x662F;&#x8FD0;&#x884C;&#x671F;&#x7531;Android Gradle Plugin&#x8BBE;&#x7F6E;&#x8FDB;&#x53BB;&#x7684;&#xFF0C;&#x5177;&#x4F53;&#x7684;&#x8BBE;&#x7F6E;&#x76F8;&#x5173;&#x65B9;&#x6CD5;&#x5728;logger&#x7684;context&#x4E2D;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOutputEventListener</span>(<span class="params">OutputEventListener outputEventListener</span>)</span> {</span><br><span class="line">    <span class="keyword">this</span>.outputEventListener.<span class="keyword">set</span>(outputEventListener);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> OutputEventListener <span class="title">getOutputEventListener</span>(<span class="params"></span>)</span> {</span><br><span class="line">    <span class="keyword">return</span> (OutputEventListener)<span class="keyword">this</span>.outputEventListener.<span class="keyword">get</span>();</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5176;&#x5B9E;&#x53EA;&#x8981;&#x8BBE;&#x7F6E;OutputEventListener&#x5BF9;&#x8C61;&#x4E3A;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x4E14;&#x5C06;&#x539F;&#x59CB;&#x7684;OutputEventListener&#x5BF9;&#x8C61;&#x4FDD;&#x5B58;&#x8D77;&#x6765;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#x903B;&#x8F91;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#xFF0C;&#x4ECE;&#x800C;&#x8FBE;&#x5230;&#x6211;&#x4EEC;&#x7684;&#x6548;&#x679C;&#x3002;&#x5927;&#x81F4;&#x7684;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">org<span class="selector-class">.gradle</span><span class="selector-class">.internal</span><span class="selector-class">.logging</span><span class="selector-class">.slf4j</span><span class="selector-class">.OutputEventListenerBackedLoggerContext</span> listenerBackedLoggerContext = project.getLogger().getMetaClass().getProperty(project.getLogger(), <span class="string">&quot;context&quot;</span>)</span><br><span class="line">org<span class="selector-class">.gradle</span><span class="selector-class">.internal</span><span class="selector-class">.logging</span><span class="selector-class">.events</span><span class="selector-class">.OutputEventListener</span> originalOutputEventListener = listenerBackedLoggerContext.getOutputEventListener()</span><br><span class="line">org<span class="selector-class">.gradle</span><span class="selector-class">.api</span><span class="selector-class">.logging</span><span class="selector-class">.LogLevel</span> originalOutputEventLevel = listenerBackedLoggerContext.getLevel()</span><br><span class="line">listenerBackedLoggerContext.setOutputEventListener(new org<span class="selector-class">.gradle</span><span class="selector-class">.internal</span><span class="selector-class">.logging</span><span class="selector-class">.events</span><span class="selector-class">.OutputEventListener</span>() {</span><br><span class="line">    @Override</span><br><span class="line">    void onOutput(org<span class="selector-class">.gradle</span><span class="selector-class">.internal</span><span class="selector-class">.logging</span><span class="selector-class">.events</span><span class="selector-class">.OutputEvent</span> outputEvent) {</span><br><span class="line">        <span class="keyword">if</span> (msg &#x6EE1;&#x8DB3;&#x6211;&#x4EEC;&#x62E6;&#x622A;&#x7684;&#x4FE1;&#x606F;){</span><br><span class="line">            &#x4FEE;&#x6539;&#x65E5;&#x5FD7;&#x7EA7;&#x522B;&#x4E3A;info&#x5E76;&#x8F93;&#x51FA;</span><br><span class="line">            return</span><br><span class="line">        }</span><br><span class="line">        &#x8C03;&#x7528;&#x539F;&#x6765;&#x7684;&#x903B;&#x8F91;</span><br><span class="line">    }</span><br><span class="line">})</span><br></pre></td></tr></table></figure><p>&#x4F46;&#x662F;&#x4E0D;&#x5E78;&#x7684;&#x662F;OutputEventListenerBackedLoggerContext&#xFF0C;OutputEventListener&#x548C;LogLevel&#x8FD9;&#x4E09;&#x4E2A;&#x7C7B;&#xFF0C;&#x5728;&#x4E0D;&#x540C;&#x7684;gradle&#x7248;&#x672C;&#x4E2D;&#x5305;&#x540D;&#x90FD;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x9664;&#x4E86;&#x5305;&#x540D;&#xFF0C;&#x5176;&#x4ED6;&#x903B;&#x8F91;&#x5B8C;&#x5168;&#x4E00;&#x6837;&#xFF0C;&#x8FD9;&#x5C31;&#x4F1A;&#x5E26;&#x6765;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5373;&#x4F7F;&#x8FDB;&#x884C;&#x4E86;&#x517C;&#x5BB9;&#xFF0C;&#x4E5F;&#x65E0;&#x6CD5;&#x7F16;&#x8BD1;&#x6210;&#x529F;&#xFF0C;&#x7F16;&#x8BD1;&#x8FC7;&#x7A0B;&#x4E2D;&#x5FC5;&#x7136;&#x4F1A;&#x62A5;&#x7C7B;&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x90A3;&#x4E48;&#x6709;&#x6CA1;&#x6709;&#x529E;&#x6CD5;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5462;&#x3002;</p><p>&#x6700;&#x7EC8;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x662F;&#x4F7F;&#x7528;def&#x5173;&#x952E;&#x5B57;&#x548C;lambda&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x8FD9;&#x6837;&#x5305;&#x540D;&#x76F8;&#x5173;&#x7684;&#x4FE1;&#x606F;&#x5C31;&#x53EF;&#x4EE5;&#x5B8C;&#x5168;&#x88AB;&#x5C4F;&#x853D;&#x4E86;&#xFF0C;&#x5177;&#x4F53;&#x7684;&#x5B9E;&#x73B0;&#x903B;&#x8F91;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight flix"><table><tr><td class="code"><pre><span class="line"><span class="comment">//redirect warning log to info log</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">listenerBackedLoggerContext</span> </span>= project.getLogger().getMetaClass().getProperty(project.getLogger(), <span class="string">&quot;context&quot;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">originalOutputEventListener</span> </span>= listenerBackedLoggerContext.getOutputEventListener()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">originalOutputEventLevel</span> </span>= listenerBackedLoggerContext.getLevel()</span><br><span class="line">listenerBackedLoggerContext.setOutputEventListener({<span class="function"><span class="keyword">def</span> <span class="title">outputEvent</span> <span class="title">-&gt;</span></span></span><br><span class="line"><span class="function">    <span class="title">def</span> <span class="title">logLevel</span> </span>= originalOutputEventLevel.name()</span><br><span class="line">    <span class="keyword">if</span> (!(<span class="string">&quot;QUIET&quot;</span>.equalsIgnoreCase(logLevel) || <span class="string">&quot;ERROR&quot;</span>.equalsIgnoreCase(logLevel))) {</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;WARN&quot;</span>.equals(outputEvent.getLogLevel().name())) {</span><br><span class="line">            String message = outputEvent.getMessage()</span><br><span class="line">            <span class="comment">//Provided dependencies can only be jars.</span></span><br><span class="line">            <span class="comment">//provided dependencies can only be jars.</span></span><br><span class="line">            <span class="keyword">if</span> (message != null &amp;&amp; (message.contains(<span class="string">&quot;Provided dependencies can only be jars.&quot;</span>) || message.contains(<span class="string">&quot;provided dependencies can only be jars. &quot;</span>))) {</span><br><span class="line">                project.logger.info(message)</span><br><span class="line">                return</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (originalOutputEventListener != null) {</span><br><span class="line">            originalOutputEventListener.onOutput(outputEvent)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">})</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x65E5;&#x5FD7;&#x903B;&#x8F91;&#x7684;&#x66FF;&#x6362;&#xFF0C;&#x5177;&#x4F53;&#x601D;&#x8DEF;&#x5C31;&#x662F;&#x83B7;&#x53D6;logger context&#x5BF9;&#x8C61;&#xFF0C;&#x62FF;&#x5230;&#x539F;&#x59CB;&#x7684;OutputEventListener&#x5BF9;&#x8C61;&#xFF0C;&#x7136;&#x540E;&#x62FF;&#x5230;&#x539F;&#x59CB;&#x7684;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#x7EA7;&#x522B;&#xFF0C;&#x5728;&#x65E5;&#x5FD7;&#x7EA7;&#x522B;&#x5927;&#x4E8E;WARN&#x65F6;&#xFF0C;&#x4E0D;&#x4F1A;&#x8F93;&#x51FA;WARN&#x7684;&#x65E5;&#x5FD7;&#xFF0C;&#x56E0;&#x6B64;&#x53EA;&#x8981;&#x5904;&#x7406;&#x65E5;&#x5FD7;&#x7EA7;&#x522B;&#x5C0F;&#x4E8E;&#x7B49;&#x4E8E;WARN&#x7684;&#x60C5;&#x51B5;&#xFF08;&#x5373;&#x4E0D;&#x7B49;&#x4E8E;QUIE&#x548C;ERROR&#xFF09;&#xFF0C;&#x624D;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x8FD9;&#x4E2A;&#x903B;&#x8F91;&#x5904;&#x7406;&#xFF0C;&#x5904;&#x7406;&#x7684;&#x5BF9;&#x5E94;&#x62A5;&#x9519;&#x7684;&#x65E5;&#x5FD7;&#x7684;&#x7EA7;&#x522B;&#x662F;WARN&#x7684;&#xFF0C;&#x7136;&#x540E;&#x5224;&#x65AD;&#x8F93;&#x51FA;&#x7684;&#x65E5;&#x5FD7;&#x91CC;&#x9762;&#x662F;&#x5426;&#x542B;&#x6709;&#x5173;&#x952E;&#x5B57;Provided dependencies can only be jars&#xFF0C;&#x8FD9;&#x91CC;&#x7279;&#x522B;&#x6CE8;&#x610F;&#x4E00;&#x4E0B;&#xFF0C;&#x6709;&#x4E9B;&#x7248;&#x672C;&#x53EF;&#x80FD;Provided&#x662F;&#x5C0F;&#x5199;&#x7684;&#xFF0C;&#x5373;provided&#xFF0C;&#x5F53;&#x6761;&#x4EF6;&#x6EE1;&#x8DB3;&#x540E;&#xFF0C;&#x5C06;&#x65E5;&#x5FD7;&#x8C03;&#x6574;&#x4E3A;info&#x8FDB;&#x884C;&#x8F93;&#x51FA;&#xFF0C;&#x5426;&#x5219;&#xFF0C;&#x8C03;&#x7528;&#x539F;&#x59CB;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#x903B;&#x8F91;&#x3002;</p><p>&#x4E8E;&#x662F;&#x4E4E;&#xFF0C;10&#x6765;&#x884C;&#x4EE3;&#x7801;&#xFF0C;&#x5C06;&#x63A7;&#x5236;&#x53F0;&#x7684;&#x5237;&#x5C4F;&#x65E5;&#x5FD7;&#x5F7B;&#x5E95;&#x6D88;&#x9664;&#x4E86;&#xFF0C;&#x6574;&#x4E2A;&#x4E16;&#x754C;&#x90FD;&#x6E05;&#x51C0;&#x4E86;&#x3002;</p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>gradle</tag>
        <tag>android</tag>
        <tag>providedAar</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>再谈 Application ProvidedAar</title>
    <url>/2018/03/19/%E5%86%8D%E8%B0%88Application-ProvidedAar/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>&#x53BB;&#x5E74;&#x5E74;&#x5E95;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5199;&#x8FC7;&#x4E00;&#x7BC7;&#x535A;&#x5BA2;&#x53EB;<a href="/2017/12/24/Android-application&#x4E2D;&#x4F7F;&#x7528;provided-aar&#x5E76;&#x6CA1;&#x6709;&#x90A3;&#x4E48;&#x7B80;&#x5355;/">&#x300A;Android-application&#x4E2D;&#x4F7F;&#x7528;provided-aar&#x5E76;&#x6CA1;&#x6709;&#x90A3;&#x4E48;&#x7B80;&#x5355;&#x300B;</a>&#x3002;&#x5F53;&#x65F6;&#x6587;&#x7AE0;&#x4E2D;&#x4ECB;&#x7ECD;&#x4E86;android gradle plugin&#x4E0D;&#x540C;&#x7248;&#x672C;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#xFF0C;&#x5BF9;android gradle plugin 2.2.0&#x4EE5;&#x4E0B;&#x7248;&#x672C;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x662F;&#x91C7;&#x7528;&#x4F7F;&#x7528;gradle maven&#x7684;api&#x5B9E;&#x73B0;&#xFF0C;&#x5229;&#x7528;gradle&#x672C;&#x5730;&#x7F13;&#x5B58;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x4E0D;&#x4F46;&#x53CD;&#x5C04;&#x7684;&#x5730;&#x65B9;&#x975E;&#x5E38;&#x591A;&#xFF0C;&#x800C;&#x4E14;&#x4E0D;&#x652F;&#x6301;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#xFF0C;&#x5C40;&#x9650;&#x6027;&#x975E;&#x5E38;&#x5927;&#x3002;&#x5468;&#x672B;&#x6709;&#x7A7A;&#xFF0C;&#x53C8;&#x91CD;&#x65B0;&#x62FF;&#x8D77;&#x6765;&#x7814;&#x7A76;&#x4E86;&#x4E0B;&#xFF0C;&#x6700;&#x7EC8;&#x5B9E;&#x73B0;&#x4E86;android gradle plugin [1.3.0,3.2.0+)&#x7248;&#x672C;&#x7684;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#xFF0C;&#x5728;&#x63D2;&#x4EF6;&#x5316;&#x4E2D;&#x8D77;&#x7740;&#x91CD;&#x8981;&#x610F;&#x4E49;&#xFF0C;&#x51E0;&#x4E4E;&#x662F;&#x5168;&#x7248;&#x672C;&#x517C;&#x5BB9;&#x4E86;&#xFF0C;&#x901A;&#x8FC7;&#x6E90;&#x7801;&#x53D1;&#x73B0;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684;&#x65B9;&#x5F0F;&#x65E0;&#x6CD5;&#x8FDB;&#x884C;&#x517C;&#x5BB9;1.3.0&#x4EE5;&#x4E0B;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x4E14;&#x7248;&#x672C;&#x8FC7;&#x4E8E;&#x4E45;&#x8FDC;&#xFF0C;&#x6240;&#x4EE5;&#x76F4;&#x63A5;&#x4E0D;&#x652F;&#x6301;&#x4E86;&#x3002;&#x5EFA;&#x8BAE;&#x9605;&#x8BFB;&#x672C;&#x7BC7;&#x535A;&#x5BA2;&#x524D;&#xFF0C;&#x5F3A;&#x70C8;&#x5EFA;&#x8BAE;&#x5148;&#x5C06;&#x4E4B;&#x524D;&#x7684;&#x90A3;&#x7BC7;&#x535A;&#x5BA2;&#x770B;&#x4E00;&#x4E0B;&#xFF0C;&#x5426;&#x5219;&#x53EF;&#x80FD;&#x65E0;&#x6CD5;&#x7406;&#x89E3;&#x3002;&#x6CA1;&#x6709;&#x7279;&#x6B8A;&#x8BF4;&#x660E;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4E0B;&#x6587;&#x5C06;android gradle plugin&#x7B80;&#x79F0;&#x4E3A;AGP&#x3002;</p><a id="more"></a><h3 id="&#x56DE;&#x987E;"><a href="#&#x56DE;&#x987E;" class="headerlink" title="&#x56DE;&#x987E;"></a>&#x56DE;&#x987E;</h3><p>providedAar&#x7684;&#x91CD;&#x8981;&#x6027;&#x5C31;&#x5728;&#x4E8E;&#x5728;com.android.application&#x63D2;&#x4EF6;&#x4E2D;&#x6211;&#x9700;&#x8981;&#x5F15;&#x7528;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x7C7B;&#x6216;&#x8005;&#x8D44;&#x6E90;&#xFF0C;&#x4F46;&#x662F;&#x7F16;&#x8BD1;&#x6253;&#x5305;&#x7684;&#x65F6;&#x5019;&#x6211;&#x53C8;&#x4E0D;&#x80FD;&#x5C06;&#x5176;&#x6253;&#x5305;&#x8FDB;&#x53BB;&#xFF0C;&#x573A;&#x666F;&#x5C31;&#x5728;&#x63D2;&#x4EF6;&#x5316;&#x4E2D;&#xFF0C;&#x4E00;&#x4E9B;&#x516C;&#x5171;&#x7C7B;&#x548C;&#x8D44;&#x6E90;&#x5B9A;&#x4E49;&#x5728;&#x5BBF;&#x4E3B;&#x4E2D;&#xFF0C;&#x63D2;&#x4EF6;&#x4E2D;&#x4E0D;&#x80FD;&#x518D;&#x6B21;&#x5B9A;&#x4E49;&#x3002;&#x9664;&#x4E86;providedAar&#x8FD9;&#x4E00;&#x79CD;&#x5B9E;&#x73B0;&#x5916;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x79CD;&#x5B9E;&#x73B0;&#x662F;&#x5E72;&#x9884;&#x7F16;&#x8BD1;&#x8FC7;&#x7A0B;&#xFF0C;&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x5E72;&#x6389;&#x5BF9;&#x5E94;&#x7684;&#x7C7B;&#x548C;&#x8D44;&#x6E90;&#xFF0C;&#x5178;&#x578B;&#x7684;&#x5B9E;&#x73B0;&#x6709;VirtualApk&#x548C;Small&#x3002;</p><p>&#x4ECE;&#x4E4B;&#x524D;&#x90A3;&#x7BC7;&#x6587;&#x7AE0;&#x53EF;&#x4EE5;&#x77E5;&#x9053;&#xFF0C;&#x4E4B;&#x524D;&#x5BF9;&#x4E8E;AGP 2.2.0&#x4EE5;&#x4E0B;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x662F;&#x4F7F;&#x7528;gradle&#x7F13;&#x5B58;&#x5728;&#x672C;&#x5730;&#x7684;aar&#xFF0C;&#x5C06;classes.jar&#x63D0;&#x53D6;&#x51FA;&#x6765;&#xFF0C;&#x6DFB;&#x52A0;&#x5230;provided&#x8FD9;&#x4E2A;scope&#x4E0A;&#xFF0C;&#x8FD9;&#x79CD;&#x5B9E;&#x73B0;&#x65E0;&#x6CD5;&#x8FDB;&#x884C;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#xFF0C;&#x4E14;&#x6DFB;&#x52A0;&#x7684;&#x53EA;&#x6709;&#x4EE3;&#x7801;&#xFF0C;&#x6CA1;&#x6709;&#x8D44;&#x6E90;&#x3002;&#x5F53;&#x65F6;&#x4E5F;&#x8BF4;&#x660E;&#x4E86;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x91C7;&#x7528;AGP 2.2.0&#x4EE5;&#x4E0A;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x539F;&#x56E0;&#x5982;&#x4E0B;&#xFF1A;</p><p>2.2.0&#x4EE5;&#x4E0B;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x867D;&#x7136;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;[2.2.0,2.5.0)&#x8FD9;&#x4E2A;&#x533A;&#x95F4;&#x7684;&#x65B9;&#x6CD5;&#x5C06;&#x5F02;&#x5E38;&#x8FDB;&#x884C;&#x6D88;&#x9664;&#xFF0C;&#x4F46;&#x662F;&#x5373;&#x4F7F;&#x6D88;&#x9664;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x5176;&#x4EE3;&#x7801;&#x7684;&#x7279;&#x6B8A;&#x6027;&#xFF0C;&#x5BFC;&#x81F4;&#x5373;&#x4F7F;&#x662F;provided&#x4F9D;&#x8D56;&#x7684;aar&#xFF0C;&#x6700;&#x7EC8;&#x4E5F;&#x4F1A;&#x88AB;&#x6253;&#x5305;&#x8FDB;apk&#x4E2D;&#xFF0C;&#x8FD9;&#x91CC;&#x4EE5;2.1.3&#x7684;&#x4EE3;&#x7801;&#x4E3A;&#x4F8B;&#xFF0C;&#x5982;&#x4E0B;:</p><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="comment">//&#x904D;&#x5386;&#x8FC7;&#x6EE4;&#x540E;&#x5269;&#x4F59;&#x7684;&#x7F16;&#x8BD1;&#x671F;&#x7684;&#x4F9D;&#x8D56;</span></span><br><span class="line"><span class="selector-tag">for</span> (LibInfo <span class="attribute">lib </span>: compiledAndroidLibraries) {</span><br><span class="line">    <span class="selector-tag">if</span> (!copyOfPackagedLibs.contains(lib)) {</span><br><span class="line">        <span class="selector-tag">if</span> (isLibrary || lib.isOptional()) {</span><br><span class="line">            <span class="comment">//&#x5982;&#x679C;&#x662F;com.android.library&#x6216;&#x8005;&#x662F;&#x53EF;&#x9009;&#x7684;&#xFF0C;&#x5219;&#x8BBE;&#x7F6E;&#x8BE5;lib&#x4E3A;&#x53EF;&#x9009;</span></span><br><span class="line">            <span class="selector-tag">lib</span><span class="selector-class">.setIsOptional</span>(true);</span><br><span class="line">        } <span class="selector-tag">else</span> {</span><br><span class="line">            <span class="comment">//&#x5426;&#x5219;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5728;com.android.application&#x4E2D;&#xFF0C;&#x5C06;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x8BB0;&#x5F55;&#x4E86;&#x4E0B;&#x6765;&#xFF0C;&#x540E;&#x7EED;&#x7684;&#x5904;&#x7406;&#x5C31;&#x5728;PrepareDependenciesTask&#x6267;&#x884C;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x62A5;&#x5F02;&#x5E38;</span></span><br><span class="line">            <span class="comment">//noinspection ConstantConditions</span></span><br><span class="line">            <span class="selector-tag">variantDeps</span><span class="selector-class">.getChecker</span>()<span class="selector-class">.addSyncIssue</span>(extraModelInfo.handleSyncError(</span><br><span class="line">                    lib.getResolvedCoordinates().toString(),</span><br><span class="line">                    SyncIssue.TYPE_NON_JAR_PROVIDED_DEP,</span><br><span class="line">                    String.format(</span><br><span class="line">                            <span class="string">&quot;Project %s: provided dependencies can only be jars. %s is an Android Library.&quot;</span>,</span><br><span class="line">                            project.getName(), lib.getResolvedCoordinates())));</span><br><span class="line">        }</span><br><span class="line">    } <span class="selector-tag">else</span> {</span><br><span class="line">        <span class="selector-tag">copyOfPackagedLibs</span><span class="selector-class">.remove</span>(lib);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5BF9;&#x6BD4;2.3.3&#x7248;&#x672C;&#x7684;&#x4EE3;&#x7801;</p><figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"><span class="comment">//&#x83B7;&#x5F97;maven&#x5750;&#x6807;</span></span><br><span class="line">MavenCoordinates resolvedCoordinates = compileLib.getCoordinates();</span><br><span class="line"><span class="comment">//&#x5982;&#x679C;&#x4E0D;&#x662F;com.android.library&#xFF0C;&#x4E5F;&#x4E0D;&#x662F;com.android.atom&#xFF0C;&#x4E5F;&#x4E0D;&#x662F;&#x7528;&#x4E8E;&#x6D4B;&#x8BD5;&#x7684;com.android.test&#xFF0C;&#x5373;&#x662F;com.android.application</span></span><br><span class="line"><span class="keyword">if</span> (variantType != VariantType.LIBRARY</span><br><span class="line">        &amp;&amp; variantType != VariantType.ATOM</span><br><span class="line">        &amp;&amp; (testedVariantType != VariantType.LIBRARY || !variantType.isForTesting())) {</span><br><span class="line">    <span class="comment">//&#x5C31;&#x4F1A;&#x5C06;&#x8FD9;&#x4E2A;&#x5F02;&#x5E38;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#xFF0C;&#x540E;&#x7EED;&#x7684;&#x5904;&#x7406;&#x5C31;&#x5728;PrepareDependenciesTask&#x6267;&#x884C;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x62A5;&#x5F02;&#x5E38;</span></span><br><span class="line">    handleIssue(</span><br><span class="line">            resolvedCoordinates.<span class="built_in">toString</span>(),</span><br><span class="line">            SyncIssue.TYPE_NON_JAR_PROVIDED_DEP,</span><br><span class="line">            SyncIssue.SEVERITY_ERROR,</span><br><span class="line">            String.<span class="built_in">format</span>(</span><br><span class="line">                    <span class="string">&quot;Project %s: Provided dependencies can only be jars. %s is an Android Library.&quot;</span>,</span><br><span class="line">                    projectName,</span><br><span class="line">                    resolvedCoordinates.<span class="built_in">toString</span>()));</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4ECE;&#x4E24;&#x4E2A;&#x7248;&#x672C;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x6709;&#x4E00;&#x5904;&#x4E0D;&#x540C;&#xFF0C;2.2.0&#x4EE5;&#x4E0B;&#x7684;&#x7248;&#x672C;&#x5728;com.android.library&#x4E2D;&#x4F1A;&#x5C06;lib&#x8BBE;&#x4E3A;&#x53EF;&#x9009;&#xFF0C;&#x4F46;&#x662F;&#x5728;com.android.application&#x5C31;&#x4F1A;&#x76F4;&#x63A5;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#xFF0C;&#x5177;&#x4F53;&#x7684;&#x533A;&#x522B;&#x4EE3;&#x7801;&#x5982;&#x4E0B;:</p><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (isLibrary || <span class="class"><span class="keyword">lib</span>.<span class="title">isOptional</span>()) {</span></span><br><span class="line">    /<span class="regexp">/&#x5982;&#x679C;&#x662F;com.android.library&#x6216;&#x8005;&#x662F;&#x53EF;&#x9009;&#x7684;&#xFF0C;&#x5219;&#x8BBE;&#x7F6E;&#x8BE5;lib&#x4E3A;&#x53EF;&#x9009;</span></span><br><span class="line"><span class="regexp">    lib.setIsOptional(true);</span></span><br><span class="line"><span class="regexp">} else {</span></span><br><span class="line"><span class="regexp">   /</span><span class="regexp">/&#x629B;&#x5F02;&#x5E38;</span></span><br><span class="line"><span class="regexp">}</span></span><br></pre></td></tr></table></figure><p>&#x4E00;&#x65E6;&#x5C06;lib&#x8BBE;&#x7F6E;&#x4E3A;&#x53EF;&#x9009;&#xFF0C;&#x540E;&#x7EED;&#x5C31;&#x4E0D;&#x4F1A;&#x6253;&#x5305;&#x8FDB;apk&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x80FD;&#x4E0D;&#x80FD;&#x5C06;&#x5176;&#x8BBE;&#x7F6E;&#x4E3A;&#x53EF;&#x9009;&#x4ECE;&#x800C;&#x4E0D;&#x5C06;&#x5176;&#x6253;&#x5305;&#x8FDB;&#x53BB;&#x5462;&#xFF0C;&#x5F53;&#x65F6;&#x7ED9;&#x7684;&#x7B54;&#x6848;&#x662F;&#x4E0D;&#x80FD;&#xFF0C;&#x4F46;&#x662F;&#x5468;&#x672B;&#x7814;&#x7A76;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53D1;&#x73B0;&#x4ECE;PrepareDependenciesTask&#x8FD9;&#x4E2A;task&#x5165;&#x624B;&#xFF0C;&#x662F;&#x53EF;&#x4EE5;&#x62FF;&#x5230;&#x5BF9;&#x5E94;&#x7684;lib&#xFF0C;&#x5C06;&#x5176;&#x8BBE;&#x7F6E;&#x4E3A;&#x53EF;&#x9009;&#x7684;&#x3002;&#x90A3;&#x4E48;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x6D41;&#x7A0B;&#x662F;&#x600E;&#x4E48;&#x6837;&#x7684;&#x5462;&#xFF1F;</p><h3 id="&#x5B9E;&#x73B0;"><a href="#&#x5B9E;&#x73B0;" class="headerlink" title="&#x5B9E;&#x73B0;"></a>&#x5B9E;&#x73B0;</h3><p>&#x901A;&#x8FC7;&#x67E5;&#x770B;PrepareDependenciesTask&#x8FD9;&#x4E2A;&#x7C7B;&#xFF0C;&#x53D1;&#x73B0;&#x5176;&#x6210;&#x5458;&#x53D8;&#x91CF;checkers(&#x7C7B;&#x578B;&#x662F;DependencyChecker List)&#x4E2D;&#x6BCF;&#x4E00;&#x9879;DependencyChecker&#x6301;&#x6709;&#x4E86;VariantDependencies&#x53D8;&#x91CF;&#xFF0C;&#x800C;VariantDependencies&#x8FD9;&#x4E2A;&#x7C7B;&#x4E2D;&#x53EF;&#x4EE5;&#x62FF;&#x5230;&#x5F53;&#x524D;&#x9879;&#x76EE;&#x4F9D;&#x8D56;&#x7684;&#x6240;&#x6709;library&#xFF0C;&#x8BE5;&#x503C;&#x88AB;&#x5B58;&#x50A8;&#x5728;libraries&#x4E2D;&#xFF0C;&#x5177;&#x4F53;&#x7C7B;&#x578B;&#x662F;LibraryDependencyImpl List&#xFF0C;&#x800C;LibraryDependencyImpl&#x4E2D;&#x6709;&#x4E2A;isOptional&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x53EA;&#x8981;&#x5C06;&#x5176;&#x8BBE;&#x4E3A;true&#xFF0C;&#x5C31;&#x4E0D;&#x4F1A;&#x88AB;&#x6253;&#x5305;&#x8FDB;apk&#x4E86;&#xFF0C;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;LibraryDependencyImpl&#x4E2D;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;dependencies&#x53D8;&#x91CF;(&#x7C7B;&#x578B;&#x662F;LibraryDependency List) &#xFF0C;&#x91CC;&#x9762;&#x5B58;&#x50A8;&#x5BF9;&#x5E94;&#x4F9D;&#x8D56;&#x7684;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#xFF0C;&#x56E0;&#x6B64;&#x5904;&#x7406;&#x65F6;&#x9700;&#x8981;&#x9012;&#x5F52;&#x5904;&#x7406;dependencies&#x53D8;&#x91CF;&#xFF0C;&#x5C06;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#x7684;isOptional&#x4E5F;&#x8BBE;&#x4E3A;true&#xFF0C;&#x503C;&#x5F97;&#x7279;&#x522B;&#x6CE8;&#x610F;&#x7684;&#x662F;isOptional&#x8FD9;&#x4E2A;&#x53D8;&#x91CF;&#x662F;final&#x7684;&#xFF0C;&#x5728;&#x53CD;&#x5C04;&#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8981;&#x7279;&#x6B8A;&#x5904;&#x7406;&#x4E00;&#x4E0B;&#x3002;</p><p>&#x56E0;&#x6B64;&#x53EA;&#x8981;&#x5C06;2.2.0&#x4EE5;&#x4E0B;&#x7684;&#x7248;&#x672C;&#x7279;&#x6B8A;&#x5904;&#x7406;&#x4E00;&#x4E0B;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF0C;&#x8BE6;&#x7EC6;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> {</span><br><span class="line">    Class prepareDependenciesTaskClass = <span class="module-access"><span class="module"><span class="identifier">Class</span>.</span></span>for<span class="constructor">Name(<span class="string">&quot;com.android.build.gradle.internal.tasks.PrepareDependenciesTask&quot;</span>)</span></span><br><span class="line">    Field checkersField = prepareDependenciesTaskClass.get<span class="constructor">DeclaredField(&apos;<span class="params">checkers</span>&apos;)</span></span><br><span class="line">    checkersField.set<span class="constructor">Accessible(<span class="params">true</span>)</span></span><br><span class="line">    def checkers = checkersField.get(prepareDependenciesTask)</span><br><span class="line">    checkers.iterator<span class="literal">()</span>.<span class="keyword">with</span> {checkersIterator -&gt;</span><br><span class="line">        checkersIterator.each {dependencyChecker -&gt;</span><br><span class="line">            def syncIssues = dependencyChecker.syncIssues</span><br><span class="line">            syncIssues.iterator<span class="literal">()</span>.<span class="keyword">with</span> {syncIssuesIterator -&gt;</span><br><span class="line">                syncIssuesIterator.each {syncIssue -&gt;</span><br><span class="line">                    <span class="keyword">if</span> (syncIssue.get<span class="constructor">Type()</span><span class="operator"> == </span><span class="number">7</span><span class="operator"> &amp;&amp; </span>syncIssue.get<span class="constructor">Severity()</span><span class="operator"> == </span><span class="number">2</span>) {</span><br><span class="line">                        project.logger.info <span class="string">&quot;[providedAar] WARNING: providedAar has been enabled in com.android.application you can ignore ${syncIssue}&quot;</span></span><br><span class="line">                        syncIssuesIterator.remove<span class="literal">()</span></span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line"></span><br><span class="line">            <span class="comment">//&#x517C;&#x5BB9;1.3.0~2.1.3&#x7248;&#x672C;&#xFF0C;&#x4E3A;&#x4E86;&#x5C06;provided&#x7684;aar&#x4E0D;&#x53C2;&#x4E0E;&#x6253;&#x5305;&#xFF0C;&#x5C06;isOptional&#x8BBE;&#x4E3A;true</span></span><br><span class="line">            <span class="keyword">if</span> (androidGradlePluginVersion.starts<span class="constructor">With(<span class="string">&quot;1.3&quot;</span>)</span><span class="operator"> || </span>androidGradlePluginVersion.starts<span class="constructor">With(<span class="string">&quot;1.5&quot;</span>)</span><span class="operator"> || </span>androidGradlePluginVersion.starts<span class="constructor">With(<span class="string">&quot;2.0&quot;</span>)</span><span class="operator"> || </span>androidGradlePluginVersion.starts<span class="constructor">With(<span class="string">&quot;2.1&quot;</span>)</span>) {</span><br><span class="line">                def configurationDependencies = dependencyChecker.configurationDependencies</span><br><span class="line">                List libraries = configurationDependencies.libraries</span><br><span class="line">                libraries.each {library -&gt;</span><br><span class="line">                    providedAarConfiguration.dependencies.each {providedDependency -&gt;</span><br><span class="line">                        String libName = library.get<span class="constructor">Name()</span></span><br><span class="line">                        <span class="keyword">if</span> (libName.contains(providedDependency.group)<span class="operator"> &amp;&amp; </span>libName.contains(providedDependency.name)<span class="operator"> &amp;&amp; </span>libName.contains(providedDependency.version)) {</span><br><span class="line">                            <span class="comment">//final&#x5B57;&#x6BB5;</span></span><br><span class="line">                            Field isOptionalField = library.get<span class="constructor">Class()</span>.get<span class="constructor">DeclaredField(<span class="string">&quot;isOptional&quot;</span>)</span></span><br><span class="line">                            <span class="comment">//final&#x7C7B;&#x578B;&#x7684;&#x4FEE;&#x6539;&#xFF0C;&#x5148;&#x4FEE;&#x6539;modifiers</span></span><br><span class="line">                            Field modifiersField = <span class="module-access"><span class="module"><span class="identifier">Field</span>.</span></span><span class="keyword">class</span>.get<span class="constructor">DeclaredField(<span class="string">&quot;modifiers&quot;</span>)</span></span><br><span class="line">                            modifiersField.set<span class="constructor">Accessible(<span class="params">true</span>)</span></span><br><span class="line">                            <span class="comment">//&#x53BB;final</span></span><br><span class="line">                            modifiersField.set<span class="constructor">Int(<span class="params">isOptionalField</span>, <span class="params">isOptionalField</span>.<span class="params">getModifiers</span>()</span> &amp; ~java.lang.reflect.Modifier.FINAL)</span><br><span class="line">                            isOptionalField.set<span class="constructor">Accessible(<span class="params">true</span>)</span></span><br><span class="line">                            <span class="comment">//&#x5C06;isOptional&#x8BBE;&#x4E3A;true</span></span><br><span class="line">                            isOptionalField.set<span class="constructor">Boolean(<span class="params">library</span>, <span class="params">true</span>)</span></span><br><span class="line">                            <span class="comment">//&#x4E3A;&#x4E86;&#x9012;&#x5F52;&#x8C03;&#x7528;&#x53EF;&#x4EE5;&#x5F15;&#x7528;&#xFF0C;&#x5148;&#x58F0;&#x660E;&#x518D;&#x8D4B;&#x503C;</span></span><br><span class="line">                            def fixDependencies = null</span><br><span class="line">                            fixDependencies = {dependencies -&gt;</span><br><span class="line">                                dependencies.each {dependency -&gt;</span><br><span class="line">                                    <span class="keyword">if</span> (dependency.get<span class="constructor">Class()</span><span class="operator"> == </span>library.get<span class="constructor">Class()</span>) {</span><br><span class="line">                                        isOptionalField.set<span class="constructor">Boolean(<span class="params">dependency</span>, <span class="params">true</span>)</span></span><br><span class="line">                                        <span class="comment">//&#x9012;&#x5F52;dependencies</span></span><br><span class="line">                                        fix<span class="constructor">Dependencies(<span class="params">dependency</span>.<span class="params">dependencies</span>)</span></span><br><span class="line">                                    }</span><br><span class="line">                                }</span><br><span class="line">                            }</span><br><span class="line">                            fix<span class="constructor">Dependencies(<span class="params">library</span>.<span class="params">dependencies</span>)</span></span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">} catch (Exception e) {</span><br><span class="line">    e.print<span class="constructor">StackTrace()</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">prepareDependenciesTask.configure removeSyncIssues</span><br></pre></td></tr></table></figure><p>&#x4FEE;&#x6539;&#x5B8C;&#x6210;&#x540E;&#x7B80;&#x5355;&#x6D4B;&#x8BD5;&#x4E00;&#x4E0B;&#xFF0C;&#x53D1;&#x73B0;&#x6210;&#x529F;&#x4E86;&#xFF0C;providedAar&#x4F9D;&#x8D56;&#x6700;&#x7EC8;&#x5E76;&#x6CA1;&#x6709;&#x88AB;&#x6253;&#x5165;apk&#x4E2D;&#x3002;&#x4F46;&#x662F;&#x522B;&#x9AD8;&#x5174;&#x5F97;&#x592A;&#x65E9;&#x3002;&#x6210;&#x529F;&#x662F;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x6D4B;&#x8BD5;&#x53EF;&#x884C;&#xFF0C;&#x4F46;&#x662F;&#x4E00;&#x65E6;&#x4F60;&#x70B9;&#x51FB;Android Studio&#x4E0A;&#x7684;sync&#x6309;&#x94AE;&#xFF0C;&#x4F60;&#x4F1A;&#x53D1;&#x73B0;&#x8FD8;&#x662F;&#x4F1A;&#x51FA;&#x73B0;&#x90A3;&#x4E2A;&#x5F02;&#x5E38;</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">Provided dependencies can <span class="keyword">only</span> <span class="keyword">be</span> jars</span><br></pre></td></tr></table></figure><p>&#x95EE;&#x9898;&#x51FA;&#x5728;&#x54EA;&#x5462;&#xFF0C;&#x5176;&#x5B9E;Android Studio&#x5728;&#x6784;&#x5EFA;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x5411;AGP&#x6CE8;&#x5165;&#x5B83;&#x7684;&#x4E00;&#x4E9B;&#x5B9E;&#x73B0;&#xFF0C;&#x5BFC;&#x81F4;&#x547D;&#x4EE4;&#x884C;&#x7684;&#x5B9E;&#x73B0;&#x548C;Android Studio&#x91CC;&#x70B9;&#x51FB;&#x6309;&#x94AE;&#x7F16;&#x8BD1;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x3002;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x600E;&#x4E48;&#x89E3;&#x51B3;&#x5462;&#xFF0C;&#x4E5F;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5728;&#x8C03;&#x7528;prepareDependenciesTask.configure removeSyncIssues&#x524D;&#x5BF9;2.2.0&#x4EE5;&#x4E0B;&#x7248;&#x672C;&#x505A;&#x4E0B;&#x7279;&#x6B8A;&#x5904;&#x7406;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002;</p><p>&#x90A3;&#x4E48;&#x8981;&#x5BF9;&#x4EC0;&#x4E48;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x5462;&#xFF0C;&#x5728;BasePlugin&#x4E2D;&#x6709;&#x4E2A;taskManager&#x5BF9;&#x8C61;&#xFF0C;&#x5176;&#x7C7B;&#x578B;&#x662F;TaskManager&#xFF1B;taskManager&#x4E2D;&#x6709;&#x4E2A;&#x53EB;dependencyManager&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x5176;&#x7C7B;&#x578B;&#x662F;DependencyManager&#xFF1B;dependencyManager&#x4E2D;&#x6709;&#x4E2A;extraModelInfo&#xFF0C;&#x5176;&#x7C7B;&#x578B;&#x662F;ExtraModelInfo&#xFF0C;&#x8FD9;&#x4E2A;&#x7C7B;&#x7684;handleSyncIssue&#x51FD;&#x6570;&#xFF0C;&#x4F1A;&#x6839;&#x636E;&#x5F53;&#x524D;&#x6CE8;&#x5165;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x505A;&#x4E0D;&#x540C;&#x5904;&#x7406;&#xFF0C;&#x5177;&#x4F53;&#x4EE3;&#x7801;&#x5982;&#x4E0B;:</p><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="meta">@NonNull</span></span><br><span class="line"><span class="keyword">protected</span> <span class="type">SyncIssue</span> handleSyncIssue(</span><br><span class="line">        <span class="meta">@Nullable</span> <span class="type">String</span> data,</span><br><span class="line">        int <span class="class"><span class="keyword">type</span>,</span></span><br><span class="line"><span class="class">        <span class="title">int</span> <span class="title">severity</span>,</span></span><br><span class="line"><span class="class">        <span class="title">@NonNull</span> <span class="title">String</span> <span class="title">msg</span>) </span>{</span><br><span class="line">    <span class="type">SyncIssue</span> issue;</span><br><span class="line">    switch (getMode()) {</span><br><span class="line">        <span class="keyword">case</span> <span class="type">STANDARD</span>:</span><br><span class="line">            <span class="keyword">if</span> (severity != <span class="type">SyncIssue</span>.<span class="type">SEVERITY_WARNING</span> &amp;&amp; !isDependencyIssue(<span class="class"><span class="keyword">type</span>)) </span>{</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">GradleException</span>(msg);</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">// if it&apos;s a dependency issue we don&apos;t throw right away. we&apos;ll</span></span><br><span class="line">            <span class="comment">// throw during build instead.</span></span><br><span class="line">            <span class="comment">// but we do log.</span></span><br><span class="line">            project.getLogger().warn(<span class="string">&quot;WARNING: &quot;</span> + msg);</span><br><span class="line">            issue = <span class="keyword">new</span> <span class="type">SyncIssueImpl</span>(<span class="class"><span class="keyword">type</span>, <span class="title">severity</span>, <span class="title">data</span>, <span class="title">msg</span>)</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="type">IDE_LEGACY</span>:</span><br><span class="line">            <span class="comment">// compat mode for the only issue supported before the addition of SyncIssue</span></span><br><span class="line">            <span class="comment">// in the model.</span></span><br><span class="line">            <span class="keyword">if</span> (severity != <span class="type">SyncIssue</span>.<span class="type">SEVERITY_WARNING</span></span><br><span class="line">                    &amp;&amp; <span class="class"><span class="keyword">type</span> <span class="title">!=</span> <span class="title">SyncIssue</span>.<span class="title">TYPE_UNRESOLVED_DEPENDENCY</span>) </span>{</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">GradleException</span>(msg);</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">// intended fall-through</span></span><br><span class="line">        <span class="keyword">case</span> <span class="type">IDE</span>:</span><br><span class="line">            <span class="comment">// new IDE, able to support SyncIssue.</span></span><br><span class="line">            issue = <span class="keyword">new</span> <span class="type">SyncIssueImpl</span>(<span class="class"><span class="keyword">type</span>, <span class="title">severity</span>, <span class="title">data</span>, <span class="title">msg</span>)</span>;</span><br><span class="line">            syncIssues.put(<span class="type">SyncIssueKey</span>.from(issue), issue);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">RuntimeException</span>(<span class="string">&quot;Unknown SyncIssue type&quot;</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> issue;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5BF9;&#x5E94;&#x547D;&#x4EE4;&#x884C;&#x8C03;&#x7528;&#xFF0C;&#x5B83;&#x4F1A;&#x76F4;&#x63A5;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#xFF0C;&#x5BF9;&#x4E8E;Android Studio&#x6CE8;&#x5165;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x5B83;&#x4F1A;&#x629B;&#x5F02;&#x5E38;&#x6216;&#x8005;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#x540E;&#x7EED;&#x7531;Android Studio&#x62A5;&#x544A;&#x5F02;&#x5E38;&#xFF0C;&#x5373;&#x540E;&#x7EED;sync&#x5931;&#x8D25;&#x7684;&#x63D0;&#x793A;&#x5185;&#x5BB9;&#x3002;&#x8FD9;&#x91CC;&#x8D70;&#x7684;&#x903B;&#x8F91;&#x662F;&#x5B58;&#x5165;syncIssues&#x4E2D;&#xFF0C;&#x540E;&#x7EED;&#x7531;Android Studio&#x62A5;&#x544A;&#x95EE;&#x9898;&#x3002;</p><p>&#x90A3;&#x4E48;&#x95EE;&#x9898;&#x5C31;&#x53D8;&#x5F97;&#x5F88;&#x7B80;&#x5355;&#x4E86;&#xFF0C;&#x53CD;&#x5C04;&#x5C06;syncIssues&#xFF08;Map&lt;SyncIssueKey, SyncIssue&gt;&#x5BF9;&#x8C61;&#xFF09;&#x4E2D;&#x7C7B;&#x578B;&#x662F;7&#xFF08;Provided dependencies can only be jars&#xFF09;&#xFF0C;&#x9519;&#x8BEF;&#x7EA7;&#x522B;&#x662F;2&#x7684;&#x95EE;&#x9898;remove&#x6389;&#x5C31;&#x597D;&#x4E86;&#x3002;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (androidGradlePluginVersion.starts<span class="constructor">With(<span class="string">&quot;1.3&quot;</span>)</span><span class="operator"> || </span>androidGradlePluginVersion.starts<span class="constructor">With(<span class="string">&quot;1.5&quot;</span>)</span><span class="operator"> || </span>androidGradlePluginVersion.starts<span class="constructor">With(<span class="string">&quot;2.0&quot;</span>)</span><span class="operator"> || </span>androidGradlePluginVersion.starts<span class="constructor">With(<span class="string">&quot;2.1&quot;</span>)</span>) {</span><br><span class="line">    <span class="comment">//&#x8FD9;&#x91CC;&#x4E0D;&#x5904;&#x7406;as sync&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x51FA;&#x9519;</span></span><br><span class="line">    <span class="comment">//&#x83B7;&#x53D6;AppPlugin</span></span><br><span class="line">    def appPlugin = project.get<span class="constructor">Plugins()</span>.find<span class="constructor">Plugin(<span class="string">&quot;com.android.application&quot;</span>)</span></span><br><span class="line">    <span class="comment">//&#x83B7;&#x53D6;TaskManager</span></span><br><span class="line">    def taskManager = appPlugin.get<span class="constructor">MetaClass()</span>.get<span class="constructor">Property(<span class="params">appPlugin</span>, <span class="string">&quot;taskManager&quot;</span>)</span></span><br><span class="line">    <span class="comment">//&#x83B7;&#x53D6;DependencyManager&#xFF0C;&#x6CE8;&#x610F;&#x8C03;&#x7528;getSuperclass()&#xFF0C;&#x5426;&#x5219;&#x65E0;&#x6CD5;&#x627E;&#x5230;&#x5B57;&#x6BB5;</span></span><br><span class="line">    def dependencyManager = taskManager.get<span class="constructor">Class()</span>.get<span class="constructor">Superclass()</span>.get<span class="constructor">MetaClass()</span>.get<span class="constructor">Property(<span class="params">taskManager</span>, <span class="string">&quot;dependencyManager&quot;</span>)</span></span><br><span class="line">    <span class="comment">//&#x83B7;&#x53D6;ExtraModelInfo</span></span><br><span class="line">    def extraModelInfo = dependencyManager.get<span class="constructor">MetaClass()</span>.get<span class="constructor">Property(<span class="params">dependencyManager</span>, <span class="string">&quot;extraModelInfo&quot;</span>)</span></span><br><span class="line">    <span class="comment">//&#x83B7;&#x53D6;syncIssues&#xFF0C;&#x7C7B;&#x578B;&#x662F;Map&lt;SyncIssueKey, SyncIssue&gt;&#xFF0C;&#x53EA;&#x8981;&#x904D;&#x5386;&#x8FD9;&#x4E2A;map&#xFF0C;&#x5C06;value&#x4E2D;type=7&amp;severity=2&#x7684;&#x9879;&#x79FB;&#x9664;&#x5373;&#x53EF;</span></span><br><span class="line">    Map&lt;?, ?&gt; syncIssues = extraModelInfo.get<span class="constructor">SyncIssues()</span></span><br><span class="line">    <span class="comment">//groovy&#x8FED;&#x4EE3;&#x5668;&#x904D;&#x5386;</span></span><br><span class="line">    syncIssues.iterator<span class="literal">()</span>.<span class="keyword">with</span> {syncIssuesIterator -&gt;</span><br><span class="line">        syncIssuesIterator.each {syncIssuePair -&gt;</span><br><span class="line">            <span class="keyword">if</span> (syncIssuePair.get<span class="constructor">Value()</span>.get<span class="constructor">Type()</span><span class="operator"> == </span><span class="number">7</span><span class="operator"> &amp;&amp; </span>syncIssuePair.get<span class="constructor">Value()</span>.get<span class="constructor">Severity()</span><span class="operator"> == </span><span class="number">2</span>) {</span><br><span class="line">                syncIssuesIterator.remove<span class="literal">()</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x4E0B;&#x9762;&#x540C;2.2.0+&#x5904;&#x7406;</span></span><br><span class="line">    prepareDependenciesTask.configure removeSyncIssues</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4FEE;&#x6539;&#x5B8C;&#x6210;&#x540E;&#x518D;&#x6B21;&#x70B9;&#x51FB;Android Studio&#x4E2D;sync&#x6309;&#x94AE;&#xFF0C;&#x53D1;&#x73B0;&#x4E0D;&#x518D;&#x62A5;&#x9519;&#x4E86;&#xFF0C;&#x518D;&#x6B21;&#x6D4B;&#x8BD5;&#xFF0C;&#x53D1;&#x73B0;&#x4E00;&#x5207;&#x90FD;&#x6B63;&#x5E38;&#x3002;</p><p>&#x4EE3;&#x7801;&#x7684;&#x5177;&#x4F53;&#x4FEE;&#x6539;&#x53EF;&#x4EE5;&#x53C2;&#x89C1;&#x8FD9;&#x4E2A;&#x63D0;&#x4EA4; <a href="https://github.com/lizhangqu/AndroidGradlePluginCompat/commit/3e8cfaa643817c4efb82ff731a21bbff6e9a8d67" target="_blank" rel="noopener">&#x652F;&#x6301;&#x5230;android gradle plugin 1.3.0&#x4F20;&#x9012;&#x4F9D;&#x8D56;</a></p><h3 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h3><p>&#x65F6;&#x9694;3&#x4E2A;&#x591A;&#x6708;&#xFF0C;&#x518D;&#x6B21;&#x6DF1;&#x5165;&#x7814;&#x7A76;&#xFF0C;&#x6536;&#x83B7;&#x9887;&#x591A;&#x3002;&#x5B8C;&#x7F8E;&#x89E3;&#x51B3;&#x4E86;AGP 1.3.0+ &#x7684;providedAar&#x529F;&#x80FD;&#xFF0C;&#x5E76;&#x652F;&#x6301;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#x3002;</p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>gradle</tag>
        <tag>android</tag>
        <tag>providedAar</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>aapt2 生成资源 public flag 标记</title>
    <url>/2018/02/02/aapt2-%E7%94%9F%E6%88%90%E8%B5%84%E6%BA%90public-flag%E6%A0%87%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>&#x4E4B;&#x524D;&#x5199;&#x8FC7;&#x4E00;&#x7BC7;<a href="/2017/11/15/aapt2%E9%80%82%E9%85%8D%E4%B9%8B%E8%B5%84%E6%BA%90id%E5%9B%BA%E5%AE%9A/">aapt2&#x9002;&#x914D;&#x4E4B;&#x8D44;&#x6E90;id&#x56FA;&#x5B9A;</a>&#xFF0C;&#x8BE5;&#x6587;&#x7AE0;&#x4ECB;&#x7ECD;&#x4E86;&#x5982;&#x4F55;&#x4F7F;&#x7528;aapt2&#x56FA;&#x5B9A;&#x8D44;&#x6E90;id&#xFF0C;&#x5176;&#x5B9E;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x662F;&#x5BF9;&#x8BE5;&#x6587;&#x7AE0;&#x7684;&#x4E00;&#x70B9;&#x8865;&#x5145;&#xFF0C;&#x4E3B;&#x8981;&#x4ECB;&#x7ECD;&#x5982;&#x4F55;&#x5728;&#x56FA;&#x5B9A;id&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x5C06;&#x8BE5;&#x8D44;&#x6E90;&#x8FDB;&#x884C;&#x5BFC;&#x51FA;&#xFF0C;&#x6253;&#x4E0A;public&#x6807;&#x8BB0;&#xFF0C;&#x4F9B;&#x5176;&#x4ED6;&#x8D44;&#x6E90;&#x8FDB;&#x884C;&#x5F15;&#x7528;&#x3002;&#x6574;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x65AD;&#x65AD;&#x7EED;&#x7EED;&#x5DEE;&#x4E0D;&#x591A;&#x601D;&#x8003;&#x4E86;&#x4E00;&#x4E2A;&#x6765;&#x6708;&#xFF0C;&#x73B0;&#x5C06;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x7B80;&#x5355;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B;&#x3002;</p><a id="more"></a><h3 id="&#x4ECE;aapt2&#x8D44;&#x6E90;id&#x56FA;&#x5B9A;&#x8BF4;&#x8D77;"><a href="#&#x4ECE;aapt2&#x8D44;&#x6E90;id&#x56FA;&#x5B9A;&#x8BF4;&#x8D77;" class="headerlink" title="&#x4ECE;aapt2&#x8D44;&#x6E90;id&#x56FA;&#x5B9A;&#x8BF4;&#x8D77;"></a>&#x4ECE;aapt2&#x8D44;&#x6E90;id&#x56FA;&#x5B9A;&#x8BF4;&#x8D77;</h3><p>&#x9996;&#x5148;&#x6765;&#x56DE;&#x987E;&#x4E00;&#x4E0B;aapt2&#x5982;&#x4F55;&#x5C06;&#x8D44;&#x6E90;id&#x7B26;&#x53F7;&#x8868;&#x5BFC;&#x51FA;&#xFF0C;&#x4F7F;&#x7528;&#x2013;emit-ids&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x5BFC;&#x51FA;&#x6587;&#x4EF6;&#x5373;&#x53EF;</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">android</span> {</span><br><span class="line">    <span class="section">aaptOptions</span> {</span><br><span class="line">        <span class="attribute">additionalParameters</span> <span class="string">&quot;--emit-ids&quot;</span>, <span class="string">&quot;<span class="variable">${project.file(&apos;public.txt&apos;)}</span>&quot;</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4EE5;&#x53CA;&#x7B26;&#x53F7;&#x8868;&#x5BFC;&#x51FA;&#x540E;&#xFF0C;&#x5982;&#x4F55;&#x4F7F;&#x7528;&#x5BFC;&#x51FA;&#x7684;&#x7B26;&#x53F7;&#x8868;&#x8FDB;&#x884C;&#x8D44;&#x6E90;id&#x7684;&#x56FA;&#x5B9A;&#xFF0C;&#x4F7F;&#x7528;&#x2013;stable-ids&#x53C2;&#x6570;&#xFF0C;&#x6307;&#x5B9A;&#x5BFC;&#x5165;&#x6587;&#x4EF6;&#x5373;&#x53EF;</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">android</span> {</span><br><span class="line">    <span class="section">aaptOptions</span> {</span><br><span class="line">        <span class="attribute">additionalParameters</span> <span class="string">&quot;--stable-ids&quot;</span>, <span class="string">&quot;<span class="variable">${project.file(&apos;public.txt&apos;)}</span>&quot;</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6267;&#x884C;./gradlew assembleDebug&#x7F16;&#x8BD1;&#x540E;&#xFF0C;&#x770B;&#x4E0B;&#x4EA7;&#x51FA;&#x7684;resources_debug.ap_&#x6587;&#x4EF6;&#xFF0C;&#x770B;&#x4E0B;arsc&#x4E2D;&#x5BF9;&#x5E94;&#x7684;&#x8D44;&#x6E90;&#x662F;&#x5426;&#x6253;&#x4E0A;&#x4E86;PUBLIC&#x5BFC;&#x51FA;&#x6807;&#x8BB0;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">aapt2 <span class="keyword">dump</span> .<span class="regexp">/app/</span>build<span class="regexp">/intermediates/</span>res<span class="regexp">/resources-debug.ap_</span></span><br></pre></td></tr></table></figure><p>&#x6267;&#x884C;&#x547D;&#x4EE4;&#x540E;&#x8F93;&#x51FA;&#x5982;&#x4E0B;&#x5185;&#x5BB9;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">Package <span class="attribute">name</span>=io.github.lizhangqu.aapt2 <span class="attribute">id</span>=7f</span><br><span class="line"></span><br><span class="line"> <span class="built_in"> type </span>layout <span class="attribute">id</span>=1 <span class="attribute">entryCount</span>=1</span><br><span class="line">    spec<span class="built_in"> resource </span>0x7f010090 io.github.lizhangqu.aapt2:layout/activity_main</span><br><span class="line">      () (file) res/layout/activity_main.xml</span><br><span class="line"></span><br><span class="line"> <span class="built_in"> type </span>style <span class="attribute">id</span>=2 <span class="attribute">entryCount</span>=1</span><br><span class="line">    spec<span class="built_in"> resource </span>0x7f020080 io.github.lizhangqu.aapt2:style/AppTheme</span><br><span class="line">      () (style)</span><br></pre></td></tr></table></figure><p>&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;arsc&#x4E2D;&#x5BF9;&#x5E94;&#x7684;&#x8D44;&#x6E90;&#x5E76;&#x6CA1;&#x6709;&#x6253;&#x4E0A;PUBLIC&#x6807;&#x8BB0;&#x3002;&#x95EE;&#x9898;&#x5C31;&#x51FA;&#x5728;&#x8FD9;&#xFF0C;&#x6211;&#x4EEC;&#x660E;&#x660E;&#x6307;&#x5B9A;&#x4E86;&#x5BFC;&#x5165;&#x8D44;&#x6E90;&#x7B26;&#x53F7;&#x8868;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x6CA1;&#x6709;PUBLIC&#x6807;&#x8BB0;&#x5462;&#xFF1F;</p><h3 id="&#x4ECE;aapt-public-xml&#x8BF4;&#x8D77;"><a href="#&#x4ECE;aapt-public-xml&#x8BF4;&#x8D77;" class="headerlink" title="&#x4ECE;aapt public.xml&#x8BF4;&#x8D77;"></a>&#x4ECE;aapt public.xml&#x8BF4;&#x8D77;</h3><p>&#x56DE;&#x987E;&#x4E00;&#x4E0B;aapt&#x662F;&#x5982;&#x4F55;&#x6DFB;&#x52A0;PUBLIC&#x6807;&#x8BB0;&#x7684;&#xFF0C;&#x5176;&#x5B9E;&#x8FD9;&#x4E8B;&#x548C;android gradle plugin&#x6709;&#x5173;&#xFF0C;&#x5728;android gradle plugin 1.3&#x4EE5;&#x4E0B;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5F80;src/main/res/values&#x76EE;&#x5F55;&#x4E0B;&#x6DFB;&#x52A0;public.xml&#x6587;&#x4EF6;&#xFF0C;&#x8BE5;&#x6587;&#x4EF6;&#x4F1A;&#x81EA;&#x52A8;&#x53C2;&#x4E0E;&#x7F16;&#x8BD1;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x5E78;&#x7684;&#x662F;&#x5728;1.3&#x4EE5;&#x4E0A;&#x7248;&#x672C;&#xFF0C;&#x6240;&#x6709;public&#x7C7B;&#x578B;&#x7684;&#x8D44;&#x6E90;&#x5168;&#x90FD;&#x4F1A;&#x88AB;android gradle plugin&#x8FC7;&#x6EE4;&#x6389;&#xFF0C;&#x56E0;&#x6B64;&#x6B63;&#x5E38;&#x7684;&#x9014;&#x5F84;&#x6211;&#x4EEC;&#x662F;&#x65E0;&#x6CD5;&#x8BA9;public.xml&#x53C2;&#x4E0E;&#x7F16;&#x8BD1;&#x7684;&#x3002;</p><p>&#x6240;&#x4EE5;&#x5728;aapt&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x5728;mergeResources&#x4EFB;&#x52A1;&#x6700;&#x540E;&#xFF0C;&#x5C06;public.xml&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x5230;build&#x76EE;&#x5F55;&#x4E0B;merge&#x5B8C;&#x6BD5;&#x7684;res&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x5373;build/intermediates/res/merged/&#x76EE;&#x5F55;&#xFF0C;&#x7136;&#x540E;gradle&#x5728;&#x6267;&#x884C;processResources&#x4EFB;&#x52A1;&#x65F6;&#x4F1A;&#x5C06;&#x6211;&#x4EEC;&#x62F7;&#x8D1D;&#x8FDB;&#x53BB;&#x7684;&#x6587;&#x4EF6;&#x4E0E;&#x5176;&#x4ED6;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x4E00;&#x540C;&#x53C2;&#x4E0E;&#x7F16;&#x8BD1;&#xFF0C;&#x4E8E;&#x662F;&#x5C31;&#x53EF;&#x4EE5;&#x4E3A;&#x90A3;&#x4E9B;&#x8D44;&#x6E90;&#x6253;&#x4E0A;PUBLIC&#x6807;&#x8BB0;&#xFF0C;&#x5E76;&#x8FDB;&#x884C;id&#x7684;&#x56FA;&#x5B9A;&#x3002;</p><p>&#x90A3;&#x4E48;&#x5728;aapt2&#x4E2D;&#xFF0C;&#x7531;&#x4E8E;aapt2&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x56FA;&#x5B9A;&#x8D44;&#x6E90;id&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x6700;&#x5F00;&#x59CB;&#xFF0C;&#x4E2A;&#x4EBA;&#x4EE5;&#x4E3A;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x548C;aapt&#x7684;public.xml&#x4F5C;&#x7528;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x5728;&#x7ECF;&#x8FC7;&#x4E25;&#x683C;&#x7684;&#x6D4B;&#x8BD5;&#x540E;&#x53D1;&#x73B0;&#x5176;&#x5B9E;&#x5E76;&#x4E0D;&#x662F;&#x60F3;&#x8C61;&#x7684;&#x90A3;&#x4E48;&#x7B80;&#x5355;&#xFF0C;&#x5B83;&#x53EA;&#x662F;&#x56FA;&#x5B9A;&#x8D44;&#x6E90;id&#x7684;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x4F46;&#x662F;&#x5E76;&#x4E0D;&#x5305;&#x62EC;&#x6DFB;&#x52A0;&#x8D44;&#x6E90;PUBLIC&#x6807;&#x8BB0;&#xFF0C;&#x56E0;&#x6B64;aapt2&#x7684;public.txt&#x4E0D;&#x7B49;&#x4E8E;aapt&#x7684;public.xml&#xFF0C;&#x5728;aapt2&#x4E2D;&#x5982;&#x679C;&#x8981;&#x6DFB;&#x52A0;PUBLIC&#x6807;&#x8BB0;&#xFF0C;&#x5176;&#x5B9E;&#x8FD8;&#x662F;&#x5F97;&#x53E6;&#x5BFB;&#x5176;&#x4ED6;&#x9014;&#x5F84;&#x3002;</p><p>&#x901A;&#x8FC7;&#x67E5;&#x770B;aapt2&#x7684;&#x6E90;&#x7801;&#x53D1;&#x73B0;&#xFF0C;&#x8D44;&#x6E90;&#x662F;&#x5426;&#x5C5E;&#x4E8E;public&#x7C7B;&#x578B;&#xFF0C;&#x5728;&#x8D44;&#x6E90;&#x6587;&#x4EF6;compile&#x4E3A;flat&#x6587;&#x4EF6;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x5DF2;&#x7ECF;&#x51B3;&#x5B9A;&#x4E86;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5FC5;&#x987B;&#x4E3B;&#x52A8;&#x58F0;&#x660E;public&#x7C7B;&#x578B;&#x7684;&#x8D44;&#x6E90;&#xFF0C;&#x8FD9;&#x4E2A;&#x8D44;&#x6E90;&#x624D;&#x4F1A;&#x88AB;&#x6253;&#x4E0A;PUBLIC&#x6807;&#x8BB0;&#xFF0C;&#x6240;&#x4EE5;&#x95EE;&#x9898;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#x548C;aapt&#x4E00;&#x6837;&#xFF0C;&#x53EA;&#x8981;&#x5728;mergeResource&#x4EFB;&#x52A1;&#x7684;&#x6700;&#x540E;&#xFF0C;&#x5C06;public.xml&#x62F7;&#x8D1D;&#x5230;mergeResource&#x4EFB;&#x52A1;&#x7684;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x5939;&#x5373;&#x53EF;&#x3002;&#x4F46;&#x662F;&#x6709;&#x4E00;&#x4E2A;&#x68D8;&#x624B;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5C31;&#x662F;aapt2&#x7684;mergeResource&#x4EFB;&#x52A1;&#x7684;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x4E0D;&#x662F;&#x539F;&#x59CB;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#xFF0C;&#x800C;&#x662F;&#x7ECF;&#x8FC7;&#x7F16;&#x8BD1;&#x540E;&#x7684;flat&#x6587;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x7EC8;&#x7684;&#x95EE;&#x9898;&#x53D8;&#x6210;&#x4E86;&#x5982;&#x4F55;&#x5C06;public.xml&#x6587;&#x4EF6;&#x7F16;&#x8BD1;&#x4E3A;flat&#x6587;&#x4EF6;&#x3002;</p><p>&#x7531;&#x4E8E;&#x6700;&#x5F00;&#x59CB;&#x6CA1;&#x6709;&#x60F3;&#x5230;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x4E00;&#x76F4;&#x7EA0;&#x7ED3;&#x4E8E;&#x600E;&#x4E48;&#x4FEE;&#x6539;aapt2&#x7684;&#x6E90;&#x7801;&#xFF0C;&#x6765;&#x8FBE;&#x5230;&#x6DFB;&#x52A0;PUBLIC&#x6807;&#x8BB0;&#x7684;&#x6548;&#x679C;&#xFF0C;&#x540E;&#x6765;&#x4E0D;&#x7ECF;&#x610F;&#x95F4;&#x60F3;&#x5230;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x53D1;&#x73B0;&#x4E4B;&#x524D;&#x60F3;&#x590D;&#x6742;&#x4E86;&#x3002;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5176;&#x5B9E;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x83B7;&#x53D6;aapt2&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#xFF0C;&#x81EA;&#x5DF1;&#x8C03;&#x7528;&#x4E00;&#x4E0B;compile&#x547D;&#x4EE4;&#xFF0C;&#x4F20;&#x9012;&#x76F8;&#x5173;&#x53C2;&#x6570;&#x6267;&#x884C;&#x4E0B;&#x8D44;&#x6E90;&#x7F16;&#x8BD1;&#x6B65;&#x9AA4;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x7F16;&#x8BD1;&#x540E;&#x7684;&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x5230;mergeResource&#x4EFB;&#x52A1;&#x7684;&#x8F93;&#x51FA;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x53C2;&#x8003;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;<a href="/2017/10/31/aapt2%E8%B5%84%E6%BA%90compile%E8%BF%87%E7%A8%8B/">aapt2&#x8D44;&#x6E90;compile&#x8FC7;&#x7A0B;</a>&#x53EF;&#x4EE5;&#x83B7;&#x5F97;aapt2&#x8D44;&#x6E90;&#x7F16;&#x8BD1;&#x7684;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x5F0F;&#x3002;&#x90A3;&#x4E48;gradle&#x4EE3;&#x7801;&#x600E;&#x4E48;&#x5B9E;&#x73B0;&#x5462;&#xFF1F;&#x4E5F;&#x5F88;&#x7B80;&#x5355;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">project.afterEvaluate {</span><br><span class="line">    def android = project.get<span class="constructor">Extensions()</span>.find<span class="constructor">ByName(&apos;<span class="params">android</span>&apos;)</span></span><br><span class="line">    android.get<span class="constructor">ApplicationVariants()</span>.all {def variant -&gt;</span><br><span class="line"></span><br><span class="line">        def mergeResourceTask = project.tasks.find<span class="constructor">ByName(<span class="string">&quot;merge${variant.getName().capitalize()}Resources&quot;</span>)</span></span><br><span class="line">        <span class="keyword">if</span> (mergeResourceTask) {</span><br><span class="line">            mergeResourceTask.doLast {</span><br><span class="line">                def variantData = variant.get<span class="constructor">MetaClass()</span>.get<span class="constructor">Property(<span class="params">variant</span>, &apos;<span class="params">variantData</span>&apos;)</span></span><br><span class="line">                def mBuildToolInfo = variantData.get<span class="constructor">Scope()</span>.get<span class="constructor">GlobalScope()</span>.get<span class="constructor">AndroidBuilder()</span>.get<span class="constructor">TargetInfo()</span>.get<span class="constructor">BuildTools()</span></span><br><span class="line">                <span class="comment">//buildTools&#x4E0B;&#x7684;&#x6240;&#x6709;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x90FD;&#x5728;&#x8FD9;&#x4E2A;map&#x91CC;</span></span><br><span class="line">                Map&lt;BuildToolInfo.PathId, String&gt; mPaths = mBuildToolInfo.get<span class="constructor">MetaClass()</span>.get<span class="constructor">Property(<span class="params">mBuildToolInfo</span>, <span class="string">&quot;mPaths&quot;</span>)</span> <span class="keyword">as</span> Map&lt;BuildToolInfo.PathId, String&gt;</span><br><span class="line"></span><br><span class="line">                project.exec(<span class="keyword">new</span> Action&lt;ExecSpec&gt;<span class="literal">()</span> {</span><br><span class="line">                    @Override</span><br><span class="line">                    void execute(ExecSpec execSpec) {</span><br><span class="line">                    	<span class="comment">//&#x62FC;&#x63A5;aapt2 compile&#x53C2;&#x6570;</span></span><br><span class="line">                        execSpec.executable <span class="string">&quot;${mPaths.get(BuildToolInfo.PathId.AAPT2)}&quot;</span></span><br><span class="line">                        execSpec.args(<span class="string">&quot;compile&quot;</span>)</span><br><span class="line">                        execSpec.args(<span class="string">&quot;--legacy&quot;</span>)</span><br><span class="line">                        execSpec.args(<span class="string">&quot;-o&quot;</span>)</span><br><span class="line">                        execSpec.args(<span class="string">&quot;${mergeResourceTask.outputDir}&quot;</span>)</span><br><span class="line">                        execSpec.args(<span class="string">&quot;${project.file(&apos;src/main/res/values/public.xml&apos;)}&quot;</span>)</span><br><span class="line">                    }</span><br><span class="line">                })</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x5C06;public.xml&#x653E;&#x5728;app/src/main/res/values/&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x7F16;&#x8BD1;&#x4E00;&#x4E0B;&#xFF0C;&#x7136;&#x540E;&#x7528;aapt2 dump&#x547D;&#x4EE4;&#x67E5;&#x770B;&#x4E00;&#x4E0B;&#x4EA7;&#x51FA;&#x7684;arsc&#x6587;&#x4EF6;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">Package <span class="attribute">name</span>=io.github.lizhangqu.aapt2 <span class="attribute">id</span>=7f</span><br><span class="line"></span><br><span class="line"> <span class="built_in"> type </span>layout <span class="attribute">id</span>=1 <span class="attribute">entryCount</span>=1</span><br><span class="line">    spec<span class="built_in"> resource </span>0x7f010090 io.github.lizhangqu.aapt2:layout/activity_main PUBLIC</span><br><span class="line">      () (file) res/layout/activity_main.xml</span><br><span class="line"></span><br><span class="line"> <span class="built_in"> type </span>style <span class="attribute">id</span>=2 <span class="attribute">entryCount</span>=1</span><br><span class="line">    spec<span class="built_in"> resource </span>0x7f020080 io.github.lizhangqu.aapt2:style/AppTheme PUBLIC</span><br><span class="line">      () (style)</span><br></pre></td></tr></table></figure><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x8D44;&#x6E90;&#x540D;&#x540E;&#x9762;&#x591A;&#x4E86;&#x4E00;&#x4E2A;PUBLIC&#x5B57;&#x7B26;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x8BE5;&#x8D44;&#x6E90;&#x88AB;&#x6253;&#x4E0A;PUBLIC&#x6807;&#x8BB0;&#x4E86;&#xFF0C;&#x5BF9;&#x4E8E;&#x5176;&#x4ED6;&#x9879;&#x76EE;&#x4E2D;&#x7684;&#x8D44;&#x6E90;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;aapt2&#x94FE;&#x63A5;&#x7684;&#x65F6;&#x5019;&#x76F4;&#x63A5;&#x4F7F;&#x7528;-I&#x53C2;&#x6570;&#x5F15;&#x7528;&#x8BE5;arsc&#xFF0C;&#x5C31;&#x548C;android.jar&#x7684;&#x5F15;&#x7528;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x4F7F;&#x7528;@&#x5305;&#x540D;:&#x8D44;&#x6E90;&#x7C7B;&#x578B;/&#x8D44;&#x6E90;&#x540D;&#x8FDB;&#x884C;&#x5F15;&#x7528;&#xFF0C;&#x5982;</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">@io<span class="selector-class">.github</span><span class="selector-class">.lizhangqu</span><span class="selector-class">.aapt2</span>:style/AppTheme</span><br></pre></td></tr></table></figure><p>&#x5230;&#x8FD9;&#x91CC;&#x4E3A;&#x6B62;&#xFF0C;&#x5176;&#x5B9E;&#x5DF2;&#x7ECF;&#x89E3;&#x51B3;&#x4E86;PUBLIC&#x6807;&#x8BB0;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x662F;&#x8FD8;&#x4E0D;&#x591F;&#x5B8C;&#x7F8E;</p><h3 id="&#x81EA;&#x52A8;&#x8F6C;&#x6362;public-txt&#x6587;&#x4EF6;&#x4E3A;public-xml&#x6587;&#x4EF6;"><a href="#&#x81EA;&#x52A8;&#x8F6C;&#x6362;public-txt&#x6587;&#x4EF6;&#x4E3A;public-xml&#x6587;&#x4EF6;" class="headerlink" title="&#x81EA;&#x52A8;&#x8F6C;&#x6362;public.txt&#x6587;&#x4EF6;&#x4E3A;public.xml&#x6587;&#x4EF6;"></a>&#x81EA;&#x52A8;&#x8F6C;&#x6362;public.txt&#x6587;&#x4EF6;&#x4E3A;public.xml&#x6587;&#x4EF6;</h3><p>&#x4E0A;&#x9762;&#x867D;&#x7136;&#x89E3;&#x51B3;&#x4E86;PUBLIC&#x6807;&#x8BB0;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x662F;&#x8FD8;&#x5F97;&#x81EA;&#x5DF1;&#x7EF4;&#x62A4;app/src/main/res/values/public.xml&#x6587;&#x4EF6;&#xFF0C;&#x7531;&#x4E8E;aapt2&#x81EA;&#x5DF1;&#x4F1A;&#x5BFC;&#x51FA;&#x4E00;&#x4EFD;public.txt&#x6587;&#x4EF6;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x8FD9;&#x4EFD;&#x6587;&#x4EF6;&#xFF0C;&#x5728;&#x7F16;&#x8BD1;&#x8FC7;&#x7A0B;&#x4E2D;&#x5C06;&#x5176;&#x81EA;&#x52A8;&#x8F6C;&#x4E3A;public.xml&#x6587;&#x4EF6;&#xFF0C;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x7EF4;&#x62A4;public.xml&#x6587;&#x4EF6;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5176;&#x5B9E;&#x8BF4;&#x7B80;&#x5355;&#x4E5F;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x662F;&#x6709;&#x4E00;&#x4E9B;&#x7EC6;&#x8282;&#x9700;&#x8981;&#x5904;&#x7406;</p><ul><li>public.txt&#x4E2D;&#x5B58;&#x5728;styleable&#x7C7B;&#x578B;&#x8D44;&#x6E90;&#xFF0C;public.xml&#x4E2D;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x56E0;&#x6B64;&#x8F6C;&#x6362;&#x8FC7;&#x7A0B;&#x4E2D;&#x5982;&#x679C;&#x9047;&#x5230;styleable&#x7C7B;&#x578B;&#xFF0C;&#x9700;&#x8981;&#x5FFD;&#x7565;</li><li>vector&#x77E2;&#x91CF;&#x56FE;&#x8D44;&#x6E90;&#x5982;&#x679C;&#x5B58;&#x5728;&#x5185;&#x90E8;&#x8D44;&#x6E90;&#xFF0C;&#x4E5F;&#x9700;&#x8981;&#x5FFD;&#x7565;&#xFF0C;&#x5728;aapt2&#x4E2D;&#xFF0C;&#x5B83;&#x7684;&#x540D;&#x5B57;&#x662F;&#x4EE5;\$&#x5F00;&#x5934;&#xFF0C;&#x7136;&#x540E;&#x662F;&#x4E3B;&#x8D44;&#x6E90;&#x540D;&#xFF0C;&#x7D27;&#x8DDF;&#x7740;__&#x6570;&#x5B57;&#x9012;&#x589E;&#x7D22;&#x5F15;&#xFF0C;&#x8FD9;&#x4E9B;&#x8D44;&#x6E90;&#x5916;&#x90E8;&#x662F;&#x65E0;&#x6CD5;&#x5F15;&#x7528;&#x5230;&#x7684;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x56FA;&#x5B9A;id&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x6DFB;&#x52A0;PUBLIC&#x6807;&#x8BB0;&#xFF0C;&#x5E76;&#x4E14;\$&#x7B26;&#x53F7;&#x5728;public.xml&#x4E2D;&#x662F;&#x975E;&#x6CD5;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x5FFD;&#x7565;&#x5B83;&#x5373;&#x53EF;</li><li>&#x7531;&#x4E8E;aapt2&#x6709;&#x8D44;&#x6E90;id&#x7684;&#x56FA;&#x5B9A;&#x65B9;&#x5F0F;&#xFF0C;&#x56E0;&#x6B64;&#x8F6C;&#x6362;&#x8FC7;&#x7A0B;&#x4E2D;&#x53EF;&#x76F4;&#x63A5;&#x4E22;&#x6389;id&#xFF0C;&#x7B80;&#x5355;&#x58F0;&#x660E;&#x5373;&#x53EF;</li><li>aapt2&#x7F16;&#x8BD1;&#x7684;public.xml&#x6587;&#x4EF6;&#x7684;&#x4E0A;&#x7EA7;&#x76EE;&#x5F55;&#x5FC5;&#x987B;&#x662F;values&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x5426;&#x5219;&#x7F16;&#x8BD1;&#x8FC7;&#x7A0B;&#x4F1A;&#x62A5;&#x975E;&#x6CD5;&#x8DEF;&#x5F84;</li></ul><p>&#x6240;&#x4EE5;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#x8BFB;&#x53D6;public.txt&#x7684;&#x6BCF;&#x4E00;&#x884C;&#xFF0C;&#x6B63;&#x5219;&#x5339;&#x914D;&#x8D44;&#x6E90;&#x7C7B;&#x578B;&#xFF0C;&#x8D44;&#x6E90;&#x540D;&#xFF0C;&#x8D44;&#x6E90;id&#xFF0C;&#x5982;&#x679C;&#x662F;&#x5185;&#x90E8;&#x8D44;&#x6E90;&#x548C;styleable&#x7C7B;&#x578B;&#x8D44;&#x6E90;&#xFF0C;&#x76F4;&#x63A5;&#x65E0;&#x89C6;&#xFF0C;&#x5426;&#x5219;&#x5199;&#x5165;public.xml&#x6587;&#x4EF6;&#xFF0C;&#x5199;&#x5165;&#x53EA;&#x9700;&#x8981;&#x5199;&#x5165;&#x8D44;&#x6E90;&#x7C7B;&#x578B;&#x548C;&#x8D44;&#x6E90;&#x540D;&#x5373;&#x53EF;&#xFF0C;&#x8D44;&#x6E90;id&#x6309;&#x9700;&#x9009;&#x62E9;&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x7EC8;&#x7684;&#x4EE3;&#x7801;&#x62BD;&#x8C61;&#x4E3A;&#x5982;&#x4E0B;&#x51FD;&#x6570;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x8F6C;&#x6362;publicTxt&#x4E3A;publicXml</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@SuppressWarnings(<span class="string">&quot;GrMethodMayBeStatic&quot;</span>)</span><br><span class="line"><span class="keyword">void</span> convertPublicTxtToPublicXml(<span class="keyword">File</span> publicTxtFile, <span class="keyword">File</span> publicXmlFile, <span class="keyword">boolean</span> withId) {</span><br><span class="line">    <span class="keyword">if</span> (publicTxtFile == <span class="keyword">null</span> || publicXmlFile == <span class="keyword">null</span> || !publicTxtFile.exists() || !publicTxtFile.isFile()) {</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> GradleException(<span class="string">&quot;publicTxtFile ${publicTxtFile} is not exist or not a file&quot;</span>)</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    GFileUtils.deleteQuietly(publicXmlFile)</span><br><span class="line">    GFileUtils.mkdirs(publicXmlFile.getParentFile())</span><br><span class="line">    GFileUtils.touch(publicXmlFile)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">project</span>.logger.info <span class="string">&quot;convert publicTxtFile ${publicTxtFile} to publicXmlFile ${publicXmlFile}&quot;</span></span><br><span class="line"></span><br><span class="line">    publicXmlFile.<span class="keyword">append</span>(<span class="string">&quot;&lt;!-- AUTO-GENERATED FILE.  DO NOT MODIFY --&gt;&quot;</span>)</span><br><span class="line">    publicXmlFile.<span class="keyword">append</span>(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    publicXmlFile.<span class="keyword">append</span>(<span class="string">&quot;&lt;resources&gt;&quot;</span>)</span><br><span class="line">    publicXmlFile.<span class="keyword">append</span>(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    Pattern linePattern = Pattern.<span class="keyword">compile</span>(<span class="string">&quot;.*?:(.*?)/(.*?)\\s+=\\s+(.*?)&quot;</span>)</span><br><span class="line"></span><br><span class="line">    publicTxtFile.<span class="keyword">eachLine</span> {<span class="keyword">def</span> line -&gt;</span><br><span class="line">        Matcher matcher = linePattern.matcher(line)</span><br><span class="line">        <span class="keyword">if</span> (matcher.matches() &amp;&amp; matcher.groupCount() == <span class="number">3</span>) {</span><br><span class="line">            String resType = matcher.<span class="keyword">group</span>(<span class="number">1</span>)</span><br><span class="line">            String resName = matcher.<span class="keyword">group</span>(<span class="number">2</span>)</span><br><span class="line">            <span class="keyword">if</span> (resName.startsWith(<span class="string">&apos;$&apos;</span>)) {</span><br><span class="line">                <span class="keyword">project</span>.logger.info <span class="string">&quot;ignore to public res ${resName} because it&apos;s a nested resource&quot;</span></span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span> (resType.equalsIgnoreCase(<span class="string">&quot;styleable&quot;</span>)) {</span><br><span class="line">                <span class="keyword">project</span>.logger.info <span class="string">&quot;ignore to public res ${resName} because it&apos;s a styleable resource&quot;</span></span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="keyword">if</span> (withId) {</span><br><span class="line">                    publicXmlFile.<span class="keyword">append</span>(<span class="string">&quot;\t&lt;public type=\&quot;${resType}\&quot; name=\&quot;${resName}\&quot; id=\&quot;${matcher.group(3)}\&quot; /&gt;\n&quot;</span>)</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    publicXmlFile.<span class="keyword">append</span>(<span class="string">&quot;\t&lt;public type=\&quot;${resType}\&quot; name=\&quot;${resName}\&quot; /&gt;\n&quot;</span>)</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    publicXmlFile.<span class="keyword">append</span>(<span class="string">&quot;&lt;/resources&gt;&quot;</span>)</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6700;&#x5F00;&#x59CB;&#x7684;&#x90A3;&#x6BB5;&#x4EE3;&#x7801;&#x5C31;&#x53EF;&#x4EE5;&#x4F18;&#x5316;&#x4E3A;&#x5982;&#x4E0B;&#x4EE3;&#x7801;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">project.afterEvaluate {</span><br><span class="line">    def android = project.get<span class="constructor">Extensions()</span>.find<span class="constructor">ByName(&apos;<span class="params">android</span>&apos;)</span></span><br><span class="line">    android.get<span class="constructor">ApplicationVariants()</span>.all {def variant -&gt;</span><br><span class="line"></span><br><span class="line">        def mergeResourceTask = project.tasks.find<span class="constructor">ByName(<span class="string">&quot;merge${variant.getName().capitalize()}Resources&quot;</span>)</span></span><br><span class="line">        <span class="keyword">if</span> (mergeResourceTask) {</span><br><span class="line">            mergeResourceTask.doLast {</span><br><span class="line">            	<span class="comment">//&#x76EE;&#x6807;&#x8F6C;&#x6362;&#x6587;&#x4EF6;&#xFF0C;&#x6CE8;&#x610F;public.xml&#x4E0A;&#x7EA7;&#x76EE;&#x5F55;&#x5FC5;&#x987B;&#x5E26;values&#x76EE;&#x5F55;&#xFF0C;&#x5426;&#x5219;aapt2&#x6267;&#x884C;&#x65F6;&#x4F1A;&#x62A5;&#x975E;&#x6CD5;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;</span></span><br><span class="line">                File publicXmlFile = <span class="keyword">new</span> <span class="constructor">File(<span class="params">project</span>.<span class="params">buildDir</span>, <span class="string">&quot;intermediates/res/public/${variant.getDirName()}/values/public.xml&quot;</span>)</span></span><br><span class="line">                <span class="comment">//&#x8F6C;&#x6362;public.txt&#x6587;&#x4EF6;&#x4E3A;publicXml&#x6587;&#x4EF6;</span></span><br><span class="line">                convert<span class="constructor">PublicTxtToPublicXml(<span class="params">project</span>.<span class="params">file</span>(&apos;<span class="params">public</span>.<span class="params">txt</span>&apos;)</span>, publicXmlFile, <span class="literal">false</span>)</span><br><span class="line"></span><br><span class="line">                def variantData = variant.get<span class="constructor">MetaClass()</span>.get<span class="constructor">Property(<span class="params">variant</span>, &apos;<span class="params">variantData</span>&apos;)</span></span><br><span class="line">                def mBuildToolInfo = variantData.get<span class="constructor">Scope()</span>.get<span class="constructor">GlobalScope()</span>.get<span class="constructor">AndroidBuilder()</span>.get<span class="constructor">TargetInfo()</span>.get<span class="constructor">BuildTools()</span></span><br><span class="line">                Map&lt;BuildToolInfo.PathId, String&gt; mPaths = mBuildToolInfo.get<span class="constructor">MetaClass()</span>.get<span class="constructor">Property(<span class="params">mBuildToolInfo</span>, <span class="string">&quot;mPaths&quot;</span>)</span> <span class="keyword">as</span> Map&lt;BuildToolInfo.PathId, String&gt;</span><br><span class="line"></span><br><span class="line">                project.exec(<span class="keyword">new</span> Action&lt;ExecSpec&gt;<span class="literal">()</span> {</span><br><span class="line">                    @Override</span><br><span class="line">                    void execute(ExecSpec execSpec) {</span><br><span class="line">                        execSpec.executable <span class="string">&quot;${mPaths.get(BuildToolInfo.PathId.AAPT2)}&quot;</span></span><br><span class="line">                        execSpec.args(<span class="string">&quot;compile&quot;</span>)</span><br><span class="line">                        execSpec.args(<span class="string">&quot;--legacy&quot;</span>)</span><br><span class="line">                        execSpec.args(<span class="string">&quot;-o&quot;</span>)</span><br><span class="line">                        execSpec.args(<span class="string">&quot;${mergeResourceTask.outputDir}&quot;</span>)</span><br><span class="line">                        execSpec.args(<span class="string">&quot;${publicXmlFile}&quot;</span>)</span><br><span class="line">                    }</span><br><span class="line">                })</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h3><p>&#x6709;&#x65F6;&#x5019;&#xFF0C;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x4E00;&#x79CD;&#x601D;&#x8DEF;&#x884C;&#x4E0D;&#x901A;&#x53EF;&#x4EE5;&#x6362;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x8BF4;&#x4E0D;&#x5B9A;&#x5C31;&#x4F1A;&#x67F3;&#x6697;&#x82B1;&#x660E;&#x5462;!</p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>aapt2</tag>
        <tag>资源public flag</tag>
      </tags>
  </entry>
  <entry>
    <title>解决 CLion 报红 NDK 相关头文件</title>
    <url>/2018/01/24/%E8%A7%A3%E5%86%B3CLion%E6%8A%A5%E7%BA%A2NDK%E7%9B%B8%E5%85%B3%E5%A4%B4%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<p>&#x524D;&#x51E0;&#x5929;&#x9047;&#x5230;&#x4E00;&#x4E2A;&#x5751;&#xFF0C;&#x5C31;&#x662F;Clion&#x3001;Cmake&#x3001;NDK&#x5728;&#x4E00;&#x8D77;&#x4F7F;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;Clion&#x4F1A;&#x5C06;NDK&#x76F8;&#x5173;&#x5934;&#x6587;&#x4EF6;&#x62A5;&#x7EA2;&#xFF0C;&#x5373;&#x627E;&#x4E0D;&#x5230;&#x76F8;&#x5173;&#x5934;&#x6587;&#x4EF6;&#xFF0C;&#x65E0;&#x6CD5;&#x505A;&#x5230;&#x4EE3;&#x7801;&#x63D0;&#x793A;&#x53CA;&#x81EA;&#x52A8;&#x8865;&#x5168;&#xFF0C;&#x4F46;&#x662F;&#x7F16;&#x8BD1;&#x662F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x7684;&#xFF0C;google&#x4E86;&#x4E00;&#x756A;&#xFF0C;&#x53D1;&#x73B0;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5728;2015&#x5E74;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x5B58;&#x5728;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x5B98;&#x65B9;&#x5BA3;&#x79F0;&#x5DF2;&#x7ECF;&#x4FEE;&#x590D;&#x4E86;&#xFF0C; &#x4F46;&#x662F;&#x5B9E;&#x9645;&#x6D4B;&#x8BD5;&#x4E0B;&#x6765;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x4FEE;&#x590D;&#x3002;&#x76F8;&#x5173;&#x94FE;&#x63A5;&#x89C1;&#xFF1A;</p><ul><li><a href="https://youtrack.jetbrains.com/oauth?state=%2Fissue%2FCPP-3962" target="_blank" rel="noopener">Problem with include, parser is now broken with -DCMAKE_SYSTEM_NAME=Generic (MinGW)</a></li><li><a href="https://intellij-support.jetbrains.com/hc/en-us/articles/207253135-CLion-fails-to-find-some-of-my-headers-Where-does-it-search-for-them-" target="_blank" rel="noopener">CLion fails to find some of my headers. Where does it search for them?</a></li><li><a href="https://intellij-support.jetbrains.com/hc/en-us/community/posts/115000693804-Cannot-find-the-header-in-C" target="_blank" rel="noopener">Cannot find the header in C</a></li></ul><a id="more"></a><p>&#x53D1;&#x73B0;&#x9047;&#x5230;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x4EBA;&#x8FD8;&#x662F;&#x86EE;&#x591A;&#x7684;&#xFF0C;&#x57FA;&#x672C;&#x4E0A;&#x90FD;&#x6CA1;&#x6709;&#x4EBA;&#x80FD;&#x7ED9;&#x51FA;&#x6B63;&#x786E;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x5F0F;&#x3002;&#x4E8E;&#x662F;&#x5C31;&#x4E0D;&#x5F97;&#x4E0D;&#x81EA;&#x5DF1;&#x5BFB;&#x627E;&#x89E3;&#x51B3;&#x65B9;&#x5F0F;&#x3002;</p><p>&#x65E2;&#x7136;&#x5B98;&#x65B9;&#x5BA3;&#x79F0;&#x5DF2;&#x7ECF;&#x4FEE;&#x590D;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x95EE;&#x9898;&#x5230;&#x5E95;&#x51FA;&#x5728;&#x54EA;&#x91CC;&#x5462;&#xFF1F;&#x6700;&#x7EC8;&#x731C;&#x60F3;&#x548C;cmake&#x76F8;&#x5173;&#xFF0C;&#x56E0;&#x4E3A;ndk&#x9700;&#x8981;&#x7528;&#x7684;cmake&#x662F;google&#x81EA;&#x5DF1;&#x5B9A;&#x5236;&#x8FC7;&#x7684;&#xFF0C;&#x5176;&#x76EE;&#x5F55;&#x4F4D;&#x4E8E;/path/to/AndroidSDK/cmake/&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x5F53;&#x524D;&#x7684;&#x7248;&#x672C;&#x8FD8;&#x662F;3.6.+&#xFF0C;&#x800C;CLion&#x91CC;&#x4F7F;&#x7528;&#x7684;cmake&#x5DF2;&#x7ECF;&#x5230;&#x4E86;3.9.6&#x7684;&#x7248;&#x672C;&#xFF0C;&#x56E0;&#x6B64;&#x6000;&#x7591;&#x662F;cmake&#x7248;&#x672C;&#x8FC7;&#x4F4E;&#x5BFC;&#x81F4;&#x7684;&#x3002;</p><p>&#x5148;&#x6765;&#x770B;&#x770B;&#xFF0C;&#x5BF9;&#x4E8E;google&#x81EA;&#x5DF1;&#x5B9A;&#x5236;&#x8FC7;&#x7684;cmake&#xFF0C;&#x5982;&#x4F55;&#x5728;clion&#x4E2D;&#x8FDB;&#x884C;&#x96C6;&#x6210;&#x3002;</p><p>1&#xFF0C;&#x6DFB;&#x52A0;Toolchain&#xFF1B;CLion -&gt; Preferences -&gt; Build, Execution, Deployment -&gt; Toolchains -&gt; &#x6DFB;&#x52A0;&#x4E00;&#x4E2A;toolchain&#xFF0C;&#x5C06;cmake&#x8DEF;&#x5F84;&#x6307;&#x5411;AndroidSDK&#x76EE;&#x5F55;&#x4E0B;&#x7684;cmake&#xFF0C;&#x5E76;&#x547D;&#x540D;&#x4E3A;Android&#x3002;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2018/01/24/%E8%A7%A3%E5%86%B3CLion%E6%8A%A5%E7%BA%A2NDK%E7%9B%B8%E5%85%B3%E5%A4%B4%E6%96%87%E4%BB%B6/toolchain_add.png" alt="toolchain_add.png"></p><p>2&#xFF0C;&#x914D;&#x7F6E;CMake&#xFF1B;CLion -&gt; Preferences -&gt; Build, Execution, Deployment -&gt; CMake -&gt; &#x5C06;Toolchain&#x9009;&#x62E9;&#x4E3A;&#x521A;&#x624D;&#x7B2C;&#x4E00;&#x6B65;&#x6DFB;&#x52A0;&#x7684;Android -&gt; &#x6DFB;&#x52A0;CMake options&#x9009;&#x9879;&#xFF0C;&#x5176;&#x5185;&#x5BB9;&#x4ECE;Android Studio&#x4EA7;&#x751F;&#x7684;&#x547D;&#x4EE4;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x914D;&#x7F6E;&#x4E3A;&#x5982;&#x4E0B;&#x5185;&#x5BB9;</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">-DANDROID_ABI</span>=<span class="string">&quot;armeabi-v7a&quot;</span></span><br><span class="line"><span class="attr">-DANDROID_NDK</span>=<span class="string">&quot;/Users/lizhangqu/AndroidNDK/android-ndk-r14b&quot;</span></span><br><span class="line"><span class="attr">-DCMAKE_BUILD_TYPE</span>=<span class="string">&quot;Release&quot;</span></span><br><span class="line"><span class="attr">-DCMAKE_TOOLCHAIN_FILE</span>=<span class="string">&quot;/Users/lizhangqu/AndroidNDK/android-ndk-r14b/build/cmake/android.toolchain.cmake&quot;</span></span><br><span class="line"><span class="attr">-DANDROID_PLATFORM</span>=<span class="string">&quot;android-14&quot;</span></span><br><span class="line"><span class="attr">-DCMAKE_C_FLAGS</span>=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">-DCMAKE_CXX_FLAGS</span>=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">-DANDROID_TOOLCHAIN</span>=<span class="string">&quot;clang&quot;</span></span><br></pre></td></tr></table></figure><p>&#x6700;&#x7EC8;&#x7684;&#x6548;&#x679C;&#x56FE;&#x5982;&#x4E0B;</p><p><img src="/2018/01/24/%E8%A7%A3%E5%86%B3CLion%E6%8A%A5%E7%BA%A2NDK%E7%9B%B8%E5%85%B3%E5%A4%B4%E6%96%87%E4%BB%B6/toolchain_cmake.png" alt="toolchain_cmake.png"></p><p>&#x5BF9;&#x4E8E;&#x4EE5;&#x4E0A;&#x914D;&#x7F6E;&#x7684;Cmake Options&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x4EE5;&#x4E0B;&#x51E0;&#x7BC7;&#x6587;&#x7AE0;</p><ul><li><a href="/2017/06/27/cmake-&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;/">cmake &#x4EA4;&#x53C9;&#x7F16;&#x8BD1;</a></li><li><a href="/2017/06/24/Android-Gradle-Plugin&#x6E90;&#x7801;&#x89E3;&#x6790;&#x4E4B;externalNativeBuild/">Android Gradle Plugin &#x6E90;&#x7801;&#x89E3;&#x6790;&#x4E4B; externalNativeBuild</a></li></ul><p>&#x8FD9;&#x6837;&#x914D;&#x7F6E;&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#x4E86;&#xFF0C;&#x7F16;&#x8BD1;&#x662F;&#x5B8C;&#x5168;ok&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x4EE3;&#x7801;&#x63D0;&#x793A;&#x548C;&#x81EA;&#x52A8;&#x8865;&#x5168;&#x529F;&#x80FD;&#x5BF9;&#x4E8E;ndk&#x76F8;&#x5173;&#x7684;&#x5934;&#x6587;&#x4EF6;&#xFF0C;&#x5168;&#x90E8;&#x5931;&#x6548;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2018/01/24/%E8%A7%A3%E5%86%B3CLion%E6%8A%A5%E7%BA%A2NDK%E7%9B%B8%E5%85%B3%E5%A4%B4%E6%96%87%E4%BB%B6/red.png" alt="red.png"></p><p>&#x6240;&#x4EE5;&#x4E2A;&#x4EBA;&#x731C;&#x6D4B;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x53EF;&#x80FD;&#x548C;cmake&#x6709;&#x5173;&#xFF0C;&#x4E8E;&#x662F;&#x5C06;cmake&#x6362;&#x6210;CLion&#x81EA;&#x5E26;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x4F46;&#x662F;&#x53D1;&#x73B0;&#x5728;&#x751F;&#x6210;cmake&#x7684;&#x76F8;&#x5173;&#x6587;&#x4EF6;&#x65F6;&#xFF0C;&#x751F;&#x6210;&#x5C31;&#x51FA;&#x9519;&#x4E86;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2018/01/24/%E8%A7%A3%E5%86%B3CLion%E6%8A%A5%E7%BA%A2NDK%E7%9B%B8%E5%85%B3%E5%A4%B4%E6%96%87%E4%BB%B6/error_cmake.png" alt="error_cmake.png"></p><p>&#x90A3;&#x4E48;&#x6709;&#x6CA1;&#x6709;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x65E2;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x4EE3;&#x7801;&#x63D0;&#x793A;&#xFF0C;&#x53C8;&#x53EF;&#x4EE5;&#x4E0D;&#x4F7F;&#x7528;google&#x5B9A;&#x5236;&#x7684;cmake&#x5462;&#xFF0C;&#x901A;&#x8FC7;&#x67E5;&#x627E;cmake&#x76F8;&#x5173;&#x6587;&#x6863;&#x53D1;&#x73B0;&#xFF0C;cmake&#x5728;3.7&#x4E4B;&#x540E;&#xFF0C;&#x5DF2;&#x7ECF;&#x6DFB;&#x52A0;&#x4E86;&#x5BF9;ndk&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x7684;&#x652F;&#x6301;&#x4E86;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x610F;&#x5473;&#x7740;&#x6211;&#x4EEC;&#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x5728;CLion&#x4E2D;&#x4E0D;&#x4F7F;&#x7528;google&#x5B9A;&#x5236;&#x8FC7;&#x7684;cmake&#x3002;</p><p>cmake 3.6&#x7248;&#x672C;&#x7684;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x6587;&#x6863;&#xFF0C;&#x5730;&#x5740;&#x89C1; <a href="https://cmake.org/cmake/help/v3.6/manual/cmake-toolchains.7.html" target="_blank" rel="noopener">cmake-toolchains-3.6</a>&#xFF0C;&#x5177;&#x4F53;&#x76EE;&#x5F55;&#x5982;&#x4E0B;</p><p><img src="/2018/01/24/%E8%A7%A3%E5%86%B3CLion%E6%8A%A5%E7%BA%A2NDK%E7%9B%B8%E5%85%B3%E5%A4%B4%E6%96%87%E4%BB%B6/cmake_3_6.png" alt="cmake_3_6.png"></p><p>cmake 3.7&#x7248;&#x672C;&#x53CA;&#x4EE5;&#x540E;&#x7684;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x6587;&#x6863;&#xFF0C;&#x5730;&#x5740;&#x89C1; <a href="https://cmake.org/cmake/help/v3.7/manual/cmake-toolchains.7.html" target="_blank" rel="noopener">cmake-toolchains-3.7</a>&#xFF0C;&#x4ECE;&#x5BF9;&#x5E94;&#x7684;&#x76EE;&#x5F55;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x591A;&#x4E86;Android&#x8FD9;&#x4E00;&#x9009;&#x9879;&#xFF0C;&#x5177;&#x4F53;&#x76EE;&#x5F55;&#x5982;&#x4E0B;</p><p><img src="/2018/01/24/%E8%A7%A3%E5%86%B3CLion%E6%8A%A5%E7%BA%A2NDK%E7%9B%B8%E5%85%B3%E5%A4%B4%E6%96%87%E4%BB%B6/cmake_3_7.png" alt="cmake_3_7.png"></p><p>&#x4ECE;&#x6587;&#x6863;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x6211;&#x4EEC;&#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;cmake 3.7&#x4E4B;&#x540E;&#x81EA;&#x5E26;&#x7684;Android NDK&#x5DE5;&#x5177;&#x94FE;&#xFF0C;&#x800C;&#x4E0D;&#x4F7F;&#x7528;google ndk&#x7684;toolchain&#xFF0C;&#x4E3A;&#x4E86;&#x8FBE;&#x5230;&#x6700;&#x7B80;&#x5355;&#x7684;&#x914D;&#x7F6E;&#xFF0C;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x4F20;&#x9012;&#x53C2;&#x6570;</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">-DCMAKE_SYSTEM_NAME</span>=Android</span><br><span class="line"><span class="attr">-DCMAKE_ANDROID_ARCH_ABI</span>=armeabi-v7a</span><br><span class="line"><span class="attr">-DCMAKE_ANDROID_NDK</span>=/Users/lizhangqu/AndroidNDK/android-ndk-r14b</span><br><span class="line"><span class="attr">-DCMAKE_SYSTEM_VERSION</span>=<span class="number">14</span></span><br><span class="line"><span class="attr">-DCMAKE_C_FLAGS</span>=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">-DCMAKE_CXX_FLAGS</span>=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="attr">-DCMAKE_ANDROID_NDK_TOOLCHAIN_VERSION</span>=clang</span><br></pre></td></tr></table></figure><p>&#x5C06;&#x4EE5;&#x4E0A;cmake option&#x914D;&#x7F6E;&#x5230;&#x4E4B;&#x524D;&#x914D;&#x7F6E;&#x8FC7;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x5C06;&#x4E4B;&#x524D;&#x7684;&#x914D;&#x7F6E;&#x7684;toolchain&#x91CD;&#x65B0;&#x9009;&#x62E9;&#x9ED8;&#x8BA4;&#x7684;CLion&#x81EA;&#x5E26;&#x7684;cmake&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2018/01/24/%E8%A7%A3%E5%86%B3CLion%E6%8A%A5%E7%BA%A2NDK%E7%9B%B8%E5%85%B3%E5%A4%B4%E6%96%87%E4%BB%B6/toolchain_default.png" alt="toolchain_default.png"></p><p>&#x7136;&#x540E;&#x91CD;&#x65B0;&#x751F;&#x6210;cmake&#x76F8;&#x5173;&#x6587;&#x4EF6;&#xFF0C;&#x518D;&#x6B21;&#x67E5;&#x770B;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x81EA;&#x52A8;&#x8865;&#x5168;&#x4EE5;&#x53CA;&#x662F;&#x5426;&#x8FD8;&#x62A5;&#x7EA2;&#x3002;</p><p><img src="/2018/01/24/%E8%A7%A3%E5%86%B3CLion%E6%8A%A5%E7%BA%A2NDK%E7%9B%B8%E5%85%B3%E5%A4%B4%E6%96%87%E4%BB%B6/no_red.png" alt="no_red.png"></p><p>&#x4ECE;&#x4E0A;&#x56FE;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x95EE;&#x9898;&#x5DF2;&#x7ECF;&#x88AB;&#x4FEE;&#x590D;&#x4E86;~</p><p>&#x603B;&#x7ED3;&#xFF1A;google&#x6316;&#x4E86;&#x4E2A;&#x6DF1;&#x5751;&#xFF0C;&#x51D1;&#x5DE7;&#x6211;&#x8DF3;&#x8FDB;&#x4E86;&#x8FD9;&#x4E2A;&#x5751;&#xFF0C;clion&#x548C;cmake&#x90FD;&#x6CA1;&#x6709;&#x9505;&#xFF0C;&#x8FD9;&#x4E2A;&#x9505;&#x4ED6;&#x4EEC;&#x4E0D;&#x80CC;&#xFF0C;&#x6240;&#x4EE5;clion&#x5BA3;&#x4F20;&#x5DF2;&#x7ECF;&#x4FEE;&#x590D;&#x8BE5;&#x95EE;&#x9898;&#x4E5F;&#x4E0D;&#x662F;&#x6CA1;&#x6709;&#x9053;&#x7406;&#x7684;~</p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>NDK</tag>
        <tag>Clion</tag>
      </tags>
  </entry>
  <entry>
    <title>Android application 中使用 provided aar 并没有那么简单</title>
    <url>/2017/12/24/Android-application%E4%B8%AD%E4%BD%BF%E7%94%A8provided-aar%E5%B9%B6%E6%B2%A1%E6%9C%89%E9%82%A3%E4%B9%88%E7%AE%80%E5%8D%95/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>&#x9996;&#x5148;&#x7B80;&#x5355;&#x8BB2;&#x4E00;&#x4E0B;&#x8FD9;&#x4E2A;&#x9700;&#x6C42;&#x7684;&#x80CC;&#x666F;&#xFF0C;&#x5927;&#x90E8;&#x5206;&#x573A;&#x666F;&#x4E0B;&#xFF0C;&#x662F;&#x6CA1;&#x6709;&#x8FD9;&#x4E2A;&#x9700;&#x6C42;&#x7684;&#xFF0C;&#x8FD9;&#x4E2A;&#x9700;&#x6C42;&#x51FA;&#x73B0;&#x5728;&#x63D2;&#x4EF6;&#x5316;&#x4E2D;&#xFF0C;&#x5F53;&#x4E00;&#x4E2A;android&#x63D2;&#x4EF6;&#x5F15;&#x7528;aar&#x4E2D;&#x7684;&#x7C7B;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x662F;&#x4F7F;&#x7528;com.android.application &#x8FD9;&#x4E2A;gradle&#x63D2;&#x4EF6;&#x8FDB;&#x884C;&#x6253;&#x5305;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x7C7B;&#x5DF2;&#x7ECF;&#x5728;&#x5BBF;&#x4E3B;&#x4E2D;&#x6216;&#x8005;&#x5176;&#x4ED6;&#x63D2;&#x4EF6;&#x4E2D;&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x6CA1;&#x6709;&#x5FC5;&#x8981;&#x5C06;&#x8FD9;&#x4E2A;&#x91CD;&#x590D;&#x7C7B;&#x6253;&#x5305;&#x5230;&#x63D2;&#x4EF6;&#x4E2D;&#xFF0C;&#x56E0;&#x6B64;&#x53EA;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x5F15;&#x7528;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x6253;&#x5305;&#x5230;&#x63D2;&#x4EF6;&#x4E2D;&#x3002;&#x5F15;&#x7528;&#x662F;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x76EE;&#x7684;&#xFF0C;&#x4FDD;&#x8BC1;&#x6DF7;&#x6DC6;&#x7684;&#x6B63;&#x786E;&#x6027;&#x5219;&#x662F;&#x53E6;&#x4E00;&#x4E2A;&#x76EE;&#x7684;&#x3002;&#x5BFB;&#x627E;&#x8FD9;&#x4E2A;&#x9700;&#x6C42;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x53D1;&#x73B0;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5176;&#x5B9E;&#x5E76;&#x6CA1;&#x6709;&#x60F3;&#x8C61;&#x4E2D;&#x7684;&#x90A3;&#x4E48;&#x597D;&#x89E3;&#x51B3;&#xFF0C;&#x4F1A;&#x9047;&#x5230;&#x8BB8;&#x8BB8;&#x591A;&#x591A;&#x7684;&#x7EC6;&#x8282;&#x95EE;&#x9898;&#x3002;</p><a id="more"></a><h3 id="Atlas&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;"><a href="#Atlas&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;" class="headerlink" title="Atlas&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;"></a>Atlas&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;</h3><p>atlas&#x7684;&#x63D2;&#x4EF6;&#x5E76;&#x6CA1;&#x6709;&#x4F7F;&#x7528;com.android.application&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#xFF0C;&#x800C;&#x662F;&#x4F7F;&#x7528;com.android.library&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#xFF0C;&#x7136;&#x540E;&#x53D1;&#x5E03;maven&#x4E2D;&#x7684;&#x4E5F;&#x53EA;&#x662F;aar(awb)&#xFF0C;&#x771F;&#x6B63;&#x7F16;&#x8BD1;&#x63D2;&#x4EF6;&#x7684;&#x65F6;&#x673A;&#x662F;&#x5728;&#x5BBF;&#x4E3B;&#x4E2D;&#xFF0C;&#x4F7F;&#x7528;bundleCompile&#x5F15;&#x7528;&#x63D2;&#x4EF6;aar&#xFF0C;&#x5728;&#x7F16;&#x8BD1;&#x5BBF;&#x4E3B;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F1A;&#x6267;&#x884C;&#x63D2;&#x4EF6;&#x7F16;&#x8BD1;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x7F16;&#x8BD1;&#x597D;&#x7684;&#x63D2;&#x4EF6;&#x653E;&#x5165;&#x52A8;&#x6001;&#x5E93;armeabi&#x76EE;&#x5F55;&#xFF0C;&#x800C;&#x5728;com.android.library&#x4E2D;&#x4F7F;&#x7528;provided aar&#x662F;&#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x7684;&#xFF0C;&#x4E8E;&#x662F;atlas&#x4E5F;&#x5C31;&#x6CA1;&#x6709;&#x4E86;&#x5728;com.android.application&#x4E2D;&#x4F7F;&#x7528;provided aar&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x5B8C;&#x5168;&#x4E0D;&#x5B58;&#x5728;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;&#x4F46;&#x662F;&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x7684;&#x63D2;&#x4EF6;&#x5728;&#x96C6;&#x6210;&#x5230;&#x5BBF;&#x4E3B;&#x4E2D;&#x524D;&#x5C31;&#x5DF2;&#x7ECF;&#x7F16;&#x8BD1;&#x597D;&#x4E86;&#xFF0C;&#x56E0;&#x6B64;&#x5C31;&#x9700;&#x8981;&#x4F7F;&#x7528;com.android.application&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E00;&#x4E9B;&#x5BBF;&#x4E3B;&#x4E2D;&#x6216;&#x5176;&#x4ED6;&#x63D2;&#x4EF6;&#x4E2D;&#x5B58;&#x5728;&#x7684;&#x91CD;&#x590D;&#x7C7B;&#xFF0C;&#x5C31;&#x5FC5;&#x7136;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x5230;provided&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5BF9;&#x4E8E;jar&#x6765;&#x8BF4;&#xFF0C;&#x6CA1;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x6B63;&#x5E38;&#x4F7F;&#x7528;&#x5373;&#x53EF;&#xFF0C;&#x4F46;&#x662F;&#x5BF9;&#x4E8E;aar&#x6765;&#x8BF4;&#xFF0C;android gradle plugin&#x80AF;&#x5B9A;&#x4F1A;&#x7206;&#x51FA;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x8BE5;&#x95EE;&#x9898;&#x5982;&#x4E0B;</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">Provided dependencies can <span class="keyword">only</span> <span class="keyword">be</span> jars.</span><br></pre></td></tr></table></figure><p>&#x56E0;&#x6B64;&#x5FC5;&#x987B;&#x5BFB;&#x627E;&#x4E00;&#x4E2A;&#x5728;com.android.application&#x4E2D;&#x4F7F;&#x7528;provided aar&#x7684;&#x65B9;&#x6CD5;&#x3002;</p><h3 id="&#x65B9;&#x6CD5;&#x4E00;&#xFF1A;&#x81EA;&#x5B9A;&#x4E49;Configuration"><a href="#&#x65B9;&#x6CD5;&#x4E00;&#xFF1A;&#x81EA;&#x5B9A;&#x4E49;Configuration" class="headerlink" title="&#x65B9;&#x6CD5;&#x4E00;&#xFF1A;&#x81EA;&#x5B9A;&#x4E49;Configuration"></a>&#x65B9;&#x6CD5;&#x4E00;&#xFF1A;&#x81EA;&#x5B9A;&#x4E49;Configuration</h3><p>&#x4F7F;&#x7528;&#x81EA;&#x5B9A;&#x4E49;&#x7684;Configuration&#xFF0C;&#x7136;&#x540E;&#x5C06;provided&#x8FD9;&#x4E2A;Configuration&#x7EE7;&#x627F;&#x6211;&#x4EEC;&#x81EA;&#x5B9A;&#x4E49;&#x7684;Configuration&#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x7406;&#x6240;&#x5F53;&#x7136;&#x7684;&#x4F1A;&#x6700;&#x5148;&#x88AB;&#x60F3;&#x5230;&#x3002;</p><p>&#x9996;&#x5148;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x7684;Configuration&#x5BF9;&#x8C61;providedAar&#xFF0C;&#x7136;&#x540E;&#x5C06;providedAar&#x4E2D;&#x7684;&#x6240;&#x6709;&#x4F9D;&#x8D56;&#x89E3;&#x6790;&#x51FA;&#x6765;&#xFF0C;&#x5C06;&#x89E3;&#x6790;&#x51FA;&#x6765;&#x7684;&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x5224;&#x65AD;&#x5904;&#x7406;&#xFF0C;&#x5982;&#x679C;&#x662F;aar&#xFF0C;&#x5219;&#x63D0;&#x53D6;classes.jar&#xFF0C;&#x5982;&#x679C;&#x662F;jar&#xFF0C;&#x5219;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#xFF0C;&#x7136;&#x540E;&#x6DFB;&#x52A0;&#x5230;provided&#x7684;scope&#x4E0A;&#x3002;&#x8FD9;&#x6837;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">@Override</span><br><span class="line"><span class="keyword">void</span> apply(<span class="keyword">Project</span> <span class="keyword">project</span>) {</span><br><span class="line">    <span class="comment">//&#x521B;&#x5EFA;&#x81EA;&#x5B9A;&#x4E49;&#x7684;configuration&#xFF0C;&#x4E14;&#x8FDB;&#x884C;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#xFF0C;SNAPSHOT&#x7248;&#x672C;&#x7ACB;&#x5373;&#x66F4;&#x65B0;</span></span><br><span class="line">    Configuration configuration = <span class="keyword">project</span>.getConfigurations().create(<span class="string">&quot;providedAar&quot;</span>) {</span><br><span class="line">        <span class="comment">//&#x8FDB;&#x884C;&#x4F20;&#x9012;&#x4F9D;&#x8D56;</span></span><br><span class="line">        it.setTransitive(<span class="keyword">true</span>)</span><br><span class="line">        it.resolutionStrategy {</span><br><span class="line">            <span class="comment">//SNAPSHOT&#x7248;&#x672C;&#x66F4;&#x65B0;&#x65F6;&#x95F4;&#x4E3A;0s</span></span><br><span class="line">            cacheChangingModulesFor(<span class="number">0</span>, <span class="string">&apos;seconds&apos;</span>)</span><br><span class="line">            <span class="comment">//&#x52A8;&#x6001;&#x7248;&#x672C;&#x66F4;&#x65B0;&#x5B9E;&#x9645;&#x4E3A;5&#x5206;&#x949F;</span></span><br><span class="line">            cacheDynamicVersionsFor(<span class="number">5</span>, <span class="string">&apos;minutes&apos;</span>)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x904D;&#x5386;&#x89E3;&#x6790;&#x51FA;&#x6765;&#x7684;&#x6240;&#x6709;&#x4F9D;&#x8D56;</span></span><br><span class="line">    configuration.incoming.<span class="keyword">dependencies</span>.all {</span><br><span class="line">        <span class="comment">//&#x8FC7;&#x6EE4;&#x6536;&#x96C6;aar&#x548C;jar</span></span><br><span class="line">        FileCollection collection = configuration.fileCollection(it).filter {</span><br><span class="line">            <span class="keyword">return</span> it.name.endsWith(<span class="string">&quot;.aar&quot;</span>) || it.name.endsWith(<span class="string">&quot;.jar&quot;</span>)</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//&#x904D;&#x5386;&#x8FC7;&#x6EE4;&#x540E;&#x7684;&#x6587;&#x4EF6;</span></span><br><span class="line">        collection.<span class="keyword">each</span> {</span><br><span class="line">            <span class="keyword">if</span> (it.name.endsWith(<span class="string">&quot;.aar&quot;</span>)) {</span><br><span class="line">                <span class="comment">//&#x5982;&#x679C;&#x662F;aar&#xFF0C;&#x5219;&#x63D0;&#x53D6;&#x91CC;&#x9762;&#x7684;jar&#x6587;&#x4EF6;</span></span><br><span class="line">                FileCollection jarFormAar = <span class="keyword">project</span>.zipTree(it).filter {</span><br><span class="line">                    it.name == <span class="string">&quot;classes.jar&quot;</span></span><br><span class="line">                }</span><br><span class="line">                <span class="comment">//&#x5C06;jar&#x4F9D;&#x8D56;&#x6DFB;&#x52A0;&#x5230;provided&#x7684;scope&#x4E2D;</span></span><br><span class="line">                <span class="keyword">project</span>.<span class="keyword">dependencies</span>.add(<span class="string">&quot;provided&quot;</span>, jarFormAar)</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span> (it.name.endsWith(<span class="string">&quot;.jar&quot;</span>)) {</span><br><span class="line">                <span class="comment">//&#x5982;&#x679C;&#x662F;jar&#x5219;&#x76F4;&#x63A5;&#x6DFB;&#x52A0;</span></span><br><span class="line">                <span class="comment">//&#x5C06;jar&#x4F9D;&#x8D56;&#x6DFB;&#x52A0;&#x5230;provided&#x7684;scope&#x4E2D;</span></span><br><span class="line">                <span class="keyword">project</span>.<span class="keyword">dependencies</span>.add(<span class="string">&quot;provided&quot;</span>, <span class="keyword">project</span>.files(it))</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x6DFB;&#x52A0;provided&#x4F9D;&#x8D56;&#x7684;jar&#x6587;&#x4EF6;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x8C03;&#x7528;project.dependencies.add(&#x201C;provided&#x201D;, FileCollection fileCollection)&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x6DFB;&#x52A0;&#x5373;&#x53EF;&#x3002;</p><p>&#x5176;&#x5B9E;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x5FFD;&#x89C6;&#x4E86;&#x4E00;&#x4E2A;&#x5341;&#x5206;&#x91CD;&#x8981;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5373;&#x5B8C;&#x5168;&#x65E0;&#x89C6;&#x4E86;gradle&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x3002;&#x4F9D;&#x8D56;&#x5BF9;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#x7C7B;&#x578B;FileCollection&#xFF0C;&#x53EA;&#x6709;&#x4F9D;&#x8D56;&#x88AB;&#x89E3;&#x6790;&#x4E4B;&#x540E;&#x624D;&#x80FD;&#x62FF;&#x5230;&#xFF0C;&#x5373;&#x5728;afterResolve&#x56DE;&#x8C03;&#x4E4B;&#x540E;&#x624D;&#x80FD;&#x62FF;&#x5230;&#xFF0C;&#x800C;afterResolve&#x4E4B;&#x540E;&#x5982;&#x679C;&#x518D;&#x5BF9;dependencies&#x5BF9;&#x8C61;&#x7EE7;&#x7EED;&#x4FEE;&#x6539;&#xFF0C;&#x5FC5;&#x7136;&#x4F1A;&#x629B;&#x51FA;&#x4E00;&#x4E2A;&#x5F02;&#x5E38;</p><figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">Cannot change dependencies <span class="keyword">of</span> configuration <span class="string">&apos;:app:providedAar&apos;</span> <span class="keyword">after</span> <span class="keyword">it</span> has been resolved</span><br></pre></td></tr></table></figure><p>&#x6240;&#x4EE5;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x601D;&#x8DEF;&#x662F;&#x884C;&#x4E0D;&#x901A;&#x7684;&#xFF0C;&#x4F1A;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x5FAA;&#x73AF;&#x4F9D;&#x8D56;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6DFB;&#x52A0;&#x4F9D;&#x8D56;&#x524D;&#x65E0;&#x6CD5;&#x83B7;&#x53D6;&#x4F9D;&#x8D56;&#x6587;&#x4EF6;&#xFF0C;&#x83B7;&#x53D6;&#x5230;&#x4F9D;&#x8D56;&#x6587;&#x4EF6;&#x540E;&#xFF0C;&#x65E0;&#x6CD5;&#x6DFB;&#x52A0;&#x5230;provided scope&#x4F9D;&#x8D56;&#x4E2D;&#x53BB;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x884C;&#x4E0D;&#x901A;&#x7684;&#x6839;&#x672C;&#x539F;&#x56E0;&#x3002;</p><h3 id="&#x65B9;&#x6CD5;&#x4E8C;&#xFF1A;&#x5B9E;&#x73B0;maven&#x4E0B;&#x8F7D;&#x534F;&#x8BAE;"><a href="#&#x65B9;&#x6CD5;&#x4E8C;&#xFF1A;&#x5B9E;&#x73B0;maven&#x4E0B;&#x8F7D;&#x534F;&#x8BAE;" class="headerlink" title="&#x65B9;&#x6CD5;&#x4E8C;&#xFF1A;&#x5B9E;&#x73B0;maven&#x4E0B;&#x8F7D;&#x534F;&#x8BAE;"></a>&#x65B9;&#x6CD5;&#x4E8C;&#xFF1A;&#x5B9E;&#x73B0;maven&#x4E0B;&#x8F7D;&#x534F;&#x8BAE;</h3><p>&#x53C2;&#x8003;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0; <a href="https://mp.weixin.qq.com/s/f8BUMXImp7bCLP04_yjQ2Q" target="_blank" rel="noopener">&#x5982;&#x4F55;&#x5728;Android Application&#x91CC;provided-aar</a>&#xFF0C;&#x89E3;&#x51B3;&#x7684;&#x601D;&#x8DEF;&#x662F;&#x5728;beforeResolve&#x4E2D;&#x6DFB;&#x52A0;&#x4F9D;&#x8D56;&#xFF0C;&#x4F46;&#x662F;&#x5728;beforeResolve&#x662F;&#x62FF;&#x4E0D;&#x5230;&#x4F9D;&#x8D56;&#x5BF9;&#x5E94;&#x7684;&#x6587;&#x4EF6;FileCollection&#x5BF9;&#x8C61;&#x7684;&#xFF0C;&#x4E8E;&#x662F;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x6700;&#x5927;&#x7684;&#x95EE;&#x9898;&#x53D8;&#x6210;&#x4E86;&#x5982;&#x4F55;&#x83B7;&#x53D6;&#x4F9D;&#x8D56;&#x6587;&#x4EF6;&#x3002;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x83B7;&#x53D6;&#x5982;&#x679C;&#x8981;&#x505A;&#x7684;&#x5B8C;&#x7F8E;&#xFF0C;&#x5176;&#x5B9E;&#x662F;&#x5F88;&#x590D;&#x6742;&#x7684;&#xFF0C;&#x6D89;&#x53CA;&#x5230;&#x6574;&#x4E2A;&#x4F9D;&#x8D56;&#x6811;&#x7684;&#x6709;&#x5411;&#x56FE;&#x6784;&#x5EFA;&#xFF0C;&#x7248;&#x672C;&#x51B2;&#x7A81;&#x89E3;&#x51B3;&#xFF0C;&#x4EE5;&#x53CA;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#x7684;&#x9012;&#x5F52;&#x95EE;&#x9898;&#x3002;</p><p>&#x9996;&#x5148;&#x6765;&#x4E86;&#x89E3;&#x4E00;&#x4E0B;maven&#x4E0B;&#x8F7D;&#x7684;&#x6700;&#x7B80;&#x5355;&#x7684;&#x903B;&#x8F91;&#x3002;</p><p>&#x5BF9;&#x4E8E;release&#x7248;&#x672C;&#x7684;&#x4F9D;&#x8D56;&#xFF0C;&#x5176;&#x5B9E;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x62FC;&#x63A5;&#x4F9D;&#x8D56;&#x7684;path&#x8DEF;&#x5F84;&#x5373;&#x53EF;&#xFF0C;&#x8DEF;&#x5F84;&#x683C;&#x5F0F;&#x4E3A;</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/$groupId[0]/</span>..<span class="regexp">/${groupId[n]/</span><span class="variable">$artifactId</span><span class="regexp">/$version/</span><span class="variable">$artifactId</span>-<span class="variable">$version</span>.<span class="variable">$extension</span></span><br></pre></td></tr></table></figure><p>&#x5047;&#x8BBE;&#x4F9D;&#x8D56;&#x4E3A;io.github.lizhangqu:test:1.0.0&#xFF0C;&#x5219;pom&#x6587;&#x4EF6;&#x5BF9;&#x5E94;&#x7684;&#x4F9D;&#x8D56;path&#x8DEF;&#x5F84;&#x4EE5;&#x53CA;pom&#x6587;&#x4EF6;&#x5BF9;&#x5E94;&#x7684;md5&#x548C;sha1&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x4E3A;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">/io/github/lizhangqu/test/<span class="number">1.0</span><span class="number">.0</span>/test<span class="number">-1.0</span><span class="number">.0</span>.pom</span><br><span class="line">/io/github/lizhangqu/test/<span class="number">1.0</span><span class="number">.0</span>/test<span class="number">-1.0</span><span class="number">.0</span>.pom.md5</span><br><span class="line">/io/github/lizhangqu/test/<span class="number">1.0</span><span class="number">.0</span>/test<span class="number">-1.0</span><span class="number">.0</span>.pom.sha1</span><br></pre></td></tr></table></figure><p>&#x6839;&#x636E;&#x8FD9;&#x4E2A;&#x8DEF;&#x5F84;&#x83B7;&#x53D6;&#x5230;pom&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x8BFB;&#x53D6;pom.xml&#x4E2D;&#x7684;packaging&#x7684;&#x503C;&#xFF0C;&#x5047;&#x8BBE;pom.xml&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x4E3A;</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.lizhangqu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>aar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x4ECE;&#x4E0A;&#x8FF0;&#x5185;&#x5BB9;&#x5F88;&#x5BB9;&#x6613;&#x5F97;&#x5230;&#x8FD9;&#x91CC;packaging&#x7684;&#x503C;&#x4E3A;aar&#xFF0C;&#x5219;&#x5BF9;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#x4EE5;&#x53CA;&#x8BE5;&#x6587;&#x4EF6;&#x5BF9;&#x5E94;&#x7684;md5&#x548C;sha1&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x4E3A;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">/io/github/lizhangqu/test/<span class="number">1.0</span><span class="number">.0</span>/test<span class="number">-1.0</span><span class="number">.0</span>.aar</span><br><span class="line">/io/github/lizhangqu/test/<span class="number">1.0</span><span class="number">.0</span>/test<span class="number">-1.0</span><span class="number">.0</span>.aar.md5</span><br><span class="line">/io/github/lizhangqu/test/<span class="number">1.0</span><span class="number">.0</span>/test<span class="number">-1.0</span><span class="number">.0</span>.aar.sha1</span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x8BE5;&#x4F9D;&#x8D56;&#x5B58;&#x5728;classifier&#xFF0C;&#x5219;&#x8DEF;&#x5F84;&#x66F4;&#x590D;&#x6742;&#xFF0C;&#x6BD4;&#x5982;javadoc&#x548C;sources&#xFF0C;&#x5176;&#x8DEF;&#x5F84;&#x683C;&#x5F0F;&#x4F1A;&#x53D8;&#x6210;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">/<span class="variable">$groupId</span>[0]/<span class="built_in">..</span>/<span class="variable">$groupId</span>[n]/<span class="variable">$artifactId</span>/<span class="variable">$version</span>/<span class="variable">$artifactId</span>-<span class="variable">$version</span>-<span class="variable">$classifier</span>.<span class="variable">$extension</span></span><br></pre></td></tr></table></figure><p>&#x4E0A;&#x8FF0;&#x4F9D;&#x8D56;&#x7684;classifier&#x8DEF;&#x5F84;&#x53CA;classifier&#x6587;&#x4EF6;&#x5BF9;&#x5E94;&#x7684;md5&#x548C;sha1&#x6587;&#x4EF6;&#x7684;&#x8DEF;&#x5F84;&#x5219;&#x662F;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">/io/github/lizhangqu/test/<span class="number">1.0</span><span class="number">.0</span>/test<span class="number">-1.0</span><span class="number">.0</span>-javadoc.jar</span><br><span class="line">/io/github/lizhangqu/test/<span class="number">1.0</span><span class="number">.0</span>/test<span class="number">-1.0</span><span class="number">.0</span>-javadoc.jar.md5</span><br><span class="line">/io/github/lizhangqu/test/<span class="number">1.0</span><span class="number">.0</span>/test<span class="number">-1.0</span><span class="number">.0</span>-javadoc.jar.sha1</span><br><span class="line">/io/github/lizhangqu/test/<span class="number">1.0</span><span class="number">.0</span>/test<span class="number">-1.0</span><span class="number">.0</span>-sources.jar</span><br><span class="line">/io/github/lizhangqu/test/<span class="number">1.0</span><span class="number">.0</span>/test<span class="number">-1.0</span><span class="number">.0</span>-sources.jar.md5</span><br><span class="line">/io/github/lizhangqu/test/<span class="number">1.0</span><span class="number">.0</span>/test<span class="number">-1.0</span><span class="number">.0</span>-sources.jar.sha1</span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;classifier&#x4E0D;&#x662F;jar&#x6587;&#x4EF6;&#xFF0C;&#x5219;gradle&#x4E2D;&#x5FC5;&#x987B;&#x5F3A;&#x5236;&#x624B;&#x52A8;&#x6307;&#x5B9A;extension&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x63D0;&#x793A;&#x627E;&#x4E0D;&#x5230;&#x5BF9;&#x5E94;&#x7684;classifier&#x6587;&#x4EF6;&#x3002;&#x5047;&#x8BBE;classifier&#x4E3A;so&#x6587;&#x4EF6;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x5F3A;&#x5236;&#x6307;&#x5B9A;&#x4E3A;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">io.github.lizhangqu:test:<span class="number">1.0</span><span class="number">.0</span>:<span class="symbol">javadoc@</span>so</span><br><span class="line">io.github.lizhangqu:test:<span class="number">1.0</span><span class="number">.0</span>:<span class="symbol">sources@</span>so</span><br></pre></td></tr></table></figure><p>&#x800C;&#x5BF9;&#x4E8E;SNAPSHOT&#x7248;&#x672C;&#xFF0C;&#x5C31;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#x4E86;&#xFF0C;&#x5047;&#x8BBE;&#x4F9D;&#x8D56;&#x4E3A;io.github.lizhangqu:test:1.0.0-SNAPSHOT&#xFF0C;&#x5219;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x83B7;&#x53D6;&#x8BE5;&#x7248;&#x672C;&#x7684;maven-metadata.xml&#x6587;&#x4EF6;&#xFF0C;&#x5BF9;&#x5E94;&#x7684;path&#x8DEF;&#x5F84;&#x53CA;&#x5176;md5&#x548C;sha1&#x503C;&#x7684;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x4E3A;</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/io/gi</span>thub<span class="regexp">/lizhangqu/</span>test<span class="regexp">/1.0.0-SNAPSHOT/m</span>aven-metadata.xml</span><br><span class="line"><span class="regexp">/io/gi</span>thub<span class="regexp">/lizhangqu/</span>test<span class="regexp">/1.0.0-SNAPSHOT/m</span>aven-metadata.xml.md5</span><br><span class="line"><span class="regexp">/io/gi</span>thub<span class="regexp">/lizhangqu/</span>test<span class="regexp">/1.0.0-SNAPSHOT/m</span>aven-metadata.xml.sha1</span><br></pre></td></tr></table></figure><p>&#x5047;&#x8BBE;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x5982;&#x4E0B;</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">metadata</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.lizhangqu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">versioning</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshot</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">timestamp</span>&gt;</span>20171222.013814<span class="tag">&lt;/<span class="name">timestamp</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">buildNumber</span>&gt;</span>200<span class="tag">&lt;/<span class="name">buildNumber</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">lastUpdated</span>&gt;</span>20171222013814<span class="tag">&lt;/<span class="name">lastUpdated</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">versioning</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">metadata</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x4ECE;&#x8BE5;&#x6587;&#x4EF6;&#x4E2D;&#x770B;&#x51FA;&#x5F53;&#x524D;1.0.0-SNAPSHOT&#x7684;&#x4FE1;&#x606F;&#x662F;&#x8FD9;&#x4E2A;artifact&#x53D1;&#x5E03;&#x4E86;200&#x6B21;&#xFF0C;&#x6700;&#x65B0;&#x53D1;&#x5E03;&#x7684;&#x65F6;&#x95F4;&#x662F;20171222.013814&#xFF0C;&#x62FC;&#x63A5;&#x8FD9;&#x4E24;&#x4E2A;&#x503C;&#xFF0C;&#x5F97;&#x5230;20171222.013814-200&#xFF0C;&#x4E8E;&#x662F;&#x5C31;&#x83B7;&#x5F97;&#x4E86;&#x8BE5;&#x4F9D;&#x8D56;&#x7248;&#x672C;&#x7684;&#x6700;&#x65B0;&#x5FEB;&#x7167;&#x7684;path&#x8DEF;&#x5F84;&#x4EE5;&#x53CA;md5&#x548C;sha1&#x6587;&#x4EF6;&#x8DEF;&#x5F84;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">/io/github/lizhangqu/test/<span class="number">1.0</span><span class="number">.0</span>-SNAPSHOT/test<span class="number">-1.0</span><span class="number">.0</span><span class="number">-20171222.013814</span><span class="number">-200.</span>pom</span><br><span class="line">/io/github/lizhangqu/test/<span class="number">1.0</span><span class="number">.0</span>-SNAPSHOT/test<span class="number">-1.0</span><span class="number">.0</span><span class="number">-20171222.013814</span><span class="number">-200.</span>pom.md5</span><br><span class="line">/io/github/lizhangqu/test/<span class="number">1.0</span><span class="number">.0</span>-SNAPSHOT/test<span class="number">-1.0</span><span class="number">.0</span><span class="number">-20171222.013814</span><span class="number">-200.</span>pom.sha1</span><br></pre></td></tr></table></figure><p>&#x5047;&#x8BBE;&#x8FD9;&#x4E2A;pom.xml&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x5982;&#x4E0B;</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.lizhangqu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>aar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x4ECE;pom.xml&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x5230;packaging&#x4E3A;aar&#xFF0C;&#x5219;&#x5BF9;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#x7684;&#x8DEF;&#x5F84;&#x53CA;&#x8BE5;&#x6587;&#x4EF6;&#x7684;md5&#x548C;sha1&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x4E3A;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">/io/github/lizhangqu/test/<span class="number">1.0</span><span class="number">.0</span>-SNAPSHOT/test<span class="number">-1.0</span><span class="number">.0</span><span class="number">-20171222.013814</span><span class="number">-200.</span>aar</span><br><span class="line">/io/github/lizhangqu/test/<span class="number">1.0</span><span class="number">.0</span>-SNAPSHOT/test<span class="number">-1.0</span><span class="number">.0</span><span class="number">-20171222.013814</span><span class="number">-200.</span>aar.md5</span><br><span class="line">/io/github/lizhangqu/test/<span class="number">1.0</span><span class="number">.0</span>-SNAPSHOT/test<span class="number">-1.0</span><span class="number">.0</span><span class="number">-20171222.013814</span><span class="number">-200.</span>aar.sha1</span><br></pre></td></tr></table></figure><p>&#x4E4B;&#x540E;&#x7684;&#x5904;&#x7406;&#x5C31;&#x548C;release&#x7248;&#x672C;&#x662F;&#x4E00;&#x6837;&#x7684;&#x3002;</p><p>&#x4F9D;&#x8D56;&#x90E8;&#x5206;&#x7684;path&#x77E5;&#x9053;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x8FD8;&#x9700;&#x8981;&#x77E5;&#x9053;maven&#x670D;&#x52A1;&#x6240;&#x5728;&#x5730;&#x5740;&#xFF0C;&#x53EF;&#x901A;&#x8FC7;gradle&#x76F4;&#x63A5;&#x62FF;&#x5230;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">project.get<span class="constructor">Gradle()</span>.add<span class="constructor">Listener(<span class="params">new</span> DependencyResolutionListener()</span> {</span><br><span class="line">    @Override</span><br><span class="line">    void before<span class="constructor">Resolve(ResolvableDependencies <span class="params">dependencies</span>)</span> {</span><br><span class="line">      <span class="comment">//&#x6B64;&#x56DE;&#x8C03;&#x4F1A;&#x591A;&#x6B21;&#x8FDB;&#x5165;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x89E3;&#x6790;&#x4E00;&#x6B21;&#xFF0C;&#x56E0;&#x6B64;&#x53EA;&#x8981;&#x8FDB;&#x5165;&#xFF0C;&#x5C31;remove&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C;&#x6211;&#x4EEC;&#x7684;&#x89E3;&#x6790;&#x64CD;&#x4F5C;</span></span><br><span class="line">      roject.gradle.remove<span class="constructor">Listener(<span class="params">this</span>)</span></span><br><span class="line">      project.get<span class="constructor">Repositories()</span>.each {def repository -&gt;</span><br><span class="line">          <span class="comment">//repository.url&#x5C31;&#x662F;maven&#x670D;&#x52A1;&#x7684;&#x524D;&#x7F00;&#x8DEF;&#x5F84;&#xFF0C;&#x53EF;&#x80FD;&#x662F;&#x6587;&#x4EF6;&#x534F;&#x8BAE;&#xFF0C;&#x4E5F;&#x53EF;&#x80FD;&#x662F;http&#x534F;&#x8BAE;&#xFF0C;&#x6216;&#x662F;&#x5176;&#x4ED6;&#x534F;&#x8BAE;&#xFF0C;&#x5982;ftp</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    void after<span class="constructor">Resolve(ResolvableDependencies <span class="params">resolvableDependencies</span>)</span> {</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">})</span><br></pre></td></tr></table></figure><p>&#x62FC;&#x63A5;&#x6700;&#x7EC8;&#x7684;&#x5730;&#x5740;&#xFF0C;&#x5982;&#x4E0B;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#[]&#x5185;&#x7684;&#x5185;&#x5BB9;&#x4E3A;&#x53EF;&#x9009;</span></span><br><span class="line"><span class="variable">$repository</span>.url/<span class="variable">$groupId</span>[0]/<span class="built_in">..</span>/<span class="variable">$groupId</span>[n]/<span class="variable">$artifactId</span>/<span class="variable">$version</span>/<span class="variable">$artifactId</span>-<span class="variable">$version</span>[-<span class="variable">$classifier</span>].<span class="variable">$extension</span></span><br></pre></td></tr></table></figure><p>&#x4E0A;&#x8FF0;&#x53EA;&#x662F;&#x7B80;&#x5355;&#x7684;&#x8BB2;&#x4E86;&#x4E0B;&#x4E0B;&#x8F7D;&#x7684;&#x903B;&#x8F91;&#x3002;&#x6587;&#x4EF6;&#x662F;&#x5982;&#x4F55;&#x7F13;&#x5B58;&#x7684;&#xFF0C;&#x5982;&#x4F55;&#x66F4;&#x65B0;&#x672C;&#x5730;&#x7684;SNAPSHOT&#x7248;&#x672C;&#xFF0C;&#x5982;&#x4F55;&#x5C06;&#x672C;&#x5730;&#x4FE1;&#x606F;&#x4E0E;&#x8FDC;&#x7A0B;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x5408;&#x5E76;&#xFF0C;&#x4EE5;&#x53CA;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#x662F;&#x5982;&#x4F55;&#x5904;&#x7406;&#x7684;&#x90FD;&#x6CA1;&#x6709;&#x8BB2;&#x5230;&#xFF0C;&#x5B9E;&#x9645;&#x60C5;&#x51B5;&#x8981;&#x6BD4;&#x8FD9;&#x4E2A;&#x8FDC;&#x8FDC;&#x590D;&#x6742;&#x7684;&#x591A;&#x3002;</p><p>&#x5C31;&#x62FF;&#x7F13;&#x5B58;&#x8DEF;&#x5F84;&#x6765;&#x8BF4;&#xFF0C;&#x5BF9;&#x4E8E;mavenLocal&#xFF0C;&#x5176;&#x672C;&#x5730;&#x6587;&#x4EF6;&#x7F13;&#x5B58;&#x7684;&#x8DEF;&#x5F84;&#x662F;&#x6700;&#x7B80;&#x5355;&#x7684;&#xFF0C;&#x4E3A;</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment">#[]&#x5185;&#x7684;&#x5185;&#x5BB9;&#x4E3A;&#x53EF;&#x9009;</span></span><br><span class="line">~<span class="regexp">/.m2/</span>repository<span class="regexp">/$groupId[0]/</span>..<span class="regexp">/$groupId[n]/</span><span class="variable">$artifactId</span><span class="regexp">/$version/</span><span class="variable">$artifactId</span>-<span class="variable">$version</span>[-<span class="variable">$classifier</span>].<span class="variable">$extension</span></span><br></pre></td></tr></table></figure><p>&#x800C;gradle&#x7684;&#x7F13;&#x5B58;&#x76EE;&#x5F55;&#x5341;&#x5206;&#x590D;&#x6742;&#xFF0C;&#x7531;gradle&#x81EA;&#x5DF1;&#x5904;&#x7406;&#xFF0C;&#x4E14;&#x5404;&#x4E2A;&#x7248;&#x672C;&#x8DEF;&#x5F84;&#x53EF;&#x80FD;&#x4F1A;&#x6709;&#x5DEE;&#x5F02;&#xFF0C;&#x5927;&#x81F4;&#x4F4D;&#x4E8E;</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="comment">#[]&#x5185;&#x7684;&#x5185;&#x5BB9;&#x4E3A;&#x53EF;&#x9009;</span></span><br><span class="line">~<span class="regexp">/.gradle/caches</span><span class="regexp">/modules-2/files</span>-<span class="number">2.1</span>/<span class="variable">$groupId</span>/<span class="variable">$artifactId</span>/<span class="variable">$version</span>/<span class="variable">$sha1Value</span>/<span class="variable">$artifactId</span>-<span class="variable">$version</span>[-<span class="variable">$classifier</span>].<span class="variable">$extension</span></span><br></pre></td></tr></table></figure><p>&#x5176;&#x4E2D;sha1Value&#x7684;&#x503C;&#x4E3A;\$artifactId-\$version[-\$classifier].\$extension&#x6587;&#x4EF6;&#x5BF9;&#x5E94;&#x7684;sha1&#x503C;</p><p>gradle&#x7684;&#x7F13;&#x5B58;&#x7B56;&#x7565;&#x53EF;&#x4EE5;&#x89C1;&#x6587;&#x6863; <a href="https://github.com/gradle/gradle-talks/blob/master/talks/dependency-resolution/src/slides/04-caching.md" target="_blank" rel="noopener">gradle caching</a></p><p>gradle&#x5404;&#x4E2A;&#x7248;&#x672C;&#x5143;&#x6570;&#x636E;&#x7684;&#x7F13;&#x5B58;&#x76EE;&#x5F55;&#x5982;&#x4E0B;</p><figure class="highlight inform7"><table><tr><td class="code"><pre><span class="line">public LocallyAvailableResourceFinder&lt;ModuleComponentArtifactMetadata&gt; create() {</span><br><span class="line">    List&lt;LocallyAvailableResourceFinder&lt;ModuleComponentArtifactMetadata&gt;&gt; finders = new LinkedList&lt;LocallyAvailableResourceFinder&lt;ModuleComponentArtifactMetadata&gt;&gt;();</span><br><span class="line"></span><br><span class="line">    // Order <span class="keyword">is</span> important here, because they will be searched in that order</span><br><span class="line"></span><br><span class="line">    // The current filestore</span><br><span class="line">    finders.add(new LocallyAvailableResourceFinderSearchableFileStoreAdapter&lt;ModuleComponentArtifactMetadata&gt;(new FileStoreSearcher&lt;ModuleComponentArtifactMetadata&gt;() {</span><br><span class="line">        @Override</span><br><span class="line">        public Set&lt;? extends LocallyAvailableResource&gt; search(ModuleComponentArtifactMetadata key) {</span><br><span class="line">            return fileStore.search(key.getId());</span><br><span class="line">        }</span><br><span class="line">    }));</span><br><span class="line"></span><br><span class="line">    // 1.8</span><br><span class="line">    addForPattern(finders, <span class="string">&quot;artifacts-26/filestore/<span class="subst">[organisation]</span>/<span class="subst">[module]</span>(/<span class="subst">[branch]</span>)/<span class="subst">[revision]</span>/<span class="subst">[type]</span>/*/<span class="subst">[artifact]</span>-<span class="subst">[revision]</span>(-<span class="subst">[classifier]</span>)(.<span class="subst">[ext]</span>)&quot;</span>);</span><br><span class="line"></span><br><span class="line">    // 1.5</span><br><span class="line">    addForPattern(finders, <span class="string">&quot;artifacts-24/filestore/<span class="subst">[organisation]</span>/<span class="subst">[module]</span>(/<span class="subst">[branch]</span>)/<span class="subst">[revision]</span>/<span class="subst">[type]</span>/*/<span class="subst">[artifact]</span>-<span class="subst">[revision]</span>(-<span class="subst">[classifier]</span>)(.<span class="subst">[ext]</span>)&quot;</span>);</span><br><span class="line"></span><br><span class="line">    // 1.4</span><br><span class="line">    addForPattern(finders, <span class="string">&quot;artifacts-23/filestore/<span class="subst">[organisation]</span>/<span class="subst">[module]</span>(/<span class="subst">[branch]</span>)/<span class="subst">[revision]</span>/<span class="subst">[type]</span>/*/<span class="subst">[artifact]</span>-<span class="subst">[revision]</span>(-<span class="subst">[classifier]</span>)(.<span class="subst">[ext]</span>)&quot;</span>);</span><br><span class="line"></span><br><span class="line">    // 1.3</span><br><span class="line">    addForPattern(finders, <span class="string">&quot;artifacts-15/filestore/<span class="subst">[organisation]</span>/<span class="subst">[module]</span>(/<span class="subst">[branch]</span>)/<span class="subst">[revision]</span>/<span class="subst">[type]</span>/*/<span class="subst">[artifact]</span>-<span class="subst">[revision]</span>(-<span class="subst">[classifier]</span>)(.<span class="subst">[ext]</span>)&quot;</span>);</span><br><span class="line"></span><br><span class="line">    // 1.1, 1.2</span><br><span class="line">    addForPattern(finders, <span class="string">&quot;artifacts-14/filestore/<span class="subst">[organisation]</span>/<span class="subst">[module]</span>(/<span class="subst">[branch]</span>)/<span class="subst">[revision]</span>/<span class="subst">[type]</span>/*/<span class="subst">[artifact]</span>-<span class="subst">[revision]</span>(-<span class="subst">[classifier]</span>)(.<span class="subst">[ext]</span>)&quot;</span>);</span><br><span class="line"></span><br><span class="line">    // rc-1, 1.0</span><br><span class="line">    addForPattern(finders, <span class="string">&quot;artifacts-13/filestore/<span class="subst">[organisation]</span>/<span class="subst">[module]</span>(/<span class="subst">[branch]</span>)/<span class="subst">[revision]</span>/<span class="subst">[type]</span>/*/<span class="subst">[artifact]</span>-<span class="subst">[revision]</span>(-<span class="subst">[classifier]</span>)(.<span class="subst">[ext]</span>)&quot;</span>);</span><br><span class="line"></span><br><span class="line">    // Milestone 8 and 9</span><br><span class="line">    addForPattern(finders, <span class="string">&quot;artifacts-8/filestore/<span class="subst">[organisation]</span>/<span class="subst">[module]</span>(/<span class="subst">[branch]</span>)/<span class="subst">[revision]</span>/<span class="subst">[type]</span>/*/<span class="subst">[artifact]</span>-<span class="subst">[revision]</span>(-<span class="subst">[classifier]</span>)(.<span class="subst">[ext]</span>)&quot;</span>);</span><br><span class="line"></span><br><span class="line">    // Milestone 7</span><br><span class="line">    addForPattern(finders, <span class="string">&quot;artifacts-7/artifacts/*/<span class="subst">[organisation]</span>/<span class="subst">[module]</span>(/<span class="subst">[branch]</span>)/<span class="subst">[revision]</span>/<span class="subst">[type]</span>/<span class="subst">[artifact]</span>-<span class="subst">[revision]</span>(-<span class="subst">[classifier]</span>)(.<span class="subst">[ext]</span>)&quot;</span>);</span><br><span class="line"></span><br><span class="line">    // Milestone 6</span><br><span class="line">    addForPattern(finders, <span class="string">&quot;artifacts-4/<span class="subst">[organisation]</span>/<span class="subst">[module]</span>(/<span class="subst">[branch]</span>)/*/<span class="subst">[type]</span>s/<span class="subst">[artifact]</span>-<span class="subst">[revision]</span>(-<span class="subst">[classifier]</span>)(.<span class="subst">[ext]</span>)&quot;</span>);</span><br><span class="line">    addForPattern(finders, <span class="string">&quot;artifacts-4/<span class="subst">[organisation]</span>/<span class="subst">[module]</span>(/<span class="subst">[branch]</span>)/*/pom.originals/<span class="subst">[artifact]</span>-<span class="subst">[revision]</span>(-<span class="subst">[classifier]</span>)(.<span class="subst">[ext]</span>)&quot;</span>);</span><br><span class="line"></span><br><span class="line">    // Milestone 3</span><br><span class="line">    addForPattern(finders, <span class="string">&quot;../cache/<span class="subst">[organisation]</span>/<span class="subst">[module]</span>(/<span class="subst">[branch]</span>)/<span class="subst">[type]</span>s/<span class="subst">[artifact]</span>-<span class="subst">[revision]</span>(-<span class="subst">[classifier]</span>)(.<span class="subst">[ext]</span>)&quot;</span>);</span><br><span class="line"></span><br><span class="line">    // Maven local</span><br><span class="line">    try {</span><br><span class="line">        File localMavenRepository = localMavenRepositoryLocator.getLocalMavenRepository();</span><br><span class="line">        if (localMavenRepository.exists()) {</span><br><span class="line">            addForPattern(finders, localMavenRepository, new M2ResourcePattern(<span class="string">&quot;<span class="subst">[organisation]</span>/<span class="subst">[module]</span>/<span class="subst">[revision]</span>/<span class="subst">[artifact]</span>-<span class="subst">[revision]</span>(-<span class="subst">[classifier]</span>)(.<span class="subst">[ext]</span>)&quot;</span>));</span><br><span class="line">        }</span><br><span class="line">    } catch (CannotLocateLocalMavenRepositoryException ex) {</span><br><span class="line">        finders.add(new NoMavenLocalRepositoryResourceFinder(ex));</span><br><span class="line">    }</span><br><span class="line">    return new CompositeLocallyAvailableResourceFinder&lt;ModuleComponentArtifactMetadata&gt;(finders);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x77E5;&#x9053;&#x4E86;&#x8FD9;&#x4E9B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x53BB;&#x5B9E;&#x73B0;&#x4E00;&#x5957;maven&#x4E0B;&#x8F7D;&#x534F;&#x8BAE;&#xFF0C;&#x4F46;&#x662F;&#x8FD8;&#x662F;&#x5341;&#x5206;&#x590D;&#x6742;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x4E2A;&#x4EBA;&#x8BA4;&#x4E3A;&#x8FD9;&#x6CA1;&#x6709;&#x5FC5;&#x8981;&#xFF0C;&#x5982;&#x679C;&#x81EA;&#x5DF1;&#x53BB;&#x5B9E;&#x73B0;&#xFF0C;&#x9996;&#x5148;&#xFF0C;&#x4E0D;&#x80FD;&#x590D;&#x7528;gradle&#x73B0;&#x6709;&#x7684;&#x7F13;&#x5B58;&#xFF0C;&#x5176;&#x6B21;&#x81EA;&#x5DF1;&#x4E0B;&#x8F7D;&#x7684;&#x7F13;&#x5B58;&#xFF0C;&#x65E0;&#x6CD5;&#x6B63;&#x5E38;&#x7684;&#x4E0E;gradle&#x7F13;&#x5B58;&#x8FDB;&#x884C;&#x5408;&#x5E76;&#xFF0C;&#x867D;&#x7136;&#x53EF;&#x4EE5;&#x653E;&#x5230;mavenLocal&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x4F46;&#x662F;&#x4E00;&#x4E9B;&#x7B56;&#x7565;&#x6027;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x4E0D;&#x80FD;&#x8003;&#x8651;&#x5F97;&#x5341;&#x5206;&#x5468;&#x5168;&#xFF0C;&#x5982;SNAPSHOT&#x7248;&#x672C;&#x7684;&#x66F4;&#x65B0;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#x4E00;&#x5957;&#x4E0B;&#x8F7D;&#x534F;&#x8BAE;&#xFF0C;&#x800C;&#x662F;&#x590D;&#x7528;gradle&#x5185;&#x90E8;&#x7684;&#x4E0B;&#x8F7D;&#x4EE3;&#x7801;&#x53CA;&#x73B0;&#x6709;&#x7684;&#x7F13;&#x5B58;&#x3002;&#x4E0D;&#x8FC7;&#x7ECF;&#x8FC7;&#x6D4B;&#x8BD5;&#xFF0C;&#x5F88;&#x9057;&#x61BE;&#xFF0C;&#x4E0D;&#x652F;&#x6301;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#x3002;&#x5177;&#x4F53;&#x662F;&#x600E;&#x4E48;&#x5B9E;&#x73B0;&#x7684;&#x8BF7;&#x89C1;&#x65B9;&#x6CD5;&#x4E09;&#x91CC;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x5904;&#x7406;&#x3002;</p><h3 id="&#x65B9;&#x6CD5;&#x4E09;&#xFF1A;&#x5408;&#x7406;&#x4F7F;&#x7528;&#x53CD;&#x5C04;&#xFF0C;Hack&#x4E00;&#x4E0B;&#x4EE3;&#x7801;"><a href="#&#x65B9;&#x6CD5;&#x4E09;&#xFF1A;&#x5408;&#x7406;&#x4F7F;&#x7528;&#x53CD;&#x5C04;&#xFF0C;Hack&#x4E00;&#x4E0B;&#x4EE3;&#x7801;" class="headerlink" title="&#x65B9;&#x6CD5;&#x4E09;&#xFF1A;&#x5408;&#x7406;&#x4F7F;&#x7528;&#x53CD;&#x5C04;&#xFF0C;Hack&#x4E00;&#x4E0B;&#x4EE3;&#x7801;"></a>&#x65B9;&#x6CD5;&#x4E09;&#xFF1A;&#x5408;&#x7406;&#x4F7F;&#x7528;&#x53CD;&#x5C04;&#xFF0C;Hack&#x4E00;&#x4E0B;&#x4EE3;&#x7801;</h3><p>&#x65B9;&#x6CD5;&#x4E09;&#xFF0C;&#x662F;&#x770B;&#x4E86;&#x51E0;&#x5929;android gradle plugin&#x4EE5;&#x53CA;gradle&#x4EE3;&#x7801;&#x603B;&#x7ED3;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x770B;&#x4EE3;&#x7801;&#x7684;&#x8FC7;&#x7A0B;&#x662F;&#x5341;&#x5206;&#x75DB;&#x82E6;&#x7684;&#xFF0C;&#x53EA;&#x80FD;&#x4E00;&#x70B9;&#x70B9;&#x731C;&#x6D4B;&#x76F8;&#x5173;&#x7684;&#x7C7B;&#x5728;&#x54EA;&#x91CC;&#xFF0C;&#x4E0D;&#x8FC7;&#x6700;&#x540E;&#x5B9E;&#x73B0;&#x7684;&#x8111;&#x6D1E;&#x6BD4;&#x8F83;&#x5927;&#xFF0C;&#x6BD4;&#x8F83;&#x9ED1;&#x79D1;&#x6280;&#x3002;</p><p>&#x65E2;&#x7136;&#x5728;com.android.application&#x4E2D;&#x4F7F;&#x7528;provided aar&#x4F1A;&#x62A5;&#x51FA;Provided dependencies can only be jars. &#x5F02;&#x5E38;&#xFF0C;&#x90A3;&#x4E48;&#x6709;&#x6CA1;&#x6709;&#x529E;&#x6CD5;&#x628A;&#x8FD9;&#x4E2A;&#x5F02;&#x5E38;&#x6D88;&#x9664;&#x6389;&#x5462;&#x3002;&#x6211;&#x4EEC;&#x53D1;&#x73B0;&#x5728;com.android.library&#x4E2D;&#x662F;&#x652F;&#x6301;provided aar&#x7684;&#xFF0C;&#x8FD9;&#x8BF4;&#x660E;android gradle plugin&#x5176;&#x81EA;&#x8EAB;&#x662F;&#x652F;&#x6301;provided aar&#x7684;&#xFF0C;&#x53EA;&#x662F;&#x5728;&#x54EA;&#x4E2A;&#x73AF;&#x8282;&#x505A;&#x4E86;&#x4E0B;&#x6821;&#x9A8C;&#xFF0C;&#x5728;com.android.application&#x4E2D;&#x629B;&#x51FA;&#x4E86;&#x5F02;&#x5E38;&#x800C;&#x5DF2;&#x3002;&#x7B80;&#x5355;&#x7684;&#x6D4F;&#x89C8;&#x4E86;&#x4E0B;android gradle plugin&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x53D1;&#x73B0;&#x662F;&#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x884C;&#x7684;&#x901A;&#x7684;&#xFF0C;&#x4E0D;&#x8FC7;&#x6BD4;&#x8F83;&#x9057;&#x61BE;&#x7684;&#x662F;&#x53EA;&#x80FD;&#x6D88;&#x9664;2.2.0&#x4E4B;&#x540E;&#x7684;&#x7248;&#x672C;&#x7684;&#x5F02;&#x5E38;&#xFF0C;2.2.0&#x4E4B;&#x524D;&#x7684;&#x7248;&#x672C;&#x80FD;&#x6D88;&#x9664;&#xFF0C;&#x4F46;&#x662F;&#x65E0;&#x6CD5;&#x6B63;&#x5E38;&#x4F7F;&#x7528;provided&#x529F;&#x80FD;&#xFF0C;&#x5373;&#x4F7F;&#x662F;provided&#x7684;&#xFF0C;&#x4E5F;&#x4F1A;&#x88AB;&#x770B;&#x6210;&#x662F;compile&#x4F9D;&#x8D56;&#xFF0C;&#x6240;&#x4EE5;2.2.0&#x4E4B;&#x524D;&#x7684;&#x7248;&#x672C;&#x9700;&#x8981;&#x5355;&#x72EC;&#x5904;&#x7406;&#x4E00;&#x4E0B;&#x3002;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;3.0.0&#x4E0E;&#x4E4B;&#x524D;&#x7684;&#x7248;&#x672C;&#x6D88;&#x9664;&#x65B9;&#x5F0F;&#x4E0D;&#x5927;&#x4E00;&#x6837;&#xFF0C;&#x9700;&#x8981;&#x505A;&#x533A;&#x5206;&#x5904;&#x7406;&#x3002;&#x800C;&#x5BF9;&#x4E8E;2.2.0&#x4EE5;&#x4E0B;&#x7684;&#x7248;&#x672C;&#x600E;&#x4E48;&#x505A;&#x5462;&#xFF1F;&#x7B54;&#x6848;&#x662F;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x4E8C;&#x4E2D;&#x7684;&#x590D;&#x7528;gradle&#x73B0;&#x6709;&#x4EE3;&#x7801;&#x53CA;&#x7F13;&#x5B58;&#x3002;</p><p>&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x4E00;&#x4E0B;android gradle plugin&#x7684;&#x7248;&#x672C;&#x533A;&#x5206;&#xFF0C;&#x8FD9;&#x91CC;&#x505A;&#x4E86;&#x5982;&#x4E0B;&#x5206;&#x754C;</p><ul><li>android gradle plugin [1.5.0,2.2.0), &#x4E0D;&#x652F;&#x6301;&#x4F20;&#x9012;&#x4F9D;&#x8D56; &#xFF0C;&#x4E14;gradle&#x7248;&#x672C;&#x5FC5;&#x987B;&#x4E3A;2.10&#x4EE5;&#x4E0A;&#xFF0C;&#x800C;android gradle plugin 1.5.0&#x4EE5;&#x4E0B;&#x7248;&#x672C;&#x592A;&#x8FC7;&#x4E45;&#x8FDC;&#xFF0C;&#x5C31;&#x4E0D;&#x652F;&#x6301;&#x4E86;</li><li>android gradle plugin [2.2.0,2,5.0), &#x652F;&#x6301;&#x4F20;&#x9012;&#x4F9D;&#x8D56; &#xFF0C;&#x4F7F;&#x7528;&#x53CD;&#x5C04;&#x6D88;&#x9664;&#x5F02;&#x5E38;</li><li>android gradle plugin [2.5.0,3.1.0+], &#x652F;&#x6301;&#x4F20;&#x9012;&#x4F9D;&#x8D56; &#xFF0C;&#x4F7F;&#x7528;&#x53CD;&#x5C04;&#x66FF;&#x6362;task&#x6267;&#x884C;&#x903B;&#x8F91;&#xFF0C;&#x5C06;&#x629B;&#x5F02;&#x5E38;&#x4FEE;&#x6539;&#x4E3A;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#x4FE1;&#x606F;</li></ul><p>&#x5176;&#x4E2D;,2.4.0+&#x548C;2.5.0+&#x90FD;&#x672A;&#x53D1;&#x5E03;&#x8FC7;&#x6B63;&#x5F0F;&#x7248;&#x672C;&#xFF0C;&#x800C;2.4.0&#x9884;&#x89C8;&#x7248;&#x4EE3;&#x7801;&#x6BD4;&#x8F83;&#x8D8B;&#x5411;&#x4E8E;2.3.0&#x7684;&#x4EE3;&#x7801;&#xFF0C;2.5.0&#x9884;&#x89C8;&#x7248;&#x4EE3;&#x7801;&#x6BD4;&#x8F83;&#x8D8B;&#x5411;&#x4E8E;3.0.0&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x4E8E;&#x662F;&#x4EA7;&#x751F;&#x4E86;&#x4E0A;&#x8FF0;&#x7684;&#x5206;&#x754C;&#x3002;</p><p>&#x5148;&#x4ECE;&#x6700;&#x7B80;&#x5355;&#x7684;&#x7248;&#x672C;&#x5F00;&#x59CB;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x5904;&#x7406;[2.2.0,2,5.0)&#x7684;&#x7248;&#x672C;&#xFF0C;&#x8FD9;&#x91CC;&#x4EE5;2.3.3&#x7684;&#x4EE3;&#x7801;&#x4E3A;&#x4F8B;&#xFF0C;&#x53EA;&#x8981;&#x5728;[2.2.0,2,5.0)&#x8FD9;&#x4E2A;&#x533A;&#x95F4;&#x5185;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x90FD;&#x53EF;&#x4EE5;&#x9002;&#x7528;&#x3002;</p><p>&#x901A;&#x8FC7;&#x641C;&#x7D22; Provided dependencies can only be jars&#xFF0C;&#x53D1;&#x73B0;&#x8FD9;&#x4E2A;&#x5F02;&#x5E38;&#x5728;com.android.build.gradle.internal.dependency.DependencyChecker&#x4E2D;&#x88AB;&#x8BB0;&#x5F55;&#xFF0C;&#x7C7B;&#x578B;type&#x4E3A;7&#xFF0C;&#x9519;&#x8BEF;&#x4E25;&#x91CD;&#x7EA7;&#x522B;&#x4E3A;2&#xFF0C;&#x5728;&#x914D;&#x7F6E;&#x8BC4;&#x4F30;&#x9636;&#x6BB5;&#x53EA;&#x4F1A;&#x6253;&#x51FA;WARNING&#x7684;&#x65E5;&#x5FD7;&#xFF0C;&#x800C;&#x771F;&#x6B63;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#x7684;&#x5730;&#x65B9;&#x662F;&#x5728;PrepareDependenciesTask&#x6267;&#x884C;&#x7684;&#x65F6;&#x5019;&#x629B;&#x51FA;&#x7684;&#x3002;&#x5176;&#x5173;&#x952E;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> List&lt;DependencyChecker&gt; checkers = Lists.newArrayList();</span><br><span class="line"><span class="meta">@TaskAction</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">prepare</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="comment">//&#x7701;&#x7565;&#x4EE3;&#x7801;...</span></span><br><span class="line">    <span class="keyword">boolean</span> foundError = <span class="keyword">false</span>;</span><br><span class="line">    <span class="comment">//&#x7701;&#x7565;&#x4EE3;&#x7801;...</span></span><br><span class="line">    <span class="keyword">for</span> (SyncIssue syncIssue : checker.getSyncIssues()) {</span><br><span class="line">        <span class="keyword">if</span> (syncIssue.getSeverity() == SyncIssue.SEVERITY_ERROR) {</span><br><span class="line">            foundError = <span class="keyword">true</span>;</span><br><span class="line">            getLogger().<span class="keyword">error</span>(syncIssue.getMessage());</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (foundError) {</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> GradleException(<span class="string">&quot;Dependency Error. See console for details.&quot;</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x6211;&#x4EEC;&#x53EA;&#x8981;&#x5728;&#x8FD9;&#x4E2A;task action&#x88AB;&#x6267;&#x884C;&#x524D;&#xFF0C;&#x628A;checkers&#x53D8;&#x91CF;&#x4E2D;&#x5BF9;&#x5E94;&#x7C7B;&#x578B;&#x7684;&#x5F02;&#x5E38;remove&#x6389;&#xFF0C;&#x5C31;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x62A5;&#x9519;&#x4E86;&#xFF0C;&#x5B9E;&#x73B0;&#x4E00;&#x4E0B;&#xFF0C;&#x5177;&#x4F53;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight flix"><table><tr><td class="code"><pre><span class="line"><span class="comment">//&#x904D;&#x5386;&#x6240;&#x6709;&#x53D8;&#x4F53;</span></span><br><span class="line">android.applicationVariants.all {<span class="function"><span class="keyword">def</span> <span class="title">variant</span> <span class="title">-&gt;</span></span></span><br><span class="line"><span class="function">  <span class="title">//&#x83B7;&#x5F97;&#x8BE5;&#x53D8;&#x4F53;&#x5BF9;&#x5E94;&#x7684;prepareDependencies</span> <span class="title">task</span></span></span><br><span class="line"><span class="function">  <span class="title">def</span> <span class="title">prepareDependenciesTask</span> </span>= project.tasks.findByName(<span class="string">&quot;prepare${variant.getName().capitalize()}Dependencies&quot;</span>)</span><br><span class="line">  <span class="comment">//&#x5982;&#x679C;&#x5B58;&#x5728;&#x8BE5;task&#xFF0C;&#x5219;&#x5904;&#x7406;&#xFF0C;&#x5426;&#x5219;&#x65E0;&#x89C6;</span></span><br><span class="line">  <span class="keyword">if</span> (prepareDependenciesTask) {</span><br><span class="line">      <span class="comment">//&#x79FB;&#x9664;&#x5F02;&#x5E38;&#x7684;&#x95ED;&#x5305;&#x64CD;&#x4F5C;&#xFF0C;&#x56E0;&#x4E3A;&#x9700;&#x8981;&#x590D;&#x7528;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x63D0;&#x53D6;&#x6210;&#x4E86;&#x95ED;&#x5305;</span></span><br><span class="line">      <span class="function"><span class="keyword">def</span> <span class="title">removeSyncIssues</span> </span>= {</span><br><span class="line">          try {</span><br><span class="line">              <span class="comment">//&#x53CD;&#x5C04;&#x83B7;&#x53D6;checkers List&lt;DependencyChecker&gt;&#x5BF9;&#x8C61;</span></span><br><span class="line">              Class prepareDependenciesTaskClass = Class.forName(<span class="string">&quot;com.android.build.gradle.internal.tasks.PrepareDependenciesTask&quot;</span>)</span><br><span class="line">              Field checkersField = prepareDependenciesTaskClass.getDeclaredField(&apos;checkers&apos;)</span><br><span class="line">              checkersField.setAccessible(<span class="literal">true</span>)</span><br><span class="line">              <span class="comment">//&#x5F97;&#x5230;checkers&#x5B57;&#x6BB5;&#x503C;</span></span><br><span class="line">              <span class="function"><span class="keyword">def</span> <span class="title">checkers</span> </span>= checkersField.get(prepareDependenciesTask)</span><br><span class="line">              <span class="comment">//&#x56E0;&#x4E3A;&#x8981;&#x8FDB;&#x884C;&#x79FB;&#x9664;&#x64CD;&#x4F5C;&#xFF0C;&#x6240;&#x4EE5;&#x7528;&#x8FED;&#x4EE3;&#x5668;&#x53BB;&#x904D;&#x5386;checkers</span></span><br><span class="line">              checkers.iterator().<span class="keyword">with</span> {checkersIterator -&gt;</span><br><span class="line">                  checkersIterator.each {dependencyChecker -&gt;</span><br><span class="line">                      <span class="comment">//&#x9700;&#x8981;&#x5C06;DependencyChecker&#x5BF9;&#x8C61;&#x4E2D;&#x7684;syncIssues&#x8FDB;&#x884C;&#x904D;&#x5386;&#xFF0C;&#x83B7;&#x5F97;&#x5BF9;&#x5E94;&#x7C7B;&#x578B;&#xFF0C;&#x5C06;&#x5176;&#x79FB;&#x9664;</span></span><br><span class="line">                      <span class="comment">//&#x904D;&#x5386;checker&#x4E2D;&#x7684;syncIssues</span></span><br><span class="line">                      <span class="function"><span class="keyword">def</span> <span class="title">syncIssues</span> </span>= dependencyChecker.syncIssues</span><br><span class="line">                      syncIssues.iterator().<span class="keyword">with</span> {syncIssuesIterator -&gt;</span><br><span class="line">                          syncIssuesIterator.each {syncIssue -&gt;</span><br><span class="line">                              <span class="comment">//&#x5982;&#x679C;&#x7C7B;&#x578B;&#x662F;7&#xFF0C;&#x5E76;&#x4E14;&#x9519;&#x8BEF;&#x4E25;&#x91CD;&#x7EA7;&#x522B;&#x4E3A;2&#xFF0C;&#x5219;&#x5C06;&#x5176;&#x79FB;&#x9664;&#xFF0C;&#x5E76;&#x4E14;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#x63D0;&#x793A;</span></span><br><span class="line">                              <span class="keyword">if</span> (syncIssue.getType() == <span class="number">7</span> &amp;&amp; syncIssue.getSeverity() == <span class="number">2</span>) {</span><br><span class="line">                                  project.logger.lifecycle <span class="string">&quot;[providedAar] WARNING: providedAar has been enabled in com.android.application you can ignore ${syncIssue}&quot;</span></span><br><span class="line">                                  <span class="comment">//&#x79FB;&#x9664;</span></span><br><span class="line">                                  syncIssuesIterator.remove()</span><br><span class="line">                              }</span><br><span class="line">                          }</span><br><span class="line">                      }</span><br><span class="line">                  }</span><br><span class="line">              }</span><br><span class="line">          } catch (Exception e) {</span><br><span class="line">              e.printStackTrace()</span><br><span class="line">          }</span><br><span class="line">      }</span><br><span class="line">      <span class="comment">//&#x5728;&#x914D;&#x7F6E;&#x9636;&#x6BB5;&#x6267;&#x884C;&#x8BE5;&#x95ED;&#x5305;</span></span><br><span class="line">      prepareDependenciesTask.configure removeSyncIssues</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7B80;&#x5355;&#x6D4B;&#x8BD5;&#x4E00;&#x4E0B;&#xFF0C;&#x8DD1;&#x4E86;&#x4E0B;&#xFF0C;&#x6CA1;&#x95EE;&#x9898;&#xFF0C;&#x540E;&#x9762;&#x6D4B;&#x8BD5;&#x4E86;&#x4E0B;&#x517C;&#x5BB9;&#x6027;&#xFF0C;&#x5728;[2.2.0,2,5.0)&#x5185;&#x7684;&#x7248;&#x672C;&#x90FD;&#x9002;&#x7528;&#x8BE5;&#x4EE3;&#x7801;&#xFF0C;&#x4E0D;&#x8FC7;&#x6709;&#x4E2A;&#x7EC6;&#x8282;&#x6027;&#x7684;&#x95EE;&#x9898;&#x9700;&#x8981;&#x5904;&#x7406;&#xFF0C;&#x5373;2.4.0+&#x9884;&#x89C8;&#x7248;&#x7684;gradle&#xFF0C;&#x5176;&#x4EE3;&#x7801;&#x867D;&#x7136;&#x504F;&#x5411;2.3.0+&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x4F46;&#x662F;&#x5185;&#x90E8;&#x4E00;&#x4E9B;&#x903B;&#x8F91;&#x8FD8;&#x662F;&#x6BD4;&#x8F83;&#x504F;&#x5411;&#x4E8E;3.0.0&#x7684;&#x4EE3;&#x7801;&#x7684;&#xFF0C;&#x7ECF;&#x8FC7;&#x8BD5;&#x9A8C;&#x53D1;&#x73B0;&#xFF0C;&#x4E0D;&#x80FD;&#x5728;prepareDependenciesTask.configure&#x53BB;&#x6267;&#x884C;&#x8BE5;&#x95ED;&#x5305;&#xFF0C;&#x90A3;&#x4E2A;&#x65F6;&#x5019;checkers&#x4E2D;&#x7684;syncIssues&#x8FD8;&#x662F;&#x7A7A;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x5EF6;&#x8FDF;&#x6267;&#x884C;&#xFF0C;&#x4F46;&#x5FC5;&#x987B;&#x5728;&#x4EFB;&#x52A1;&#x6267;&#x884C;&#x524D;&#x6267;&#x884C;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x5C06;&#x5176;&#x79FB;&#x5230;doFirst&#x4E2D;&#x53BB;&#x6267;&#x884C;&#xFF0C;&#x4F46;&#x662F;&#x5BF9;&#x4E8E;&#x975E;2.4.0+&#x9884;&#x89C8;&#x7248;&#x7684;&#x7248;&#x672C;&#xFF0C;doFirst&#x6267;&#x884C;&#x5C31;&#x592A;&#x665A;&#x4E86;&#xFF0C;&#x5FC5;&#x987B;&#x5728;configure&#x9636;&#x6BB5;&#x8FDB;&#x884C;&#x79FB;&#x9664;&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x4F1A;&#x62A5;&#x5F02;&#x5E38;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x505A;&#x4E0B;&#x7248;&#x672C;&#x533A;&#x5206;&#xFF0C;&#x9700;&#x8981;&#x83B7;&#x53D6;gradle&#x7684;&#x7248;&#x672C;&#x53F7;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x7248;&#x672C;&#x53F7;&#x600E;&#x4E48;&#x83B7;&#x53D6;&#x5462;&#x3002;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">String getAndroidGradlePluginVersionCompat() {</span><br><span class="line">    String version = <span class="keyword">null</span></span><br><span class="line">    try {</span><br><span class="line">        <span class="keyword">Class</span> versionModel = <span class="keyword">Class</span>.forName(&quot;com.android.builder.model.Version&quot;)</span><br><span class="line">        def versionFiled = versionModel.getDeclaredField(&quot;ANDROID_GRADLE_PLUGIN_VERSION&quot;)</span><br><span class="line">        versionFiled.setAccessible(<span class="keyword">true</span>)</span><br><span class="line">        version = versionFiled.<span class="keyword">get</span>(<span class="keyword">null</span>)</span><br><span class="line">    } catch (<span class="keyword">Exception</span> e) {</span><br><span class="line">        version = &quot;unknown&quot;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">version</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x505A;&#x4E0B;&#x7248;&#x672C;&#x533A;&#x5206;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">String androidGradlePluginVersion = get<span class="constructor">AndroidGradlePluginVersionCompat()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (androidGradlePluginVersion.starts<span class="constructor">With(<span class="string">&quot;2.2&quot;</span>)</span><span class="operator"> || </span>androidGradlePluginVersion.starts<span class="constructor">With(<span class="string">&quot;2.3&quot;</span>)</span>) {</span><br><span class="line">    prepareDependenciesTask.configure removeSyncIssues <span class="comment">//configure&#x9636;&#x6BB5;&#x6267;&#x884C;</span></span><br><span class="line">} <span class="keyword">else</span> <span class="keyword">if</span> (androidGradlePluginVersion.starts<span class="constructor">With(<span class="string">&quot;2.4&quot;</span>)</span>) {</span><br><span class="line">    prepareDependenciesTask.doFirst removeSyncIssues <span class="comment">//configure&#x9636;&#x6BB5;&#x8FC7;&#x65E9;&#xFF0C;&#x65E0;&#x6CD5;&#x6B63;&#x5E38;&#x5F02;&#x5E38;&#xFF0C;&#x5EF6;&#x8FDF;&#x5230;doFirst&#x4E2D;&#x53BB;&#x6267;&#x884C;</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6837;[2.2.0,2,5.0)&#x8FD9;&#x4E2A;&#x533A;&#x95F4;&#x5185;&#x7684;&#x7248;&#x672C;&#x5C31;&#x5904;&#x7406;&#x5B8C;&#x4E86;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x5904;&#x7406;&#x7B2C;&#x4E8C;&#x590D;&#x6742;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x5373;[2.5.0,3.1.0+]&#xFF0C;&#x8FD9;&#x91CC;&#x4EE5;3.0.1&#x7684;&#x4EE3;&#x7801;&#x4E3A;&#x4F8B;&#xFF0C;&#x4FEE;&#x6539;&#x4EE3;&#x7801;&#x9002;&#x7528;&#x4E8E;[2.5.0,3.1.0+]&#x533A;&#x95F4;&#x5185;&#x7684;&#x6240;&#x6709;&#x7248;&#x672C;</p><p>&#x5BF9;&#x4E8E;&#x8FD9;&#x4E2A;&#x533A;&#x95F4;&#x8303;&#x56F4;&#x5185;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x5982;&#x679C;&#x5728;com.android.application&#x4E2D;&#x4F7F;&#x7528;provided aar&#xFF0C;&#x5219;&#x4F1A;&#x62A5;&#x51FA;&#x8FD9;&#x4E2A;&#x9519;&#x8BEF;&#x4FE1;&#x606F;</p><figure class="highlight delphi"><table><tr><td class="code"><pre><span class="line">Android dependency <span class="string">&apos;$dependency&apos;</span> <span class="keyword">is</span> <span class="keyword">set</span> <span class="keyword">to</span> compileOnly/provided which <span class="keyword">is</span> <span class="keyword">not</span> supported</span><br></pre></td></tr></table></figure><p>&#x901A;&#x8FC7;&#x641C;&#x7D22;&#x62A5;&#x9519;&#x7684;&#x5173;&#x952E;&#x5B57;&#x7B26;&#x4E32;&#x4FE1;&#x606F;&#xFF0C;&#x53EF;&#x4EE5;&#x5B9A;&#x4F4D;&#x5230;&#x8FD9;&#x4E2A;&#x5F02;&#x5E38;&#x662F;&#x5728;AppPreBuildTask&#x4E2D;&#x62A5;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x5176;&#x5173;&#x952E;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> ArtifactCollection compileManifests;</span><br><span class="line"><span class="keyword">private</span> ArtifactCollection runtimeManifests;</span><br><span class="line"></span><br><span class="line">@TaskAction</span><br><span class="line"><span class="keyword">void</span> run() {</span><br><span class="line">    Set&lt;ResolvedArtifactResult&gt; compileArtifacts = compileManifests.getArtifacts();</span><br><span class="line">    Set&lt;ResolvedArtifactResult&gt; runtimeArtifacts = runtimeManifests.getArtifacts();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// create a map where the key is either the sub-project path, or groupId:artifactId for</span></span><br><span class="line">    <span class="comment">// external dependencies.</span></span><br><span class="line">    <span class="comment">// For external libraries, the value is the version.</span></span><br><span class="line">    Map&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; runtimeIds = Maps.newHashMapWithExpectedSize(runtimeArtifacts.<span class="built_in">size</span>());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// build a list of the runtime artifacts</span></span><br><span class="line">    <span class="keyword">for</span> (ResolvedArtifactResult artifact : runtimeArtifacts) {</span><br><span class="line">        handleArtifact(artifact.getId().getComponentIdentifier(), runtimeIds::put);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// run through the compile ones to check for provided only.</span></span><br><span class="line">    <span class="keyword">for</span> (ResolvedArtifactResult artifact : compileArtifacts) {</span><br><span class="line">        <span class="keyword">final</span> ComponentIdentifier compileId = artifact.getId().getComponentIdentifier();</span><br><span class="line">        handleArtifact(</span><br><span class="line">                compileId,</span><br><span class="line">                (<span class="built_in">key</span>, value) -&gt; {</span><br><span class="line">                    <span class="keyword">String</span> runtimeVersion = runtimeIds.<span class="built_in">get</span>(<span class="built_in">key</span>);</span><br><span class="line">                    <span class="keyword">if</span> (runtimeVersion == <span class="keyword">null</span>) {</span><br><span class="line">                        <span class="keyword">String</span> display = compileId.getDisplayName();</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(</span><br><span class="line">                                <span class="string">&quot;Android dependency &apos;&quot;</span></span><br><span class="line">                                        + display</span><br><span class="line">                                        + <span class="string">&quot;&apos; is set to compileOnly/provided which is not supported&quot;</span>);</span><br><span class="line">                    } <span class="keyword">else</span> <span class="keyword">if</span> (!runtimeVersion.isEmpty()) {</span><br><span class="line">                        <span class="comment">// compare versions.</span></span><br><span class="line">                        <span class="keyword">if</span> (!runtimeVersion.equals(value)) {</span><br><span class="line">                            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(</span><br><span class="line">                                    <span class="keyword">String</span>.format(</span><br><span class="line">                                            <span class="string">&quot;Android dependency &apos;%s&apos; has different version for the compile (%s) and runtime (%s) classpath. You should manually set the same version via DependencyResolution&quot;</span>,</span><br><span class="line">                                            <span class="built_in">key</span>, value, runtimeVersion));</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                });</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> handleArtifact(</span><br><span class="line">        @NonNull ComponentIdentifier id, @NonNull BiConsumer&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; consumer) {</span><br><span class="line">    <span class="keyword">if</span> (id <span class="keyword">instanceof</span> ProjectComponentIdentifier) {</span><br><span class="line">        consumer.accept(((ProjectComponentIdentifier) id).getProjectPath().intern(), <span class="string">&quot;&quot;</span>);</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (id <span class="keyword">instanceof</span> ModuleComponentIdentifier) {</span><br><span class="line">        ModuleComponentIdentifier moduleComponentId = (ModuleComponentIdentifier) id;</span><br><span class="line">        consumer.accept(</span><br><span class="line">                moduleComponentId.getGroup() + <span class="string">&quot;:&quot;</span> + moduleComponentId.getModule(),</span><br><span class="line">                moduleComponentId.getVersion());</span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (id <span class="keyword">instanceof</span> OpaqueComponentArtifactIdentifier) {</span><br><span class="line">        <span class="comment">// skip those for now.</span></span><br><span class="line">        <span class="comment">// These are file-based dependencies and it&apos;s unlikely to be an AAR.</span></span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        getLogger()</span><br><span class="line">                .warn(</span><br><span class="line">                        <span class="string">&quot;Unknown ComponentIdentifier type: &quot;</span></span><br><span class="line">                                + id.getClass().getCanonicalName());</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7B80;&#x5355;&#x8BF4;&#x4E0B;&#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#x7684;&#x903B;&#x8F91;</p><ul><li>&#x83B7;&#x53D6;Android aar&#x4F9D;&#x8D56;&#x7684;&#x7F16;&#x8BD1;&#x671F;&#x4F9D;&#x8D56;compileManifests&#x548C;&#x8FD0;&#x884C;&#x671F;&#x4F9D;&#x8D56;runtimeManifests</li><li>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;map&#x5BF9;&#x8C61;runtimeIds&#xFF0C;&#x904D;&#x5386;&#x8FD0;&#x884C;&#x671F;&#x4F9D;&#x8D56;&#xFF0C;&#x5C06;&#x4F9D;&#x8D56;&#x7684;&#x5750;&#x6807;&#x4F5C;&#x4E3A;key&#xFF0C;&#x4F9D;&#x8D56;&#x7684;&#x7248;&#x672C;&#x53F7;&#x4F5C;&#x4E3A;&#x503C;</li><li>&#x904D;&#x5386;&#x7F16;&#x8BD1;&#x671F;&#x4F9D;&#x8D56;&#xFF0C;&#x7528;&#x4F9D;&#x8D56;&#x7684;&#x5750;&#x6807;&#x4ECE;runtimeIds map&#x4E2D;&#x53D6;&#x503C;&#xFF0C;&#x5982;&#x679C;&#x53D6;&#x5230;&#x7684;&#x503C;&#xFF0C;&#x5373;&#x4F9D;&#x8D56;&#x7684;&#x7248;&#x672C;&#x53F7;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x8868;&#x793A;&#x7F16;&#x8BD1;&#x671F;&#x7684;aar&#x4F9D;&#x8D56;&#x5728;&#x8FD0;&#x884C;&#x671F;&#x4F9D;&#x8D56;&#x4E2D;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x4E8E;&#x662F;&#x629B;&#x51FA;Android dependency &#x2018;$dependency&#x2019; is set to compileOnly/provided which is not supported&#x5F02;&#x5E38;</li><li>&#x5982;&#x679C;&#x7248;&#x672C;&#x53F7;&#x4E0D;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x6BD4;&#x8F83;&#x7F16;&#x8BD1;&#x671F;&#x548C;&#x8FD0;&#x884C;&#x671F;&#x7684;&#x7248;&#x672C;&#x53F7;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x4E00;&#x81F4;&#xFF0C;&#x5219;&#x629B;&#x7248;&#x672C;&#x53F7;&#x4E0D;&#x4E00;&#x81F4;&#x7684;&#x5F02;&#x5E38;&#xFF0C;&#x8FD9;&#x4E2A;&#x9700;&#x8981;&#x4E1A;&#x52A1;&#x4E0A;&#x63A7;&#x5236;&#x7248;&#x672C;&#x53F7;&#x4E00;&#x81F4;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x7279;&#x6B8A;&#x5904;&#x7406;</li></ul><p>&#x4ECE;&#x4E0A;&#x9762;&#x7684;&#x5206;&#x6790;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#x7684;&#x539F;&#x56E0;&#x662F;aar&#x7684;&#x7F16;&#x8BD1;&#x671F;&#x4F9D;&#x8D56;&#x5728;&#x8FD0;&#x884C;&#x671F;&#x4F9D;&#x8D56;&#x4E2D;&#x4E0D;&#x5B58;&#x5728;&#x3002;&#x6240;&#x4EE5;&#x6D88;&#x9664;&#x8FD9;&#x4E2A;&#x5F02;&#x5E38;&#x7684;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x8BA9;&#x5176;&#x5B58;&#x5728;&#x5373;&#x53EF;&#xFF0C;&#x4F46;&#x662F;&#x5982;&#x679C;&#x8BA9;&#x5176;&#x5B58;&#x5728;&#xFF0C;&#x6700;&#x7EC8;&#x7F16;&#x8BD1;&#x671F;provided&#x7684;aar&#x4E5F;&#x4F1A;&#x88AB;&#x7F16;&#x8BD1;&#x8FDB;apk&#x4E2D;&#x53BB;&#xFF0C;&#x8FD9;&#x4E0D;&#x662F;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x7684;&#x3002;&#x6362;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x66FF;&#x6362;&#x6267;&#x884C;&#x903B;&#x8F91;&#x3002;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x66FF;&#x6362;&#x8FD9;&#x4E2A;task&#x771F;&#x6B63;&#x6267;&#x884C;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x8BA9;&#x5176;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#x7684;&#x90E8;&#x5206;&#x4FEE;&#x6539;&#x4E3A;&#x6253;&#x65E5;&#x5FD7;&#x3002;&#x5177;&#x4F53;&#x7684;&#x4FEE;&#x6539;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x770B;&#x6CE8;&#x91CA;&#xFF0C;&#x5173;&#x952E;&#x90E8;&#x5206;&#x5C31;&#x662F;&#x5C06;&#x629B;&#x5F02;&#x5E38;&#x7684;&#x903B;&#x8F91;&#x4FEE;&#x6539;&#x4E3A;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#xFF0C;&#x5176;&#x4ED6;&#x903B;&#x8F91;&#x548C;&#x539F;&#x4EE3;&#x7801;&#x4E00;&#x6837;&#x3002;&#x8FD8;&#x6709;&#x4E00;&#x70B9;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;2.5.0+&#x9884;&#x89C8;&#x7248;&#x7684;&#x4EE3;&#x7801;&#x548C;3.0.0+&#x7248;&#x672C;&#x7684;&#x4EE3;&#x7801;&#x6709;&#x4E00;&#x70B9;&#x533A;&#x522B;&#xFF0C;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x517C;&#x5BB9;&#x5904;&#x7406;&#x3002;</p><figure class="highlight flix"><table><tr><td class="code"><pre><span class="line"><span class="comment">//&#x5BFB;&#x627E;pre${buildType}Build&#x4EFB;&#x52A1;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">prepareBuildTask</span> </span>= project.tasks.findByName(<span class="string">&quot;pre${variant.getName().capitalize()}Build&quot;</span>)</span><br><span class="line"><span class="comment">//&#x5982;&#x679C;task&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x8FDB;&#x884C;&#x5904;&#x7406;</span></span><br><span class="line"><span class="keyword">if</span> (prepareBuildTask) {</span><br><span class="line">    <span class="comment">//&#x662F;&#x5426;&#x9700;&#x8981;&#x91CD;&#x5B9A;&#x5411;&#x6267;&#x884C;&#x7684;action&#x5185;&#x5BB9;</span></span><br><span class="line">    boolean needRedirectAction = <span class="literal">false</span></span><br><span class="line">    <span class="comment">//&#x8FED;&#x4EE3;&#x8BE5;&#x4EFB;&#x52A1;&#x7684;actions&#xFF0C;&#x5982;&#x679C;&#x5B58;&#x5728;AppPreBuildTask&#x8FD9;&#x4E2A;&#x540D;&#x5B57;&#xFF0C;&#x5219;&#x5C06;&#x5176;&#x79FB;&#x9664;&#xFF0C;&#x6807;&#x8BB0;&#x91CD;&#x5B9A;&#x5411;&#x6807;&#x8BB0;&#x4E3A;true</span></span><br><span class="line">    prepareBuildTask.actions.iterator().<span class="keyword">with</span> {actionsIterator -&gt;</span><br><span class="line">        actionsIterator.each {action -&gt;</span><br><span class="line">            <span class="comment">//&#x53D6;action&#x540D;&#x5B57;&#xFF0C;&#x5224;&#x65AD;&#x662F;&#x5426;&#x5305;&#x542B;AppPreBuildTask&#x5B57;&#x7B26;&#x4E32;</span></span><br><span class="line">            <span class="keyword">if</span> (action.getActionClassName().contains(<span class="string">&quot;AppPreBuildTask&quot;</span>)) {</span><br><span class="line">                <span class="comment">//&#x79FB;&#x9664;&#xFF0C;&#x5E76;&#x8FDB;&#x884C;&#x6807;&#x8BB0;&#x9700;&#x8981;&#x91CD;&#x5B9A;&#x5411;&#x5B9E;&#x73B0;</span></span><br><span class="line">                actionsIterator.remove()</span><br><span class="line">                needRedirectAction = <span class="literal">true</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x5982;&#x679C;&#x91CD;&#x5B9A;&#x5411;&#x6807;&#x8BB0;&#x4E3A;true&#xFF0C;&#x5219;&#x5C06;&#x539F;&#x6709;&#x903B;&#x8F91;&#x62F7;&#x8D1D;&#x4E0B;&#x6765;&#xFF0C;&#x7528;&#x53CD;&#x5C04;&#x5B9E;&#x73B0;&#x4E00;&#x904D;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x629B;&#x5F02;&#x5E38;&#x7684;&#x90E8;&#x5206;&#x4FEE;&#x6539;&#x4E3A;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;</span></span><br><span class="line">    <span class="keyword">if</span> (needRedirectAction) {</span><br><span class="line">        <span class="comment">//&#x6DFB;&#x52A0;&#x65B0;&#x7684;action&#xFF0C;&#x4EE3;&#x66FF;&#x88AB;&#x79FB;&#x9664;&#x7684;action&#x6267;&#x884C;&#x903B;&#x8F91;</span></span><br><span class="line">        prepareBuildTask.doLast {</span><br><span class="line">            <span class="comment">//&#x4E0B;&#x9762;&#x4E00;&#x5927;&#x5768;&#x662F;&#x517C;&#x5BB9;&#x5904;&#x7406;&#xFF0C;3.0.0+&#x7684;&#x7248;&#x672C;&#x662F;compileManifests&#x548C;runtimeManifests&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x914D;&#x7F6E;&#x9636;&#x6BB5;&#x8FD9;&#x4E24;&#x4E2A;&#x503C;&#x5DF2;&#x7ECF;&#x88AB;&#x8D4B;&#x503C;&#xFF0C;2.5.0+&#x9884;&#x89C8;&#x7248;&#x7684;&#x4EE3;&#x7801;&#x662F;compileClasspath&#x548C;runtimeClasspath&#xFF0C;&#x5176;&#x503C;&#x5728;&#x6267;&#x884C;&#x65F6;&#x901A;&#x8FC7;variantScope&#x83B7;&#x53D6;</span></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">compileManifests</span> </span>= null</span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">runtimeManifests</span> </span>= null</span><br><span class="line">            Class appPreBuildTaskClass = Class.forName(<span class="string">&quot;com.android.build.gradle.internal.tasks.AppPreBuildTask&quot;</span>)</span><br><span class="line">            try {</span><br><span class="line">                <span class="comment">//3.0.0+&#x7684;&#x7248;&#x672C;&#x76F4;&#x63A5;&#x53D6;compileManifests&#x548C;runtimeManifests&#x5B57;&#x6BB5;&#x7684;&#x503C;</span></span><br><span class="line">                Field compileManifestsField = appPreBuildTaskClass.getDeclaredField(<span class="string">&quot;compileManifests&quot;</span>)</span><br><span class="line">                Field runtimeManifestsField = appPreBuildTaskClass.getDeclaredField(<span class="string">&quot;runtimeManifests&quot;</span>)</span><br><span class="line">                compileManifestsField.setAccessible(<span class="literal">true</span>)</span><br><span class="line">                runtimeManifestsField.setAccessible(<span class="literal">true</span>)</span><br><span class="line">                compileManifests = compileManifestsField.get(prepareBuildTask)</span><br><span class="line">                runtimeManifests = runtimeManifestsField.get(prepareBuildTask)</span><br><span class="line">            } catch (Exception e) {</span><br><span class="line">                try {</span><br><span class="line">                    <span class="comment">//2.5.0+&#x7684;&#x7248;&#x672C;&#xFF0C;&#x7531;&#x4E8E;&#x5176;&#x503C;&#x662F;&#x5728;run&#x9636;&#x6BB5;&#x8D4B;&#x503C;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6362;&#x4E00;&#x4E2A;&#x65B9;&#x5F0F;&#x83B7;&#x53D6;&#xFF0C;&#x901A;&#x8FC7;variantScope&#x53BB;&#x62FF;&#x5BF9;&#x5E94;&#x7684;&#x5185;&#x5BB9;</span></span><br><span class="line">                    Field variantScopeField = appPreBuildTaskClass.getDeclaredField(<span class="string">&quot;variantScope&quot;</span>)</span><br><span class="line">                    variantScopeField.setAccessible(<span class="literal">true</span>)</span><br><span class="line">                    <span class="function"><span class="keyword">def</span> <span class="title">variantScope</span> </span>= variantScopeField.get(prepareBuildTask)</span><br><span class="line">                    <span class="comment">//&#x4E3A;&#x4E86;&#x517C;&#x5BB9;&#xFF0C;&#x9700;&#x8981;&#x907F;&#x514D;import&#x5BFC;&#x5305;&#xFF0C;&#x8FD9;&#x91CC;&#x4F7F;&#x7528;&#x5168;&#x7C7B;&#x540D;&#x8DEF;&#x5F84;&#x8FDB;&#x884C;&#x5F15;&#x7528;&#xFF0C;&#x4E14;&#x4F7F;&#x7528;&#x6CE8;&#x91CA;&#x6D88;&#x9664;ide&#x8B66;&#x544A;</span></span><br><span class="line">                    <span class="comment">//noinspection UnnecessaryQualifiedReference</span></span><br><span class="line">                    compileManifests = variantScope.getArtifactCollection(com.android.build.gradle.internal.publishing.AndroidArtifacts.ConsumedConfigType.COMPILE_CLASSPATH, com.android.build.gradle.internal.publishing.AndroidArtifacts.ArtifactScope.ALL, com.android.build.gradle.internal.publishing.AndroidArtifacts.ArtifactType.MANIFEST)</span><br><span class="line">                    runtimeManifests = variantScope.getArtifactCollection(com.android.build.gradle.internal.publishing.AndroidArtifacts.ConsumedConfigType.RUNTIME_CLASSPATH, com.android.build.gradle.internal.publishing.AndroidArtifacts.ArtifactScope.ALL, com.android.build.gradle.internal.publishing.AndroidArtifacts.ArtifactType.MANIFEST)</span><br><span class="line">                } catch (Exception e1) {</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            try {</span><br><span class="line">                <span class="comment">//&#x4E0B;&#x9762;&#x8FD8;&#x539F;&#x539F;&#x6709;action&#x7684;&#x903B;&#x8F91;</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//&#x83B7;&#x53D6;&#x7F16;&#x8BD1;&#x671F;&#x548C;&#x8FD0;&#x884C;&#x671F;android aar&#x4F9D;&#x8D56;</span></span><br><span class="line">                Set&lt;ResolvedArtifactResult&gt; compileArtifacts = compileManifests.getArtifacts()</span><br><span class="line">                Set&lt;ResolvedArtifactResult&gt; runtimeArtifacts = runtimeManifests.getArtifacts()</span><br><span class="line"></span><br><span class="line">                <span class="comment">//&#x521B;&#x5EFA;Map</span></span><br><span class="line">                Map&lt;String, String&gt; runtimeIds = new HashMap&lt;&gt;(runtimeArtifacts.size())</span><br><span class="line"></span><br><span class="line">                <span class="comment">//&#x539F;&#x6709;&#x7684;handleArtifact&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x91CC;&#x6539;&#x6210;&#x4E86;&#x95ED;&#x5305;</span></span><br><span class="line">                <span class="function"><span class="keyword">def</span> <span class="title">handleArtifact</span> </span>= {id, consumer -&gt;</span><br><span class="line">                    <span class="keyword">if</span> (id instanceof ProjectComponentIdentifier) {</span><br><span class="line">                        consumer(((ProjectComponentIdentifier) id).getProjectPath().intern(), <span class="string">&quot;&quot;</span>)</span><br><span class="line">                    } <span class="keyword">else</span> <span class="keyword">if</span> (id instanceof ModuleComponentIdentifier) {</span><br><span class="line">                        ModuleComponentIdentifier moduleComponentId = (ModuleComponentIdentifier) id</span><br><span class="line">                        consumer(</span><br><span class="line">                                moduleComponentId.getGroup() + <span class="string">&quot;:&quot;</span> + moduleComponentId.getModule(),</span><br><span class="line">                                moduleComponentId.getVersion())</span><br><span class="line">                    } <span class="keyword">else</span> {</span><br><span class="line">                        getLogger()</span><br><span class="line">                                .warn(</span><br><span class="line">                                <span class="string">&quot;Unknown ComponentIdentifier type: &quot;</span></span><br><span class="line">                                        + id.getClass().getCanonicalName())</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">                <span class="comment">//&#x5904;&#x7406;&#x539F;&#x6709;&#x7684;for&#x5FAA;&#x73AF;&#x903B;&#x8F91;&#xFF0C;&#x5C06;runtime&#x90E8;&#x5206;&#x653E;&#x5165;runtimeIds&#x7684;map&#xFF0C;&#x952E;&#x662F;&#x5750;&#x6807;&#xFF0C;&#x503C;&#x4E3A;&#x7248;&#x672C;&#x53F7;</span></span><br><span class="line">                runtimeArtifacts.each {<span class="function"><span class="keyword">def</span> <span class="title">artifact</span> <span class="title">-&gt;</span></span></span><br><span class="line"><span class="function">                    <span class="title">def</span> <span class="title">runtimeId</span> </span>= artifact.getId().getComponentIdentifier()</span><br><span class="line">                    <span class="function"><span class="keyword">def</span> <span class="title">putMap</span> </span>= {<span class="function"><span class="keyword">def</span> <span class="title">key</span>, <span class="title">def</span> <span class="title">value</span> <span class="title">-&gt;</span></span></span><br><span class="line"><span class="function">                        <span class="title">runtimeIds</span>.<span class="title">put</span></span>(key, value)</span><br><span class="line">                    }</span><br><span class="line">                    handleArtifact(runtimeId, putMap)</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">                <span class="comment">//&#x904D;&#x5386;compile&#x4F9D;&#x8D56;&#x90E8;&#x5206;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x5224;&#x65AD;&#x662F;&#x5426;&#x5728;runtime&#x4F9D;&#x8D56;&#x4E2D;&#x5B58;&#x5728;&#x7248;&#x672C;&#x53F7;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x4F1A;&#x629B;&#x5F02;&#x5E38;</span></span><br><span class="line">                compileArtifacts.each {<span class="function"><span class="keyword">def</span> <span class="title">artifact</span> <span class="title">-&gt;</span></span></span><br><span class="line"><span class="function">                    <span class="title">final</span> <span class="title">ComponentIdentifier</span> <span class="title">compileId</span> </span>= artifact.getId().getComponentIdentifier()</span><br><span class="line">                    <span class="function"><span class="keyword">def</span> <span class="title">checkCompile</span> </span>= {<span class="function"><span class="keyword">def</span> <span class="title">key</span>, <span class="title">def</span> <span class="title">value</span> <span class="title">-&gt;</span></span></span><br><span class="line"><span class="function">                        <span class="title">String</span> <span class="title">runtimeVersion</span> </span>= runtimeIds.get(key)</span><br><span class="line">                        <span class="keyword">if</span> (runtimeVersion == null) {</span><br><span class="line">                            String display = compileId.getDisplayName()</span><br><span class="line">                            <span class="comment">//&#x8FD9;&#x91CC;&#x629B;&#x7684;&#x5F02;&#x5E38;&#xFF0C;&#x4FEE;&#x6539;&#x4E3A;&#x6253;&#x65E5;&#x5FD7;&#xFF0C;&#x4EC5;&#x6B64;&#x4E00;&#x5904;&#x4FEE;&#x6539;</span></span><br><span class="line">                            project.logger.lifecycle(</span><br><span class="line">                                    <span class="string">&quot;[providedAar] WARNING: providedAar has been enabled in com.android.application you can ignore &apos;Android dependency &apos;&quot;</span></span><br><span class="line">                                            + display</span><br><span class="line">                                            + <span class="string">&quot;&apos; is set to compileOnly/provided which is not supported&apos;&quot;</span>)</span><br><span class="line">                        } <span class="keyword">else</span> <span class="keyword">if</span> (!runtimeVersion.isEmpty()) {</span><br><span class="line">                            <span class="comment">// compare versions.</span></span><br><span class="line">                            <span class="keyword">if</span> (!runtimeVersion.equals(value)) {</span><br><span class="line">                                throw new RuntimeException(</span><br><span class="line">                                        String.format(</span><br><span class="line">                                                <span class="string">&quot;Android dependency &apos;%s&apos; has different version for the compile (%s) and runtime (%s) classpath. You should manually set the same version via DependencyResolution&quot;</span>,</span><br><span class="line">                                                key, value, runtimeVersion));</span><br><span class="line">                            }</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                    handleArtifact(compileId, checkCompile)</span><br><span class="line">                }</span><br><span class="line">            } catch (Exception e) {</span><br><span class="line">                e.printStackTrace()</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>[2.5.0,3.1.0+]&#x533A;&#x95F4;&#x5185;&#x7684;&#x7248;&#x672C;&#x4E5F;&#x641E;&#x5B9A;&#x4E86;&#xFF0C;&#x901A;&#x8FC7;&#x517C;&#x5BB9;&#x6027;&#x6D4B;&#x8BD5;&#xFF0C;&#x53D1;&#x73B0;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x5B8C;&#x7F8E;&#x7684;&#x9002;&#x914D;&#x4E86;[2.5.0,3.1.0+]&#x8FD9;&#x4E2A;&#x533A;&#x95F4;&#x5185;&#x7684;&#x6240;&#x6709;&#x7248;&#x672C;&#x3002;</p><p>&#x5F53;&#x7136;&#xFF0C;&#x4E3A;&#x4E86;&#x8FDB;&#x884C;&#x5404;&#x4E2A;&#x7248;&#x672C;&#x7684;&#x533A;&#x5206;&#x5904;&#x7406;&#xFF0C;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x4E00;&#x4E9B;&#x903B;&#x8F91;&#x4E0A;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x6211;&#x4EEC;&#x6700;&#x597D;&#x4E0D;&#x8981;&#x76F4;&#x63A5;&#x4F7F;&#x7528;provided&#x8FD9;&#x4E2A;configuration&#xFF0C;&#x800C;&#x662F;&#x521B;&#x5EFA;&#x81EA;&#x5B9A;&#x4E49;&#x7684;providedAar&#xFF0C;&#x8FD9;&#x4E48;&#x505A;&#x7684;&#x597D;&#x5904;&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x540E;&#x7EED;&#x6269;&#x5C55;&#xFF0C;&#x63D0;&#x4F9B;&#x66F4;&#x52A0;&#x7075;&#x6D3B;&#x7684;&#x9014;&#x5F84;&#xFF0C;&#x800C;&#x4E0D;&#x9700;&#x8981;&#x4E1A;&#x52A1;&#x4FEE;&#x6539;&#x73B0;&#x6709;&#x7684;&#x4EE3;&#x7801;&#x3002;&#x8FD9;&#x90E8;&#x5206;&#x7684;&#x4EE3;&#x7801;&#x5982;&#x4E0B;:</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">//&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5F15;&#x7528;com.android.application&#x63D2;&#x4EF6;&#xFF0C;&#x76F4;&#x63A5;return</span></span><br><span class="line"><span class="keyword">if</span> (!project.get<span class="constructor">Plugins()</span>.has<span class="constructor">Plugin(<span class="string">&quot;com.android.application&quot;</span>)</span>) {</span><br><span class="line">    return</span><br><span class="line">}</span><br><span class="line"><span class="comment">//&#x5982;&#x679C;&#x5DF2;&#x7ECF;&#x6DFB;&#x52A0;&#x8FC7;providedAar&#xFF0C;&#x76F4;&#x63A5;return</span></span><br><span class="line"><span class="keyword">if</span> (project.get<span class="constructor">Configurations()</span>.find<span class="constructor">ByName(<span class="string">&quot;providedAar&quot;</span>)</span> != null) {</span><br><span class="line">    return</span><br><span class="line">}</span><br><span class="line"><span class="comment">//&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;provided&#xFF0C;&#x76F4;&#x63A5;return</span></span><br><span class="line">Configuration providedConfiguration = project.get<span class="constructor">Configurations()</span>.find<span class="constructor">ByName(<span class="string">&quot;provided&quot;</span>)</span></span><br><span class="line"><span class="keyword">if</span> (providedConfiguration<span class="operator"> == </span>null) {</span><br><span class="line">    return</span><br><span class="line">}</span><br><span class="line"><span class="comment">//&#x521B;&#x5EFA;providedAar</span></span><br><span class="line">Configuration providedAarConfiguration = project.get<span class="constructor">Configurations()</span>.create(<span class="string">&quot;providedAar&quot;</span>)</span><br><span class="line"><span class="comment">//&#x83B7;&#x53D6;android gradle plugin&#x7248;&#x672C;&#x53F7;</span></span><br><span class="line">String androidGradlePluginVersion = get<span class="constructor">AndroidGradlePluginVersionCompat()</span></span><br><span class="line"><span class="comment">//&#x8FD9;&#x91CC;&#x53EA;&#x5904;&#x7406;2.2.0+&#x7684;&#x7248;&#x672C;&#x7684;provided&#x4E0E;providedAar&#x7684;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#xFF0C;2.2.0&#x4EE5;&#x4E0B;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x4E0D;&#x80FD;&#x6DFB;&#x52A0;&#x8FD9;&#x4E2A;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#xFF0C;&#x6DFB;&#x52A0;&#x4E86;&#x4F1A;&#x62A5;&#x9519;&#xFF0C;&#x4E14;&#x65E0;&#x6CD5;&#x6D88;&#x9664;&#x9519;&#x8BEF;</span></span><br><span class="line"><span class="keyword">if</span> (androidGradlePluginVersion.starts<span class="constructor">With(<span class="string">&quot;2.2&quot;</span>)</span><span class="operator"> || </span>androidGradlePluginVersion.starts<span class="constructor">With(<span class="string">&quot;2.3&quot;</span>)</span><span class="operator"> || </span>androidGradlePluginVersion.starts<span class="constructor">With(<span class="string">&quot;2.4&quot;</span>)</span><span class="operator"> || </span>androidGradlePluginVersion.starts<span class="constructor">With(<span class="string">&quot;2.5&quot;</span>)</span><span class="operator"> || </span>androidGradlePluginVersion.starts<span class="constructor">With(<span class="string">&quot;3.&quot;</span>)</span>) {</span><br><span class="line">    <span class="comment">//&#x5927;&#x4E8E;2.2.0&#x7684;&#x7248;&#x672C;&#x8BA9;provided&#x7EE7;&#x627F;providedAar&#xFF0C;&#x4F4E;&#x4E8E;2.2.0&#x7684;&#x7248;&#x672C;&#xFF0C;&#x624B;&#x52A8;&#x63D0;&#x53D6;aar&#x4E2D;&#x7684;jar&#x6DFB;&#x52A0;&#x4F9D;&#x8D56;&#x5230;scope&#x4E3A;provided&#x7684;&#x4F9D;&#x8D56;&#x4E2D;&#x53BB;</span></span><br><span class="line">    providedConfiguration.extends<span class="constructor">From(<span class="params">providedAarConfiguration</span>)</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4E1A;&#x52A1;&#x4E0A;&#x4F7F;&#x7528;</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">dependencies</span> {</span><br><span class="line">  <span class="attribute">providedAar</span> <span class="string">&apos;com.tencent.tinker:tinker-android-lib:1.9.1&apos;</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4E0D;&#x8981;&#x4F7F;&#x7528;</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">dependencies</span> {</span><br><span class="line">  <span class="attribute">provided</span> <span class="string">&apos;com.tencent.tinker:tinker-android-lib:1.9.1&apos;</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;2.2.0+&#x4EE5;&#x4E0A;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x5904;&#x7406;&#x540E;providedAar&#x662F;&#x652F;&#x6301;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#x7684;&#xFF0C;&#x4F46;&#x662F;2.2.0&#x4EE5;&#x4E0B;&#x7531;&#x4E8E;&#x5176;&#x7279;&#x6B8A;&#x6027;&#xFF0C;&#x4E0D;&#x80FD;&#x652F;&#x6301;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#x3002;</p><p>&#x63A5;&#x4E0B;&#x91CC;&#x5C31;&#x662F;&#x6700;&#x86CB;&#x75BC;&#x7684;2.2.0&#x4EE5;&#x4E0B;&#x7684;&#x7248;&#x672C;&#x7684;&#x5904;&#x7406;&#xFF0C;2.2.0&#x4EE5;&#x4E0B;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x867D;&#x7136;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;[2.2.0,2.5.0)&#x8FD9;&#x4E2A;&#x533A;&#x95F4;&#x7684;&#x65B9;&#x6CD5;&#x5C06;&#x5F02;&#x5E38;&#x8FDB;&#x884C;&#x6D88;&#x9664;&#xFF0C;&#x4F46;&#x662F;&#x5373;&#x4F7F;&#x6D88;&#x9664;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x5176;&#x4EE3;&#x7801;&#x7684;&#x7279;&#x6B8A;&#x6027;&#xFF0C;&#x5BFC;&#x81F4;&#x5373;&#x4F7F;&#x662F;provided&#x4F9D;&#x8D56;&#x7684;aar&#xFF0C;&#x6700;&#x7EC8;&#x4E5F;&#x4F1A;&#x88AB;&#x6253;&#x5305;&#x8FDB;apk&#x4E2D;&#xFF0C;&#x8FD9;&#x91CC;&#x4EE5;2.1.3&#x7684;&#x4EE3;&#x7801;&#x4E3A;&#x4F8B;&#xFF0C;&#x5982;&#x4E0B;:</p><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="comment">//&#x904D;&#x5386;&#x8FC7;&#x6EE4;&#x540E;&#x5269;&#x4F59;&#x7684;&#x7F16;&#x8BD1;&#x671F;&#x7684;&#x4F9D;&#x8D56;</span></span><br><span class="line"><span class="selector-tag">for</span> (LibInfo <span class="attribute">lib </span>: compiledAndroidLibraries) {</span><br><span class="line">    <span class="selector-tag">if</span> (!copyOfPackagedLibs.contains(lib)) {</span><br><span class="line">        <span class="selector-tag">if</span> (isLibrary || lib.isOptional()) {</span><br><span class="line">            <span class="comment">//&#x5982;&#x679C;&#x662F;com.android.library&#x6216;&#x8005;&#x662F;&#x53EF;&#x9009;&#x7684;&#xFF0C;&#x5219;&#x8BBE;&#x7F6E;&#x8BE5;lib&#x4E3A;&#x53EF;&#x9009;</span></span><br><span class="line">            <span class="selector-tag">lib</span><span class="selector-class">.setIsOptional</span>(true);</span><br><span class="line">        } <span class="selector-tag">else</span> {</span><br><span class="line">            <span class="comment">//&#x5426;&#x5219;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5728;com.android.application&#x4E2D;&#xFF0C;&#x5C06;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x8BB0;&#x5F55;&#x4E86;&#x4E0B;&#x6765;&#xFF0C;&#x540E;&#x7EED;&#x7684;&#x5904;&#x7406;&#x5C31;&#x5728;PrepareDependenciesTask&#x6267;&#x884C;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x62A5;&#x5F02;&#x5E38;</span></span><br><span class="line">            <span class="comment">//noinspection ConstantConditions</span></span><br><span class="line">            <span class="selector-tag">variantDeps</span><span class="selector-class">.getChecker</span>()<span class="selector-class">.addSyncIssue</span>(extraModelInfo.handleSyncError(</span><br><span class="line">                    lib.getResolvedCoordinates().toString(),</span><br><span class="line">                    SyncIssue.TYPE_NON_JAR_PROVIDED_DEP,</span><br><span class="line">                    String.format(</span><br><span class="line">                            <span class="string">&quot;Project %s: provided dependencies can only be jars. %s is an Android Library.&quot;</span>,</span><br><span class="line">                            project.getName(), lib.getResolvedCoordinates())));</span><br><span class="line">        }</span><br><span class="line">    } <span class="selector-tag">else</span> {</span><br><span class="line">        <span class="selector-tag">copyOfPackagedLibs</span><span class="selector-class">.remove</span>(lib);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5BF9;&#x6BD4;2.3.3&#x7248;&#x672C;&#x7684;&#x4EE3;&#x7801;</p><figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"><span class="comment">//&#x83B7;&#x5F97;maven&#x5750;&#x6807;</span></span><br><span class="line">MavenCoordinates resolvedCoordinates = compileLib.getCoordinates();</span><br><span class="line"><span class="comment">//&#x5982;&#x679C;&#x4E0D;&#x662F;com.android.library&#xFF0C;&#x4E5F;&#x4E0D;&#x662F;com.android.atom&#xFF0C;&#x4E5F;&#x4E0D;&#x662F;&#x7528;&#x4E8E;&#x6D4B;&#x8BD5;&#x7684;com.android.test&#xFF0C;&#x5373;&#x662F;com.android.application</span></span><br><span class="line"><span class="keyword">if</span> (variantType != VariantType.LIBRARY</span><br><span class="line">        &amp;&amp; variantType != VariantType.ATOM</span><br><span class="line">        &amp;&amp; (testedVariantType != VariantType.LIBRARY || !variantType.isForTesting())) {</span><br><span class="line">    <span class="comment">//&#x5C31;&#x4F1A;&#x5C06;&#x8FD9;&#x4E2A;&#x5F02;&#x5E38;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#xFF0C;&#x540E;&#x7EED;&#x7684;&#x5904;&#x7406;&#x5C31;&#x5728;PrepareDependenciesTask&#x6267;&#x884C;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#x62A5;&#x5F02;&#x5E38;</span></span><br><span class="line">    handleIssue(</span><br><span class="line">            resolvedCoordinates.<span class="built_in">toString</span>(),</span><br><span class="line">            SyncIssue.TYPE_NON_JAR_PROVIDED_DEP,</span><br><span class="line">            SyncIssue.SEVERITY_ERROR,</span><br><span class="line">            String.<span class="built_in">format</span>(</span><br><span class="line">                    <span class="string">&quot;Project %s: Provided dependencies can only be jars. %s is an Android Library.&quot;</span>,</span><br><span class="line">                    projectName,</span><br><span class="line">                    resolvedCoordinates.<span class="built_in">toString</span>()));</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4ECE;&#x4E24;&#x4E2A;&#x7248;&#x672C;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x6709;&#x4E00;&#x5904;&#x4E0D;&#x540C;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;provided aar&#x95EE;&#x9898;&#x7684;&#x8BDD;&#xFF0C;2.2.0&#x4EE5;&#x4E0B;&#x7684;&#x7248;&#x672C;&#x5728;com.android.library&#x4E2D;&#x4F1A;&#x5C06;lib&#x8BBE;&#x4E3A;&#x53EF;&#x9009;&#xFF0C;&#x4F46;&#x662F;&#x5728;com.android.application&#x5C31;&#x4F1A;&#x76F4;&#x63A5;&#x629B;&#x51FA;&#x5F02;&#x5E38;&#xFF0C;&#x5177;&#x4F53;&#x7684;&#x533A;&#x522B;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (isLibrary || <span class="class"><span class="keyword">lib</span>.<span class="title">isOptional</span>()) {</span></span><br><span class="line">    /<span class="regexp">/&#x5982;&#x679C;&#x662F;com.android.library&#x6216;&#x8005;&#x662F;&#x53EF;&#x9009;&#x7684;&#xFF0C;&#x5219;&#x8BBE;&#x7F6E;&#x8BE5;lib&#x4E3A;&#x53EF;&#x9009;</span></span><br><span class="line"><span class="regexp">    lib.setIsOptional(true);</span></span><br><span class="line"><span class="regexp">} else {</span></span><br><span class="line"><span class="regexp">   /</span><span class="regexp">/&#x629B;&#x5F02;&#x5E38;</span></span><br><span class="line"><span class="regexp">}</span></span><br></pre></td></tr></table></figure><p>&#x4E00;&#x65E6;&#x5C06;lib&#x8BBE;&#x7F6E;&#x4E3A;&#x53EF;&#x9009;&#xFF0C;&#x540E;&#x7EED;&#x5C31;&#x4E0D;&#x4F1A;&#x6253;&#x5305;&#x8FDB;apk&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x80FD;&#x4E0D;&#x80FD;&#x5C06;&#x5176;&#x8BBE;&#x7F6E;&#x4E3A;&#x53EF;&#x9009;&#x4ECE;&#x800C;&#x8DF3;&#x8FC7;&#x8BE5;&#x5F02;&#x5E38;&#x5462;&#xFF0C;&#x7B54;&#x6848;&#x662F;&#x4E0D;&#x80FD;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x539F;&#x56E0;&#x662F;&#x65F6;&#x673A;&#x8FC7;&#x65E9;&#xFF0C;&#x65E0;&#x6CD5;&#x66FF;&#x6362;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x539F;&#x56E0;&#x662F;&#x5F85;&#x66FF;&#x6362;&#x90E8;&#x5206;&#x7684;&#x4EE3;&#x7801;&#x8FC7;&#x591A;&#xFF0C;&#x5E76;&#x4E14;&#x8BE5;&#x903B;&#x8F91;&#x5728;DependencyManager&#x4E2D;&#xFF0C;&#x8FD9;&#x4E2A;&#x7C7B;&#x6BD4;&#x8F83;&#x5173;&#x952E;&#xFF0C;&#x80FD;&#x4E0D;&#x6539;&#x8FD8;&#x662F;&#x4E0D;&#x8981;&#x6539;&#x7684;&#x6BD4;&#x8F83;&#x597D;&#x3002;&#x4E8E;&#x662F;&#x53EA;&#x80FD;&#x56DE;&#x9000;&#x5230;&#x6700;&#x539F;&#x59CB;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF0C;&#x590D;&#x7528;gradle&#x4E0B;&#x8F7D;&#x4F9D;&#x8D56;&#x7684;&#x903B;&#x8F91;&#x548C;&#x7F13;&#x5B58;&#x7B56;&#x7565;&#xFF0C;&#x624B;&#x52A8;&#x83B7;&#x53D6;aar&#xFF0C;&#x63D0;&#x53D6;jar&#x6587;&#x4EF6;&#xFF0C;&#x6DFB;&#x52A0;&#x5230;provided&#x8FD9;&#x4E2A;scope&#x4E0A;&#x3002;&#x6240;&#x4EE5;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x62C6;&#x5206;&#x51FA;&#x6765;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#x5982;&#x4E0B;&#x95EE;&#x9898;&#x3002;</p><ul><li>&#x5982;&#x4F55;&#x5224;&#x65AD;&#x5F53;&#x524D;&#x662F;&#x5426;&#x5728;&#x79BB;&#x7EBF;&#x6A21;&#x5F0F;</li><li>&#x5982;&#x4F55;&#x5728;&#x975E;&#x79BB;&#x7EBF;&#x6A21;&#x5F0F;&#x4E0B;&#x4F7F;&#x7528;gradle&#x73B0;&#x6709;&#x4EE3;&#x7801;&#x83B7;&#x53D6;&#x6700;&#x65B0;&#x7684;&#x4F9D;&#x8D56;&#x6587;&#x4EF6;</li><li>&#x5982;&#x4F55;&#x5728;&#x79BB;&#x7EBF;&#x6A21;&#x5F0F;&#x4E0B;&#x4F7F;&#x7528;&#x73B0;&#x6709;&#x7684;gradle&#x7F13;&#x5B58;</li><li>&#x5728;&#x7EBF;&#x83B7;&#x53D6;&#x5931;&#x8D25;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x4F7F;&#x7528;&#x672C;&#x5730;&#x7F13;&#x5B58;&#x8FDB;&#x884C;&#x91CD;&#x8BD5;&#xFF0C;&#x5982;&#x573A;&#x666F;&#xFF1A;&#x516C;&#x53F8;maven&#xFF0C;&#x5916;&#x7F51;&#x65E0;&#x6CD5;&#x8BBF;&#x95EE;&#xFF0C;&#x4F46;&#x662F;&#x672C;&#x5730;&#x6709;&#x7F13;&#x5B58;</li><li>SNAPSHOT&#x7248;&#x672C;&#x7684;&#x83B7;&#x53D6;</li><li>Release&#x7248;&#x672C;&#x7684;&#x83B7;&#x53D6;</li></ul><p>&#x5BF9;&#x4E8E;&#x7B2C;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x4F55;&#x5224;&#x65AD;&#x5F53;&#x524D;gradle&#x662F;&#x5426;&#x5728;&#x79BB;&#x7EBF;&#x6A21;&#x5F0F;&#x4E0B;&#xFF0C;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x8FD9;&#x4E2A;&#x503C;&#x4F4D;&#x4E8E;project.gradle.startParameter&#x4E2D;&#xFF0C;&#x8C03;&#x7528;&#x5176;isOffline()&#x51FD;&#x6570;&#x5373;&#x53EF;&#x83B7;&#x53D6;&#x662F;&#x5426;&#x5728;&#x79BB;&#x7EBF;&#x6A21;&#x5F0F;&#x4E0B;</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x83B7;&#x53D6;&#x662F;&#x5426;&#x662F;&#x79BB;&#x7EBF;&#x6A21;&#x5F0F;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">StartParameter startParameter = project<span class="selector-class">.gradle</span><span class="selector-class">.startParameter</span></span><br><span class="line">boolean isOffline = startParameter.isOffline()</span><br><span class="line">project<span class="selector-class">.logger</span><span class="selector-class">.lifecycle</span>(<span class="string">&quot;[providedAar] gradle offline: ${isOffline}&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> (isOffline) {</span><br><span class="line">    project<span class="selector-class">.logger</span><span class="selector-class">.lifecycle</span>(<span class="string">&quot;[providedAar] use local cache dependency because offline is enabled&quot;</span>)</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">    project<span class="selector-class">.logger</span><span class="selector-class">.lifecycle</span>(<span class="string">&quot;[providedAar] use remote dependency because offline is disabled&quot;</span>)</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5BF9;&#x4E8E;&#x7B2C;2&#xFF0C;3&#xFF0C;4&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5176;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x5927;&#x81F4;&#x4F2A;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">project.get<span class="constructor">Gradle()</span>.add<span class="constructor">Listener(<span class="params">new</span> DependencyResolutionListener()</span> {</span><br><span class="line">    @Override</span><br><span class="line">    void before<span class="constructor">Resolve(ResolvableDependencies <span class="params">dependencies</span>)</span> {</span><br><span class="line">        <span class="comment">//&#x6B64;&#x56DE;&#x8C03;&#x4F1A;&#x591A;&#x6B21;&#x8FDB;&#x5165;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x89E3;&#x6790;&#x4E00;&#x6B21;&#xFF0C;&#x56E0;&#x6B64;&#x53EA;&#x8981;&#x8FDB;&#x5165;&#xFF0C;&#x5C31;remove&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C;&#x6211;&#x4EEC;&#x7684;&#x89E3;&#x6790;&#x64CD;&#x4F5C;</span></span><br><span class="line">        project.gradle.remove<span class="constructor">Listener(<span class="params">this</span>)</span></span><br><span class="line">        <span class="comment">//&#x904D;&#x5386;&#x6240;&#x6709;&#x4F9D;&#x8D56;&#x8FDB;&#x884C;&#x89E3;&#x6790;</span></span><br><span class="line">        resolve<span class="constructor">Dependencies(<span class="params">project</span>, <span class="params">isOffline</span>)</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    void after<span class="constructor">Resolve(ResolvableDependencies <span class="params">resolvableDependencies</span>)</span> {</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">})</span><br><span class="line"></span><br><span class="line">def resolveDependencies = {Project project, boolean offline -&gt;</span><br><span class="line">    <span class="comment">//&#x904D;&#x5386;providedAar&#x7684;&#x6240;&#x6709;&#x4F9D;&#x8D56;</span></span><br><span class="line">    project.get<span class="constructor">Configurations()</span>.get<span class="constructor">ByName(<span class="string">&quot;providedAar&quot;</span>)</span>.get<span class="constructor">Dependencies()</span>.each {</span><br><span class="line">        def dependency -&gt;</span><br><span class="line">            <span class="comment">//&#x89E3;&#x6790;&#x4F9D;&#x8D56;&#xFF0C;&#x5C06;&#x5FC5;&#x8981;&#x7684;&#x53C2;&#x6570;&#x4F20;&#x5165;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x4E3A;&#x662F;&#x5426;&#x5F3A;&#x5236;&#x4F7F;&#x7528;&#x672C;&#x5730;&#x7F13;&#x5B58;</span></span><br><span class="line">            boolean matchArtifact = resolve<span class="constructor">ArtifactFromRepositories(<span class="params">project</span>, <span class="params">dependency</span>, <span class="params">offline</span>, <span class="params">false</span>)</span></span><br><span class="line">            <span class="keyword">if</span> (!matchArtifact<span class="operator"> &amp;&amp; </span>offline) {</span><br><span class="line">                <span class="comment">//&#x5982;&#x679C;&#x89E3;&#x6790;&#x4E0D;&#x6210;&#x529F;&#x5E76;&#x4E14;&#x662F;&#x79BB;&#x7EBF;&#x6A21;&#x5F0F;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#xFF0C;&#x63D0;&#x793A;&#x65E0;&#x6CD5;&#x89E3;&#x6790;</span></span><br><span class="line">                project.logger.lifecycle(<span class="string">&quot;[providedAar] can&apos;t resolve ${dependency.group}:${dependency.name}:${dependency.version} from local cache, you must disable offline model in gradle&quot;</span>)</span><br><span class="line">            } <span class="keyword">else</span> <span class="keyword">if</span> (!matchArtifact<span class="operator"> &amp;&amp; </span>!offline) {</span><br><span class="line">                <span class="comment">//&#x5982;&#x679C;&#x89E3;&#x6790;&#x4E0D;&#x6210;&#x529F;&#x5E76;&#x4E14;&#x662F;&#x5728;&#x7EBF;&#x6A21;&#x5F0F;&#xFF0C;&#x5219;&#x4F7F;&#x7528;&#x672C;&#x5730;&#x7F13;&#x5B58;&#x8FDB;&#x884C;&#x91CD;&#x8BD5;</span></span><br><span class="line">                project.logger.lifecycle(<span class="string">&quot;[providedAar] can&apos;t resolve ${dependency.group}:${dependency.name}:${dependency.version} from remote, is this dependency correct?&quot;</span>)</span><br><span class="line">                <span class="comment">//&#x91CD;&#x8BD5;&#x672C;&#x5730;&#x7F13;&#x5B58;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x8868;&#x793A;&#x5F3A;&#x5236;&#x4F7F;&#x7528;&#x672C;&#x5730;&#x7F13;&#x5B58;</span></span><br><span class="line">                boolean matchArtifactFromRetryLocalCache = resolve<span class="constructor">ArtifactFromRepositories(<span class="params">project</span>, <span class="params">dependency</span>, <span class="params">offline</span>, <span class="params">true</span>)</span></span><br><span class="line">                <span class="keyword">if</span> (matchArtifactFromRetryLocalCache) {</span><br><span class="line">                    <span class="comment">//&#x5982;&#x679C;&#x672C;&#x5730;&#x7F13;&#x5B58;&#x91CD;&#x8BD5;&#x6210;&#x529F;&#x4E86;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#x63D0;&#x9192;</span></span><br><span class="line">                    project.logger.lifecycle(<span class="string">&quot;[providedAar] retry resolve ${dependency.group}:${dependency.name}:${dependency.version} from local cache success, you&apos;d better disable offline model in gradle&quot;</span>)</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4E8E;&#x662F;&#x95EE;&#x9898;&#x5C31;&#x53D8;&#x6210;&#x4E86;resolveArtifactFromRepositories&#x51FD;&#x6570;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x4E2D;&#x9700;&#x8981;&#x505A;&#x7684;&#x5C31;&#x662F;&#x904D;&#x5386;&#x6BCF;&#x4E00;&#x4E2A;maven&#x4ED3;&#x5E93;&#xFF0C;&#x5224;&#x65AD;&#x4F9D;&#x8D56;&#x662F;&#x5426;&#x5B58;&#x5728;&#xFF0C;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x5C31;&#x8FD4;&#x56DE;&#xFF0C;&#x5E73;&#x65F6;&#x6211;&#x4EEC;&#x5728;gradle&#x4E2D;&#x4F7F;&#x7528;each&#x53BB;&#x904D;&#x5386;&#xFF0C;&#x800C;&#x6211;&#x4EEC;&#x53EA;&#x8981;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x9700;&#x8981;&#x7684;&#x503C;&#x5C31;&#x8FD4;&#x56DE;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x91CC;&#x9700;&#x8981;&#x7528;&#x5230;any&#x53BB;&#x904D;&#x5386;&#xFF0C;&#x627E;&#x5230;&#x4E4B;&#x540E;&#x8FD4;&#x56DE;true&#xFF0C;&#x5176;&#x5927;&#x81F4;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x4ECE;&#x6240;&#x6709;&#x4ED3;&#x5E93;&#x89E3;&#x6790;&#xFF0C;&#x53EA;&#x8981;&#x627E;&#x5230;&#x5C31;&#x8FD4;&#x56DE;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">def</span> resolveArtifactFromRepositories = {<span class="keyword">Project</span> <span class="keyword">project</span>,</span><br><span class="line">                                        Dependency dependency,</span><br><span class="line">                                        <span class="keyword">boolean</span> offline,</span><br><span class="line">                                        <span class="keyword">boolean</span> forceLocalCache -&gt;</span><br><span class="line">    <span class="comment">//&#x4ECE;repositories&#x4E2D;&#x53BB;&#x627E;&#xFF0C;&#x7528;any&#x662F;&#x56E0;&#x4E3A;&#x53EA;&#x8981;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x5C31;&#x9700;&#x8981;return</span></span><br><span class="line">    <span class="keyword">boolean</span> matchArtifact = <span class="keyword">project</span>.getRepositories().<span class="keyword">any</span> {</span><br><span class="line">        <span class="keyword">def</span> repository -&gt;</span><br><span class="line">            <span class="comment">//&#x53EA;&#x5904;&#x7406;maven</span></span><br><span class="line">            <span class="keyword">if</span> (repository <span class="keyword">instanceof</span> DefaultMavenArtifactRepository) {</span><br><span class="line">                <span class="keyword">boolean</span> resolveArtifactFromRepositoryResult = resolveArtifactFromRepository(<span class="keyword">project</span>, repository, dependency, offline, forceLocalCache)</span><br><span class="line">                <span class="keyword">if</span> (resolveArtifactFromRepositoryResult) {</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span></span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> matchArtifact</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6700;&#x7EC8;&#x4EE3;&#x7801;&#x53D8;&#x6210;&#x4E86;resolveArtifactFromRepository&#x51FD;&#x6570;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x529F;&#x80FD;&#x4E3B;&#x8981;&#x662F;&#x4ECE;&#x5355;&#x4E2A;maven&#x4ED3;&#x5E93;&#x4E2D;&#x8FDB;&#x884C;&#x89E3;&#x6790;&#x3002;&#x5176;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x4ECE;&#x5355;&#x4E2A;mavan&#x4ED3;&#x5E93;&#x89E3;&#x6790;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">def resolveArtifactFromRepository = {Project project,</span><br><span class="line">                                      def repository,</span><br><span class="line">                                      Dependency dependency,</span><br><span class="line">                                      boolean offline,</span><br><span class="line">                                      boolean forceLocalCache -&gt;</span><br><span class="line">    <span class="comment">//&#x4ECE;repository&#x5BF9;&#x8C61;&#x4E2D;&#x521B;&#x5EFA;MavenResolver&#x89E3;&#x6790;&#x5BF9;&#x8C61;</span></span><br><span class="line">    MavenResolver mavenResolver = repository.create<span class="constructor">Resolver()</span></span><br><span class="line">    <span class="comment">//&#x521B;&#x5EFA;&#x4F9D;&#x8D56;&#x7684;&#x4FE1;&#x606F;&#x6301;&#x6709;&#x7C7B;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;java bean&#x5BF9;&#x8C61;&#xFF0C;&#x53CD;&#x5C04;&#x521B;&#x5EFA;&#xFF0C;&#x56E0;&#x4E3A;&#x4E0D;&#x540C;gralde&#x7248;&#x672C;&#x7C7B;&#x540D;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;</span></span><br><span class="line">    def moduleComponentArtifactMetadata = create<span class="constructor">ModuleComponentArtifactMetaData(<span class="params">mavenResolver</span>, <span class="params">offline</span>, <span class="params">forceLocalCache</span>, <span class="params">dependency</span>.<span class="params">group</span>, <span class="params">dependency</span>.<span class="params">name</span>, <span class="params">dependency</span>.<span class="params">version</span>, <span class="string">&quot;aar&quot;</span>, <span class="string">&quot;aar&quot;</span>)</span></span><br><span class="line">    <span class="keyword">if</span> (moduleComponentArtifactMetadata != null) {</span><br><span class="line">        <span class="comment">//&#x521B;&#x5EFA;Artifact&#x89E3;&#x6790;&#x5668;&#x5BF9;&#x8C61;&#xFF0C;&#x53CD;&#x5C04;&#x521B;&#x5EFA;&#xFF0C;&#x56E0;&#x4E3A;&#x4E00;&#x4E9B;&#x51FD;&#x6570;&#x548C;&#x5B57;&#x6BB5;&#x662F;&#x79C1;&#x6709;&#x7684;</span></span><br><span class="line">        ExternalResourceArtifactResolver externalResourceArtifactResolver = create<span class="constructor">ArtifactResolver(<span class="params">mavenResolver</span>)</span></span><br><span class="line">        <span class="keyword">if</span> (externalResourceArtifactResolver != null) {</span><br><span class="line">            <span class="comment">//&#x5F3A;&#x5236;&#x672C;&#x5730;&#x7F13;&#x5B58;&#x6216;&#x8005;&#x79BB;&#x7EBF;&#x6A21;&#x5F0F;&#xFF0C;&#x8D70;&#x672C;&#x5730;&#x7F13;&#x5B58;</span></span><br><span class="line">            <span class="keyword">if</span> (forceLocalCache<span class="operator"> || </span>offline) {</span><br><span class="line">                <span class="comment">//&#x83B7;&#x53D6;&#x672C;&#x5730;&#x7F13;&#x5B58;&#x67E5;&#x627E;&#x5668;&#xFF0C;&#x53CD;&#x5C04;&#x521B;&#x5EFA;&#xFF0C;&#x56E0;&#x4E3A;&#x4E00;&#x4E9B;&#x51FD;&#x6570;&#x548C;&#x5B57;&#x6BB5;&#x662F;&#x79C1;&#x6709;&#x7684;</span></span><br><span class="line">                LocallyAvailableResourceFinder locallyAvailableResourceFinder = get<span class="constructor">LocallyAvailableResourceFinder(<span class="params">externalResourceArtifactResolver</span>)</span></span><br><span class="line">                <span class="keyword">if</span> (locallyAvailableResourceFinder != null) {</span><br><span class="line">                    <span class="comment">//&#x4ECE;&#x7F13;&#x5B58;&#x4E2D;&#x67E5;&#x627E;&#xFF0C;&#x627E;&#x5230;&#x4E86;&#x5C31;&#x8FD4;&#x56DE;true</span></span><br><span class="line">                    boolean fetchFromLocalCacheResult = fetch<span class="constructor">FromLocalCache(<span class="params">project</span>, <span class="params">locallyAvailableResourceFinder</span>, <span class="params">moduleComponentArtifactMetadata</span>, <span class="params">dependency</span>)</span></span><br><span class="line">                    <span class="keyword">if</span> (fetchFromLocalCacheResult) {</span><br><span class="line">                        return <span class="literal">true</span></span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="comment">//&#x5728;&#x7EBF;&#x6A21;&#x5F0F;&#xFF0C;&#x8D70;&#x8FDC;&#x7A0B;&#x4F9D;&#x8D56;&#xFF0C;&#x5B9E;&#x9645;&#x903B;&#x8F91;gradle&#x5185;&#x90E8;&#x5904;&#x7406;&#xFF0C;&#x627E;&#x5230;&#x4E86;&#x5C31;&#x8FD4;&#x56DE;true</span></span><br><span class="line">                boolean fetchFromRemoteResult = fetch<span class="constructor">FromRemote(<span class="params">project</span>, <span class="params">externalResourceArtifactResolver</span>, <span class="params">moduleComponentArtifactMetadata</span>, <span class="params">repository</span>, <span class="params">dependency</span>)</span></span><br><span class="line">                <span class="keyword">if</span> (fetchFromRemoteResult) {</span><br><span class="line">                    return <span class="literal">true</span></span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    return <span class="literal">false</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7531;resolveArtifactFromRepository&#x51FD;&#x6570;&#xFF0C;&#x62C6;&#x5206;&#x95EE;&#x9898;&#xFF0C;&#x4E8E;&#x662F;&#x95EE;&#x9898;&#x53D8;&#x6210;&#x4E86;createModuleComponentArtifactMetaData&#x51FD;&#x6570;&#x3001;<br>createArtifactResolver&#x51FD;&#x6570;&#xFF0C;getLocallyAvailableResourceFinder&#x51FD;&#x6570;&#xFF0C;fetchFromLocalCache&#x51FD;&#x6570;&#xFF0C;fetchFromRemote&#x51FD;&#x6570;&#x7684;&#x5B9E;&#x73B0;&#x903B;&#x8F91;</p><p>&#x9996;&#x5148;&#x6765;&#x770B;createModuleComponentArtifactMetaData&#x51FD;&#x6570;&#xFF0C;&#x5177;&#x4F53;&#x7684;&#x903B;&#x8F91;&#x89C1;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x6CE8;&#x91CA;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x521B;&#x5EFA;ModuleComponentArtifactMetaData&#x5BF9;&#x8C61;&#xFF0C;&#x4E4B;&#x6240;&#x4EE5;&#x7528;&#x53CD;&#x5C04;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;gradle&#x7684;&#x4E0D;&#x540C;&#x7248;&#x672C;&#xFF0C;&#x8FD9;&#x4E2A;&#x7C7B;&#x7684;&#x540D;&#x5B57;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;&#xFF0C;&#x4F4E;&#x7248;&#x672C;&#x53EF;&#x80FD;&#x662F;DefaultModuleComponentArtifactMetaData&#xFF0C;&#x800C;&#x9AD8;&#x7248;&#x672C;&#x6539;&#x6210;&#x4E86;org.gradle.internal.component.external.model.DefaultModuleComponentArtifactMetadata</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">def createModuleComponentArtifactMetaData = {MavenResolver mavenResolver, boolean offline, boolean forceLocalCache, String group, String name, String version, String <span class="keyword">type</span>, String extension -&gt;</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="comment">//&#x8C03;&#x7528;&#x9759;&#x6001;&#x51FD;&#x6570;&#xFF0C;&#x4F20;&#x5165;group,name,version,&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;ModuleComponentIdentifier&#x5BF9;&#x8C61;</span></span><br><span class="line">        ModuleComponentIdentifier componentIdentifier = <span class="module-access"><span class="module"><span class="identifier">DefaultModuleComponentIdentifier</span>.</span></span><span class="keyword">new</span><span class="constructor">Id(<span class="params">group</span>, <span class="params">name</span>, <span class="params">version</span>)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//&#x83B7;&#x5F97;ModuleComponentArtifactMetadata&#x7684;class&#x5BF9;&#x8C61;&#xFF0C;&#x4E4B;&#x6240;&#x4EE5;&#x7528;&#x53CD;&#x5C04;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x4E0D;&#x540C;&#x7684;gradle&#x7248;&#x672C;&#xFF0C;&#x8FD9;&#x4E2A;&#x7C7B;&#x7684;&#x7C7B;&#x540D;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;&#xFF0C;&#x4ECE;DefaultModuleComponentArtifactMetaData&#x53D8;&#x6210;&#x4E86;DefaultModuleComponentArtifactMetadata</span></span><br><span class="line">        Class moduleComponentArtifactMetadataClass = null</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            moduleComponentArtifactMetadataClass = <span class="module-access"><span class="module"><span class="identifier">Class</span>.</span></span>for<span class="constructor">Name(<span class="string">&quot;org.gradle.internal.component.external.model.DefaultModuleComponentArtifactMetaData&quot;</span>)</span></span><br><span class="line">        } catch (ClassNotFoundException e) {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                moduleComponentArtifactMetadataClass = <span class="module-access"><span class="module"><span class="identifier">Class</span>.</span></span>for<span class="constructor">Name(<span class="string">&quot;org.gradle.internal.component.external.model.DefaultModuleComponentArtifactMetadata&quot;</span>)</span></span><br><span class="line">            } catch (ClassNotFoundException e1) {</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//&#x627E;&#x4E0D;&#x5230;&#x7C7B;&#x5219;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;</span></span><br><span class="line">        <span class="keyword">if</span> (moduleComponentArtifactMetadataClass<span class="operator"> == </span>null) {</span><br><span class="line">            return null</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">//&#x83B7;&#x5F97;ModuleComponentArtifactMetadata&#x7C7B;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;</span></span><br><span class="line">        Constructor moduleComponentArtifactMetadataConstructor = moduleComponentArtifactMetadataClass.get<span class="constructor">DeclaredConstructor(ModuleComponentArtifactIdentifier.<span class="params">class</span>)</span></span><br><span class="line">        moduleComponentArtifactMetadataConstructor.set<span class="constructor">Accessible(<span class="params">true</span>)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//&#x79BB;&#x7EBF;&#x6A21;&#x5F0F;&#x6216;&#x8005;&#x5F3A;&#x5236;&#x4F7F;&#x7528;&#x672C;&#x5730;&#x7F13;&#x5B58;&#x65F6;&#x4E0D;&#x9700;&#x8981;&#x8FDB;&#x884C;SNAPSHOT&#x5904;&#x7406;&#xFF0C;gradle&#x80FD;&#x591F;&#x67E5;&#x627E;&#x5230;SNAPSHOT&#x672C;&#x5730;&#x7F13;&#x5B58;</span></span><br><span class="line">        <span class="comment">//&#x5728;&#x7EBF;&#x6A21;&#x5F0F;&#x5E76;&#x4E14;&#x7248;&#x672C;&#x53F7;&#x662F;&#x4EE5;-SNAPSHOT&#x7ED3;&#x5C3E;&#xFF0C;&#x8FDB;&#x884C;&#x5904;&#x7406;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x5904;&#x7406;&#xFF0C;gradle&#x65E0;&#x6CD5;&#x5B9A;&#x4F4D;&#x5F53;&#x524D;&#x6700;&#x65B0;&#x7684;&#x5FEB;&#x7167;&#x7248;&#x672C;</span></span><br><span class="line">        <span class="keyword">if</span> (!offline<span class="operator"> &amp;&amp; </span>!forceLocalCache<span class="operator"> &amp;&amp; </span>version.<span class="keyword">to</span><span class="constructor">UpperCase()</span>.ends<span class="constructor">With(<span class="string">&quot;-SNAPSHOT&quot;</span>)</span>) {</span><br><span class="line">            <span class="comment">//&#x8C03;&#x7528;MavenResolver&#x5BF9;&#x8C61;&#x7684;findUniqueSnapshotVersion&#x51FD;&#x6570;&#xFF0C;&#x83B7;&#x53D6;&#x5F53;&#x524D;SNASHOP&#x7248;&#x672C;&#x7684;&#x6700;&#x65B0;&#x5FEB;&#x7167;&#x7248;&#x672C;</span></span><br><span class="line">            <span class="comment">//&#x4E4B;&#x6240;&#x4EE5;&#x7528;&#x53CD;&#x5C04;&#x662F;&#x56E0;&#x4E3A;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x4E0D;&#x662F;&#x516C;&#x5171;&#x7684;</span></span><br><span class="line">            Method findUniqueSnapshotVersionMethod = <span class="module-access"><span class="module"><span class="identifier">MavenResolver</span>.</span></span><span class="keyword">class</span>.get<span class="constructor">DeclaredMethod(<span class="string">&quot;findUniqueSnapshotVersion&quot;</span>, ModuleComponentIdentifier.<span class="params">class</span>, ResourceAwareResolveResult.<span class="params">class</span>)</span></span><br><span class="line">            findUniqueSnapshotVersionMethod.set<span class="constructor">Accessible(<span class="params">true</span>)</span></span><br><span class="line">            def mavenUniqueSnapshotModuleSource = findUniqueSnapshotVersionMethod.invoke(mavenResolver, componentIdentifier, <span class="keyword">new</span> <span class="constructor">DefaultResourceAwareResolveResult()</span>)</span><br><span class="line">            <span class="keyword">if</span> (mavenUniqueSnapshotModuleSource != null) {</span><br><span class="line">                <span class="comment">//&#x5982;&#x679C;&#x5B9A;&#x4F4D;&#x5230;&#x4E86;&#x6700;&#x65B0;&#x7684;&#x5FEB;&#x7167;&#x7248;&#x672C;&#xFF0C;&#x5219;&#x4F7F;&#x7528;MavenUniqueSnapshotComponentIdentifier&#x5BF9;&#x8C61;&#x5BF9;componentIdentifier&#x548C;mavenUniqueSnapshotModuleSource&#x91CD;&#x65B0;&#x5305;&#x88C5;&#xFF0C;&#x5C06;&#x4F9D;&#x8D56;&#x5750;&#x6807;&#x548C;&#x65F6;&#x95F4;&#x6233;&#x4F20;&#x5165;</span></span><br><span class="line">                MavenUniqueSnapshotComponentIdentifier mavenUniqueSnapshotComponentIdentifier = <span class="keyword">new</span> <span class="constructor">MavenUniqueSnapshotComponentIdentifier(<span class="params">componentIdentifier</span>.<span class="params">getGroup</span>()</span>,</span><br><span class="line">                        componentIdentifier.get<span class="constructor">Module()</span>,</span><br><span class="line">                        componentIdentifier.get<span class="constructor">Version()</span>,</span><br><span class="line">                        mavenUniqueSnapshotModuleSource.get<span class="constructor">Timestamp()</span>)</span><br><span class="line">                <span class="comment">//&#x521B;&#x5EFA;DefaultModuleComponentArtifactIdentifier&#x5BF9;&#x8C61;&#xFF0C;&#x53EA;&#x8981;&#x4F20;&#x5165;&#x5305;&#x88C5;&#x8FC7;&#x7684;mavenUniqueSnapshotComponentIdentifier&#x5BF9;&#x8C61;&#x548C;name, type, extension&#x5373;&#x53EF;</span></span><br><span class="line">                DefaultModuleComponentArtifactIdentifier moduleComponentArtifactIdentifier = <span class="keyword">new</span> <span class="constructor">DefaultModuleComponentArtifactIdentifier(<span class="params">mavenUniqueSnapshotComponentIdentifier</span>, <span class="params">name</span>, <span class="params">type</span>, <span class="params">extension</span>)</span></span><br><span class="line">                return moduleComponentArtifactMetadataConstructor.<span class="keyword">new</span><span class="constructor">Instance(<span class="params">moduleComponentArtifactIdentifier</span>)</span></span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="comment">//&#x5982;&#x679C;&#x662F;release&#x7248;&#x672C;&#x6216;&#x8005;&#x672C;&#x5730;&#x7F13;&#x5B58;&#xFF0C;&#x5176;&#x7248;&#x672C;&#x662F;&#x552F;&#x4E00;&#x7684;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x67E5;&#x627E;&#x5BF9;&#x5E94;&#x7684;&#x65F6;&#x95F4;&#x6233;&#xFF0C;&#x56E0;&#x6B64;&#x76F4;&#x63A5;&#x521B;&#x5EFA;DefaultModuleComponentArtifactIdentifier</span></span><br><span class="line">            DefaultModuleComponentArtifactIdentifier moduleComponentArtifactIdentifier = <span class="keyword">new</span> <span class="constructor">DefaultModuleComponentArtifactIdentifier(<span class="params">componentIdentifier</span>, <span class="params">name</span>, <span class="params">type</span>, <span class="params">extension</span>)</span></span><br><span class="line">            return moduleComponentArtifactMetadataConstructor.<span class="keyword">new</span><span class="constructor">Instance(<span class="params">moduleComponentArtifactIdentifier</span>)</span></span><br><span class="line">        }</span><br><span class="line">    } catch (Exception e) {</span><br><span class="line">    }</span><br><span class="line">    return null</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x662F;createArtifactResolver&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x4E3A;&#x4E86;&#x83B7;&#x53D6;ExternalResourceArtifactResolver&#xFF0C;&#x5B9E;&#x73B0;&#x662F;&#x8C03;&#x7528;MavenResolver&#x5BF9;&#x8C61;&#x7684;&#x7236;&#x7C7B;&#x51FD;&#x6570;createArtifactResolver&#x8FDB;&#x884C;&#x521B;&#x5EFA;</p><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x521B;&#x5EFA;ExternalResourceArtifactResolver&#x5BF9;&#x8C61;&#xFF0C;&#x7528;&#x53CD;&#x5C04;&#x7684;&#x539F;&#x56E0;&#x662F;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x662F;protected&#x7684;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">createArtifactResolver</span> </span>= {<span class="type">MavenResolver</span> mavenResolver -&gt;</span><br><span class="line">    <span class="keyword">if</span> (mavenResolver != <span class="literal">null</span>) {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="type">Method</span> createArtifactResolverMethod = <span class="type">ExternalResourceResolver</span>.<span class="keyword">class</span>.getDeclaredMethod(<span class="string">&quot;createArtifactResolver&quot;</span>)</span><br><span class="line">            createArtifactResolverMethod.setAccessible(<span class="literal">true</span>)</span><br><span class="line">            <span class="keyword">return</span> createArtifactResolverMethod.invoke(mavenResolver)</span><br><span class="line">        } <span class="keyword">catch</span> (<span class="type">Exception</span> e) {</span><br><span class="line">            e.printStackTrace()</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x63A5;&#x4E0B;&#x6765;&#x662F;getLocallyAvailableResourceFinder&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x662F;&#x4E3A;&#x4E86;&#x83B7;&#x53D6;&#x672C;&#x5730;&#x7F13;&#x5B58;&#x6587;&#x4EF6;&#x7684;&#x67E5;&#x627E;&#x5668;LocallyAvailableResourceFinder&#x5BF9;&#x8C61;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x53CD;&#x5C04;&#x83B7;&#x53D6;locallyAvailableResourceFinder&#xFF0C;&#x53CD;&#x5C04;&#x83B7;&#x53D6;&#x7684;&#x539F;&#x56E0;&#x662F;locallyAvailableResourceFinder&#x8FD9;&#x4E2A;&#x5B57;&#x6BB5;&#x662F;&#x79C1;&#x6709;&#x7684;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">def</span> getLocallyAvailableResourceFinder = {ExternalResourceArtifactResolver externalResourceArtifactResolver -&gt;</span><br><span class="line">    <span class="keyword">if</span> (externalResourceArtifactResolver != <span class="keyword">null</span>) {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            Field locallyAvailableResourceFinderField = <span class="keyword">Class</span>.forName(<span class="string">&quot;org.gradle.api.internal.artifacts.repositories.resolver.DefaultExternalResourceArtifactResolver&quot;</span>).getDeclaredField(<span class="string">&quot;locallyAvailableResourceFinder&quot;</span>)</span><br><span class="line">            locallyAvailableResourceFinderField.setAccessible(<span class="keyword">true</span>)</span><br><span class="line">            <span class="keyword">return</span> locallyAvailableResourceFinderField.get(externalResourceArtifactResolver)</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            e.printStackTrace()</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5269;&#x4E0B;&#x7684;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x662F;&#x6700;&#x91CD;&#x8981;&#x7684;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5373;fetchFromLocalCache&#x51FD;&#x6570;&#x548C;fetchFromRemote&#x51FD;&#x6570;</p><p>&#x5148;&#x6765;&#x770B;&#x600E;&#x4E48;&#x4ECE;&#x672C;&#x5730;&#x7F13;&#x5B58;&#x4E2D;&#x83B7;&#x53D6;&#x5BF9;&#x5E94;&#x7684;&#x4F9D;&#x8D56;&#x6587;&#x4EF6;&#xFF0C;&#x5177;&#x4F53;&#x903B;&#x8F91;&#x5DF2;&#x7ECF;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x8FDB;&#x884C;&#x4E86;&#x6CE8;&#x91CA;&#x8BF4;&#x660E;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x4ECE;&#x672C;&#x5730;&#x7F13;&#x5B58;&#x83B7;&#x53D6;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">def fetchFromLocalCache = {Project project,</span><br><span class="line">                            LocallyAvailableResourceFinder locallyAvailableResourceFinder,</span><br><span class="line">                            def moduleComponentArtifactMetadata,</span><br><span class="line">                            def dependency -&gt;</span><br><span class="line">    <span class="comment">//&#x83B7;&#x53D6;&#x672C;&#x5730;&#x53EF;&#x9009;&#x7684;&#x5019;&#x9009;&#x5217;&#x8868;</span></span><br><span class="line">    LocallyAvailableResourceCandidates locallyAvailableResourceCandidates = locallyAvailableResourceFinder.find<span class="constructor">Candidates(<span class="params">moduleComponentArtifactMetadata</span>)</span></span><br><span class="line">    <span class="comment">//&#x5982;&#x679C;&#x672C;&#x5730;&#x7684;&#x5019;&#x9009;&#x5217;&#x8868;&#x4E0D;&#x4E3A;&#x7A7A;</span></span><br><span class="line">    <span class="keyword">if</span> (!locallyAvailableResourceCandidates.is<span class="constructor">None()</span>) {</span><br><span class="line">        <span class="comment">//&#x5019;&#x9009;&#x5217;&#x8868;&#x7684;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x5B9E;&#x73B0;&#xFF0C;&#x7EC4;&#x5408;&#x5019;&#x9009;&#x5217;&#x8868;&#x5BF9;&#x8C61;CompositeLocallyAvailableResourceCandidates</span></span><br><span class="line">        Class compositeLocallyAvailableResourceCandidatesClass = <span class="module-access"><span class="module"><span class="identifier">Class</span>.</span></span>for<span class="constructor">Name(&apos;<span class="params">org</span>.<span class="params">gradle</span>.<span class="params">internal</span>.<span class="params">resource</span>.<span class="params">local</span>.CompositeLocallyAvailableResourceFinder$CompositeLocallyAvailableResourceCandidates&apos;)</span></span><br><span class="line">        <span class="comment">//&#x5982;&#x679C;&#x662F;CompositeLocallyAvailableResourceCandidates&#x7684;&#x5B9E;&#x4F8B;</span></span><br><span class="line">        <span class="keyword">if</span> (compositeLocallyAvailableResourceCandidatesClass.is<span class="constructor">Instance(<span class="params">locallyAvailableResourceCandidates</span>)</span>) {</span><br><span class="line">            <span class="comment">//&#x83B7;&#x53D6;&#x8FD9;&#x4E2A;&#x7EC4;&#x5408;&#x7684;&#x5019;&#x9009;&#x5217;&#x8868;&#x5B57;&#x6BB5;allCandidates&#x5E76;&#x904D;&#x5386;&#x5B83;&#xFF0C;allCandidates&#x662F;&#x6301;&#x6709;&#x7EC4;&#x5408;&#x5BF9;&#x8C61;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x6211;&#x4EEC;&#x53D6;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#xFF0C;&#x53EA;&#x8981;&#x627E;&#x5230;&#x7136;&#x540E;return&#x5C31;&#x53EF;&#x4EE5;&#x4E86;</span></span><br><span class="line">            Field allCandidatesField = compositeLocallyAvailableResourceCandidatesClass.get<span class="constructor">DeclaredField(<span class="string">&quot;allCandidates&quot;</span>)</span></span><br><span class="line">            allCandidatesField.set<span class="constructor">Accessible(<span class="params">true</span>)</span></span><br><span class="line">            List&lt;LocallyAvailableResourceCandidates&gt; allCandidates = allCandidatesField.get(locallyAvailableResourceCandidates)</span><br><span class="line">            <span class="comment">//&#x5F53;list&#x4E0D;&#x4E3A;&#x7A7A;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x904D;&#x5386;&#xFF0C;&#x53D6;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;</span></span><br><span class="line">            <span class="keyword">if</span> (allCandidates != null) {</span><br><span class="line">                FileCollection aarFiles = null</span><br><span class="line">                <span class="comment">//&#x7528;any&#x7684;&#x539F;&#x56E0;&#x662F;&#x4E3A;&#x4E86;&#x53D6;&#x4E00;&#x4E2A;&#x5C31;&#x8FD4;&#x56DE;</span></span><br><span class="line">                allCandidates.any {candidate -&gt;</span><br><span class="line">                    <span class="comment">//&#x5224;&#x65AD;&#x662F;&#x5426;&#x662F;LazyLocallyAvailableResourceCandidates&#x5B9E;&#x4F8B;</span></span><br><span class="line">                    <span class="keyword">if</span> (candidate instanceof LazyLocallyAvailableResourceCandidates) {</span><br><span class="line">                        <span class="comment">//&#x5982;&#x679C;&#x8BE5;&#x5019;&#x9009;&#x5217;&#x8868;&#x5B58;&#x5728;&#x6587;&#x4EF6;&#xFF0C;&#x5219;&#x83B7;&#x53D6;&#x6587;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x8FC7;&#x6EE4;aar&#x6587;&#x4EF6;&#xFF0C;&#x8FD4;&#x56DE;</span></span><br><span class="line">                        <span class="keyword">if</span> (!candidate.is<span class="constructor">None()</span>) {</span><br><span class="line">                            <span class="comment">//getFiles&#x51FD;&#x6570;&#x83B7;&#x53D6;&#x6587;&#x4EF6;&#x5217;&#x8868;</span></span><br><span class="line">                            Method getFilesMethod = <span class="module-access"><span class="module"><span class="identifier">LazyLocallyAvailableResourceCandidates</span>.</span></span><span class="keyword">class</span>.get<span class="constructor">DeclaredMethod(<span class="string">&quot;getFiles&quot;</span>)</span></span><br><span class="line">                            getFilesMethod.set<span class="constructor">Accessible(<span class="params">true</span>)</span></span><br><span class="line">                            List&lt;File&gt; candidateFiles = getFilesMethod.invoke(candidate)</span><br><span class="line">                            <span class="comment">//&#x8FC7;&#x6EE4;aar&#x6587;&#x4EF6;</span></span><br><span class="line">                            aarFiles = project.files(candidateFiles).filter {</span><br><span class="line">                                it.name.ends<span class="constructor">With(<span class="string">&quot;.aar&quot;</span>)</span></span><br><span class="line">                            }</span><br><span class="line">                            <span class="comment">//&#x5982;&#x679C;&#x4E0D;&#x4E3A;&#x7A7A;&#xFF0C;&#x8868;&#x793A;&#x627E;&#x5230;&#x4E86;&#xFF0C;&#x8FD4;&#x56DE;true</span></span><br><span class="line">                            <span class="keyword">if</span> (!aarFiles.empty) {</span><br><span class="line">                                return <span class="literal">true</span></span><br><span class="line">                            }</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">                <span class="comment">//&#x5982;&#x679C;&#x627E;&#x5230;&#x4E86;aar&#x6587;&#x4EF6;&#xFF0C;&#x5219;&#x63D0;&#x53D6;jar&#xFF0C;&#x6DFB;&#x52A0;&#x5230;provided&#x7684;scope&#x4E0A;</span></span><br><span class="line">                <span class="keyword">if</span> (!aarFiles.empty) {</span><br><span class="line">                    <span class="comment">//&#x904D;&#x5386;&#x627E;&#x5230;&#x7684;aar&#x6587;&#x4EF6;&#x5217;&#x8868;</span></span><br><span class="line">                    aarFiles.files.each {File aarFile -&gt;</span><br><span class="line">                        FileCollection jarFromAar = project.zip<span class="constructor">Tree(<span class="params">aarFile</span>)</span>.filter {</span><br><span class="line">                            it.name<span class="operator"> == </span><span class="string">&quot;classes.jar&quot;</span></span><br><span class="line">                        }</span><br><span class="line">                        <span class="comment">//&#x6DFB;&#x52A0;&#x5230;provided&#x7684;scope&#x4E0A;</span></span><br><span class="line">                        project.get<span class="constructor">Dependencies()</span>.add(<span class="string">&quot;provided&quot;</span>, jarFromAar)</span><br><span class="line">                        <span class="comment">//&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#x4FE1;&#x606F;</span></span><br><span class="line">                        project.logger.lifecycle(<span class="string">&quot;[providedAar] convert aar ${dependency.group}:${dependency.name}:${dependency.version} to jar and add provided file ${jarFromAar.getAsPath()} from ${aarFile}&quot;</span>)</span><br><span class="line">                    }</span><br><span class="line">                    return <span class="literal">true</span></span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    return <span class="literal">false</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x662F;&#x4ECE;&#x8FDC;&#x7A0B;&#x83B7;&#x53D6;&#x5BF9;&#x5E94;&#x7684;&#x4F9D;&#x8D56;&#xFF0C;&#x66F4;&#x65B0;&#x672C;&#x5730;&#x6587;&#x4EF6;&#xFF0C;&#x5177;&#x4F53;&#x7684;&#x5B9E;&#x73B0;&#x903B;&#x8F91;&#x7531;gradle&#x5185;&#x90E8;&#x53D6;&#x4FDD;&#x8BC1;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x8981;&#x8C03;&#x7528;&#x5176;&#x51FD;&#x6570;&#x5373;&#x53EF;&#x3002;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x4ECE;&#x8FDC;&#x7A0B;&#x83B7;&#x53D6;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">def</span> fetchFromRemote = {<span class="keyword">Project</span> <span class="keyword">project</span>,</span><br><span class="line">                        ExternalResourceArtifactResolver externalResourceArtifactResolver,</span><br><span class="line">                        <span class="keyword">def</span> moduleComponentArtifactMetadata,</span><br><span class="line">                        <span class="keyword">def</span> repository,</span><br><span class="line">                        <span class="keyword">def</span> dependency -&gt;</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        <span class="keyword">if</span> (moduleComponentArtifactMetadata != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="comment">//&#x5224;&#x65AD;&#x5F53;&#x524D;maven&#x4ED3;&#x5E93;&#x4E0A;&#x662F;&#x5426;&#x5B58;&#x5728;&#x8BE5;&#x4F9D;&#x8D56;</span></span><br><span class="line">            <span class="keyword">boolean</span> artifactExists = externalResourceArtifactResolver.artifactExists(moduleComponentArtifactMetadata, <span class="keyword">new</span> DefaultResourceAwareResolveResult())</span><br><span class="line">            <span class="comment">//&#x5982;&#x679C;&#x8BE5;&#x8FDC;&#x7A0B;&#x4ED3;&#x5E93;&#x5B58;&#x5728;&#x8BE5;&#x4F9D;&#x8D56;</span></span><br><span class="line">            <span class="keyword">if</span> (artifactExists) {</span><br><span class="line">                <span class="comment">//&#x8FDB;&#x884C;&#x4F9D;&#x8D56;&#x89E3;&#x6790;&#xFF0C;&#x83B7;&#x5F97;&#x672C;&#x5730;&#x53EF;&#x7528;&#x6587;&#x4EF6;</span></span><br><span class="line">                LocallyAvailableExternalResource locallyAvailableExternalResource = externalResourceArtifactResolver.resolveArtifact(moduleComponentArtifactMetadata, <span class="keyword">new</span> DefaultResourceAwareResolveResult())</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (locallyAvailableExternalResource != <span class="keyword">null</span>) {</span><br><span class="line">                    <span class="comment">//&#x83B7;&#x53D6;&#x89E3;&#x6790;&#x5230;&#x7684;&#x6587;&#x4EF6;</span></span><br><span class="line">                    <span class="keyword">File</span> aarFile = <span class="keyword">null</span></span><br><span class="line">                    <span class="keyword">try</span> {</span><br><span class="line">                        <span class="keyword">def</span> locallyAvailableResource = locallyAvailableExternalResource.getLocalResource()</span><br><span class="line">                        <span class="keyword">if</span> (locallyAvailableResource != <span class="keyword">null</span>) {</span><br><span class="line">                            aarFile = locallyAvailableResource.getFile()</span><br><span class="line">                        }</span><br><span class="line">                    } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">                        <span class="comment">//&#x9AD8;&#x7248;&#x672C;gradle&#x517C;&#x5BB9;</span></span><br><span class="line">                        <span class="keyword">try</span> {</span><br><span class="line">                            aarFile = locallyAvailableExternalResource.getFile()</span><br><span class="line">                        } <span class="keyword">catch</span> (Exception e1) {</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                    <span class="comment">//&#x8BE5;&#x4F9D;&#x8D56;&#x5BF9;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#x5B58;&#x5728;&#x7684;&#x8BDD;&#xFF0C;&#x63D0;&#x53D6;jar&#xFF0C;&#x6DFB;&#x52A0;&#x5230;provided&#x7684;scope&#x4E0A;</span></span><br><span class="line">                    <span class="keyword">if</span> (aarFile != <span class="keyword">null</span> &amp;&amp; aarFile.exists()) {</span><br><span class="line">                        FileCollection jarFromAar = <span class="keyword">project</span>.zipTree(aarFile).filter {</span><br><span class="line">                            it.name == <span class="string">&quot;classes.jar&quot;</span></span><br><span class="line">                        }</span><br><span class="line">                        <span class="comment">//&#x6DFB;&#x52A0;&#x5230;provided&#x7684;scope&#x4E0A;</span></span><br><span class="line">                        <span class="keyword">project</span>.getDependencies().add(<span class="string">&quot;provided&quot;</span>, jarFromAar)</span><br><span class="line">                        <span class="comment">//&#x8F93;&#x51FA;&#x65E5;&#x5FD7;</span></span><br><span class="line">                        <span class="keyword">project</span>.logger.lifecycle(<span class="string">&quot;[providedAar] convert aar ${dependency.group}:${dependency.name}:${dependency.version} in ${repository.url} to jar and add provided file ${jarFromAar.getAsPath()} from ${aarFile}&quot;</span>)</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">true</span></span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">        <span class="comment">//&#x53EF;&#x80FD;&#x4F1A;&#x51FA;&#x73B0;ssl&#x4E4B;&#x7C7B;&#x7684;&#x5F02;&#x5E38;&#xFF0C;&#x65E0;&#x89C6;&#x6389;</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5C06;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x8FDB;&#x884C;&#x7EC4;&#x5408;&#xFF0C;&#x5C31;&#x5F97;&#x5230;&#x4E86;<a href="https://github.com/lizhangqu/AndroidGradlePluginCompat/blob/master/buildSrc/src/main/groovy/io/github/lizhangqu/plugin/compat/CompatPlugin.groovy" target="_blank" rel="noopener">CompatPlugin.groovy&#x4E2D;&#x7684;providedAarCompat&#x51FD;&#x6570;</a>&#xFF0C;&#x641C;&#x7D22;&#x8BE5;&#x6587;&#x4EF6;&#x4E2D;&#x7684;providedAarCompat&#x51FD;&#x6570;&#xFF0C;&#x5373;&#x6700;&#x7EC8;&#x7EC4;&#x5408;&#x5B8C;&#x6210;&#x7684;&#x4EE3;&#x7801;&#x3002;</p><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x6574;&#x4E2A;&#x5B9E;&#x73B0;&#x903B;&#x8F91;&#x8FD8;&#x662F;&#x5341;&#x5206;&#x590D;&#x6742;&#x7684;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x672C;&#x5730;&#x7F13;&#x5B58;&#x4F9D;&#x8D56;&#x548C;&#x5728;&#x7EBF;&#x4F9D;&#x8D56;&#x7684;&#x89E3;&#x6790;&#x90E8;&#x5206;&#xFF0C;&#x4EE5;&#x53CA;SNAPSHOT&#x7248;&#x672C;&#x65F6;&#x95F4;&#x6233;&#x7684;&#x83B7;&#x53D6;&#x53CA;&#x5BF9;&#x5E94;&#x7C7B;&#x7684;&#x5305;&#x88C5;&#x3002;&#x9700;&#x8981;&#x7406;&#x89E3;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x8FD8;&#x662F;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x8FC7;&#x4E00;&#x904D;&#x6574;&#x4E2A;&#x4EE3;&#x7801;&#x3002;</p><p>&#x4E0D;&#x8FC7;&#x9057;&#x61BE;&#x7684;&#x662F;&#xFF0C;&#x8FD9;&#x90E8;&#x5206;&#x7684;&#x5B9E;&#x73B0;&#x662F;&#x4E0D;&#x652F;&#x6301;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x652F;&#x6301;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#xFF0C;&#x5219;&#x4F1A;&#x6D89;&#x53CA;&#x5230;configuration&#x7684;&#x4F20;&#x9012;&#xFF0C;&#x903B;&#x8F91;&#x4F1A;&#x53D8;&#x5F97;&#x66F4;&#x52A0;&#x590D;&#x6742;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x91CC;&#x5C31;&#x4E0D;&#x5904;&#x7406;&#x4E86;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x95EE;&#x9898;&#x4E5F;&#x4E0D;&#x5927;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x624B;&#x52A8;&#x58F0;&#x660E;&#x4F20;&#x9012;&#x4F9D;&#x8D56;&#x5373;&#x53EF;&#x3002;</p><h3 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h3><p>&#x6700;&#x91CD;&#x8981;&#x7684;&#x8FD8;&#x662F;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x601D;&#x8DEF;&#xFF0C;&#x540C;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x80FD;&#x6709;&#x4E0D;&#x540C;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#xFF0C;&#x9700;&#x8981;&#x6574;&#x4F53;&#x8003;&#x8651;&#x9009;&#x62E9;&#x4F55;&#x79CD;&#x65B9;&#x5F0F;&#x53BB;&#x89E3;&#x51B3;&#x3002;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x8FC7;&#x7A0B;&#x5C31;&#x662F;&#x4E0D;&#x65AD;&#x5B66;&#x4E60;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x901A;&#x8FC7;&#x5B9E;&#x73B0;&#x8FD9;&#x4E2A;&#x9700;&#x6C42;&#xFF0C;&#x5BF9;gradle&#x7684;&#x4F9D;&#x8D56;&#x7BA1;&#x7406;&#x7B56;&#x7565;&#x3001;&#x7F13;&#x5B58;&#x4E5F;&#x66F4;&#x52A0;&#x719F;&#x6089;&#x4E86;&#x3002;</p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>gradle</tag>
        <tag>android</tag>
        <tag>providedAar</tag>
        <tag>maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu 使用 ming-w64 交叉编译 Windows 可执行文件</title>
    <url>/2017/12/18/Ubuntu%E4%BD%BF%E7%94%A8ming-w64%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91Windows%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<p>&#x6700;&#x8FD1;&#x9700;&#x8981;&#x5BF9;AOSP&#x4E0A;&#x7684;aapt&#x548C;aapt2&#x8FDB;&#x884C;&#x81EA;&#x5B9A;&#x4E49;&#xFF0C;&#x4F46;&#x662F;AOSP&#x7684;&#x6574;&#x4E2A;&#x6E90;&#x7801;&#x6811;&#x8FC7;&#x5927;&#xFF0C;&#x5B8C;&#x6574;&#x91CA;&#x653E;&#x540E;&#x7EA6;200G&#xFF0C;&#x4E0D;&#x5927;&#x9002;&#x5408;&#x6574;&#x4E2A;&#x62C9;&#x4E0B;&#x6765;&#x7F16;&#x8BD1;&#xFF0C;&#x56E0;&#x6B64;&#x5BF9;&#x6784;&#x5EFA;&#x73AF;&#x5883;&#x8FDB;&#x884C;&#x7CBE;&#x7B80;&#xFF0C;&#x53EA;&#x62C9;&#x53D6;aapt&#x548C;aapt2&#x7684;&#x5173;&#x952E;&#x4F9D;&#x8D56;&#x9879;&#x76EE;&#xFF0C;&#x4F7F;&#x7528;cmake&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#xFF0C;&#x6574;&#x4E2A;&#x79FB;&#x690D;&#x8FC7;&#x7A0B;&#x5F88;&#x987A;&#x5229;&#xFF0C;&#x5E76;&#x4E14;&#x6210;&#x529F;&#x7684;&#x7F16;&#x8BD1;&#x51FA;&#x4E86;mac&#x548C;linux&#x7684;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x548C;&#x5BF9;&#x5E94;&#x7684;&#x52A8;&#x6001;&#x5E93;&#xFF0C;&#x5305;&#x62EC;x86&#x548C;x86_64&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x7F16;&#x8BD1;windows&#x7684;&#x7248;&#x672C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9047;&#x5230;&#x4E86;&#x4E00;&#x70B9;&#x5C0F;&#x95EE;&#x9898;&#xFF0C;&#x5C31;&#x662F;AOSP&#x4E0A;&#x7684;&#x4F9D;&#x8D56;&#x9879;&#x76EE;&#xFF0C;&#x5B58;&#x5728;&#x8F6F;&#x94FE;&#x63A5;&#xFF0C;&#x4F46;&#x662F;windows&#x7CFB;&#x7EDF;&#x662F;&#x4E0D;&#x652F;&#x6301;&#x8F6F;&#x94FE;&#x63A5;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x80FD;&#x5728;windows&#x4E0A;&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#x3002;</p><a id="more"></a><p>&#x5BF9;&#x4E8E;windows&#x4E0D;&#x652F;&#x6301;&#x8F6F;&#x94FE;&#x63A5;&#xFF0C;&#x5176;&#x5B9E;&#x6709;&#x4E24;&#x79CD;&#x5904;&#x7406;&#x65B9;&#x5F0F;&#xFF1A;</p><ol><li>&#x624B;&#x52A8;&#x62F7;&#x8D1D;&#x5BF9;&#x5E94;&#x8F6F;&#x94FE;&#x63A5;&#x6587;&#x4EF6;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x663E;&#x7136;&#x8FD9;&#x662F;&#x5F88;&#x4E0D;&#x660E;&#x667A;&#x7684;&#x9009;&#x62E9;&#xFF0C;&#x56E0;&#x4E3A;&#x6587;&#x4EF6;&#x592A;&#x5927;&#x4E86;</li><li>&#x4E0D;&#x5728;windows&#x4E0A;&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#xFF0C;&#x9009;&#x62E9;linux&#x4E0B;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;windows&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x3002;&#x6211;&#x8FD9;&#x91CC;&#x9009;&#x62E9;&#x7684;&#x5C31;&#x662F;&#x8FD9;&#x4E00;&#x79CD;&#x3002;</li></ol><h3 id="&#x5B89;&#x88C5;&#x4F9D;&#x8D56;"><a href="#&#x5B89;&#x88C5;&#x4F9D;&#x8D56;" class="headerlink" title="&#x5B89;&#x88C5;&#x4F9D;&#x8D56;"></a>&#x5B89;&#x88C5;&#x4F9D;&#x8D56;</h3><p>&#x7531;&#x4E8E;&#x8981;&#x8FDB;&#x884C;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x5B89;&#x88C5;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;mingw-w64</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install mingw-w64</span><br></pre></td></tr></table></figure><p>&#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x540E;&#xFF0C;mingw-gcc&#x548C;mingw-g++&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;&#x7684;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;&#x662F;win32&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4F7F;&#x7528;posix&#x7684;&#x7EBF;&#x7A0B;&#x6A21;&#x578B;&#xFF0C;&#x56E0;&#x6B64;&#x5206;&#x522B;&#x6267;&#x884C;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x5DE5;&#x5177;&#x94FE;&#x6307;&#x5411;&#x5E26;-posix&#x540E;&#x7F00;&#x7684;&#x5DE5;&#x5177;&#x94FE;</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--config x86_64-w64-mingw32-gcc</span></span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--config x86_64-w64-mingw32-g++</span></span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--config x86_64-w64-mingw32-gfortran</span></span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--config x86_64-w64-mingw32-gnat</span></span><br><span class="line"></span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--config i686-w64-mingw32-gcc</span></span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--config i686-w64-mingw32-g++</span></span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--config i686-w64-mingw32-gfortran</span></span><br><span class="line">sudo <span class="keyword">update</span>-alternatives <span class="comment">--config i686-w64-mingw32-gnat</span></span><br></pre></td></tr></table></figure><h3 id="&#x7F16;&#x5199;cmake&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x811A;&#x672C;"><a href="#&#x7F16;&#x5199;cmake&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x811A;&#x672C;" class="headerlink" title="&#x7F16;&#x5199;cmake&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x811A;&#x672C;"></a>&#x7F16;&#x5199;cmake&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x811A;&#x672C;</h3><p>&#x53C2;&#x8003;&#x4E4B;&#x524D;&#x5199;&#x7684;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;<a href="/2017/08/18/Mac&#x751F;&#x6210;Linux&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;/">Mac&#x751F;&#x6210;Linux&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;</a>&#xFF0C;&#x7F16;&#x5199;cmake&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x811A;&#x672C;&#xFF0C;&#x521B;&#x5EFA;windows.toolchain.cmake&#x6587;&#x4EF6;&#xFF0C;&#x91CC;&#x9762;&#x7684;&#x5185;&#x5BB9;&#x4E3A;&#xFF1A;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># &#x5B89;&#x88C5; mingw-w64</span></span><br><span class="line"><span class="comment"># sudo apt-get install mingw-w64</span></span><br><span class="line"><span class="comment"># windows 64&#x4F4D;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;</span></span><br><span class="line"><span class="comment"># -DCMAKE_TOOLCHAIN_FILE=windows.toolchain.cmake</span></span><br><span class="line"><span class="comment"># windows 32&#x4F4D;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;</span></span><br><span class="line"><span class="comment"># -DCMAKE_TOOLCHAIN_FILE=windows.toolchain.cmake -DUSE_32BITS=1</span></span><br><span class="line"></span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_SYSTEM_NAME Windows)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_SYSTEM_VERSION 1)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_SYSTEM_PROCESSOR x86_64)</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_COMPILER   x86_64-w64-mingw32-gcc)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_COMPILER x86_64-w64-mingw32-g++)</span><br><span class="line"><span class="builtin-name">SET</span>(CMAKE_RC_COMPILER  x86_64-w64-mingw32-windres)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_AR           x86_64-w64-mingw32-ar CACHE FILEPATH <span class="string">&quot;Archiver&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_RANLIB       x86_64-w64-mingw32-ranlib CACHE FILEPATH <span class="string">&quot;Ranlib&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_COMPILER x86_64-w64-mingw32-as)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_LINKER       x86_64-w64-mingw32-ld)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_NM           x86_64-w64-mingw32-nm)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_OBJCOPY      x86_64-w64-mingw32-objcopy)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_OBJDUMP      x86_64-w64-mingw32-objdump)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_STRIP        x86_64-w64-mingw32-strip)</span><br><span class="line"></span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_C_COMPILER = <span class="variable">${CMAKE_C_COMPILER}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_CXX_COMPILER = <span class="variable">${CMAKE_CXX_COMPILER}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_AR = <span class="variable">${CMAKE_AR}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_RANLIB = <span class="variable">${CMAKE_RANLIB}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_ASM_COMPILER = <span class="variable">${CMAKE_ASM_COMPILER}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_LINKER = <span class="variable">${CMAKE_LINKER}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_NM = <span class="variable">${CMAKE_NM}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_OBJCOPY = <span class="variable">${CMAKE_OBJCOPY}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_OBJDUMP = <span class="variable">${CMAKE_OBJDUMP}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_STRIP = <span class="variable">${CMAKE_STRIP}</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set or retrieve the cached flags.</span></span><br><span class="line"><span class="comment"># This is necessary in case the user sets/changes flags in subsequent</span></span><br><span class="line"><span class="comment"># configures. If we included the flags in here, they would get</span></span><br><span class="line"><span class="comment"># overwritten.</span></span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_FLAGS <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the compiler during all build types.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_FLAGS <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the compiler during all build types.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_FLAGS <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the compiler during all build types.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_FLAGS_DEBUG <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the compiler during debug builds.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_FLAGS_DEBUG <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the compiler during debug builds.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_FLAGS_DEBUG <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the compiler during debug builds.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_FLAGS_RELEASE <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the compiler during release builds.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_FLAGS_RELEASE <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the compiler during release builds.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_FLAGS_RELEASE <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the compiler during release builds.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_MODULE_LINKER_FLAGS <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the linker during the creation of modules.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_SHARED_LINKER_FLAGS <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the linker during the creation of dll&apos;s.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_EXE_LINKER_FLAGS <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the linker.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_FLAGS             <span class="string">&quot;<span class="variable">${CMAKE_C_FLAGS}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_FLAGS           <span class="string">&quot;<span class="variable">${CMAKE_CXX_FLAGS}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_FLAGS           <span class="string">&quot;<span class="variable">${CMAKE_ASM_FLAGS}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_FLAGS_DEBUG       <span class="string">&quot;<span class="variable">${CMAKE_C_FLAGS_DEBUG}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_FLAGS_DEBUG     <span class="string">&quot;<span class="variable">${CMAKE_CXX_FLAGS_DEBUG}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_FLAGS_DEBUG     <span class="string">&quot;<span class="variable">${CMAKE_ASM_FLAGS_DEBUG}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_FLAGS_RELEASE     <span class="string">&quot;<span class="variable">${CMAKE_C_FLAGS_RELEASE}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_FLAGS_RELEASE   <span class="string">&quot;<span class="variable">${CMAKE_CXX_FLAGS_RELEASE}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_FLAGS_RELEASE   <span class="string">&quot;<span class="variable">${CMAKE_ASM_FLAGS_RELEASE}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_SHARED_LINKER_FLAGS <span class="string">&quot;<span class="variable">${CMAKE_SHARED_LINKER_FLAGS}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_MODULE_LINKER_FLAGS <span class="string">&quot;<span class="variable">${CMAKE_MODULE_LINKER_FLAGS}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_EXE_LINKER_FLAGS    <span class="string">&quot;<span class="variable">${CMAKE_EXE_LINKER_FLAGS}</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_FIND_ROOT_PATH /usr/x86_64-w64-mingw32)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLYONLY)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE BOTH)</span><br><span class="line"><span class="comment">#make VERVOSE=1 to output the log</span></span><br></pre></td></tr></table></figure><h3 id="&#x4F18;&#x5316;cmake&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x811A;&#x672C;&#x652F;&#x6301;32&#x4F4D;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;"><a href="#&#x4F18;&#x5316;cmake&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x811A;&#x672C;&#x652F;&#x6301;32&#x4F4D;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;" class="headerlink" title="&#x4F18;&#x5316;cmake&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x811A;&#x672C;&#x652F;&#x6301;32&#x4F4D;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;"></a>&#x4F18;&#x5316;cmake&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x811A;&#x672C;&#x652F;&#x6301;32&#x4F4D;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;</h3><p>&#x4E0A;&#x9762;&#x7684;&#x53EA;&#x80FD;&#x7F16;&#x8BD1;&#x51FA;64&#x4F4D;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x8981;&#x60F3;&#x7F16;&#x8BD1;&#x51FA;32&#x4F4D;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x9700;&#x8981;&#x4F7F;&#x7528;i686&#x5F00;&#x5934;&#x7684;&#x5DE5;&#x5177;&#x94FE;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x7684;&#x901A;&#x8FC7;&#x53C2;&#x6570;&#x8FDB;&#x884C;&#x63A7;&#x5236;&#x662F;&#x4F7F;&#x7528;64&#x4F4D;&#x8FD8;&#x662F;32&#x4F4D;&#x7684;&#xFF0C;&#x4F18;&#x5316;&#x540E;&#x7684;cmake&#x811A;&#x672C;&#x5982;&#x4E0B;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># &#x5B89;&#x88C5; mingw-w64</span></span><br><span class="line"><span class="comment"># sudo apt-get install mingw-w64</span></span><br><span class="line"><span class="comment"># windows 64&#x4F4D;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;</span></span><br><span class="line"><span class="comment"># -DCMAKE_TOOLCHAIN_FILE=windows.toolchain.cmake</span></span><br><span class="line"><span class="comment"># windows 32&#x4F4D;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;</span></span><br><span class="line"><span class="comment"># -DCMAKE_TOOLCHAIN_FILE=windows.toolchain.cmake -DUSE_32BITS=1</span></span><br><span class="line"></span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_SYSTEM_NAME Windows)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_SYSTEM_VERSION 1)</span><br><span class="line"><span class="keyword">if</span>(USE_32BITS)</span><br><span class="line">    message(STATUS <span class="string">&quot;using 32bits&quot;</span>)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_SYSTEM_PROCESSOR x86)</span><br><span class="line"><span class="keyword">else</span>()</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_SYSTEM_PROCESSOR x86_64)</span><br><span class="line">endif(USE_32BITS)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(USE_32BITS)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_C_COMPILER   i686-w64-mingw32-gcc)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_CXX_COMPILER i686-w64-mingw32-g++)</span><br><span class="line">    <span class="builtin-name">SET</span>(CMAKE_RC_COMPILER  i686-w64-mingw32-windres)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_AR           i686-w64-mingw32-ar CACHE FILEPATH <span class="string">&quot;Archiver&quot;</span>)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_RANLIB       i686-w64-mingw32-ranlib CACHE FILEPATH <span class="string">&quot;Ranlib&quot;</span>)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_ASM_COMPILER i686-w64-mingw32-as)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_LINKER       i686-w64-mingw32-ld)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_NM           i686-w64-mingw32-nm)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_OBJCOPY      i686-w64-mingw32-objcopy)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_OBJDUMP      i686-w64-mingw32-objdump)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_STRIP        i686-w64-mingw32-strip)</span><br><span class="line"><span class="keyword">else</span>()</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_C_COMPILER   x86_64-w64-mingw32-gcc)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_CXX_COMPILER x86_64-w64-mingw32-g++)</span><br><span class="line">    <span class="builtin-name">SET</span>(CMAKE_RC_COMPILER  x86_64-w64-mingw32-windres)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_AR           x86_64-w64-mingw32-ar CACHE FILEPATH <span class="string">&quot;Archiver&quot;</span>)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_RANLIB       x86_64-w64-mingw32-ranlib CACHE FILEPATH <span class="string">&quot;Ranlib&quot;</span>)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_ASM_COMPILER x86_64-w64-mingw32-as)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_LINKER       x86_64-w64-mingw32-ld)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_NM           x86_64-w64-mingw32-nm)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_OBJCOPY      x86_64-w64-mingw32-objcopy)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_OBJDUMP      x86_64-w64-mingw32-objdump)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_STRIP        x86_64-w64-mingw32-strip)</span><br><span class="line">endif(USE_32BITS)</span><br><span class="line"></span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_C_COMPILER = <span class="variable">${CMAKE_C_COMPILER}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_CXX_COMPILER = <span class="variable">${CMAKE_CXX_COMPILER}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_AR = <span class="variable">${CMAKE_AR}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_RANLIB = <span class="variable">${CMAKE_RANLIB}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_ASM_COMPILER = <span class="variable">${CMAKE_ASM_COMPILER}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_LINKER = <span class="variable">${CMAKE_LINKER}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_NM = <span class="variable">${CMAKE_NM}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_OBJCOPY = <span class="variable">${CMAKE_OBJCOPY}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_OBJDUMP = <span class="variable">${CMAKE_OBJDUMP}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_STRIP = <span class="variable">${CMAKE_STRIP}</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set or retrieve the cached flags.</span></span><br><span class="line"><span class="comment"># This is necessary in case the user sets/changes flags in subsequent</span></span><br><span class="line"><span class="comment"># configures. If we included the flags in here, they would get</span></span><br><span class="line"><span class="comment"># overwritten.</span></span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_FLAGS <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the compiler during all build types.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_FLAGS <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the compiler during all build types.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_FLAGS <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the compiler during all build types.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_FLAGS_DEBUG <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the compiler during debug builds.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_FLAGS_DEBUG <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the compiler during debug builds.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_FLAGS_DEBUG <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the compiler during debug builds.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_FLAGS_RELEASE <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the compiler during release builds.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_FLAGS_RELEASE <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the compiler during release builds.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_FLAGS_RELEASE <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the compiler during release builds.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_MODULE_LINKER_FLAGS <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the linker during the creation of modules.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_SHARED_LINKER_FLAGS <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the linker during the creation of dll&apos;s.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_EXE_LINKER_FLAGS <span class="string">&quot;&quot;</span></span><br><span class="line">        CACHE STRING <span class="string">&quot;Flags used by the linker.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_FLAGS             <span class="string">&quot;<span class="variable">${CMAKE_C_FLAGS}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_FLAGS           <span class="string">&quot;<span class="variable">${CMAKE_CXX_FLAGS}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_FLAGS           <span class="string">&quot;<span class="variable">${CMAKE_ASM_FLAGS}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_FLAGS_DEBUG       <span class="string">&quot;<span class="variable">${CMAKE_C_FLAGS_DEBUG}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_FLAGS_DEBUG     <span class="string">&quot;<span class="variable">${CMAKE_CXX_FLAGS_DEBUG}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_FLAGS_DEBUG     <span class="string">&quot;<span class="variable">${CMAKE_ASM_FLAGS_DEBUG}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_FLAGS_RELEASE     <span class="string">&quot;<span class="variable">${CMAKE_C_FLAGS_RELEASE}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_FLAGS_RELEASE   <span class="string">&quot;<span class="variable">${CMAKE_CXX_FLAGS_RELEASE}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_FLAGS_RELEASE   <span class="string">&quot;<span class="variable">${CMAKE_ASM_FLAGS_RELEASE}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_SHARED_LINKER_FLAGS <span class="string">&quot;<span class="variable">${CMAKE_SHARED_LINKER_FLAGS}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_MODULE_LINKER_FLAGS <span class="string">&quot;<span class="variable">${CMAKE_MODULE_LINKER_FLAGS}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_EXE_LINKER_FLAGS    <span class="string">&quot;<span class="variable">${CMAKE_EXE_LINKER_FLAGS}</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(USE_32BITS)</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_FIND_ROOT_PATH /usr/i686-w64-mingw32)</span><br><span class="line"><span class="keyword">else</span>()</span><br><span class="line">    <span class="builtin-name">set</span>(CMAKE_FIND_ROOT_PATH /usr/x86_64-w64-mingw32)</span><br><span class="line">endif(USE_32BITS)</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLYONLY)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE BOTH)</span><br><span class="line"><span class="comment">#make VERVOSE=1 to output the log</span></span><br></pre></td></tr></table></figure><h3 id="&#x751F;&#x6210;cmake&#x6784;&#x5EFA;&#x6587;&#x4EF6;"><a href="#&#x751F;&#x6210;cmake&#x6784;&#x5EFA;&#x6587;&#x4EF6;" class="headerlink" title="&#x751F;&#x6210;cmake&#x6784;&#x5EFA;&#x6587;&#x4EF6;"></a>&#x751F;&#x6210;cmake&#x6784;&#x5EFA;&#x6587;&#x4EF6;</h3><p>&#x5982;&#x679C;&#x751F;&#x6210;64&#x7684;&#x6784;&#x5EFA;&#x6587;&#x4EF6;&#xFF0C;&#x5219;&#x4F7F;&#x7528;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">cmake -H<span class="string">&quot;./&quot;</span> -B<span class="string">&quot;./build-cmake-windows&quot;</span> <span class="attribute">-DCMAKE_BUILD_TYPE</span>=MinSizeRel <span class="attribute">-DCMAKE_TOOLCHAIN_FILE</span>=windows.toolchain.cmake</span><br></pre></td></tr></table></figure><p>&#x4F46;&#x662F;&#x5982;&#x679C;&#x9700;&#x8981;&#x751F;&#x4EA7;32&#x4F4D;&#x7684;&#x6784;&#x5EFA;&#x6587;&#x4EF6;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x4F20;&#x9012;USE_32BITS=1&#x53C2;&#x6570;&#xFF0C;&#x5982;&#x4E0B;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">cmake -H<span class="string">&quot;./&quot;</span> -B<span class="string">&quot;./build-cmake-windows-x86&quot;</span> <span class="attribute">-DCMAKE_BUILD_TYPE</span>=MinSizeRel <span class="attribute">-DCMAKE_TOOLCHAIN_FILE</span>=windows.toolchain.cmake <span class="attribute">-DUSE_32BITS</span>=1</span><br></pre></td></tr></table></figure><h3 id="mac&#x4E0B;&#x7F16;&#x8BD1;"><a href="#mac&#x4E0B;&#x7F16;&#x8BD1;" class="headerlink" title="mac&#x4E0B;&#x7F16;&#x8BD1;"></a>mac&#x4E0B;&#x7F16;&#x8BD1;</h3><p>mac&#x4E0B;&#x53EF;&#x4F7F;&#x7528;brew install mingw-w64&#x5B89;&#x88C5;mingw-w64&#xFF0C;&#x4F46;&#x662F;&#x5B89;&#x88C5;&#x51FA;&#x6765;&#x7684;mingw-w64&#x7EBF;&#x7A0B;&#x6A21;&#x578B;&#x662F;win32&#x7684;&#xFF0C;&#x800C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4F7F;&#x7528;posix&#x7EBF;&#x7A0B;&#x6A21;&#x578B;&#xFF0C;&#x56E0;&#x6B64;&#x5982;&#x679C;&#x8981;&#x60F3;&#x5728;mac&#x4E0B;&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x7F16;&#x8BD1;mingw-w64&#xFF0C;&#x542F;&#x7528;posix&#x7EBF;&#x7A0B;&#x6A21;&#x578B;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x53EF;&#x4EE5;&#x81EA;&#x884C;&#x7814;&#x7A76;&#x3002;</p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>交叉编译</tag>
        <tag>Ubuntu</tag>
        <tag>ming-w64</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Tensorflow Lite 编译</title>
    <url>/2017/11/17/Tensorflow-Lite%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<p>Google&#x6700;&#x8FD1;&#x53D1;&#x5E03;&#x4E86;Tensorflow Lite&#xFF0C;&#x5E76;&#x4E14;&#x63D0;&#x4F9B;&#x4E86;demo&#xFF0C;&#x867D;&#x7136;&#x8BE5;demo&#x53EF;&#x4EE5;&#x4F7F;&#x7528;<strong>bazel build &#x2013;cxxopt=&#x2019;&#x2013;std=c++11&#x2019; //tensorflow/contrib/lite/java/demo/app/src/main:TfLiteCameraDemo</strong>&#x547D;&#x4EE4;&#x6210;&#x529F;&#x7F16;&#x8BD1;&#x51FA;&#x6765;&#xFF0C;&#x4F46;&#x662F;&#x6587;&#x6863;&#x4E2D;&#x5E76;&#x6CA1;&#x6709;&#x63D0;&#x53CA;&#x5982;&#x4F55;&#x7EAF;&#x7CB9;&#x7684;&#x7F16;&#x8BD1;&#x51FA;&#x52A8;&#x6001;&#x5E93;&#xFF0C;&#x53C2;&#x8003;&#x4E4B;&#x524D;&#x7684;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;<a href="/2017/06/02/&#x5F53;Android&#x5F00;&#x53D1;&#x8005;&#x9047;&#x89C1;TensorFlow/">&#x300A;&#x5F53; Android &#x5F00;&#x53D1;&#x8005;&#x9047;&#x89C1; TensorFlow&#x300B;</a>&#xFF0C;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x5C31;&#x7B80;&#x5355;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B;&#x5982;&#x4F55;&#x7F16;&#x8BD1;&#x52A8;&#x6001;&#x5E93;</p><a id="more"></a><h3 id="clone-&#x4EE3;&#x7801;"><a href="#clone-&#x4EE3;&#x7801;" class="headerlink" title="clone &#x4EE3;&#x7801;"></a>clone &#x4EE3;&#x7801;</h3><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/tensorflow/tensorflow.git</span><br></pre></td></tr></table></figure><h3 id="&#x4FEE;&#x6539;TensorFlow&#x9879;&#x76EE;&#x6839;&#x4E0B;&#x7684;WROKSPACE&#x6587;&#x4EF6;"><a href="#&#x4FEE;&#x6539;TensorFlow&#x9879;&#x76EE;&#x6839;&#x4E0B;&#x7684;WROKSPACE&#x6587;&#x4EF6;" class="headerlink" title="&#x4FEE;&#x6539;TensorFlow&#x9879;&#x76EE;&#x6839;&#x4E0B;&#x7684;WROKSPACE&#x6587;&#x4EF6;"></a>&#x4FEE;&#x6539;TensorFlow&#x9879;&#x76EE;&#x6839;&#x4E0B;&#x7684;WROKSPACE&#x6587;&#x4EF6;</h3><p>&#x5C06;&#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#x53CD;&#x6CE8;&#x91CA;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Uncomment and update the paths in these entries to build the Android demo.</span></span><br><span class="line">android_sdk_repository(</span><br><span class="line">    name = <span class="string">&quot;androidsdk&quot;</span>,</span><br><span class="line">    api_level = 23,</span><br><span class="line">    # Ensure that you have the build_tools_version below installed <span class="keyword">in</span> the</span><br><span class="line">    # SDK manager as it updates periodically.</span><br><span class="line">    build_tools_version = <span class="string">&quot;26.0.1&quot;</span>,</span><br><span class="line">    # Replace with path <span class="keyword">to</span> Android SDK on your system</span><br><span class="line">    path = <span class="string">&quot;/Users/lizhangqu/AndroidSDK&quot;</span>,</span><br><span class="line">)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line">android_ndk_repository(</span><br><span class="line">    <span class="attribute">name</span>=<span class="string">&quot;androidndk&quot;</span>,</span><br><span class="line">    <span class="attribute">path</span>=<span class="string">&quot;/Users/lizhangqu/AndroidNDK/android-ndk-r14b&quot;</span>,</span><br><span class="line">    # This needs <span class="keyword">to</span> be 14 <span class="keyword">or</span> higher <span class="keyword">to</span> compile TensorFlow.</span><br><span class="line">    # Please specify API level <span class="keyword">to</span> &gt;= 21 <span class="keyword">to</span> build <span class="keyword">for</span> 64-bit</span><br><span class="line">    # archtectures <span class="keyword">or</span> the Android NDK will automatically select biggest</span><br><span class="line">    # API level that it supports without notice.</span><br><span class="line">    #<span class="built_in"> Note </span>that the NDK version is <span class="keyword">not</span> the API level.</span><br><span class="line">    <span class="attribute">api_level</span>=14)</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x4FEE;&#x6539;android_sdk_repository&#x4E2D;&#x7684;path&#x4E3A;&#x81EA;&#x5DF1;&#x7535;&#x8111;&#x4E2D;&#x7684;android sdk&#x76EE;&#x5F55;&#xFF0C;&#x4FEE;&#x6539;android_ndk_repository&#x4E2D;&#x7684;path&#x4E3A;&#x81EA;&#x5DF1;&#x7535;&#x8111;&#x7684;android ndk&#x76EE;&#x5F55;&#x3002;</p><p>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;ndk&#x7684;&#x7248;&#x672C;&#xFF0C;&#x5B98;&#x65B9;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;&#x5927;&#x4E8E;r14&#x7684;&#x7248;&#x672C;&#xFF0C;&#x4E0B;&#x8F7D;&#x5730;&#x5740;<a href="https://dl.google.com/android/repository/android-ndk-r14b-darwin-x86_64.zip?hl=zh-cn" target="_blank" rel="noopener">android-ndk-r14b-darwin-x86_64.zip</a></p><h3 id="&#x7F16;&#x8BD1;"><a href="#&#x7F16;&#x8BD1;" class="headerlink" title="&#x7F16;&#x8BD1;"></a>&#x7F16;&#x8BD1;</h3><p>&#x786E;&#x4FDD;&#x5FC5;&#x8981;&#x7684;&#x5DE5;&#x5177;&#x5DF2;&#x7ECF;&#x5B89;&#x88C5;&#xFF0C;&#x5982;bazel</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">bazel build --cxxopt=<span class="string">&apos;--std=c++11&apos;</span> /<span class="regexp">/tensorflow/contrib</span><span class="regexp">/lite/java</span><span class="symbol">:tensorflowlite</span> \</span><br><span class="line">--crosstool_top=<span class="regexp">//external</span><span class="symbol">:android/crosstool</span> \</span><br><span class="line">--host_crosstool_top=<span class="variable">@bazel_tools</span>/<span class="regexp">/tools/cpp</span><span class="symbol">:toolchain</span> \</span><br><span class="line">--cpu=armeabi</span><br></pre></td></tr></table></figure><p>&#x7F16;&#x8BD1;&#x5176;&#x4ED6;ABI&#x8BF7;&#x4FEE;&#x6539;cpu&#x53C2;&#x6570;&#xFF0C;&#x5206;&#x522B;&#x4E3A;</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">--cpu</span>=armeabi</span><br><span class="line"><span class="attr">--cpu</span>=armeabi-v7a</span><br><span class="line"><span class="attr">--cpu</span>=arm64-v8a</span><br><span class="line"><span class="attr">--cpu</span>=mips</span><br><span class="line"><span class="attr">--cpu</span>=mips64</span><br><span class="line"><span class="attr">--cpu</span>=x86</span><br><span class="line"><span class="attr">--cpu</span>=x<span class="number">86_64</span></span><br></pre></td></tr></table></figure><p>&#x4EA7;&#x7269;&#x4F4D;&#x4E8E;</p><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">bazel-bin<span class="meta-keyword">/tensorflow/</span>contrib<span class="meta-keyword">/lite/</span>java/libtensorflowlite_jni.so</span><br><span class="line">bazel-bin<span class="meta-keyword">/tensorflow/</span>contrib<span class="meta-keyword">/lite/</span>java/libtensorflowlitelib.jar</span><br></pre></td></tr></table></figure><p>&#x6CE8;&#x610F;&#x7F16;&#x8BD1;mips&#x548C;mips64&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x5C06;&#x6784;&#x5EFA;&#x811A;&#x672C;&#x7A0D;&#x5FAE;&#x4FEE;&#x6539;&#x4E00;&#x4E0B;&#xFF0C;&#x5220;&#x9664;&#x4E00;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x62A5;&#x9519;</p><p>&#x627E;&#x5230;/tensorflow/contrib/lite/build_def.bzl&#x6587;&#x4EF6;&#xFF0C;&#x627E;&#x5230;&#x5982;&#x4E0B;&#x4EE3;&#x7801;</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tflite_linkopts_unstripped</span><span class="params">()</span>:</span></span><br><span class="line">  <span class="string">&quot;&quot;&quot;Defines linker flags to reduce size of TFLite binary.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">     These are useful when trying to investigate the relative size of the</span></span><br><span class="line"><span class="string">     symbols in TFLite.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  Returns:</span></span><br><span class="line"><span class="string">     a select object with proper linkopts</span></span><br><span class="line"><span class="string">  &quot;&quot;&quot;</span></span><br><span class="line">  <span class="keyword">return</span> select({</span><br><span class="line">      <span class="string">&quot;//tensorflow:android&quot;</span>: [</span><br><span class="line">          <span class="string">&quot;-Wl,--no-export-dynamic&quot;</span>, <span class="comment"># Only inc syms referenced by dynamic obj.</span></span><br><span class="line">          <span class="string">&quot;-Wl,--exclude-libs,ALL&quot;</span>,  <span class="comment"># Exclude syms in all libs from auto export.</span></span><br><span class="line">          <span class="string">&quot;-Wl,--gc-sections&quot;</span>, <span class="comment"># Eliminate unused code and data.</span></span><br><span class="line">          <span class="string">&quot;-Wl,--as-needed&quot;</span>, <span class="comment"># Don&apos;t link unused libs.</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="string">&quot;//tensorflow/contrib/lite:mips&quot;</span>: [],</span><br><span class="line">      <span class="string">&quot;//tensorflow/contrib/lite:mips64&quot;</span>: [],</span><br><span class="line">      <span class="string">&quot;//conditions:default&quot;</span>: [</span><br><span class="line">          <span class="string">&quot;-Wl,--icf=all&quot;</span>,  <span class="comment"># Identical code folding.</span></span><br><span class="line">      ],</span><br><span class="line">  })</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">tflite_jni_linkopts_unstripped</span><span class="params">()</span>:</span></span><br><span class="line">  <span class="string">&quot;&quot;&quot;Defines linker flags to reduce size of TFLite binary with JNI.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">     These are useful when trying to investigate the relative size of the</span></span><br><span class="line"><span class="string">     symbols in TFLite.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  Returns:</span></span><br><span class="line"><span class="string">     a select object with proper linkopts</span></span><br><span class="line"><span class="string">  &quot;&quot;&quot;</span></span><br><span class="line">  <span class="keyword">return</span> select({</span><br><span class="line">      <span class="string">&quot;//tensorflow:android&quot;</span>: [</span><br><span class="line">          <span class="string">&quot;-Wl,--gc-sections&quot;</span>, <span class="comment"># Eliminate unused code and data.</span></span><br><span class="line">          <span class="string">&quot;-Wl,--as-needed&quot;</span>, <span class="comment"># Don&apos;t link unused libs.</span></span><br><span class="line">      ],</span><br><span class="line">      <span class="string">&quot;//tensorflow/contrib/lite:mips&quot;</span>: [],</span><br><span class="line">      <span class="string">&quot;//tensorflow/contrib/lite:mips64&quot;</span>: [],</span><br><span class="line">      <span class="string">&quot;//conditions:default&quot;</span>: [</span><br><span class="line">          <span class="string">&quot;-Wl,--icf=all&quot;</span>,  <span class="comment"># Identical code folding.</span></span><br><span class="line">      ],</span><br><span class="line">  })</span><br></pre></td></tr></table></figure><p>&#x5C06;&#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x4E0B;&#x9762;&#x8FD9;&#x6BB5;&#x5220;&#x9664;</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">&quot;//tensorflow:android&quot;: [</span><br><span class="line">          &quot;-Wl,--no-export-dynamic&quot;, # <span class="keyword">Only</span> inc syms referenced <span class="keyword">by</span> dynamic obj.</span><br><span class="line">          &quot;-Wl,--exclude-libs,ALL&quot;,  # <span class="keyword">Exclude</span> syms <span class="keyword">in</span> <span class="keyword">all</span> libs <span class="keyword">from</span> auto export.</span><br><span class="line">          &quot;-Wl,--gc-sections&quot;, # Eliminate unused code <span class="keyword">and</span> data.</span><br><span class="line">          &quot;-Wl,--as-needed&quot;, # Don<span class="string">&apos;t link unused libs.</span></span><br><span class="line"><span class="string">      ],</span></span><br></pre></td></tr></table></figure><p>&#x4EE5;&#x53CA;&#x8FD9;&#x4E00;&#x6BB5;&#x4E5F;&#x5220;&#x9664;</p><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;//tensorflow:android&quot;</span>: [</span><br><span class="line">         <span class="string">&quot;-Wl,--gc-sections&quot;</span>, <span class="comment"># Eliminate unused code and data.</span></span><br><span class="line">         <span class="string">&quot;-Wl,--as-needed&quot;</span>, <span class="comment"># Don&apos;t link unused libs.</span></span><br><span class="line">     ],</span><br></pre></td></tr></table></figure><p>&#x4E34;&#x65F6;&#x5220;&#x9664;&#x540E;&#xFF0C;&#x7F16;&#x8BD1;&#x5B8C;mips&#x548C;mips64&#x8FD8;&#x539F;&#x5373;&#x53EF;&#xFF0C;&#x4E0D;&#x7136;&#x4F1A;&#x62A5;&#x5982;&#x4E0B;&#x9519;&#x8BEF;</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="string">ERROR:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>tensorflow<span class="regexp">/tensorflow/</span>contrib<span class="regexp">/lite/</span>java<span class="regexp">/BUILD:133:1: Illegal ambiguous match on configurable attribute &quot;linkopts&quot; in /</span><span class="regexp">/tensorflow/</span>contrib<span class="regexp">/lite/</span><span class="string">java:</span>libtensorflowlite_jni.<span class="string">so:</span></span><br><span class="line"><span class="comment">//tensorflow/contrib/lite:mips</span></span><br><span class="line"><span class="comment">//tensorflow:android</span></span><br><span class="line">Multiple matches are not allowed unless one is unambiguously more specialized.</span><br><span class="line"><span class="string">ERROR:</span> Analysis of target <span class="string">&apos;//tensorflow/contrib/lite/java:tensorflowlite&apos;</span> failed; build <span class="string">aborted:</span></span><br><span class="line"></span><br><span class="line"><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>tensorflow<span class="regexp">/tensorflow/</span>contrib<span class="regexp">/lite/</span>java<span class="regexp">/BUILD:133:1: Illegal ambiguous match on configurable attribute &quot;linkopts&quot; in /</span><span class="regexp">/tensorflow/</span>contrib<span class="regexp">/lite/</span><span class="string">java:</span>libtensorflowlite_jni.<span class="string">so:</span></span><br><span class="line"><span class="comment">//tensorflow/contrib/lite:mips</span></span><br><span class="line"><span class="comment">//tensorflow:android</span></span><br><span class="line">Multiple matches are not allowed unless one is unambiguously more specialized.</span><br></pre></td></tr></table></figure><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="string">ERROR:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>tensorflow<span class="regexp">/tensorflow/</span>contrib<span class="regexp">/lite/</span>java<span class="regexp">/BUILD:133:1: Illegal ambiguous match on configurable attribute &quot;linkopts&quot; in /</span><span class="regexp">/tensorflow/</span>contrib<span class="regexp">/lite/</span><span class="string">java:</span>libtensorflowlite_jni.<span class="string">so:</span></span><br><span class="line"><span class="comment">//tensorflow/contrib/lite:mips64</span></span><br><span class="line"><span class="comment">//tensorflow:android</span></span><br><span class="line">Multiple matches are not allowed unless one is unambiguously more specialized.</span><br><span class="line"><span class="string">ERROR:</span> Analysis of target <span class="string">&apos;//tensorflow/contrib/lite/java:tensorflowlite&apos;</span> failed; build <span class="string">aborted:</span></span><br><span class="line"></span><br><span class="line"><span class="regexp">/Users/</span>lizhangqu<span class="regexp">/Desktop/</span>tensorflow<span class="regexp">/tensorflow/</span>contrib<span class="regexp">/lite/</span>java<span class="regexp">/BUILD:133:1: Illegal ambiguous match on configurable attribute &quot;linkopts&quot; in /</span><span class="regexp">/tensorflow/</span>contrib<span class="regexp">/lite/</span><span class="string">java:</span>libtensorflowlite_jni.<span class="string">so:</span></span><br><span class="line"><span class="comment">//tensorflow/contrib/lite:mips64</span></span><br><span class="line"><span class="comment">//tensorflow:android</span></span><br><span class="line">Multiple matches are not allowed unless one is unambiguously more specialized.</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>TensorFlow</category>
      </categories>
      <tags>
        <tag>TensorFlow</tag>
        <tag>TensorFlow Lite，Android</tag>
      </tags>
  </entry>
  <entry>
    <title>aapt2 适配之资源 id 固定</title>
    <url>/2017/11/15/aapt2%E9%80%82%E9%85%8D%E4%B9%8B%E8%B5%84%E6%BA%90id%E5%9B%BA%E5%AE%9A/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>&#x8D44;&#x6E90;id&#x7684;&#x56FA;&#x5B9A;&#x5728;&#x70ED;&#x4FEE;&#x590D;&#x548C;&#x63D2;&#x4EF6;&#x5316;&#x4E2D;&#x6781;&#x5176;&#x91CD;&#x8981;&#x3002;&#x5728;&#x70ED;&#x4FEE;&#x590D;&#x4E2D;&#xFF0C;&#x6784;&#x5EFA;patch&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x4FDD;&#x6301;patch&#x5305;&#x7684;&#x8D44;&#x6E90;id&#x548C;&#x57FA;&#x7EBF;&#x5305;&#x7684;&#x8D44;&#x6E90;id&#x4E00;&#x81F4;&#xFF1B;&#x5728;&#x63D2;&#x4EF6;&#x5316;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x63D2;&#x4EF6;&#x9700;&#x8981;&#x5F15;&#x7528;&#x5BBF;&#x4E3B;&#x7684;&#x8D44;&#x6E90;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x5C06;&#x5BBF;&#x4E3B;&#x7684;&#x8D44;&#x6E90;id&#x8FDB;&#x884C;&#x56FA;&#x5B9A;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x8D44;&#x6E90;id&#x7684;&#x56FA;&#x5B9A;&#x5728;&#x8FD9;&#x4E24;&#x79CD;&#x573A;&#x666F;&#x4E0B;&#x662F;&#x5C24;&#x4E3A;&#x91CD;&#x8981;&#x7684;&#x3002;&#x800C;&#x5728;Android Gradle Plugin 3.0.0&#x4E2D;&#xFF0C;&#x9ED8;&#x8BA4;&#x5F00;&#x542F;&#x4E86;aapt2&#xFF0C;&#x539F;&#x5148;aapt&#x7684;&#x8D44;&#x6E90;&#x56FA;&#x5B9A;&#x65B9;&#x5F0F;public.xml&#x4E5F;&#x5C06;&#x5931;&#x6548;&#xFF0C;&#x5FC5;&#x987B;&#x5BFB;&#x627E;&#x4E00;&#x79CD;&#x65B0;&#x7684;&#x8D44;&#x6E90;&#x56FA;&#x5B9A;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x7B80;&#x5355;&#x7684;&#x7981;&#x7528;&#x6389;aapt2&#xFF0C;&#x56E0;&#x6B64;&#x672C;&#x6587;&#x6765;&#x63A2;&#x8BA8;&#x4E00;&#x4E0B;&#x5F00;&#x542F;aapt2&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x5982;&#x4F55;&#x8FDB;&#x884C;&#x8D44;&#x6E90;id&#x7684;&#x56FA;&#x5B9A;&#x3002;</p><a id="more"></a><h3 id="aapt&#x7684;&#x8D44;&#x6E90;&#x56FA;&#x5B9A;&#x65B9;&#x5F0F;"><a href="#aapt&#x7684;&#x8D44;&#x6E90;&#x56FA;&#x5B9A;&#x65B9;&#x5F0F;" class="headerlink" title="aapt&#x7684;&#x8D44;&#x6E90;&#x56FA;&#x5B9A;&#x65B9;&#x5F0F;"></a>aapt&#x7684;&#x8D44;&#x6E90;&#x56FA;&#x5B9A;&#x65B9;&#x5F0F;</h3><p>&#x5728;&#x63A2;&#x7D22;aapt2&#x8D44;&#x6E90;&#x56FA;&#x5B9A;&#x65B9;&#x5F0F;&#x524D;&#xFF0C;&#x5148;&#x6765;&#x6E29;&#x4E60;&#x4E00;&#x4E0B;aapt&#x539F;&#x5148;&#x7684;&#x8D44;&#x6E90;&#x56FA;&#x5B9A;&#x65B9;&#x5F0F;&#x3002;</p><ul><li>&#x7F16;&#x8BD1;&#x57FA;&#x7EBF;&#x5305;&#x65F6;&#x6DFB;&#x52A0;aapt&#x53C2;&#x6570;-P&#x5BFC;&#x51FA;public.xml&#x6587;&#x4EF6;</li><li><p>&#x7F16;&#x8BD1;&#x63D2;&#x4EF6;&#x6216;&#x8005;patch&#x5305;&#x65F6;&#xFF0C;&#x5C06;public.xml&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x81F3;&#x8D44;&#x6E90;merge&#x5B8C;&#x6210;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x5E76;&#x6839;&#x636E;values.xml&#x4E2D;&#x7684;&#x5B9A;&#x4E49;&#x548C;public.xml&#x4E2D;&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x9009;&#x62E9;&#x6027;&#x7684;&#x751F;&#x6210;ids.xml&#x6587;&#x4EF6;</p><p>&#x5BF9;&#x5E94;&#x7684;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p></li></ul><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">apply plugin: PublicPlugin</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> PublicPlugin <span class="keyword">implements</span> Plugin&lt;<span class="keyword">Project</span>&gt; {</span><br><span class="line">    <span class="keyword">void</span> apply(<span class="keyword">Project</span> <span class="keyword">project</span>) {</span><br><span class="line">        <span class="keyword">project</span>.afterEvaluate {</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">project</span>.plugins.hasPlugin(<span class="string">&quot;com.android.application&quot;</span>)) {</span><br><span class="line">                <span class="keyword">def</span> android = <span class="keyword">project</span>.extensions.getByName(<span class="string">&quot;android&quot;</span>)</span><br><span class="line">                android.applicationVariants.all {<span class="keyword">def</span> variant -&gt;</span><br><span class="line">                    <span class="keyword">File</span> publicXmlFile = <span class="keyword">project</span>.rootProject.<span class="keyword">file</span>(<span class="string">&apos;public.xml&apos;</span>)</span><br><span class="line">                    <span class="comment">//public&#x6587;&#x4EF6;&#x5B58;&#x5728;&#x5219;&#x5E94;&#x7528;&#xFF0C;&#x4E0D;&#x5B58;&#x5728;&#x5219;&#x751F;&#x6210;</span></span><br><span class="line">                    <span class="keyword">if</span> (publicXmlFile.exists()) {</span><br><span class="line">                        <span class="comment">//aapt&#x7684;&#x5E94;&#x7528;&#x9700;&#x8981;&#x5C06;&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x76EE;&#x5F55;</span></span><br><span class="line">                        <span class="comment">//aapt public.xml&#x6587;&#x4EF6;&#x7684;&#x5E94;&#x7528;&#x5E76;&#x4E0D;&#x662F;&#x53EA;&#x662F;&#x62F7;&#x8D1D;public.xml&#x6587;&#x4EF6;&#x90A3;&#x4E48;&#x7B80;&#x5355;&#xFF0C;&#x8FD8;&#x8981;&#x6839;&#x636E;&#x751F;&#x6210;&#x7684;public.xml&#x751F;&#x6210;ids.xml&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x5C06;ids.xml&#x4E2D;&#x4E0E;values.xml&#x4E2D;&#x91CD;&#x590D;&#x5B9A;&#x4E49;&#x7684;id&#x53BB;&#x9664;</span></span><br><span class="line">                        String mergeResourcesTaskName = variant.variantData.getScope().getMergeResourcesTask().name</span><br><span class="line">                        <span class="keyword">def</span> mergeResourcesTask = <span class="keyword">project</span>.tasks.getByName(mergeResourcesTaskName)</span><br><span class="line">                        <span class="comment">//&#x8D44;&#x6E90;merge&#x7684;task&#x5B58;&#x5728;&#x5219;&#x5728;&#x5176;merge&#x5B8C;&#x8D44;&#x6E90;&#x540E;&#x62F7;&#x8D1D;public.xml&#x5E76;&#x751F;&#x6210;ids.xml</span></span><br><span class="line">                        <span class="keyword">if</span> (mergeResourcesTask) {</span><br><span class="line">                            mergeResourcesTask.<span class="keyword">doLast</span> {</span><br><span class="line">                                <span class="comment">//&#x62F7;&#x8D1D;public.xml&#x6587;&#x4EF6;</span></span><br><span class="line">                                <span class="keyword">File</span> <span class="keyword">toDir</span> = <span class="keyword">new</span> <span class="keyword">File</span>(mergeResourcesTask.outputDir, <span class="string">&quot;values&quot;</span>)</span><br><span class="line">                                <span class="keyword">project</span>.<span class="keyword">copy</span> {</span><br><span class="line">                                    <span class="keyword">project</span>.logger.error <span class="string">&quot;${variant.name}:copy from ${publicXmlFile.getAbsolutePath()} to ${toDir}/public.xml&quot;</span></span><br><span class="line">                                    <span class="keyword">from</span>(publicXmlFile.getParentFile()) {</span><br><span class="line">                                        <span class="keyword">include</span> <span class="string">&quot;public.xml&quot;</span></span><br><span class="line">                                        rename <span class="string">&quot;public.xml&quot;</span>, <span class="string">&quot;public.xml&quot;</span></span><br><span class="line">                                    }</span><br><span class="line">                                    <span class="keyword">into</span>(<span class="keyword">toDir</span>)</span><br><span class="line">                                }</span><br><span class="line">                                <span class="comment">//&#x751F;&#x6210;ids.xml&#x6587;&#x4EF6;</span></span><br><span class="line">                                <span class="keyword">File</span> valuesFile = <span class="keyword">new</span> <span class="keyword">File</span>(<span class="keyword">toDir</span>, <span class="string">&quot;values.xml&quot;</span>)</span><br><span class="line">                                <span class="keyword">File</span> idsFile = <span class="keyword">new</span> <span class="keyword">File</span>(<span class="keyword">toDir</span>, <span class="string">&quot;ids.xml&quot;</span>)</span><br><span class="line">                                <span class="keyword">if</span> (valuesFile.exists() &amp;&amp; publicXmlFile.exists()) {</span><br><span class="line">                                    <span class="comment">//&#x8BB0;&#x5F55;&#x5728;values.xml&#x4E2D;&#x5B58;&#x5728;&#x7684;id&#x5B9A;&#x4E49;</span></span><br><span class="line">                                    <span class="keyword">def</span> valuesNodes = <span class="keyword">new</span> XmlParser().parse(valuesFile)</span><br><span class="line">                                    Set&lt;String&gt; existIdItems = <span class="keyword">new</span> HashSet&lt;String&gt;()</span><br><span class="line">                                    valuesNodes.<span class="keyword">each</span> {</span><br><span class="line">                                        <span class="keyword">if</span> (<span class="string">&quot;id&quot;</span>.equalsIgnoreCase(<span class="string">&quot;${it.@type}&quot;</span>)) {</span><br><span class="line">                                            existIdItems.add(<span class="string">&quot;${it.@name}&quot;</span>)</span><br><span class="line">                                        }</span><br><span class="line">                                    }</span><br><span class="line">                                    GFileUtils.deleteQuietly(idsFile)</span><br><span class="line">                                    GFileUtils.touch(idsFile)</span><br><span class="line"></span><br><span class="line">                                    idsFile.<span class="keyword">append</span>(<span class="string">&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;utf-8\&quot;?&gt;&quot;</span>)</span><br><span class="line">                                    idsFile.<span class="keyword">append</span>(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">                                    idsFile.<span class="keyword">append</span>(<span class="string">&quot;&lt;resources&gt;&quot;</span>)</span><br><span class="line">                                    idsFile.<span class="keyword">append</span>(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">                                    <span class="keyword">def</span> publicXMLNodes = <span class="keyword">new</span> XmlParser().parse(publicXmlFile)</span><br><span class="line">                                    Pattern drawableGeneratePattern = Pattern.<span class="keyword">compile</span>(<span class="string">&apos;^(.*?_)([0-9]{0,})$&apos;</span>)</span><br><span class="line">                                    publicXMLNodes.<span class="keyword">each</span> {</span><br><span class="line">                                        <span class="comment">//&#x83B7;&#x53D6;public.xml&#x4E2D;&#x5B9A;&#x4E49;&#x7684;id&#x7C7B;&#x578B;item</span></span><br><span class="line">                                        <span class="keyword">if</span> (<span class="string">&quot;id&quot;</span>.equalsIgnoreCase(<span class="string">&quot;${it.@type}&quot;</span>)) {</span><br><span class="line">                                            <span class="comment">//&#x5982;&#x679C;&#x5728;values.xml&#x4E2D;&#x6CA1;&#x6709;&#x5B9A;&#x4E49;&#xFF0C;&#x5219;&#x6DFB;&#x52A0;&#x5230;ids.xml&#x4E2D;</span></span><br><span class="line">                                            <span class="comment">//&#x5982;&#x679C;&#x5DF2;&#x7ECF;&#x5728;values.xml&#x4E2D;&#x5B9A;&#x4E49;&#xFF0C;&#x5219;&#x5FFD;&#x7565;&#x5B83;</span></span><br><span class="line">                                            <span class="keyword">if</span> (!existIdItems.contains(<span class="string">&quot;${it.@name}&quot;</span>)) {</span><br><span class="line">                                                idsFile.<span class="keyword">append</span>(<span class="string">&quot;\t&lt;item type=\&quot;id\&quot; name=\&quot;${it.@name}\&quot; /&gt;\n&quot;</span>)</span><br><span class="line">                                            } <span class="keyword">else</span> {</span><br><span class="line">                                                <span class="keyword">project</span>.logger.error <span class="string">&quot;already exist id item ${it.@name}, ignore it&quot;</span></span><br><span class="line">                                            }</span><br><span class="line">                                        } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;drawable&quot;</span>.equalsIgnoreCase(<span class="string">&quot;${it.@type}&quot;</span>)) {</span><br><span class="line">                                            <span class="comment">//&#x4EE5;&apos;_&#x6570;&#x5B57;&apos;&#x7ED3;&#x5C3E;&#x7684;drawable&#x8D44;&#x6E90;&#xFF0C;&#x6B64;&#x7C7B;&#x8D44;&#x6E90;&#x662F;aapt&#x7F16;&#x8BD1;&#x65F6;&#x751F;&#x6210;&#x7684;nested&#x8D44;&#x6E90;&#xFF0C;&#x5982;avd_hide_password_1, avd_hide_password_2</span></span><br><span class="line">                                            <span class="comment">//&#x4F46;&#x662F;&#x53EF;&#x80FD;&#x4F1A;&#x6709;&#x5176;&#x4ED6;&#x8D44;&#x6E90;&#x63BA;&#x6742;&#xFF0C;&#x5982;abc_btn_check_to_on_mtrl_000, abc_btn_check_to_on_mtrl_015</span></span><br><span class="line">                                            <span class="comment">//&#x4E3A;&#x4E86;&#x5C06;&#x6B64;&#x7C7B;&#x8D44;&#x6E90;&#x8FC7;&#x6EE4;&#x6389;&#xFF0C;&#x5C06;&#x6B63;&#x5219;&#x5339;&#x914D;&#x5230;&#x7684;&#x6570;&#x5B57;&#x8F6C;&#x6210;int&#xFF0C;&#x5BF9;&#x6BD4;&#x539F;&#x59CB;&#x6570;&#x5B57;&#x90E8;&#x5206;&#x5339;&#x914D;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x81F4;&#xFF0C;&#x5219;&#x662F;aapt&#x751F;&#x6210;</span></span><br><span class="line">                                            <span class="comment">//&#x91CD;&#x8981;&#xFF1A;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x6B64;&#x7C7B;nested&#x8D44;&#x6E90;&#x751F;&#x6210;&#x987A;&#x5E8F;&#x53D1;&#x751F;&#x6539;&#x53D8;&#xFF0C;&#x5E94;&#x8BE5;&#x7981;&#x6B62;&#x4FEE;&#x6539;&#x6B64;&#x7C7B;&#x8D44;&#x6E90;</span></span><br><span class="line">                                            Matcher matcher = drawableGeneratePattern.matcher(it.@name)</span><br><span class="line">                                            <span class="keyword">if</span> (matcher.matches() &amp;&amp; matcher.groupCount() == <span class="number">2</span>) {</span><br><span class="line">                                                String number = matcher.<span class="keyword">group</span>(<span class="number">2</span>)</span><br><span class="line">                                                <span class="keyword">if</span> (number.equalsIgnoreCase(Integer.parseInt(number).toString())) {</span><br><span class="line">                                                    <span class="keyword">project</span>.logger.info <span class="string">&quot;[${PREFIX}] declared drawable resource ${it.@name} which is generated by aapt. like use &apos;&lt;aapt:attr name=\&quot;android:drawable\&quot;&gt;&apos;&quot;</span></span><br><span class="line">                                                    idsFile.<span class="keyword">append</span>(<span class="string">&quot;\t&lt;item type=\&quot;drawable\&quot; name=\&quot;${it.@name}\&quot; /&gt;\n&quot;</span>)</span><br><span class="line">                                                }</span><br><span class="line">                                            }</span><br><span class="line">                                        }</span><br><span class="line">                                    }</span><br><span class="line">                                    idsFile.<span class="keyword">append</span>(<span class="string">&quot;&lt;/resources&gt;&quot;</span>)</span><br><span class="line">                                }</span><br><span class="line">                            }</span><br><span class="line">                        }</span><br><span class="line">                    } <span class="keyword">else</span> {</span><br><span class="line">                        <span class="comment">//&#x4E0D;&#x5B58;&#x5728;&#x5219;&#x751F;&#x6210;</span></span><br><span class="line">                        <span class="keyword">project</span>.logger.error <span class="string">&quot;${publicXmlFile} not exists, generate it&quot;</span></span><br><span class="line">                        <span class="comment">//aapt &#x6DFB;&#x52A0;-P&#x53C2;&#x6570;&#x751F;&#x6210;</span></span><br><span class="line">                        aaptOptions.additionalParameters(<span class="string">&quot;-P&quot;</span>, <span class="string">&quot;${publicXmlFile}&quot;</span>)</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x751F;&#x6210;public.xml&#x65F6;&#x4F7F;&#x7528;aapt&#x7684;&#x53C2;&#x6570;-P&#xFF0C;&#x6307;&#x5B9A;&#x751F;&#x6210;&#x7684;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x5373;&#x53EF;&#xFF1B;&#x5E94;&#x7528;public.xml&#x5219;&#x5C06;&#x5176;&#x62F7;&#x8D1D;&#x5230;values&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x552F;&#x4E00;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x8FD9;&#x4E2A;&#x5BFC;&#x51FA;&#x7684;public.xml&#x6587;&#x4EF6;&#x4F1A;&#x5B58;&#x5728;&#x8D44;&#x6E90;id&#x672A;&#x5B9A;&#x4E49;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x751F;&#x6210;ids.xml&#x6587;&#x4EF6;&#xFF0C;&#x5BF9;&#x672A;&#x5B9A;&#x4E49;&#x7684;id&#x7C7B;&#x578B;&#x8D44;&#x6E90;&#x8FDB;&#x884C;&#x5B9A;&#x4E49;&#x3002;&#x800C;&#x8FD9;&#x4E2A;&#x751F;&#x6210;&#x7684;ids.xml&#x6587;&#x4EF6;&#xFF0C;&#x53EF;&#x80FD;&#x4E0E;values/values.xml&#x6587;&#x4EF6;&#x4E2D;&#x7684;id&#x5B58;&#x5728;&#x91CD;&#x590D;&#x5B9A;&#x4E49;&#x7684;&#x73B0;&#x8C61;&#xFF0C;&#x56E0;&#x6B64;&#x751F;&#x6210;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x5224;&#x65AD;&#x5BF9;&#x5E94;&#x7684;id&#x540D;&#x5728;values.xml&#x6587;&#x4EF6;&#x4E2D;&#x662F;&#x5426;&#x5B58;&#x5728;&#xFF0C;&#x5982;&#x679C;&#x5B58;&#x5728;&#x5219;&#x76F4;&#x63A5;&#x5FFD;&#x7565;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x5DF2;&#x7ECF;&#x5B9A;&#x4E49;&#x4E86;&#xFF1B;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x6DFB;&#x52A0;&#x5230;ids.xml&#x4E2D;&#x8FDB;&#x884C;&#x5B9A;&#x4E49;&#x3002;</p><p>&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x4E0D;&#x652F;&#x6301;&#x5220;&#x9664;&#x73B0;&#x6709;&#x7684;&#x8D44;&#x6E90;&#xFF0C;&#x5982;&#x679C;&#x5220;&#x9664;&#x4E86;&#x73B0;&#x6709;&#x7684;&#x8D44;&#x6E90;&#xFF0C;public.xml&#x4E2D;&#x7684;&#x5B9A;&#x4E49;&#x4E5F;&#x5F97;&#x5220;&#x9664;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x62A5;&#x8D44;&#x6E90;&#x672A;&#x5B9A;&#x4E49;&#x7684;&#x9519;&#x8BEF;&#x3002;</p><h3 id="aapt2&#x7684;&#x8D44;&#x6E90;&#x56FA;&#x5B9A;&#x65B9;&#x5F0F;"><a href="#aapt2&#x7684;&#x8D44;&#x6E90;&#x56FA;&#x5B9A;&#x65B9;&#x5F0F;" class="headerlink" title="aapt2&#x7684;&#x8D44;&#x6E90;&#x56FA;&#x5B9A;&#x65B9;&#x5F0F;"></a>aapt2&#x7684;&#x8D44;&#x6E90;&#x56FA;&#x5B9A;&#x65B9;&#x5F0F;</h3><p>&#x90A3;&#x4E48;&#x5728;aapt2&#x4E2D;&#x4E0A;&#x9762;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x8FD8;&#x751F;&#x6548;&#x5417;&#xFF0C;&#x7B54;&#x6848;&#x662F;&#x5426;&#x5B9A;&#x7684;&#xFF0C;&#x81F3;&#x4E8E;&#x4E3A;&#x4EC0;&#x4E48;&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x4E4B;&#x524D;&#x7684;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;<a href="/2017/10/31/aapt2&#x8D44;&#x6E90;compile&#x8FC7;&#x7A0B;/">aapt2 &#x8D44;&#x6E90; compile &#x8FC7;&#x7A0B;</a>&#xFF0C;&#x56E0;&#x4E3A;&#x6240;&#x6709;merge&#x7684;&#x8D44;&#x6E90;&#x90FD;&#x5DF2;&#x7ECF;&#x7ECF;&#x8FC7;&#x4E86;&#x9884;&#x7F16;&#x8BD1;&#xFF0C;&#x4EA7;&#x751F;&#x4E86;flat&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x5C06;public.xml&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x81F3;&#x8BE5;&#x76EE;&#x5F55;&#x5C31;&#x4F1A;&#x4EA7;&#x751F;&#x7F16;&#x8BD1;&#x9519;&#x8BEF;&#x3002;&#x90A3;&#x4E48;&#x5982;&#x4F55;&#x89E3;&#x51B3;&#x4E86;&#x3002;&#x901A;&#x8FC7;&#x67E5;&#x770B;Android Gradle Plugin 3.0.0&#x7684;&#x4EE3;&#x7801;&#x53D1;&#x73B0;&#x4E86;&#x4E00;&#x4E9B;&#x732B;&#x817B;&#xFF0C;&#x5173;&#x952E;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> ImmutableList&lt;<span class="keyword">String</span>&gt; makeLink(</span><br><span class="line">            @NonNull AaptPackageConfig <span class="built_in">config</span>, @NonNull <span class="built_in">File</span> intermediateDir) throws AaptException {</span><br><span class="line">    ImmutableList.Builder&lt;<span class="keyword">String</span>&gt; builder = ImmutableList.builder();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">if</span> (<span class="built_in">config</span>.isVerbose()) {</span><br><span class="line">        builder.add(<span class="string">&quot;-v&quot;</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="built_in">File</span> stableResourceIdsFile = <span class="keyword">new</span> <span class="built_in">File</span>(intermediateDir, <span class="string">&quot;stable-resource-ids.txt&quot;</span>);</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> For now, we ignore this file, but as soon as aapt2 supports it, we&apos;ll use it.</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x6B64;&#x5904;&#x7701;&#x7565;n&#x884C;&#x4EE3;&#x7801;</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5927;&#x6982;&#x53EF;&#x4EE5;&#x731C;&#x6D4B;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6307;&#x5B9A;&#x7A33;&#x5B9A;&#x7684;&#x8D44;&#x6E90;id&#x6620;&#x5C04;&#x6587;&#x4EF6;&#x8FBE;&#x5230;&#x56FA;&#x5B9A;&#x8D44;&#x6E90;id&#x7684;&#x4F5C;&#x7528;&#xFF0C;&#x4F46;&#x662F;&#x4EE3;&#x7801;&#x4E2D;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x5E76;&#x6CA1;&#x6709;&#x5171;&#x540C;&#x53C2;&#x4E0E;&#x8D44;&#x6E90;&#x7F16;&#x8BD1;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x6682;&#x65F6;&#x65E0;&#x6548;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x53BB;aapt2&#x547D;&#x4EE4;&#x4E2D;&#x5BFB;&#x627E;&#x4E00;&#x4E0B;&#x3002;&#x901A;&#x8FC7;aapt2 link &#x2013;help&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x6709;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x3002;&#x5982;&#x4E0B;</p><figure class="highlight delphi"><table><tr><td class="code"><pre><span class="line">--stable-ids arg   <span class="keyword">File</span> containing a list <span class="keyword">of</span> <span class="keyword">name</span> <span class="keyword">to</span> ID mapping.</span><br><span class="line">--emit-ids arg     Emit a <span class="keyword">file</span> at the given path <span class="keyword">with</span> a list <span class="keyword">of</span> <span class="keyword">name</span> <span class="keyword">to</span> ID mappings, suitable <span class="keyword">for</span> use <span class="keyword">with</span> --stable-ids.</span><br></pre></td></tr></table></figure><p>&#x5927;&#x6982;&#x610F;&#x601D;&#x5C31;&#x662F;&#x8BF4;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x2013;emit-ids&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x8BE5;&#x6587;&#x4EF6;&#x4F1A;&#x8F93;&#x51FA;&#x8D44;&#x6E90;&#x540D;&#x5B57;&#x5230;&#x8D44;&#x6E90;id&#x7684;&#x4E00;&#x4E2A;&#x6620;&#x5C04;&#xFF0C;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x53EF;&#x4EE5;&#x88AB;&#x2013;stable-ids&#x53C2;&#x6570;&#x4F7F;&#x7528;&#x3002;</p><p>&#x901A;&#x8FC7;&#x7B80;&#x5355;&#x7684;&#x6D4B;&#x8BD5;&#xFF0C;&#x53D1;&#x73B0;&#x8FD9;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x53EF;&#x4EE5;&#x5B8C;&#x5168;&#x6EE1;&#x8DB3;&#x6211;&#x4EEC;&#x7684;&#x9700;&#x6C42;&#x3002;&#x800C;&#x4E14;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x652F;&#x6301;&#x5220;&#x9664;&#x73B0;&#x6709;&#x7684;&#x8D44;&#x6E90;&#x3002;&#x7F16;&#x5199;&#x4EE3;&#x7801;&#x9A8C;&#x8BC1;&#x4E4B;&#x3002;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">apply plugin: PublicPlugin</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> PublicPlugin <span class="keyword">implements</span> Plugin&lt;<span class="keyword">Project</span>&gt; {</span><br><span class="line">    <span class="keyword">void</span> apply(<span class="keyword">Project</span> <span class="keyword">project</span>) {</span><br><span class="line">        <span class="keyword">project</span>.afterEvaluate {</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">project</span>.plugins.hasPlugin(<span class="string">&quot;com.android.application&quot;</span>)) {</span><br><span class="line">                <span class="keyword">def</span> android = <span class="keyword">project</span>.extensions.getByName(<span class="string">&quot;android&quot;</span>)</span><br><span class="line">                android.applicationVariants.all {<span class="keyword">def</span> variant -&gt;</span><br><span class="line">                    <span class="keyword">def</span> processResourcesTask = <span class="keyword">project</span>.tasks.getByName(<span class="string">&quot;process${variant.name.capitalize()}Resources&quot;</span>)</span><br><span class="line">                    <span class="keyword">if</span> (processResourcesTask) {</span><br><span class="line">                        <span class="keyword">def</span> aaptOptions = processResourcesTask.aaptOptions</span><br><span class="line">                        <span class="keyword">File</span> publicTxtFile = <span class="keyword">project</span>.rootProject.<span class="keyword">file</span>(<span class="string">&apos;public.txt&apos;</span>)</span><br><span class="line">                        <span class="comment">//public&#x6587;&#x4EF6;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x5E94;&#x7528;&#xFF0C;&#x4E0D;&#x5B58;&#x5728;&#x5219;&#x751F;&#x6210;</span></span><br><span class="line">                        <span class="keyword">if</span> (publicTxtFile.exists()) {</span><br><span class="line">                            <span class="keyword">project</span>.logger.error <span class="string">&quot;${publicTxtFile} exists, apply it.&quot;</span></span><br><span class="line">                            <span class="comment">//aapt2&#x6DFB;&#x52A0;--stable-ids&#x53C2;&#x6570;&#x5E94;&#x7528;</span></span><br><span class="line">                            aaptOptions.additionalParameters(<span class="string">&quot;--stable-ids&quot;</span>, <span class="string">&quot;${publicTxtFile}&quot;</span>)</span><br><span class="line">                        } <span class="keyword">else</span> {</span><br><span class="line">                            <span class="keyword">project</span>.logger.error <span class="string">&quot;${publicTxtFile} not exists, generate it.&quot;</span></span><br><span class="line">                            <span class="comment">//aapt2&#x6DFB;&#x52A0;--emit-ids&#x53C2;&#x6570;&#x751F;&#x6210;</span></span><br><span class="line">                            aaptOptions.additionalParameters(<span class="string">&quot;--emit-ids&quot;</span>, <span class="string">&quot;${publicTxtFile}&quot;</span>)</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4EE3;&#x7801;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x5F53;public.txt&#x6587;&#x4EF6;&#x4E0D;&#x5B58;&#x5728;&#x65F6;&#xFF0C;&#x6DFB;&#x52A0;&#x2013;emit-ids&#x53C2;&#x6570;&#x8FDB;&#x884C;&#x751F;&#x4EA7;&#xFF0C;&#x5982;&#x679C;&#x5B58;&#x5728;&#x65F6;&#xFF0C;&#x5219;&#x6DFB;&#x52A0;&#x2013;stable-ids&#x8FDB;&#x884C;&#x5E94;&#x7528;&#x3002;</p><p>&#x7B80;&#x5355;&#x9A8C;&#x8BC1;&#x4E00;&#x4E0B;&#xFF0C;&#x5B9A;&#x4E49;3&#x4E2A;&#x989C;&#x8272;&#x8D44;&#x6E90;</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;colorAccent&quot;</span>&gt;</span>#FF4081<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;colorPrimary&quot;</span>&gt;</span>#3F51B5<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;colorPrimaryDark&quot;</span>&gt;</span>#303F9F<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x7F16;&#x8BD1;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x4EA7;&#x751F;&#x4E86;public.txt&#x6587;&#x4EF6;&#xFF0C;&#x5176;&#x4E2D;&#x8FD9;&#x4E09;&#x4E2A;&#x8D44;&#x6E90;&#x5BF9;&#x5E94;&#x7684;&#x5185;&#x5BB9;&#x4E3A;</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">io<span class="selector-class">.github</span><span class="selector-class">.lizhangqu</span><span class="selector-class">.aapt2</span>:<span class="attribute">color</span>/colorAccent = <span class="number">0</span>x7f040026</span><br><span class="line">io<span class="selector-class">.github</span><span class="selector-class">.lizhangqu</span><span class="selector-class">.aapt2</span>:<span class="attribute">color</span>/colorPrimary = <span class="number">0</span>x7f040027</span><br><span class="line">io<span class="selector-class">.github</span><span class="selector-class">.lizhangqu</span><span class="selector-class">.aapt2</span>:<span class="attribute">color</span>/colorPrimaryDark = <span class="number">0</span>x7f040028</span><br></pre></td></tr></table></figure><p>&#x5728;&#x8FD9;&#x4E09;&#x4E2A;&#x8D44;&#x6E90;&#x4E2D;&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x8D44;&#x6E90;&#xFF0C;&#x6253;&#x4E71;&#x8D44;&#x6E90;&#x987A;&#x5E8F;&#xFF0C;&#x5982;&#x4E0B;</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;colorAccent&quot;</span>&gt;</span>#FF4081<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;colorAccentBBBBB&quot;</span>&gt;</span>#FF4081<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;colorPrimary&quot;</span>&gt;</span>#3F51B5<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">color</span> <span class="attr">name</span>=<span class="string">&quot;colorPrimaryDark&quot;</span>&gt;</span>#303F9F<span class="tag">&lt;/<span class="name">color</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x5C06;&#x521A;&#x624D;&#x751F;&#x6210;&#x7684;public.txt&#x6587;&#x4EF6;&#x5907;&#x4EFD;&#x81F3;&#x5176;&#x4ED6;&#x76EE;&#x5F55;&#xFF0C;&#x5220;&#x9664;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x7684;public.txt&#x6587;&#x4EF6;&#xFF0C;&#x4FDD;&#x8BC1;&#x91CD;&#x65B0;&#x751F;&#x6210;&#x8BE5;&#x6587;&#x4EF6;&#xFF0C;&#x91CD;&#x65B0;&#x7F16;&#x8BD1;&#x8D44;&#x6E90;&#xFF0C;&#x6B64;&#x65F6;&#x751F;&#x6210;&#x7684;public.txt&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x8FD9;&#x56DB;&#x4E2A;&#x8D44;&#x6E90;&#x5BF9;&#x5E94;&#x7684;&#x5185;&#x5BB9;&#x4E3A;</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">io<span class="selector-class">.github</span><span class="selector-class">.lizhangqu</span><span class="selector-class">.aapt2</span>:<span class="attribute">color</span>/colorAccent = <span class="number">0</span>x7f040026</span><br><span class="line">io<span class="selector-class">.github</span><span class="selector-class">.lizhangqu</span><span class="selector-class">.aapt2</span>:<span class="attribute">color</span>/colorAccentBBBBB = <span class="number">0</span>x7f040027</span><br><span class="line">io<span class="selector-class">.github</span><span class="selector-class">.lizhangqu</span><span class="selector-class">.aapt2</span>:<span class="attribute">color</span>/colorPrimary = <span class="number">0</span>x7f040028</span><br><span class="line">io<span class="selector-class">.github</span><span class="selector-class">.lizhangqu</span><span class="selector-class">.aapt2</span>:<span class="attribute">color</span>/colorPrimaryDark = <span class="number">0</span>x7f040029</span><br></pre></td></tr></table></figure><p>app/build/intermediates/res/symbol-table-with-package/debug/package-aware-r.txt&#x6587;&#x4EF6;&#x4E2D;&#x5BF9;&#x5E94;&#x7684;&#x8D44;&#x6E90;id&#x4E3A;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">int</span> color colorAccent <span class="number">0x7f040026</span></span><br><span class="line"><span class="built_in">int</span> color colorAccentBBBBB <span class="number">0x7f040027</span></span><br><span class="line"><span class="built_in">int</span> color colorPrimary <span class="number">0x7f040028</span></span><br><span class="line"><span class="built_in">int</span> color colorPrimaryDark <span class="number">0x7f040029</span></span><br></pre></td></tr></table></figure><p>&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x5BF9;&#x7684;&#x4E0A;&#xFF0C;&#x53EA;&#x8981;&#x770B;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#xFF1B;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x7531;&#x4E8E;colorAccentBBBBB&#x7684;&#x63D2;&#x5165;&#xFF0C;colorPrimary&#x548C;colorPrimaryDark&#x90FD;&#x5411;&#x540E;&#x987A;&#x5EF6;&#x4E86;&#x4E00;&#x4F4D;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5728;&#x6CA1;&#x6709;&#x8D44;&#x6E90;&#x56FA;&#x5B9A;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5982;&#x679C;&#x589E;&#x5220;&#x6539;&#x7B49;&#x64CD;&#x4F5C;&#x53D1;&#x751F;&#xFF0C;&#x662F;&#x6709;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;&#x73B0;&#x6709;&#x8D44;&#x6E90;id&#x53D1;&#x751F;&#x53D8;&#x5316;&#x7684;&#x3002;</p><p>&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x5F00;&#x59CB;&#x9A8C;&#x8BC1;&#x2013;stable-ids&#x53C2;&#x6570;&#x7684;&#x6709;&#x6548;&#x6027;&#xFF0C;&#x5C06;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x7684;public.txt&#x6587;&#x4EF6;&#x5220;&#x9664;&#xFF0C;&#x5C06;&#x4E4B;&#x524D;&#x5907;&#x4EFD;&#x597D;&#x7684;public.txt&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x5230;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x91CD;&#x65B0;&#x7F16;&#x8BD1;&#x8D44;&#x6E90;&#x3002;&#x8FD9;&#x65F6;&#x5019;&#x7F16;&#x8BD1;&#x4EA7;&#x751F;&#x7684;&#x8D44;&#x6E90;id&#x6620;&#x5C04;&#x4E3A;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">int</span> color colorAccent <span class="number">0x7f040026</span></span><br><span class="line"><span class="built_in">int</span> color colorAccentBBBBB <span class="number">0x7f040057</span></span><br><span class="line"><span class="built_in">int</span> color colorPrimary <span class="number">0x7f040027</span></span><br><span class="line"><span class="built_in">int</span> color colorPrimaryDark <span class="number">0x7f040028</span></span><br></pre></td></tr></table></figure><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;colorAccent&#xFF0C;colorPrimary&#x548C;colorPrimaryDark&#x7684;&#x8D44;&#x6E90;id&#x5E76;&#x6CA1;&#x6709;&#x56E0;&#x4E3A;colorAccentBBBBB&#x7684;&#x63D2;&#x5165;&#x800C;&#x53D1;&#x751F;&#x53D8;&#x5316;&#xFF0C;&#x800C;&#x662F;&#x4FDD;&#x6301;&#x4E86;&#x539F;&#x6709;&#x7684;&#x8D44;&#x6E90;id&#xFF0C;&#x800C;&#x65B0;&#x589E;&#x7684;&#x8D44;&#x6E90;colorAccentBBBBB&#x5219;&#x662F;&#x91CD;&#x65B0;&#x5206;&#x914D;&#x4E86;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8D44;&#x6E90;id&#x3002;</p><p>&#x81F3;&#x6B64;&#xFF0C;&#x57FA;&#x672C;&#x53EF;&#x4EE5;&#x786E;&#x5B9A;&#x8BE5;&#x65B9;&#x6848;&#x662F;&#x53EF;&#x884C;&#x7684;&#xFF08;&#x4F46;&#x4E0D;&#x4FDD;&#x8BC1;&#x6709;&#x6CA1;&#x6709;&#x5751;&#xFF09;</p><h3 id="&#x9002;&#x914D;aapt&#x548C;aapt2"><a href="#&#x9002;&#x914D;aapt&#x548C;aapt2" class="headerlink" title="&#x9002;&#x914D;aapt&#x548C;aapt2"></a>&#x9002;&#x914D;aapt&#x548C;aapt2</h3><p>&#x56E0;&#x6B64;&#xFF0C;&#x9700;&#x8981;&#x8FDB;&#x884C;aapt&#x7684;&#x7248;&#x672C;&#x5224;&#x65AD;&#xFF0C;&#x9002;&#x914D;&#x4E0D;&#x540C;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x8FD9;&#x91CC;&#x6211;&#x5DF2;&#x7ECF;&#x628A;&#x4EE3;&#x7801;&#x5199;&#x597D;&#x4E86;&#xFF0C;&#x57FA;&#x672C;&#x4E0A;&#x5C31;&#x662F;&#x5BF9;&#x4E0A;&#x9762;&#x4E24;&#x6BB5;&#x4EE3;&#x7801;&#x7684;&#x7EC4;&#x5408;&#xFF0C;&#x5176;&#x4E2D;aapt&#x7248;&#x672C;&#x7684;&#x83B7;&#x53D6;&#x9700;&#x8981;&#x6355;&#x83B7;&#x4E00;&#x4E0B;&#x5F02;&#x5E38;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x5728;&#x4F4E;&#x7248;&#x672C;&#x4E2D;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x770B;&#x4EE3;&#x7801;&#xFF0C;&#x8FD9;&#x91CC;&#x4E0D;&#x518D;&#x8FC7;&#x591A;&#x89E3;&#x91CA;&#x4E86;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">apply plugin: PublicPlugin</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> PublicPlugin <span class="keyword">implements</span> Plugin&lt;<span class="keyword">Project</span>&gt; {</span><br><span class="line">    <span class="keyword">void</span> apply(<span class="keyword">Project</span> <span class="keyword">project</span>) {</span><br><span class="line">        <span class="keyword">project</span>.afterEvaluate {</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">project</span>.plugins.hasPlugin(<span class="string">&quot;com.android.application&quot;</span>)) {</span><br><span class="line">                <span class="keyword">def</span> android = <span class="keyword">project</span>.extensions.getByName(<span class="string">&quot;android&quot;</span>)</span><br><span class="line">                android.applicationVariants.all {<span class="keyword">def</span> variant -&gt;</span><br><span class="line">                    <span class="keyword">boolean</span> aapt2Enable = <span class="keyword">false</span></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">def</span> processResourcesTask = <span class="keyword">project</span>.tasks.getByName(<span class="string">&quot;process${variant.name.capitalize()}Resources&quot;</span>)</span><br><span class="line">                    <span class="keyword">if</span> (processResourcesTask) {</span><br><span class="line">                        <span class="keyword">try</span> {</span><br><span class="line">                            <span class="comment">//&#x5224;&#x65AD;aapt2&#x662F;&#x5426;&#x5F00;&#x542F;&#xFF0C;&#x4F4E;&#x7248;&#x672C;&#x4E0D;&#x5B58;&#x5728;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x6355;&#x83B7;&#x5F02;&#x5E38;</span></span><br><span class="line">                            aapt2Enable = processResourcesTask.isAapt2Enabled()</span><br><span class="line">                        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">                            <span class="keyword">project</span>.logger.error <span class="string">&quot;${e.getMessage()}&quot;</span></span><br><span class="line">                        }</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">def</span> aaptOptions = processResourcesTask.aaptOptions</span><br><span class="line">                        <span class="comment">//aapt2&#x5F00;&#x542F;&#x8D70;&#x6B64;&#x6D41;&#x7A0B;</span></span><br><span class="line">                        <span class="keyword">if</span> (aapt2Enable) {</span><br><span class="line">                            <span class="keyword">project</span>.logger.error <span class="string">&quot;aapt2 is enabled&quot;</span></span><br><span class="line">                            <span class="keyword">File</span> publicTxtFile = <span class="keyword">project</span>.rootProject.<span class="keyword">file</span>(<span class="string">&apos;public.txt&apos;</span>)</span><br><span class="line">                            <span class="comment">//public&#x6587;&#x4EF6;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x5E94;&#x7528;&#xFF0C;&#x4E0D;&#x5B58;&#x5728;&#x5219;&#x751F;&#x6210;</span></span><br><span class="line">                            <span class="keyword">if</span> (publicTxtFile.exists()) {</span><br><span class="line">                                <span class="keyword">project</span>.logger.error <span class="string">&quot;${publicTxtFile} exists, apply it.&quot;</span></span><br><span class="line">                                <span class="comment">//aapt2&#x6DFB;&#x52A0;--stable-ids&#x53C2;&#x6570;&#x5E94;&#x7528;</span></span><br><span class="line">                                aaptOptions.additionalParameters(<span class="string">&quot;--stable-ids&quot;</span>, <span class="string">&quot;${publicTxtFile}&quot;</span>)</span><br><span class="line">                            } <span class="keyword">else</span> {</span><br><span class="line">                                <span class="keyword">project</span>.logger.error <span class="string">&quot;${publicTxtFile} not exists, generate it.&quot;</span></span><br><span class="line">                                <span class="comment">//aapt2&#x6DFB;&#x52A0;--emit-ids&#x53C2;&#x6570;&#x751F;&#x6210;</span></span><br><span class="line">                                aaptOptions.additionalParameters(<span class="string">&quot;--emit-ids&quot;</span>, <span class="string">&quot;${publicTxtFile}&quot;</span>)</span><br><span class="line">                            }</span><br><span class="line">                        } <span class="keyword">else</span> {</span><br><span class="line">                            <span class="comment">//aapt2&#x7981;&#x7528;&#x8D70;&#x6B64;&#x6D41;&#x7A0B;</span></span><br><span class="line">                            <span class="keyword">project</span>.logger.error <span class="string">&quot;aapt2 is disabled&quot;</span></span><br><span class="line">                            <span class="keyword">File</span> publicXmlFile = <span class="keyword">project</span>.rootProject.<span class="keyword">file</span>(<span class="string">&apos;public.xml&apos;</span>)</span><br><span class="line">                            <span class="comment">//public&#x6587;&#x4EF6;&#x5B58;&#x5728;&#x5219;&#x5E94;&#x7528;&#xFF0C;&#x4E0D;&#x5B58;&#x5728;&#x5219;&#x751F;&#x6210;</span></span><br><span class="line">                            <span class="keyword">if</span> (publicXmlFile.exists()) {</span><br><span class="line">                                <span class="comment">//aapt&#x7684;&#x5E94;&#x7528;&#x9700;&#x8981;&#x5C06;&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x76EE;&#x5F55;</span></span><br><span class="line">                                <span class="comment">//aapt public.xml&#x6587;&#x4EF6;&#x7684;&#x5E94;&#x7528;&#x5E76;&#x4E0D;&#x662F;&#x53EA;&#x662F;&#x62F7;&#x8D1D;public.xml&#x6587;&#x4EF6;&#x90A3;&#x4E48;&#x7B80;&#x5355;&#xFF0C;&#x8FD8;&#x8981;&#x6839;&#x636E;&#x751F;&#x6210;&#x7684;public.xml&#x751F;&#x6210;ids.xml&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x5C06;ids.xml&#x4E2D;&#x4E0E;values.xml&#x4E2D;&#x91CD;&#x590D;&#x5B9A;&#x4E49;&#x7684;id&#x53BB;&#x9664;</span></span><br><span class="line">                                String mergeResourcesTaskName = variant.variantData.getScope().getMergeResourcesTask().name</span><br><span class="line">                                <span class="keyword">def</span> mergeResourcesTask = <span class="keyword">project</span>.tasks.getByName(mergeResourcesTaskName)</span><br><span class="line">                                <span class="keyword">if</span> (mergeResourcesTask) {</span><br><span class="line">                                    mergeResourcesTask.<span class="keyword">doLast</span> {</span><br><span class="line">                                        <span class="comment">//&#x62F7;&#x8D1D;public.xml&#x6587;&#x4EF6;</span></span><br><span class="line">                                        <span class="keyword">File</span> <span class="keyword">toDir</span> = <span class="keyword">new</span> <span class="keyword">File</span>(mergeResourcesTask.outputDir, <span class="string">&quot;values&quot;</span>)</span><br><span class="line">                                        <span class="keyword">project</span>.<span class="keyword">copy</span> {</span><br><span class="line">                                            <span class="keyword">project</span>.logger.error <span class="string">&quot;${variant.name}:copy from ${publicXmlFile.getAbsolutePath()} to ${toDir}/public.xml&quot;</span></span><br><span class="line">                                            <span class="keyword">from</span>(publicXmlFile.getParentFile()) {</span><br><span class="line">                                                <span class="keyword">include</span> <span class="string">&quot;public.xml&quot;</span></span><br><span class="line">                                                rename <span class="string">&quot;public.xml&quot;</span>, <span class="string">&quot;public.xml&quot;</span></span><br><span class="line">                                            }</span><br><span class="line">                                            <span class="keyword">into</span>(<span class="keyword">toDir</span>)</span><br><span class="line">                                        }</span><br><span class="line">                                        <span class="comment">//&#x751F;&#x6210;ids.xml&#x6587;&#x4EF6;</span></span><br><span class="line">                                        <span class="keyword">File</span> valuesFile = <span class="keyword">new</span> <span class="keyword">File</span>(<span class="keyword">toDir</span>, <span class="string">&quot;values.xml&quot;</span>)</span><br><span class="line">                                        <span class="keyword">File</span> idsFile = <span class="keyword">new</span> <span class="keyword">File</span>(<span class="keyword">toDir</span>, <span class="string">&quot;ids.xml&quot;</span>)</span><br><span class="line">                                        <span class="keyword">if</span> (valuesFile.exists() &amp;&amp; publicXmlFile.exists()) {</span><br><span class="line">                                            <span class="comment">//&#x8BB0;&#x5F55;&#x5728;values.xml&#x4E2D;&#x5B58;&#x5728;&#x7684;id&#x5B9A;&#x4E49;</span></span><br><span class="line">                                            <span class="keyword">def</span> valuesNodes = <span class="keyword">new</span> XmlParser().parse(valuesFile)</span><br><span class="line">                                            Set&lt;String&gt; existIdItems = <span class="keyword">new</span> HashSet&lt;String&gt;()</span><br><span class="line">                                            valuesNodes.<span class="keyword">each</span> {</span><br><span class="line">                                                <span class="keyword">if</span> (<span class="string">&quot;id&quot;</span>.equalsIgnoreCase(<span class="string">&quot;${it.@type}&quot;</span>)) {</span><br><span class="line">                                                    existIdItems.add(<span class="string">&quot;${it.@name}&quot;</span>)</span><br><span class="line">                                                }</span><br><span class="line">                                            }</span><br><span class="line">                                            GFileUtils.deleteQuietly(idsFile)</span><br><span class="line">                                            GFileUtils.touch(idsFile)</span><br><span class="line"></span><br><span class="line">                                            idsFile.<span class="keyword">append</span>(<span class="string">&quot;&lt;?xml version=\&quot;1.0\&quot; encoding=\&quot;utf-8\&quot;?&gt;&quot;</span>)</span><br><span class="line">                                            idsFile.<span class="keyword">append</span>(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">                                            idsFile.<span class="keyword">append</span>(<span class="string">&quot;&lt;resources&gt;&quot;</span>)</span><br><span class="line">                                            idsFile.<span class="keyword">append</span>(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">                                            <span class="keyword">def</span> publicXMLNodes = <span class="keyword">new</span> XmlParser().parse(publicXmlFile)</span><br><span class="line">                                            Pattern drawableGeneratePattern = Pattern.<span class="keyword">compile</span>(<span class="string">&apos;^(.*?_)([0-9]{0,})$&apos;</span>)</span><br><span class="line">                                            publicXMLNodes.<span class="keyword">each</span> {</span><br><span class="line">                                                <span class="comment">//&#x83B7;&#x53D6;public.xml&#x4E2D;&#x5B9A;&#x4E49;&#x7684;id&#x7C7B;&#x578B;item</span></span><br><span class="line">                                                <span class="keyword">if</span> (<span class="string">&quot;id&quot;</span>.equalsIgnoreCase(<span class="string">&quot;${it.@type}&quot;</span>)) {</span><br><span class="line">                                                    <span class="comment">//&#x5982;&#x679C;&#x5728;values.xml&#x4E2D;&#x6CA1;&#x6709;&#x5B9A;&#x4E49;&#xFF0C;&#x5219;&#x6DFB;&#x52A0;&#x5230;ids.xml&#x4E2D;</span></span><br><span class="line">                                                    <span class="comment">//&#x5982;&#x679C;&#x5DF2;&#x7ECF;&#x5728;values.xml&#x4E2D;&#x5B9A;&#x4E49;&#xFF0C;&#x5219;&#x5FFD;&#x7565;&#x5B83;</span></span><br><span class="line">                                                    <span class="keyword">if</span> (!existIdItems.contains(<span class="string">&quot;${it.@name}&quot;</span>)) {</span><br><span class="line">                                                        idsFile.<span class="keyword">append</span>(<span class="string">&quot;\t&lt;item type=\&quot;id\&quot; name=\&quot;${it.@name}\&quot; /&gt;\n&quot;</span>)</span><br><span class="line">                                                    } <span class="keyword">else</span> {</span><br><span class="line">                                                        <span class="keyword">project</span>.logger.error <span class="string">&quot;already exist id item ${it.@name}, ignore it&quot;</span></span><br><span class="line">                                                    }</span><br><span class="line">                                                } <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;drawable&quot;</span>.equalsIgnoreCase(<span class="string">&quot;${it.@type}&quot;</span>)) {</span><br><span class="line">                                                    <span class="comment">//&#x4EE5;&apos;_&#x6570;&#x5B57;&apos;&#x7ED3;&#x5C3E;&#x7684;drawable&#x8D44;&#x6E90;&#xFF0C;&#x6B64;&#x7C7B;&#x8D44;&#x6E90;&#x662F;aapt&#x7F16;&#x8BD1;&#x65F6;&#x751F;&#x6210;&#x7684;nested&#x8D44;&#x6E90;&#xFF0C;&#x5982;avd_hide_password_1, avd_hide_password_2</span></span><br><span class="line">                                                    <span class="comment">//&#x4F46;&#x662F;&#x53EF;&#x80FD;&#x4F1A;&#x6709;&#x5176;&#x4ED6;&#x8D44;&#x6E90;&#x63BA;&#x6742;&#xFF0C;&#x5982;abc_btn_check_to_on_mtrl_000, abc_btn_check_to_on_mtrl_015</span></span><br><span class="line">                                                    <span class="comment">//&#x4E3A;&#x4E86;&#x5C06;&#x6B64;&#x7C7B;&#x8D44;&#x6E90;&#x8FC7;&#x6EE4;&#x6389;&#xFF0C;&#x5C06;&#x6B63;&#x5219;&#x5339;&#x914D;&#x5230;&#x7684;&#x6570;&#x5B57;&#x8F6C;&#x6210;int&#xFF0C;&#x5BF9;&#x6BD4;&#x539F;&#x59CB;&#x6570;&#x5B57;&#x90E8;&#x5206;&#x5339;&#x914D;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x81F4;&#xFF0C;&#x5219;&#x662F;aapt&#x751F;&#x6210;</span></span><br><span class="line">                                                    <span class="comment">//&#x91CD;&#x8981;&#xFF1A;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x6B64;&#x7C7B;nested&#x8D44;&#x6E90;&#x751F;&#x6210;&#x987A;&#x5E8F;&#x53D1;&#x751F;&#x6539;&#x53D8;&#xFF0C;&#x5E94;&#x8BE5;&#x7981;&#x6B62;&#x4FEE;&#x6539;&#x6B64;&#x7C7B;&#x8D44;&#x6E90;</span></span><br><span class="line">                                                    Matcher matcher = drawableGeneratePattern.matcher(it.@name)</span><br><span class="line">                                                    <span class="keyword">if</span> (matcher.matches() &amp;&amp; matcher.groupCount() == <span class="number">2</span>) {</span><br><span class="line">                                                        String number = matcher.<span class="keyword">group</span>(<span class="number">2</span>)</span><br><span class="line">                                                        <span class="keyword">if</span> (number.equalsIgnoreCase(Integer.parseInt(number).toString())) {</span><br><span class="line">                                                            <span class="keyword">project</span>.logger.info <span class="string">&quot;[${PREFIX}] declared drawable resource ${it.@name} which is generated by aapt. like use &apos;&lt;aapt:attr name=\&quot;android:drawable\&quot;&gt;&apos;&quot;</span></span><br><span class="line">                                                            idsFile.<span class="keyword">append</span>(<span class="string">&quot;\t&lt;item type=\&quot;drawable\&quot; name=\&quot;${it.@name}\&quot; /&gt;\n&quot;</span>)</span><br><span class="line">                                                        }</span><br><span class="line">                                                    }</span><br><span class="line">                                                }</span><br><span class="line">                                            }</span><br><span class="line">                                            idsFile.<span class="keyword">append</span>(<span class="string">&quot;&lt;/resources&gt;&quot;</span>)</span><br><span class="line">                                        }</span><br><span class="line">                                    }</span><br><span class="line">                                }</span><br><span class="line">                            } <span class="keyword">else</span> {</span><br><span class="line">                                <span class="comment">//&#x4E0D;&#x5B58;&#x5728;&#x5219;&#x751F;&#x6210;</span></span><br><span class="line">                                <span class="keyword">project</span>.logger.error <span class="string">&quot;${publicXmlFile} not exists, generate it&quot;</span></span><br><span class="line">                                <span class="comment">//aapt &#x6DFB;&#x52A0;-P&#x53C2;&#x6570;&#x751F;&#x6210;</span></span><br><span class="line">                                aaptOptions.additionalParameters(<span class="string">&quot;-P&quot;</span>, <span class="string">&quot;${publicXmlFile}&quot;</span>)</span><br><span class="line">                            }</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="&#x53E6;&#x4E00;&#x79CD;&#x89E3;&#x51B3;&#x65B9;&#x5F0F;"><a href="#&#x53E6;&#x4E00;&#x79CD;&#x89E3;&#x51B3;&#x65B9;&#x5F0F;" class="headerlink" title="&#x53E6;&#x4E00;&#x79CD;&#x89E3;&#x51B3;&#x65B9;&#x5F0F;"></a>&#x53E6;&#x4E00;&#x79CD;&#x89E3;&#x51B3;&#x65B9;&#x5F0F;</h3><p>&#x5982;&#x679C;&#x9879;&#x76EE;&#x786E;&#x5B9A;&#x4F7F;&#x7528;&#x7684;&#x662F;aapt2&#xFF0C;&#x5E76;&#x4E14;&#x4E0D;&#x60F3;&#x901A;&#x8FC7;&#x7F16;&#x5199;&#x63D2;&#x4EF6;&#x89E3;&#x51B3;&#xFF0C;&#x8FD9;&#x91CC;&#x63D0;&#x4F9B;&#x4E00;&#x79CD;&#x66F4;&#x52A0;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5C31;&#x662F;&#x76F4;&#x63A5;&#x5229;&#x7528;aaptOptions&#x53C2;&#x6570;&#x8FDB;&#x884C;&#x6307;&#x5B9A;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x4E0D;&#x597D;&#x505A;aapt&#x548C;aapt2&#x4E4B;&#x95F4;&#x7684;&#x65E0;&#x7F1D;&#x9002;&#x914D;&#xFF0C;&#x53EA;&#x9002;&#x5408;aapt2&#xFF0C;&#x53C2;&#x8003;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">android</span> {</span><br><span class="line">    <span class="section">aaptOptions</span> {</span><br><span class="line">        <span class="attribute">File</span> publicTxtFile = project.rootProject.file(<span class="string">&apos;public.txt&apos;</span>)</span><br><span class="line">        if (publicTxtFile.exists()) {</span><br><span class="line">            <span class="attribute">additionalParameters</span> <span class="string">&quot;--stable-ids&quot;</span>, <span class="string">&quot;<span class="variable">${project.rootProject.file(&apos;public.txt&apos;).absolutePath}</span>&quot;</span></span><br><span class="line">        } else {</span><br><span class="line">            <span class="attribute">additionalParameters</span> <span class="string">&quot;--emit-ids&quot;</span>, <span class="string">&quot;<span class="variable">${project.rootProject.file(&apos;public.txt&apos;).absolutePath}</span>&quot;</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="public-xml&#x5230;public-txt&#x7684;&#x8F6C;&#x6362;"><a href="#public-xml&#x5230;public-txt&#x7684;&#x8F6C;&#x6362;" class="headerlink" title="public.xml&#x5230;public.txt&#x7684;&#x8F6C;&#x6362;"></a>public.xml&#x5230;public.txt&#x7684;&#x8F6C;&#x6362;</h3><p>&#x5982;&#x679C;&#x4E4B;&#x524D;&#x662F;&#x7528;aapt&#x5907;&#x4EFD;&#x4E0B;&#x6765;&#x7684;public.xml&#xFF0C;&#x5982;&#x679C;&#x73B0;&#x5728;&#x4F7F;&#x7528;&#x4E86;aapt2&#xFF0C;&#x5219;&#x9700;&#x8981;&#x5C06;&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x8F6C;&#x6362;&#xFF0C;&#x8F6C;&#x6362;&#x65B9;&#x5F0F;&#x4E5F;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5982;&#x4E0B;</p><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">task convertPublicXmlToPublicTxt() {</span><br><span class="line">    doLast {</span><br><span class="line">        <span class="comment">//&#x6E90;public.xml</span></span><br><span class="line">        File publicXmlFile = project.rootProject.file(<span class="string">&apos;backup/public.xml&apos;</span>)</span><br><span class="line">        <span class="comment">//&#x76EE;&#x6807;public.txt</span></span><br><span class="line">        File publicTxtFile = project.rootProject.file(<span class="string">&apos;backup/generate_public.txt&apos;</span>)</span><br><span class="line">        <span class="comment">//&#x5305;&#x540D;</span></span><br><span class="line">        <span class="built_in">String</span> applicationId = <span class="string">&quot;io.github.lizhangqu.aapt2&quot;</span></span><br><span class="line">        GFileUtils.deleteQuietly(publicTxtFile)</span><br><span class="line">        GFileUtils.touch(publicTxtFile)</span><br><span class="line">        def nodes = <span class="keyword">new</span> XmlParser().parse(publicXmlFile)</span><br><span class="line">        <span class="built_in">Pattern</span> drawableGeneratePattern = <span class="built_in">Pattern</span>.compile(<span class="string">&apos;^(.*?_)([0-9]{0,})$&apos;</span>)</span><br><span class="line">        nodes.each {</span><br><span class="line">            project.logger.error <span class="string">&quot;<span class="subst">${it}</span>&quot;</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;drawable&quot;</span>.equalsIgnoreCase(<span class="string">&quot;<span class="subst">${it.@type}</span>&quot;</span>)) {</span><br><span class="line">                <span class="comment">//&#x4EE5;&apos;_&#x6570;&#x5B57;&apos;&#x7ED3;&#x5C3E;&#x7684;drawable&#x8D44;&#x6E90;&#xFF0C;&#x6B64;&#x7C7B;&#x8D44;&#x6E90;&#x662F;aapt&#x7F16;&#x8BD1;&#x65F6;&#x751F;&#x6210;&#x7684;nested&#x8D44;&#x6E90;&#xFF0C;&#x5982;avd_hide_password_1, avd_hide_password_2</span></span><br><span class="line">                <span class="comment">//&#x4F46;&#x662F;&#x53EF;&#x80FD;&#x4F1A;&#x6709;&#x5176;&#x4ED6;&#x8D44;&#x6E90;&#x63BA;&#x6742;&#xFF0C;&#x5982;abc_btn_check_to_on_mtrl_000, abc_btn_check_to_on_mtrl_015</span></span><br><span class="line">                <span class="comment">//&#x4E3A;&#x4E86;&#x5C06;&#x6B64;&#x7C7B;&#x8D44;&#x6E90;&#x8FC7;&#x6EE4;&#x6389;&#xFF0C;&#x5C06;&#x6B63;&#x5219;&#x5339;&#x914D;&#x5230;&#x7684;&#x6570;&#x5B57;&#x8F6C;&#x6210;int&#xFF0C;&#x5BF9;&#x6BD4;&#x539F;&#x59CB;&#x6570;&#x5B57;&#x90E8;&#x5206;&#x5339;&#x914D;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x81F4;&#xFF0C;&#x5219;&#x662F;aapt&#x751F;&#x6210;</span></span><br><span class="line">                <span class="comment">//&#x91CD;&#x8981;&#xFF1A;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x6B64;&#x7C7B;nested&#x8D44;&#x6E90;&#x751F;&#x6210;&#x987A;&#x5E8F;&#x53D1;&#x751F;&#x6539;&#x53D8;&#xFF0C;&#x5E94;&#x8BE5;&#x7981;&#x6B62;&#x4FEE;&#x6539;&#x6B64;&#x7C7B;&#x8D44;&#x6E90;</span></span><br><span class="line">                <span class="comment">//aapt&#x751F;&#x6210;&#x7684;&#x662F;&#x4EE5;&#x4E0B;&#x8868;1&#x5F00;&#x59CB;&#xFF0C;aapt2&#x662F;&#x4EE5;&#x4E0B;&#x6807;0&#x5F00;&#x59CB;&#xFF0C;&#x56E0;&#x6B64;&#x8F6C;&#x6362;&#x7684;&#x8FC7;&#x7A0B;&#x9700;&#x8981;-1</span></span><br><span class="line">                Matcher matcher = drawableGeneratePattern.matcher(it.<span class="meta">@name</span>)</span><br><span class="line">                <span class="keyword">if</span> (matcher.matches() &amp;&amp; matcher.groupCount() == <span class="number">2</span>) {</span><br><span class="line">                    <span class="built_in">String</span> number = matcher.group(<span class="number">2</span>)</span><br><span class="line">                    <span class="keyword">if</span> (number.equalsIgnoreCase(Integer.parseInt(number).toString())) {</span><br><span class="line">                        <span class="built_in">String</span> prefixName = matcher.group(<span class="number">1</span>)</span><br><span class="line">                        publicTxtFile.append(<span class="string">&quot;<span class="subst">${applicationId}</span>:<span class="subst">${it.@type}</span>/\$<span class="subst">${prefixName}</span>_<span class="subst">${Integer.parseInt(number) - <span class="number">1</span>}</span> = <span class="subst">${it.@id}</span>\n&quot;</span>)</span><br><span class="line">                        <span class="keyword">return</span></span><br><span class="line">                    } </span><br><span class="line">                } </span><br><span class="line">            } </span><br><span class="line"></span><br><span class="line">            publicTxtFile.append(<span class="string">&quot;<span class="subst">${applicationId}</span>:<span class="subst">${it.@type}</span>/<span class="subst">${it.@name}</span> = <span class="subst">${it.@id}</span>\n&quot;</span>)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6267;&#x884C; gradle convertPublicXmlToPublicTxt&#x5373;&#x53EF;&#x5B8C;&#x6210;&#x8F6C;&#x6362;&#x3002;</p><p>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x8FD9;&#x79CD;&#x8F6C;&#x6362;&#x65B9;&#x5F0F;&#xFF0C;&#x7531;&#x4E8E;&#x539F;&#x5148;aapt&#x5BFC;&#x51FA;&#x7684;public.xml&#x4E2D;&#x6CA1;&#x6709;styleable&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x6240;&#x4EE5;&#x8F6C;&#x6362;&#x540E;&#x7684;public.txt&#x4E2D;&#x4E5F;&#x6CA1;&#x6709;styleable&#xFF0C;&#x5373;&#x8F6C;&#x6362;&#x540E;&#x7684;&#x6570;&#x636E;&#x662F;aapt2&#x5BFC;&#x51FA;&#x7684;&#x6570;&#x636E;&#x7684;&#x5B50;&#x96C6;&#xFF0C;&#x800C;aapt2&#x751F;&#x6210;&#x7684;public.txt&#x662F;&#x5177;&#x6709;styleable&#x7C7B;&#x578B;&#x7684;id&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x5E94;&#x7528;&#x8FC7;&#x7A0B;&#x4E2D;&#x5E76;&#x6CA1;&#x6709;&#x53D1;&#x73B0;&#x4EC0;&#x4E48;&#x5927;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x56E0;&#x6B64;&#x51E0;&#x4E4E;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#x4E0D;&#x8BA1;&#x3002;&#x5982;&#x679C;&#x4F60;&#x53D1;&#x73B0;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x53EF;&#x4EE5;&#x53CA;&#x65F6;&#x8054;&#x7CFB;&#x6211;&#x3002;</p><h3 id="&#x610F;&#x5916;&#x7684;&#x6536;&#x83B7;aapt2&#x8D44;&#x6E90;&#x5206;&#x533A;"><a href="#&#x610F;&#x5916;&#x7684;&#x6536;&#x83B7;aapt2&#x8D44;&#x6E90;&#x5206;&#x533A;" class="headerlink" title="&#x610F;&#x5916;&#x7684;&#x6536;&#x83B7;aapt2&#x8D44;&#x6E90;&#x5206;&#x533A;"></a>&#x610F;&#x5916;&#x7684;&#x6536;&#x83B7;aapt2&#x8D44;&#x6E90;&#x5206;&#x533A;</h3><p>&#x5728;&#x5BFB;&#x627E;&#x89E3;&#x51B3;aapt2&#x8D44;&#x6E90;id&#x56FA;&#x5B9A;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x610F;&#x5916;&#x53D1;&#x73B0;aapt2&#x81EA;&#x5E26;&#x4E86;&#x8D44;&#x6E90;PP&#x6BB5;&#x5206;&#x533A;&#x529F;&#x80FD;&#x3002;&#x5C31;&#x662F;&#x901A;&#x8FC7;&#x2013;package-id&#x53C2;&#x6570;&#xFF0C;&#x6307;&#x5B9A;PP&#x6BB5;&#x5206;&#x533A;&#xFF0C;&#x4F46;&#x662F;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x8FD9;&#x4E2A;&#x503C;&#x5FC5;&#x987B;&#x5927;&#x4E8E;0x7f&#xFF0C;&#x7ECF;&#x8FC7;&#x6D4B;&#x8BD5;&#xFF0C;&#x5927;&#x4E8E;0x7f&#x7684;PP&#x6BB5;&#x5206;&#x533A;&#x5728;Android7.0&#x4EE5;&#x4E0B;&#x662F;&#x65E0;&#x6CD5;&#x8BC6;&#x522B;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x5B89;&#x88C5;&#x4F46;&#x662F;&#x542F;&#x52A8;&#x4F1A;&#x5D29;&#x6E83;&#x3002;&#x56E0;&#x6B64;&#x901A;&#x8FC7;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5206;&#x533A;&#x751F;&#x6210;&#x7684;apk&#x6587;&#x4EF6;&#xFF0C;&#x53EA;&#x80FD;&#x5B89;&#x88C5;&#x5728;Android7.0&#x4EE5;&#x4E0A;&#x7684;&#x7CFB;&#x7EDF;&#xFF0C;&#x6BD4;&#x8F83;&#x9E21;&#x808B;&#x3002;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">android</span> {</span><br><span class="line">    <span class="section">aaptOptions</span> {</span><br><span class="line">        <span class="attribute">additionalParameters</span> <span class="string">&quot;--package-id&quot;</span>, <span class="string">&quot;0x80&quot;</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6B64;&#x65F6;&#x751F;&#x6210;&#x7684;apk&#x7684;&#x8D44;&#x6E90;PP&#x6BB5;&#x90FD;&#x662F;0x80&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;app/build/intermediates/res/symbol-table-with-package/debug/package-aware-r.txt&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x9A8C;&#x8BC1;&#x3002;</p><h3 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h3><p>&#x5F53;&#x4E0A;&#x5E1D;&#x4E3A;&#x4F60;&#x5173;&#x4E0A;&#x4E00;&#x6247;&#x95E8;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD8;&#x4F1A;&#x7528;&#x95E8;&#x5939;&#x4F60;&#x7684;&#x8111;&#x888B;&#xFF08;&#x5F00;&#x4E2A;&#x73A9;&#x7B11;&#xFF09;&#xFF0C;&#x867D;&#x7136;public.xml&#x5728;aapt2&#x4E2D;&#x65E0;&#x6CD5;&#x7528;&#x4E86;&#xFF0C;&#x4F46;&#x662F;google&#x5728;aapt2&#x4E2D;&#x63D0;&#x4F9B;&#x7ED9;&#x6211;&#x4EEC;&#x7684;&#x2013;stable-ids&#x548C;&#x2013;emit-ids&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x4E0D;&#x89C1;&#x5F97;&#x90A3;&#x4E48;&#x4E0D;&#x597D;&#x7528;&#xFF0C;&#x751A;&#x81F3;&#x6BD4;aapt&#x7684;public.xml&#x8FD8;&#x8981;&#x597D;&#x7528;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x751F;&#x6210;&#x548C;&#x5E94;&#x7528;&#x5C31;&#x597D;&#x4E86;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x4E2D;&#x95F4;&#x7684;&#x5904;&#x7406;&#x8FC7;&#x7A0B;&#x3002;&#x7B80;&#x76F4;&#x5B8C;&#x7F8E;&#xFF01;&#x4F46;&#x662F;&#x8BE5;&#x65B9;&#x6848;&#x8FD8;&#x6CA1;&#x6709;&#x7528;&#x8DB3;&#x591F;&#x591A;&#x7684;case&#x8FDB;&#x884C;&#x9A8C;&#x8BC1;&#xFF0C;&#x4E0D;&#x4EE3;&#x8868;&#x6CA1;&#x6709;&#x5751;&#xFF0C;&#x51FA;&#x4E86;&#x5751;&#xFF0C;&#x4E0D;&#x8D1F;&#x8D23;&#xFF01;</p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>aapt2</tag>
        <tag>资源id固定</tag>
      </tags>
  </entry>
  <entry>
    <title>Android FileChannel 的坑</title>
    <url>/2017/11/06/Android-FileChannel%E7%9A%84%E5%9D%91/</url>
    <content><![CDATA[<p>&#x4E3A;&#x4E86;&#x5077;&#x61D2;&#xFF0C;&#x4F7F;&#x7528;&#x4E86;nio&#x4E2D;&#x7684;FileChannel&#x8FDB;&#x884C;&#x6D41;&#x7684;&#x8BFB;&#x53D6;&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">long transferSize</span> = toChannel.transferFrom(fromChannel, 0, Long.MAX_VALUE);</span><br></pre></td></tr></table></figure><a id="more"></a><p>&#x89E3;&#x91CA;&#x4E00;&#x4E0B;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD9;&#x91CC;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x7528;Long.MAX_VALUE&#xFF0C;&#x56E0;&#x4E3A;&#x4EE3;&#x7801;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#xFF0C;&#x8FD9;&#x4E2A;&#x503C;&#x5177;&#x5907;&#x4E0D;&#x786E;&#x5B9A;&#x6027;&#xFF0C;&#x81EA;&#x5DF1;&#x5F97;&#x5230;&#x7684;&#x503C;&#x53EF;&#x80FD;&#x662F;-1&#xFF0C;&#x4E5F;&#x53EF;&#x80FD;&#x662F;&#x6B63;&#x786E;&#x7684;&#x503C;&#xFF0C;&#x4E3A;&#x4E86;&#x7B80;&#x5355;&#x8D77;&#x89C1;&#xFF0C;&#x4F20;&#x9012;&#x4E00;&#x4E2A;&#x6700;&#x5927;&#x503C;&#x8FDB;&#x53BB;&#xFF0C;transferFrom&#x5185;&#x90E8;&#x4F1A;&#x6709;&#x4E00;&#x4E2A;Math.min&#x64CD;&#x4F5C;&#xFF08;7.0&#x4EE5;&#x4E0A;&#x7684;&#x4EE3;&#x7801;&#xFF09;&#xFF0C;&#x53D6;&#x8FD9;&#x4E2A;&#x503C;&#x548C;&#x771F;&#x6B63;&#x7684;&#x5927;&#x5C0F;&#x4E2D;&#x5C0F;&#x7684;&#x90A3;&#x4E2A;&#x3002;</p><p>&#x5199;&#x4E2A;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x6D4B;&#x4E00;&#x4E0B;&#xFF0C;&#x5B8C;&#x7F8E;&#xFF0C;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x95EE;&#x9898;&#x3002;</p><p>&#x67D0;&#x4E00;&#x5929;&#xFF0C;&#x540C;&#x4E8B;&#x8DD1;&#x8FC7;&#x6765;&#x8BF4;&#x8FD9;&#x6BB5;&#x8BFB;&#x53D6;&#x903B;&#x8F91;&#x6709;&#x95EE;&#x9898;&#xFF0C;&#x62A5;&#x4E86;&#x4E00;&#x4E2A;&#x5F02;&#x5E38;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">java.lang.IllegalArgumentException: <span class="attribute">position</span>=0 <span class="attribute">count</span>=9223372036854775807</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x6211;&#x53C8;&#x6D4B;&#x4E86;&#x4E0B;&#xFF0C;&#x5728;&#x81EA;&#x5DF1;&#x7684;&#x624B;&#x673A;&#x4E0A;&#x8DD1;&#x4E00;&#x4E0B;&#xFF0C;&#x6CA1;&#x95EE;&#x9898;&#xFF0C;&#x518D;&#x5728;pc&#x4E0A;&#x8DD1;&#x4E00;&#x4E0B;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#xFF0C;&#x4E5F;&#x6CA1;&#x95EE;&#x9898;&#x3002;&#x4F46;&#x662F;&#x540C;&#x4E8B;&#x90A3;&#x8FB9;&#x662F;&#x6709;&#x95EE;&#x9898;&#x7684;&#xFF0C;&#x4E8E;&#x662F;&#x6000;&#x7591;&#x548C;&#x7CFB;&#x7EDF;&#x7248;&#x672C;&#x6709;&#x5173;&#x7CFB;&#xFF0C;&#x4ED4;&#x7EC6;&#x6392;&#x67E5;&#x4E86;&#x4E00;&#x4E0B;&#xFF0C;&#x786E;&#x5B9E;&#x662F;&#x8FD9;&#x6837;&#xFF0C;Android 7.0&#x4EE5;&#x4E0A;&#x6CA1;&#x95EE;&#x9898;&#xFF0C;Android 7.0&#x4EE5;&#x4E0B;&#x5168;&#x90E8;&#x9635;&#x4EA1;&#x3002;</p><p>&#x7FFB;&#x4E0B;AOSP&#x7684;&#x4EE3;&#x7801;</p><ul><li><a href="https://android.googlesource.com/platform/libcore/+/android-cts-6.0_r24/luni/src/main/java/java/nio/FileChannelImpl.java" target="_blank" rel="noopener">Android 6.0&#x7684;&#x5B9E;&#x73B0;</a></li><li><p><a href="https://android.googlesource.com/platform/libcore/+/android-cts-7.0_r15/ojluni/src/main/java/sun/nio/ch/FileChannelImpl.java" target="_blank" rel="noopener">Android 7.0&#x7684;&#x5B9E;&#x73B0;</a></p><p>&#x90A3;&#x4E48;&#x5B9E;&#x73B0;&#x6709;&#x4EC0;&#x4E48;&#x5DEE;&#x5F02;&#x5462;&#xFF0C;&#x5148;&#x770B;7.0&#x4EE5;&#x4E0B;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x8FD9;&#x91CC;&#x4EE5;6.0&#x4E3A;&#x4F8B;</p><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="keyword">long</span> transferFrom(ReadableByteChannel src, <span class="keyword">long</span> <span class="built_in">position</span>, <span class="keyword">long</span> count) throws IOException {</span><br><span class="line">    checkOpen();</span><br><span class="line">    <span class="built_in">if</span> (!src.isOpen()) {</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ClosedChannelException();</span><br><span class="line">    }</span><br><span class="line">    checkWritable();</span><br><span class="line">    <span class="built_in">if</span> (<span class="built_in">position</span> &lt; <span class="number">0</span> || count &lt; <span class="number">0</span> || count &gt; Integer.MAX_VALUE) {</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;position=&quot;</span> + <span class="built_in">position</span> + <span class="string">&quot; count=&quot;</span> + count);</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">if</span> (<span class="built_in">position</span> &gt; <span class="built_in">size</span>()) {</span><br><span class="line">        <span class="built_in">return</span> <span class="number">0</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// Although sendfile(2) originally supported writing to a regular file.</span></span><br><span class="line">    <span class="comment">// In Linux 2.6 and later, it only supports writing to sockets.</span></span><br><span class="line">    <span class="comment">// If our source is a regular file, mmap(2) rather than reading.</span></span><br><span class="line">    <span class="comment">// Callers should only be using transferFrom for large transfers,</span></span><br><span class="line">    <span class="comment">// so the mmap(2) overhead isn&apos;t a concern.</span></span><br><span class="line">    <span class="built_in">if</span> (src instanceof FileChannel) {</span><br><span class="line">        FileChannel fileSrc = (FileChannel) src;</span><br><span class="line">        <span class="keyword">long</span> <span class="built_in">size</span> = fileSrc.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">long</span> filePosition = fileSrc.<span class="built_in">position</span>();</span><br><span class="line">        count = Math.<span class="built_in">min</span>(count, <span class="built_in">size</span> - filePosition);</span><br><span class="line">        ByteBuffer <span class="built_in">buffer</span> = fileSrc.<span class="built_in">map</span>(MapMode.READ_ONLY, filePosition, count);</span><br><span class="line">        <span class="built_in">try</span> {</span><br><span class="line">            fileSrc.<span class="built_in">position</span>(filePosition + count);</span><br><span class="line">            <span class="built_in">return</span> <span class="built_in">write</span>(<span class="built_in">buffer</span>, <span class="built_in">position</span>);</span><br><span class="line">        } finally {</span><br><span class="line">            NioUtils.freeDirectBuffer(<span class="built_in">buffer</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">// For non-file channels, all we can do is read and write via userspace.</span></span><br><span class="line">    ByteBuffer <span class="built_in">buffer</span> = ByteBuffer.allocate((<span class="keyword">int</span>) count);</span><br><span class="line">    src.<span class="built_in">read</span>(<span class="built_in">buffer</span>);</span><br><span class="line">    <span class="built_in">buffer</span>.flip();</span><br><span class="line">    <span class="built_in">return</span> <span class="built_in">write</span>(<span class="built_in">buffer</span>, <span class="built_in">position</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></li></ul><p>&#x64E6;&#xFF0C;&#x5165;&#x53C2;count&#x662F;Long&#x7C7B;&#x578B;&#xFF0C;&#x7ADF;&#x7136;&#x6821;&#x9A8C;&#x7684;&#x65F6;&#x5019;&#x7528;int&#x7684;&#x6700;&#x5927;&#x503C;&#x53BB;&#x6821;&#x9A8C;&#xFF0C;&#x5143;&#x51F6;&#x5C31;&#x5728;&#x8FD9;&#x91CC;&#x4E86;</p><figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">if</span> (<span class="built_in">position</span> &lt; <span class="number">0</span> || <span class="built_in">count</span> &lt; <span class="number">0</span> || <span class="built_in">count</span> &gt; Integer.MAX_VALUE) {</span><br><span class="line">    <span class="keyword">throw</span> new IllegalArgumentException(<span class="string">&quot;position=&quot;</span> + <span class="built_in">position</span> + <span class="string">&quot; count=&quot;</span> + <span class="built_in">count</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x90A3;&#x4E48;&#x770B;&#x770B;7.0&#x4EE5;&#x4E0A;&#x4E3A;&#x4EC0;&#x4E48;&#x6CA1;&#x6709;&#x62A5;&#x9519;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">long</span> transferFrom(ReadableByteChannel src,</span><br><span class="line">                         <span class="keyword">long</span> position, <span class="keyword">long</span> <span class="keyword">count</span>)</span><br><span class="line">    <span class="keyword">throws</span> IOException</span><br><span class="line">{</span><br><span class="line">    ensureOpen();</span><br><span class="line">    <span class="keyword">if</span> (!src.isOpen())</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ClosedChannelException();</span><br><span class="line">    <span class="keyword">if</span> (!writable)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> NonWritableChannelException();</span><br><span class="line">    <span class="keyword">if</span> ((position &lt; <span class="number">0</span>) || (<span class="keyword">count</span> &lt; <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException();</span><br><span class="line">    <span class="keyword">if</span> (position &gt; <span class="keyword">size</span>())</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (src <span class="keyword">instanceof</span> FileChannelImpl)</span><br><span class="line">       <span class="keyword">return</span> transferFromFileChannel((FileChannelImpl)src,</span><br><span class="line">                                      position, <span class="keyword">count</span>);</span><br><span class="line">    <span class="keyword">return</span> transferFromArbitraryChannel(src, position, <span class="keyword">count</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6CA1;&#x6BDB;&#x75C5;&#xFF0C;&#x6CA1;&#x6709;&#x5BF9;count&#x7684;&#x6700;&#x5927;&#x503C;&#x8FDB;&#x884C;&#x6821;&#x9A8C;&#xFF0C;&#x81EA;&#x7136;&#x4E0D;&#x4F1A;&#x629B;&#x5F02;&#x5E38;&#x3002;</p><p>&#x90A3;&#x4E48;PC&#x4E0A;&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E3A;&#x4EC0;&#x4E48;&#x6CA1;&#x6709;&#x62A5;&#x9519;&#x5462;&#xFF0C;&#x56E0;&#x4E3A;&#x81EA;&#x5DF1;&#x7535;&#x8111;&#x4E0A;&#x7684;JDK&#x662F;1.8&#x7684;&#x7248;&#x672C;&#xFF0C;PC&#x4E0A;&#x7684;&#x5B9E;&#x73B0;&#x548C;Android 7.0&#x7684;&#x5B9E;&#x73B0;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x90FD;&#x662F;&#x57FA;&#x4E8E;Java8&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x81EA;&#x7136;&#x4E5F;&#x6D4B;&#x4E0D;&#x51FA;&#x95EE;&#x9898;&#x3002;</p><p>&#x6700;&#x540E;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x600E;&#x4E48;&#x89E3;&#x51B3;&#x5462;&#xFF0C;&#x4E0D;&#x80FD;&#x5077;&#x61D2;&#xFF0C;&#x6539;&#x6210;buffer&#x8BFB;&#x53D6;</p><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">ByteBuffer <span class="built_in">buffer</span> = ByteBuffer.allocate(<span class="number">4096</span>);</span><br><span class="line"><span class="built_in">while</span> (fromChannel.<span class="built_in">read</span>(<span class="built_in">buffer</span>) != <span class="number">-1</span>) {</span><br><span class="line">    <span class="built_in">buffer</span>.flip();</span><br><span class="line">    transferSize += toChannel.<span class="built_in">write</span>(<span class="built_in">buffer</span>);</span><br><span class="line">    <span class="built_in">buffer</span>.<span class="built_in">clear</span>();</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD8;&#x6709;&#x4E00;&#x79CD;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#x4F20;&#x9012;&#x5177;&#x4F53;&#x7684;&#x5927;&#x5C0F;&#x8FDB;&#x53BB;&#xFF0C;&#x524D;&#x63D0;&#x662F;&#x4F60;&#x77E5;&#x9053;&#x5177;&#x4F53;&#x7684;&#x5927;&#x5C0F;</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">long transferSize</span> = toChannel.transferFrom(fromChannel, 0, &#x5177;&#x4F53;&#x7684;&#x5927;&#x5C0F;);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>FileChannel</tag>
      </tags>
  </entry>
  <entry>
    <title>aapt2 资源 compile 过程</title>
    <url>/2017/10/31/aapt2%E8%B5%84%E6%BA%90compile%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>&#x672C;&#x6587;&#x57FA;&#x4E8E;AOSP Android 8.1&#x5206;&#x6790;&#xFF0C;Android 9.0 &#x8D44;&#x6E90;proto&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;&#x3002;</p><p>&#x4ECE;Android Studio 3.0&#x5F00;&#x59CB;&#xFF0C;google&#x9ED8;&#x8BA4;&#x5F00;&#x542F;&#x4E86;aapt2&#x4F5C;&#x4E3A;&#x8D44;&#x6E90;&#x7F16;&#x8BD1;&#x7684;&#x7F16;&#x8BD1;&#x5668;&#xFF0C;aapt2&#x7684;&#x51FA;&#x73B0;&#xFF0C;&#x4E3A;&#x8D44;&#x6E90;&#x7684;&#x589E;&#x91CF;&#x7F16;&#x8BD1;&#x63D0;&#x4F9B;&#x4E86;&#x652F;&#x6301;&#x3002;&#x5F53;&#x7136;&#x4F7F;&#x7528;&#x8FC7;&#x7A0B;&#x4E2D;&#x4E5F;&#x4F1A;&#x9047;&#x5230;&#x4E00;&#x4E9B;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5728;<strong>gradle.properties</strong>&#x4E2D;&#x914D;&#x7F6E;<strong>android.enableAapt2=false</strong>&#x6765;&#x5173;&#x95ED;aapt2&#x3002;</p><a id="more"></a><h3 id="&#x4F7F;&#x7528;&#x65B9;&#x5F0F;"><a href="#&#x4F7F;&#x7528;&#x65B9;&#x5F0F;" class="headerlink" title="&#x4F7F;&#x7528;&#x65B9;&#x5F0F;"></a>&#x4F7F;&#x7528;&#x65B9;&#x5F0F;</h3><p>aapt2&#x5C06;&#x539F;&#x5148;&#x7684;&#x8D44;&#x6E90;&#x7F16;&#x8BD1;&#x6253;&#x5305;&#x8FC7;&#x7A0B;&#x62C6;&#x5206;&#x6210;&#x4E86;&#x4E24;&#x90E8;&#x5206;&#xFF0C;&#x5373;&#x7F16;&#x8BD1;&#x548C;&#x94FE;&#x63A5;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x80FD;&#x5F88;&#x597D;&#x7684;&#x63D0;&#x5347;&#x8D44;&#x6E90;&#x7684;&#x7F16;&#x8BD1;&#x6027;&#x80FD;&#xFF0C;&#x6BD4;&#x5982;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x53D1;&#x9001;&#x6539;&#x53D8;&#x65F6;&#xFF0C;&#x4F60;&#x53EA;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x7F16;&#x8BD1;&#x6539;&#x53D8;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x5176;&#x4E0E;&#x5176;&#x4ED6;&#x672A;&#x6539;&#x53D8;&#x7684;&#x8D44;&#x6E90;&#x8FDB;&#x884C;&#x94FE;&#x63A5;&#x5373;&#x53EF;&#x3002;&#x800C;&#x4E4B;&#x524D;&#x7684;aapt&#x662F;&#x5C06;&#x6240;&#x6709;&#x8D44;&#x6E90;&#x8FDB;&#x884C;merge&#xFF0C;merge&#x5B8C;&#x540E;&#x5C06;&#x6240;&#x6709;&#x8D44;&#x6E90;&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#xFF0C;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;<strong>&#x8D44;&#x6E90;ap_</strong>&#x6587;&#x4EF6;&#xFF0C;&#x8BE5;&#x6587;&#x4EF6;&#x662F;&#x4E00;&#x4E2A;&#x538B;&#x7F29;&#x5305;&#xFF0C;&#x8FD9;&#x6837;&#x5E26;&#x6765;&#x7684;&#x540E;&#x679C;&#x5C31;&#x662F;&#x5373;&#x4F7F;&#x53EA;&#x6539;&#x53D8;&#x4E86;&#x4E00;&#x4E2A;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#xFF0C;&#x4E5F;&#x8981;&#x8FDB;&#x884C;&#x5168;&#x91CF;&#x7F16;&#x8BD1;&#x3002;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x4E3B;&#x8981;&#x8BB2;&#x4E00;&#x4E0B;aapt2&#x7684;compile&#x7684;&#x6D41;&#x7A0B;&#xFF0C;link&#x7684;&#x6D41;&#x7A0B;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#xFF0C;&#x540E;&#x7EED;&#x8BB2;&#x89E3;&#x3002;</p><p>&#x9996;&#x5148;&#x6765;&#x770B;&#x770B;&#x5176;compile&#x547D;&#x4EE4;&#x7684;&#x4F7F;&#x7528;&#x59FF;&#x52BF;&#x3002;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">aapt2 compile [options] -o arg files<span class="built_in">..</span>.</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line"> -o arg                                            Output path</span><br><span class="line"> --dir arg                                         Directory <span class="keyword">to</span> scan <span class="keyword">for</span> resources</span><br><span class="line"> --pseudo-localize                                 Generate resources <span class="keyword">for</span> pseudo-locales (en-XA <span class="keyword">and</span> ar-XB)</span><br><span class="line"> --no-crunch                                       Disables PNG processing</span><br><span class="line"> --legacy                                          Treat errors that used <span class="keyword">to</span> be valid <span class="keyword">in</span> AAPT as warnings</span><br><span class="line"> -v                                                Enables verbose logging</span><br><span class="line"> -h                                                Displays this help menu</span><br></pre></td></tr></table></figure><p>&#x7F16;&#x8BD1;&#x8FC7;&#x7A0B;&#x4F7F;&#x7528;aapt2 compile&#x547D;&#x4EE4;&#xFF0C;&#x5B83;&#x6709;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x53C2;&#x6570;&#x3002;</p><p><strong>-o</strong>&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x4E86;&#x7F16;&#x8BD1;&#x6587;&#x4EF6;&#x8F93;&#x51FA;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x53EF;&#x4EE5;&#x662F;&#x76EE;&#x5F55;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x6587;&#x4EF6;&#xFF0C;&#x53D6;&#x51B3;&#x4E8E;&#x8F93;&#x5165;&#x7684;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x662F;&#x76EE;&#x5F55;&#x8FD8;&#x662F;&#x6587;&#x4EF6;&#x3002;&#x5047;&#x5982;&#x8F93;&#x5165;&#x7684;&#x662F;&#x76EE;&#x5F55;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x7684;&#x662F;&#x4E2A;zip&#x538B;&#x7F29;&#x5305;&#xFF0C;&#x53C2;&#x6570;&#x503C;&#x5FC5;&#x987B;&#x662F;&#x4E2A;&#x6587;&#x4EF6;&#xFF1B;&#x8F93;&#x5165;&#x7684;&#x662F;&#x5355;&#x4E2A;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#xFF0C;&#x5219;&#x8F93;&#x51FA;&#x7684;&#x662F;&#x4E00;&#x4E2A;flat&#x6587;&#x4EF6;&#xFF0C;&#x53C2;&#x6570;&#x503C;&#x5FC5;&#x987B;&#x662F;&#x4E2A;&#x76EE;&#x5F55;&#xFF0C;&#x8F93;&#x51FA;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x7531;aapt2&#x751F;&#x6210;&#x3002;<br><strong>&#x2013;dir</strong>&#x7528;&#x4E8E;&#x6307;&#x5B9A;&#x626B;&#x63CF;&#x7684;&#x8D44;&#x6E90;&#x76EE;&#x5F55;&#xFF0C;&#x8BE5;&#x53C2;&#x6570;&#x7528;&#x4E8E;&#x8D44;&#x6E90;&#x7684;&#x6279;&#x91CF;&#x7F16;&#x8BD1;&#xFF0C;&#x4E0D;&#x7528;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#x4E2A;&#x6587;&#x4EF6;&#x5355;&#x72EC;&#x7F16;&#x8BD1;&#x3002;<br><strong>&#x2013;pseudo-localize</strong>&#x53C2;&#x6570;&#x5728;aapt&#x4E2D;&#x4E5F;&#x6709;&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x751F;&#x6210;&#x4F2A;&#x672C;&#x5730;&#x5316;&#x4FE1;&#x606F;&#xFF0C;&#x5982;en-XA&#x548C;ar-XB<br><strong>&#x2013;no-crunch</strong>&#x8868;&#x793A;&#x7981;&#x7528;png&#x6587;&#x4EF6;&#x7684;&#x538B;&#x7F29;&#x7B49;&#x5904;&#x7406;<br><strong>&#x2013;legacy</strong>&#x8868;&#x793A;&#x5C06;aapt&#x4E2D;&#x8BA4;&#x4E3A;&#x662F;&#x8B66;&#x544A;&#x7684;&#x5730;&#x65B9;&#x4F5C;&#x4E3A;&#x9519;&#x8BEF;&#x629B;&#x51FA;&#xFF0C;&#x5E76;&#x7EC8;&#x6B62;&#x7F16;&#x8BD1;<br><strong>-v</strong>&#x53C2;&#x6570;&#x5C06;&#x5F00;&#x542F;&#x7F16;&#x8BD1;&#x65E5;&#x5FD7;&#x7684;&#x8F93;&#x51FA;<br><strong>-h</strong>&#x53C2;&#x6570;&#x5219;&#x4F1A;&#x8F93;&#x51FA;&#x4E0A;&#x9762;&#x7684;&#x4F7F;&#x7528;&#x5E2E;&#x52A9;&#x4FE1;&#x606F;</p><p>&#x7528;Android Studio 3.0&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x7A7A;&#x9879;&#x76EE;&#x3002;&#x6211;&#x4EEC;&#x5C1D;&#x8BD5;&#x4F7F;&#x7528;&#x547D;&#x4EE4;&#x884C;&#x8FDB;&#x884C;&#x8D44;&#x6E90;&#x7F16;&#x8BD1;&#x3002;&#x6253;&#x5F00;&#x7EC8;&#x7AEF;&#xFF0C;&#x8FDB;&#x5165;&#x5F53;&#x524D;&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">aapt2 <span class="keyword">compile</span> -o .<span class="regexp">/build ./</span>app<span class="regexp">/src/m</span>ain<span class="regexp">/res/</span>values<span class="regexp">/strings.xml</span></span><br></pre></td></tr></table></figure><p>&#x4EE5;&#x4E0A;&#x547D;&#x4EE4;&#x5C06;string.xml&#x8FDB;&#x884C;&#x4E86;&#x7F16;&#x8BD1;&#xFF0C;&#x6700;&#x7EC8;&#x7F16;&#x8BD1;&#x4EA7;&#x7269;&#x4F4D;&#x4E8E;&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x7684;build&#x76EE;&#x5F55;&#x4E2D;&#xFF0C;&#x5176;&#x6587;&#x4EF6;&#x540D;&#x4E3A;&#x8BE5;&#x6587;&#x4EF6;&#x4E0A;&#x7EA7;&#x76EE;&#x5F55;&#x540D;_&#x8BE5;&#x6587;&#x4EF6;&#x540D;.arsc.flat&#xFF0C;&#x5373;values_strings.arsc.flat&#xFF0C;&#x8FD9;&#x662F;values&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;&#x6587;&#x4EF6;&#x7684;&#x547D;&#x540D;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;xml&#x540E;&#x7F00;&#x53D8;&#x6210;&#x4E86;arsc&#xFF0C;&#x8FD9;&#x662F;&#x4EE3;&#x7801;&#x4E2D;&#x8986;&#x76D6;&#x6587;&#x4EF6;&#x540E;&#x7F00;&#x5BFC;&#x81F4;&#x7684;&#x3002;&#x6211;&#x4EEC;&#x6765;&#x770B;&#x4E0B;&#x5176;&#x4ED6;&#x6587;&#x4EF6;&#xFF0C;&#x6211;&#x4EEC;&#x7F16;&#x8BD1;&#x4E00;&#x4E2A;&#x5E03;&#x5C40;&#x6587;&#x4EF6;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">aapt2 <span class="keyword">compile</span> -o .<span class="regexp">/build ./</span>app<span class="regexp">/src/m</span>ain<span class="regexp">/res/</span>layout<span class="regexp">/activity_main.xml</span></span><br></pre></td></tr></table></figure><p>&#x4EE5;&#x4E0A;&#x547D;&#x4EE4;&#x4F1A;&#x7F16;&#x8BD1;&#x4EA7;&#x751F;<strong>layout_activity_main.xml.flat</strong>&#x6587;&#x4EF6;&#xFF0C;&#x5373;&#x4E0A;&#x7EA7;&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x540D;_&#x8BE5;&#x6587;&#x4EF6;&#x540D;.flat&#xFF0C;&#x8FD9;&#x662F;&#x975E;values&#x8D44;&#x6E90;&#x7684;&#x547D;&#x540D;&#x65B9;&#x5F0F;</p><p>&#x770B;&#x4E0B;&#x56FE;&#x7247;&#x8D44;&#x6E90;&#x7F16;&#x8BD1;&#x4F1A;&#x4EA7;&#x751F;&#x4EC0;&#x4E48;<br></p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">aapt2 <span class="keyword">compile</span> -o .<span class="regexp">/build ./</span>app<span class="regexp">/src/m</span>ain<span class="regexp">/res/mi</span>pmap-xhdpi<span class="regexp">/ic_launcher.png</span></span><br></pre></td></tr></table></figure><br>&#x4EE5;&#x4E0A;&#x547D;&#x4EE4;&#x4F1A;&#x7F16;&#x8BD1;&#x4EA7;&#x751F;<strong>mipmap-xhdpi_ic_launcher.png.flat</strong>&#x6587;&#x4EF6;&#xFF0C;&#x547D;&#x540D;&#x65B9;&#x5F0F;&#x548C;layout&#x4E00;&#x6837;<p></p><p>&#x5C06;&#x4E0A;&#x9762;&#x4E09;&#x4E2A;&#x6587;&#x4EF6;&#x8FDE;&#x8D77;&#x6765;&#x4E00;&#x8D77;&#x7F16;&#x8BD1;&#x5C31;&#x662F;<br></p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">aapt2 <span class="keyword">compile</span> -o .<span class="regexp">/build ./</span>app<span class="regexp">/src/m</span>ain<span class="regexp">/res/mi</span>pmap-xhdpi<span class="regexp">/ic_launcher.png ./</span>app<span class="regexp">/src/m</span>ain<span class="regexp">/res/</span>layout<span class="regexp">/activity_main.xml ./</span>app<span class="regexp">/src/m</span>ain<span class="regexp">/res/</span>values<span class="regexp">/strings.xml</span></span><br></pre></td></tr></table></figure><p></p><p>&#x4E0A;&#x9762;&#x662F;&#x5355;&#x4E2A;&#x6587;&#x4EF6;&#x7684;&#x7F16;&#x8BD1;&#x65B9;&#x5F0F;&#xFF0C;&#x4E0B;&#x9762;&#x770B;&#x770B;&#x76F4;&#x63A5;&#x7F16;&#x8BD1;&#x6574;&#x4E2A;&#x76EE;&#x5F55;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">aapt2 <span class="keyword">compile</span> -o .<span class="regexp">/build/</span>res.apk --dir .<span class="regexp">/app/</span>src<span class="regexp">/main/</span>res<span class="regexp">/</span></span><br></pre></td></tr></table></figure><p>&#x8BE5;&#x547D;&#x4EE4;&#x4E3A;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;res.apk&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x8BE5;&#x6587;&#x4EF6;&#x662F;&#x4E00;&#x4E2A;zip&#x538B;&#x7F29;&#x5305;&#xFF0C;&#x91CC;&#x9762;&#x5305;&#x542B;&#x4E86;&#x7F16;&#x8BD1;&#x597D;&#x7684;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2017/10/31/aapt2%E8%B5%84%E6%BA%90compile%E8%BF%87%E7%A8%8B/res.png" alt="res.png"></p><p>&#x5C06;&#x4EE5;&#x4E0A;&#x6D41;&#x7A0B;&#x603B;&#x7ED3;&#x4E3A;&#x4E00;&#x5F20;&#x56FE;</p><p><img src="/2017/10/31/aapt2%E8%B5%84%E6%BA%90compile%E8%BF%87%E7%A8%8B/process.png" alt="process.png"></p><h3 id="flat&#x6587;&#x4EF6;&#x7ED3;&#x6784;&#x89E3;&#x6790;"><a href="#flat&#x6587;&#x4EF6;&#x7ED3;&#x6784;&#x89E3;&#x6790;" class="headerlink" title="flat&#x6587;&#x4EF6;&#x7ED3;&#x6784;&#x89E3;&#x6790;"></a>flat&#x6587;&#x4EF6;&#x7ED3;&#x6784;&#x89E3;&#x6790;</h3><p>&#x90A3;&#x4E48;&#x7F16;&#x8BD1;&#x4EA7;&#x751F;&#x7684;flat&#x6587;&#x4EF6;&#x5230;&#x5E95;&#x662F;&#x4EC0;&#x4E48;&#x4E1C;&#x897F;&#x5462;&#xFF0C;&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x6587;&#x4EF6;&#x5176;flat&#x683C;&#x5F0F;&#x662F;&#x4E0D;&#x540C;&#x7684;&#xFF0C;&#x8FD9;&#x91CC;&#x4EE5;&#x666E;&#x901A;&#x6587;&#x4EF6;&#x4E3E;&#x4F8B;&#xFF0C;&#x5373;compileFile&#x4EA7;&#x751F;&#x7684;flat&#x6587;&#x4EF6;(compilePng&#x3001;compileXml&#x4EA7;&#x751F;&#x7684;flat&#x6587;&#x4EF6;&#x548C;compileFile&#x662F;&#x7C7B;&#x4F3C;&#x7684;)&#xFF0C;&#x5148;&#x6765;&#x770B;&#x4E00;&#x5F20;&#x7ED3;&#x6784;&#x56FE;</p><p><img src="/2017/10/31/aapt2%E8%B5%84%E6%BA%90compile%E8%BF%87%E7%A8%8B/flat.png" alt="flat.png"></p><p>&#x4ECE;&#x4E0A;&#x56FE;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;flat&#x6587;&#x4EF6;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x4E00;&#x79CD;&#x7279;&#x5B9A;&#x7684;&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#xFF0C;&#x6587;&#x4EF6;&#x5F00;&#x5934;4&#x4E2A;&#x5B57;&#x8282;&#xFF08;32&#x4F4D;&#xFF09;&#x8868;&#x793A;&#x5F53;&#x524D;flat&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x6587;&#x4EF6;&#x4E2A;&#x6570;k&#xFF0C;&#x7D27;&#x8DDF;&#x7740;8&#x4E2A;&#x5B57;&#x8282;&#xFF08;64&#x4F4D;&#xFF09;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x8868;&#x793A;&#x540E;&#x9762;&#x7D27;&#x8DDF;&#x7740;&#x7684;protobuf&#x6570;&#x636E;&#x7684;&#x5927;&#x5C0F;n&#xFF0C;&#x63A5;&#x7740;&#x5C31;&#x662F;&#x8DDF;&#x7740;n&#x4E2A;&#x5B57;&#x8282;&#x7684;protobuf&#x6570;&#x636E;&#xFF0C;&#x63A5;&#x7740;&#x662F;8&#x4E2A;&#x5B57;&#x8282;(64&#x4F4D;)&#x7684;&#x771F;&#x5B9E;&#x6570;&#x636E;&#x5927;&#x5C0F;m&#xFF0C;&#x7D27;&#x8DDF;&#x5728;&#x540E;&#x9762;&#x7684;&#x5C31;&#x662F;m&#x4E2A;&#x5B57;&#x8282;&#x7684;&#x771F;&#x5B9E;&#x6570;&#x636E;&#x3002;&#x4F9D;&#x6B21;&#x5FAA;&#x73AF;k&#x6B21;&#x8FD9;&#x79CD;&#x6587;&#x4EF6;&#x7ED3;&#x6784;&#xFF0C;&#x6700;&#x7EC8;&#x5C31;&#x662F;flat&#x6587;&#x4EF6;&#x4E86;&#x3002;</p><p>&#x5176;&#x4E2D;protobuf&#x90E8;&#x5206;&#x7684;&#x6570;&#x636E;Format.proto&#x7684;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF0C;&#x975E;values&#x8D44;&#x6E90;&#x4F7F;&#x7528;&#x7684;&#x662F;CompiledFile</p><figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line">syntax = <span class="string">&quot;proto2&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">option</span> optimize_for = LITE_RUNTIME;</span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> aapt.pb;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">ConfigDescription</span> </span>{</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">bytes</span> data = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">string</span> product = <span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">StringPool</span> </span>{</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">bytes</span> data = <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">CompiledFile</span> </span>{</span><br><span class="line">	<span class="class"><span class="keyword">message</span> <span class="title">Symbol</span> </span>{</span><br><span class="line">		<span class="keyword">optional</span> <span class="built_in">string</span> resource_name = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">optional</span> <span class="built_in">uint32</span> line_no = <span class="number">2</span>;</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">string</span> resource_name = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">optional</span> ConfigDescription config = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">string</span> source_path = <span class="number">3</span>;</span><br><span class="line">	<span class="keyword">repeated</span> Symbol exported_symbols = <span class="number">4</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">ResourceTable</span> </span>{</span><br><span class="line">	<span class="keyword">optional</span> StringPool string_pool = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">optional</span> StringPool source_pool = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">optional</span> StringPool symbol_pool = <span class="number">3</span>;</span><br><span class="line">	<span class="keyword">repeated</span> Package packages = <span class="number">4</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Package</span> </span>{</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">uint32</span> package_id = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">string</span> package_name = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">repeated</span> Type types = <span class="number">3</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Type</span> </span>{</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">uint32</span> id = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">string</span> name = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">repeated</span> Entry entries = <span class="number">3</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">SymbolStatus</span> </span>{</span><br><span class="line">	<span class="class"><span class="keyword">enum</span> <span class="title">Visibility</span> </span>{</span><br><span class="line">		Unknown = <span class="number">0</span>;</span><br><span class="line">		Private = <span class="number">1</span>;</span><br><span class="line">		Public = <span class="number">2</span>;</span><br><span class="line">	}</span><br><span class="line">	<span class="keyword">optional</span> Visibility visibility = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">optional</span> Source source = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">string</span> comment = <span class="number">3</span>;</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">bool</span> allow_new = <span class="number">4</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Entry</span> </span>{</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">uint32</span> id = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">string</span> name = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">optional</span> SymbolStatus symbol_status = <span class="number">3</span>;</span><br><span class="line">	<span class="keyword">repeated</span> ConfigValue config_values = <span class="number">4</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">ConfigValue</span> </span>{</span><br><span class="line">	<span class="keyword">optional</span> ConfigDescription config = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">optional</span> Value value = <span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Source</span> </span>{</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">uint32</span> path_idx = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">uint32</span> line_no = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">uint32</span> col_no = <span class="number">3</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Reference</span> </span>{</span><br><span class="line">	<span class="class"><span class="keyword">enum</span> <span class="title">Type</span> </span>{</span><br><span class="line">		Ref = <span class="number">0</span>;</span><br><span class="line">		Attr = <span class="number">1</span>;</span><br><span class="line">	}</span><br><span class="line">	<span class="keyword">optional</span> Type type = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">uint32</span> id = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">uint32</span> symbol_idx = <span class="number">3</span>;</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">bool</span> private = <span class="number">4</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Id</span> </span>{</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">String</span> </span>{</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">uint32</span> idx = <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">RawString</span> </span>{</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">uint32</span> idx = <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">FileReference</span> </span>{</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">uint32</span> path_idx = <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Primitive</span> </span>{</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">uint32</span> type = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">uint32</span> data = <span class="number">2</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Attribute</span> </span>{</span><br><span class="line">	<span class="class"><span class="keyword">message</span> <span class="title">Symbol</span> </span>{</span><br><span class="line">		<span class="keyword">optional</span> Source source = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">optional</span> <span class="built_in">string</span> comment = <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">optional</span> Reference name = <span class="number">3</span>;</span><br><span class="line">		<span class="keyword">optional</span> <span class="built_in">uint32</span> value = <span class="number">4</span>;</span><br><span class="line">	}</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">uint32</span> format_flags = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">int32</span> min_int = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">int32</span> max_int = <span class="number">3</span>;</span><br><span class="line">	<span class="keyword">repeated</span> Symbol symbols = <span class="number">4</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Style</span> </span>{</span><br><span class="line">	<span class="class"><span class="keyword">message</span> <span class="title">Entry</span> </span>{</span><br><span class="line">		<span class="keyword">optional</span> Source source = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">optional</span> <span class="built_in">string</span> comment = <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">optional</span> Reference key = <span class="number">3</span>;</span><br><span class="line">		<span class="keyword">optional</span> Item item = <span class="number">4</span>;</span><br><span class="line">	}</span><br><span class="line"></span><br><span class="line">	<span class="keyword">optional</span> Reference parent = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">optional</span> Source parent_source = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">repeated</span> Entry entries = <span class="number">3</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Styleable</span> </span>{</span><br><span class="line">	<span class="class"><span class="keyword">message</span> <span class="title">Entry</span> </span>{</span><br><span class="line">		<span class="keyword">optional</span> Source source = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">optional</span> <span class="built_in">string</span> comment = <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">optional</span> Reference attr = <span class="number">3</span>;</span><br><span class="line">	}</span><br><span class="line">	<span class="keyword">repeated</span> Entry entries = <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Array</span> </span>{</span><br><span class="line">	<span class="class"><span class="keyword">message</span> <span class="title">Entry</span> </span>{</span><br><span class="line">		<span class="keyword">optional</span> Source source = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">optional</span> <span class="built_in">string</span> comment = <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">optional</span> Item item = <span class="number">3</span>;</span><br><span class="line">	}</span><br><span class="line">	<span class="keyword">repeated</span> Entry entries = <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Plural</span> </span>{</span><br><span class="line">	<span class="class"><span class="keyword">enum</span> <span class="title">Arity</span> </span>{</span><br><span class="line">		Zero = <span class="number">0</span>;</span><br><span class="line">		One = <span class="number">1</span>;</span><br><span class="line">		Two = <span class="number">2</span>;</span><br><span class="line">		Few = <span class="number">3</span>;</span><br><span class="line">		Many = <span class="number">4</span>;</span><br><span class="line">		Other = <span class="number">5</span>;</span><br><span class="line">	}</span><br><span class="line">		</span><br><span class="line">	<span class="class"><span class="keyword">message</span> <span class="title">Entry</span> </span>{</span><br><span class="line">		<span class="keyword">optional</span> Source source = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">optional</span> <span class="built_in">string</span> comment = <span class="number">2</span>;</span><br><span class="line">		<span class="keyword">optional</span> Arity arity = <span class="number">3</span>;</span><br><span class="line">		<span class="keyword">optional</span> Item item = <span class="number">4</span>;</span><br><span class="line">	}</span><br><span class="line">	<span class="keyword">repeated</span> Entry entries = <span class="number">1</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Item</span> </span>{</span><br><span class="line">	<span class="keyword">optional</span> Reference ref = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">optional</span> String str = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">optional</span> RawString raw_str = <span class="number">3</span>;</span><br><span class="line">	<span class="keyword">optional</span> FileReference file = <span class="number">4</span>;</span><br><span class="line">	<span class="keyword">optional</span> Id id = <span class="number">5</span>;</span><br><span class="line">	<span class="keyword">optional</span> Primitive prim = <span class="number">6</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">CompoundValue</span> </span>{</span><br><span class="line">	<span class="keyword">optional</span> Attribute attr = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">optional</span> Style style = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">optional</span> Styleable styleable = <span class="number">3</span>;</span><br><span class="line">	<span class="keyword">optional</span> Array array = <span class="number">4</span>;</span><br><span class="line">	<span class="keyword">optional</span> Plural plural = <span class="number">5</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">Value</span> </span>{</span><br><span class="line">	<span class="keyword">optional</span> Source source = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">string</span> comment = <span class="number">2</span>;</span><br><span class="line">	<span class="keyword">optional</span> <span class="built_in">bool</span> weak = <span class="number">3</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">optional</span> Item item = <span class="number">4</span>;</span><br><span class="line">	<span class="keyword">optional</span> CompoundValue compound_value = <span class="number">5</span>;	</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4EE5;&#x4E0A;&#x662F;&#x975E;values&#x8D44;&#x6E90;&#x4EA7;&#x751F;&#x7684;flat&#x6587;&#x4EF6;&#x7684;&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#xFF0C;<strong>&#x800C;values&#x7C7B;&#x578B;&#x7684;&#x8D44;&#x6E90;&#xFF0C;&#x5176;&#x5B9E;&#x662F;&#x4EE5;&#x4E0A;&#x6570;&#x636E;&#x683C;&#x5F0F;&#x7684;&#x9609;&#x5272;&#x7248;&#xFF0C;&#x5373;&#x53EA;&#x6709;protobuf&#x90E8;&#x5206;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x5176;&#x7ED3;&#x6784;&#x4E3A;&#x4E0A;&#x9762;proto&#x683C;&#x5F0F;&#x90E8;&#x5206;&#x7684;ResourceTable&#x90E8;&#x5206;</strong></p><p>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;4&#x5B57;&#x8282;&#x5BF9;&#x9F50;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x53EF;&#x4EE5;&#x67E5;&#x770B;&#x6E90;&#x7801;&#x3002;</p><h3 id="gradle&#x4E2D;compile&#x6D41;&#x7A0B;"><a href="#gradle&#x4E2D;compile&#x6D41;&#x7A0B;" class="headerlink" title="gradle&#x4E2D;compile&#x6D41;&#x7A0B;"></a>gradle&#x4E2D;compile&#x6D41;&#x7A0B;</h3><p>gradle&#x4E2D;&#x4E3B;&#x8981;&#x7531;OutOfProcessAaptV2&#x548C;AaptV2CommandBuilder&#x7C7B;&#x627F;&#x8F7D;aapt2&#x7684;&#x6267;&#x884C;&#xFF0C;&#x5173;&#x952E;&#x51FD;&#x6570;&#x5982;&#x4E0B;</p><figure class="highlight sas"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">@Nullable</span><br><span class="line">@Override</span><br><span class="line">protected CompileInvocation makeCompileProcessBuilder(@NonNull CompileResourceRequest request)</span><br><span class="line">        throws AaptException {</span><br><span class="line">    Preconditions.checkArgument(request.ge<span class="meta">tInput(</span>).isFile(), <span class="string">&quot;!file.isFile()&quot;</span>);</span><br><span class="line">    Preconditions.checkArgument(request.getOu<span class="meta">tput(</span>).isDirectory(), <span class="string">&quot;!output.isDirectory()&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">return</span> new CompileInvocati<span class="meta">on(</span></span><br><span class="line">            new ProcessInfoBuilder()</span><br><span class="line">                    .setExecutable(getAapt2ExecutablePath())</span><br><span class="line">                    .addArgs(<span class="string">&quot;compile&quot;</span>)</span><br><span class="line">                    .addArgs(AaptV2CommandBuilder.makeCompile(request)),</span><br><span class="line">            new <span class="meta">File</span>(</span><br><span class="line">                    request.getOu<span class="meta">tput(</span>),</span><br><span class="line">                    Aapt2RenamingConventions.compilationRename(request.ge<span class="meta">tInput(</span>))));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">public static ImmutableList&lt;String&gt; makeCompile(@NonNull CompileResourceRequest request) {</span><br><span class="line">    ImmutableList.Builder&lt;String&gt; parameters = new ImmutableList.Builder();</span><br><span class="line"></span><br><span class="line">    <span class="meta">if</span> (request.isPseudoLocalize()) {</span><br><span class="line">        parameters.<span class="meta">add</span>(<span class="string">&quot;--pseudo-localize&quot;</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">if</span> (!request.isPngCrunching()) {</span><br><span class="line">        // Only pass --no-crunch for png files <span class="meta">and</span> <span class="meta">not</span> for 9-patch files <span class="meta">as</span> that breaks them.</span><br><span class="line">        String lowerName = request.ge<span class="meta">tInput(</span>).getPath().toLowerCase(Locale.US);</span><br><span class="line">        <span class="meta">if</span> (lowerName.endsWith(SdkConstants.DOT_PNG)</span><br><span class="line">                <span class="variable">&amp;&amp;</span> !lowerName.endsWith(SdkConstants.DOT_9PNG)) {</span><br><span class="line">            parameters.<span class="meta">add</span>(<span class="string">&quot;--no-crunch&quot;</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    parameters.<span class="meta">add</span>(<span class="string">&quot;--legacy&quot;</span>);</span><br><span class="line">    parameters.<span class="meta">add</span>(<span class="string">&quot;-o&quot;</span>, request.getOu<span class="meta">tput(</span>).getAbsolutePath());</span><br><span class="line">    parameters.<span class="meta">add</span>(request.ge<span class="meta">tInput(</span>).getAbsolutePath());</span><br><span class="line"></span><br><span class="line">    <span class="meta">return</span> parameters.build();</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x7B80;&#x5355;&#x7684;&#x547D;&#x4EE4;&#x62FC;&#x63A5;&#xFF0C;&#x548C;&#x4E0A;&#x9762;&#x8BF4;&#x7684;&#x662F;&#x5B8C;&#x5168;&#x4E00;&#x6837;&#x7684;&#x3002;</p><h3 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h3><p>&#x5F00;&#x542F;&#x4E86;aapt2&#x540E;&#xFF0C;&#x8D44;&#x6E90;&#x7684;&#x589E;&#x91CF;&#x7F16;&#x8BD1;&#x4F1A;&#x52A0;&#x901F;&#x7F16;&#x8BD1;&#x901F;&#x5EA6;&#xFF0C;&#x4F46;&#x662F;&#x6709;&#x4E9B;&#x573A;&#x666F;aapt2&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x5408;&#x9002;&#xFF0C;&#x56E0;&#x6B64;&#x5FC5;&#x8981;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5EFA;&#x8BAE;&#x5173;&#x95ED;aapt2&#xFF0C;&#x6BD4;&#x5982;jenkins&#x4E0A;&#x6784;&#x5EFA;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x589E;&#x91CF;&#x7F16;&#x8BD1;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x5173;&#x95ED;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;gradle&#x53C2;&#x6570;&#x8FBE;&#x5230;&#x5173;&#x95ED;&#x7684;&#x6548;&#x679C;&#xFF0C;&#x547D;&#x4EE4;&#x5982;&#x4E0B;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">gradle assembleRelease -<span class="module-access"><span class="module"><span class="identifier">Pandroid</span>.</span></span>enableAapt2=<span class="literal">false</span></span><br></pre></td></tr></table></figure><p>&#x7B80;&#x5355;&#x603B;&#x7ED3;&#x4E86;&#x51E0;&#x79CD;&#x4E0D;&#x9002;&#x5408;&#x4F7F;&#x7528;aapt2&#x7684;&#x573A;&#x666F;</p><ul><li>&#x63D2;&#x4EF6;&#x5316;&#x548C;&#x70ED;&#x4FEE;&#x590D;&#x4E2D;&#xFF0C;&#x9700;&#x8981;&#x4F7F;&#x7528;public.xml&#x7684;&#x573A;&#x666F;</li><li>&#x6784;&#x5EFA;&#x8FC7;&#x7A0B;&#xFF0C;&#x9700;&#x8981;&#x52A8;&#x6001;&#x589E;&#x5220;&#x6539;&#x8D44;&#x6E90;&#x7684;&#x573A;&#x666F;&#xFF0C;&#x5982;&#x5220;&#x9664;&#x4E00;&#x90E8;&#x5206;&#x7EBF;&#x4E0A;&#x4E0D;&#x5E94;&#x8BE5;&#x51FA;&#x73B0;&#x7684;&#x8D44;&#x6E90;</li></ul>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>aapt2</tag>
        <tag>资源编译</tag>
      </tags>
  </entry>
  <entry>
    <title>Google Archive Patch 源码解析</title>
    <url>/2017/10/05/Google-Archive-Patch-%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</url>
    <content><![CDATA[<p>&#x5982;&#x679C;&#x4F60;&#x89C9;&#x5F97;&#x672C;&#x7BC7;&#x6587;&#x7AE0;&#x592A;&#x957F;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x770B;&#x6211;&#x603B;&#x7ED3;&#x7684;&#x7ED3;&#x8BBA;&#xFF1A;</p><blockquote><p>Google Archive Patch&#x662F;&#x4E25;&#x683C;&#x7684;&#x57FA;&#x4E8E;Zip&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#x7684;&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#xFF0C;&#x5176;&#x6838;&#x5FC3;&#x751F;&#x6210;&#x5DEE;&#x91CF;&#x7684;&#x7B97;&#x6CD5;&#x8FD8;&#x662F;BsDiff&#xFF0C;&#x6838;&#x5FC3;&#x5408;&#x6210;&#x6587;&#x4EF6;&#x7684;&#x7B97;&#x6CD5;&#x8FD8;&#x662F;BsPatch&#xFF0C;&#x53EA;&#x662F;&#x5B83;&#x5C06;&#x65E7;Zip&#x6587;&#x4EF6;&#x548C;&#x65B0;Zip&#x6587;&#x4EF6;&#x91CC;&#x7684;&#x5185;&#x5BB9;&#x89E3;&#x538B;&#x51FA;&#x6765;&#x5206;&#x522B;&#x8F6C;&#x4E3A;&#x4E86;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x7684;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x4F7F;&#x7528;&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#x751F;&#x6210;&#x5DEE;&#x91CF;&#x6587;&#x4EF6;&#xFF1B;&#x5408;&#x6210;&#x65F6;&#xFF0C;&#x5C06;&#x65E7;Zip&#x6587;&#x4EF6;&#x91CC;&#x7684;&#x5185;&#x5BB9;&#x89E3;&#x538B;&#x51FA;&#x6765;&#x8F6C;&#x4E3A;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x7684;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x5E94;&#x7528;&#x5408;&#x6210;&#x7B97;&#x6CD5;&#xFF0C;&#x751F;&#x6210;&#x65B0;&#x6587;&#x4EF6;&#x7684;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x7684;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x518D;&#x5229;&#x7528;patch&#x6587;&#x4EF6;&#x4E2D;&#x6BCF;&#x4E2A;ZipEntry&#x7684;&#x504F;&#x79FB;&#x548C;&#x957F;&#x5EA6;&#xFF0C;&#x4EE5;&#x53CA;&#x538B;&#x7F29;&#x7B49;&#x7EA7;&#xFF0C;&#x7F16;&#x7801;&#x7B56;&#x7565;&#xFF0C;nowrap&#x7B49;&#x6807;&#x8BB0;&#xFF0C;&#x5C06;&#x5176;&#x6062;&#x590D;&#x4E3A;Zip&#x6587;&#x4EF6;&#x3002;&#x4E4B;&#x6240;&#x4EE5;&#x4F7F;&#x7528;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x7684;&#x6587;&#x4EF6;&#x662F;&#x56E0;&#x4E3A;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x672A;&#x538B;&#x7F29;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x5F88;&#x7B80;&#x5355;&#x7684;&#x63CF;&#x8FF0;&#x5176;&#x53D8;&#x5316;&#xFF0C;&#x5982;&#x5B57;&#x7B26;&#x4E32;&#x201D;abc&#x201D;&#xFF0C;&#x53D8;&#x4E3A;&#x4E86;&#x201D;abcd&#x201D;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x76F4;&#x89C2;&#x7684;&#x63CF;&#x8FF0;&#x5176;&#x53D8;&#x5316;&#xFF0C;&#x589E;&#x52A0;&#x4E86;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x201D;d&#x201D;&#xFF1B;&#x4F46;&#x662F;&#x5982;&#x679C;&#x5B57;&#x7B26;&#x4E32;&#x7ECF;&#x8FC7;&#x4E86;&#x538B;&#x7F29;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x53D8;&#x5316;&#x4E0D;&#x518D;&#x53EF;&#x4EE5;&#x8FD9;&#x4E48;&#x5BB9;&#x6613;&#x7684;&#x88AB;&#x63CF;&#x8FF0;&#x3002;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x5C06;&#x538B;&#x7F29;&#x540E;&#x7684;&#x6587;&#x4EF6;&#x8F6C;&#x4E3A;&#x672A;&#x538B;&#x7F29;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x751F;&#x6210;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x7684;&#x6587;&#x4EF6;&#x3002;</p><p>&#x751F;&#x6210;&#x6162;&#xFF1A;Google Archive Patch&#x4E4B;&#x6240;&#x4EE5;&#x751F;&#x6210;Patch&#x7684;&#x65F6;&#x95F4;&#x53D8;&#x957F;&#x4E86;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;Zip&#x6587;&#x4EF6;&#x89E3;&#x538B;&#x51FA;&#x6765;&#x540E;&#xFF0C;&#x751F;&#x6210;&#x7684;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x7684;&#x6587;&#x4EF6;&#x53D8;&#x5927;&#x4E86;&#xFF0C;&#x56E0;&#x6B64;&#x4F7F;&#x7528;BsDiff&#x65F6;&#xFF0C;&#x8017;&#x8D39;&#x7684;&#x65F6;&#x95F4;&#x53D8;&#x957F;&#x4E86;&#x3002;&#x6BD4;&#x5982;&#x89E3;&#x538B;&#x51FA;&#x6765;&#x540E;&#x53D8;&#x5927;&#x4E86;2&#x500D;&#xFF0C;&#x5219;&#x65F6;&#x95F4;&#x6D88;&#x8017;&#x53D8;&#x4E3A;&#x4E86;&#x539F;&#x6765;&#x6574;&#x4E2A;&#x6587;&#x4EF6;&#x7684;&#x751F;&#x6210;&#x5DEE;&#x91CF;&#x7684;&#x65F6;&#x95F4;&#x7684;2&#x500D;&#x3002;</p><p>&#x5408;&#x6210;&#x6162;&#xFF1A;&#x5408;&#x6210;&#x7684;&#x65F6;&#x95F4;&#x53D8;&#x957F;&#x4E86;&#xFF0C;&#x4E00;&#x65B9;&#x9762;&#x7684;&#x6D88;&#x8017;&#x4E5F;&#x662F;&#x56E0;&#x4E3A;&#x751F;&#x6210;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x7684;&#x6587;&#x4EF6;&#x53D8;&#x5927;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E0D;&#x662F;&#x672C;&#x8D28;&#x539F;&#x56E0;&#xFF0C;BsPatch&#x5408;&#x6210;&#x662F;&#x6781;&#x5FEB;&#x7684;&#xFF0C;&#x5C31;&#x7B97;double&#x500D;&#x65F6;&#x95F4;&#xFF0C;&#x8FD9;&#x70B9;&#x65F6;&#x95F4;&#x4E5F;&#x662F;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#x4E0D;&#x8BA1;&#x7684;&#x3002;&#x5176;&#x8017;&#x8D39;&#x65F6;&#x95F4;&#x7684;&#x6839;&#x672C;&#x95EE;&#x9898;&#x8FD8;&#x5728;&#x4E8E;&#x91CD;&#x65B0;&#x751F;&#x6210;zip&#x6587;&#x4EF6;&#x65F6;&#x9700;&#x8981;&#x5BF9;&#x6D41;&#x505A;&#x5404;&#x79CD;&#x5224;&#x65AD;&#x64CD;&#x4F5C;&#xFF0C;&#x4E00;&#x90E8;&#x5206;&#x6570;&#x636E;&#x9700;&#x8981;&#x538B;&#x7F29;&#xFF0C;&#x4E00;&#x90E8;&#x5206;&#x6570;&#x636E;&#x9700;&#x8981;&#x62F7;&#x8D1D;&#xFF0C;&#x57FA;&#x672C;&#x4E0A;&#x5927;&#x90E8;&#x5206;&#x7684;&#x8017;&#x65F6;&#x64CD;&#x4F5C;&#x90FD;&#x82B1;&#x5728;&#x4E86;&#x6570;&#x636E;&#x7684;&#x538B;&#x7F29;&#x64CD;&#x4F5C;&#x4E0A;&#x3002;</p><p>&#x751F;&#x6210;&#x6587;&#x4EF6;&#x5C0F;&#xFF1A;&#x5C0F;&#x7684;&#x539F;&#x56E0;&#x4E0A;&#x9762;&#x5DF2;&#x7ECF;&#x89E3;&#x91CA;&#x8FC7;&#x4E86;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x57FA;&#x4E8E;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x7684;&#x6587;&#x4EF6;&#x751F;&#x6210;&#x5DEE;&#x91CF;&#x6587;&#x4EF6;&#x7684;&#xFF0C;&#x6587;&#x4EF6;&#x95F4;&#x7684;&#x53D8;&#x6362;&#x53D8;&#x5F97;&#x5F88;&#x5BB9;&#x6613;&#x63CF;&#x8FF0;&#x3002;</p></blockquote><a id="more"></a><h3 id="&#x9879;&#x76EE;&#x5730;&#x5740;"><a href="#&#x9879;&#x76EE;&#x5730;&#x5740;" class="headerlink" title="&#x9879;&#x76EE;&#x5730;&#x5740;"></a>&#x9879;&#x76EE;&#x5730;&#x5740;</h3><p><a href="https://github.com/andrewhayden/archive-patcher" target="_blank" rel="noopener">Google Archive Patch</a></p><p>&#x4E3B;&#x8981;&#x770B;&#x4E09;&#x4E2A;&#x6A21;&#x5757;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;shared&#xFF0C;&#x4E00;&#x4E2A;&#x662F;generator&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x662F;applier&#x3002;shared&#x4E3A;&#x53E6;&#x5916;&#x4E24;&#x4E2A;&#x7684;&#x516C;&#x5171;&#x6A21;&#x5757;&#xFF0C;generator&#x4E3A;&#x5DEE;&#x91CF;&#x751F;&#x6210;&#x6A21;&#x5757;&#xFF0C;applier&#x4E3A;&#x5DEE;&#x91CF;&#x5E94;&#x7528;&#x6A21;&#x5757;&#xFF0C;&#x5176;&#x4E2D;generator&#x4E2D;&#x5B9E;&#x73B0;&#x4E86;&#x4E00;&#x4EFD;java&#x7248;&#x7684;bsdiff&#x7B97;&#x6CD5;&#xFF0C;applier&#x4E2D;&#x5B9E;&#x73B0;&#x4E86;&#x4E00;&#x4EFD;java&#x7248;&#x7684;bspatch&#x7B97;&#x6CD5;&#x3002;</p><h3 id="Zip&#x6587;&#x4EF6;&#x683C;&#x5F0F;"><a href="#Zip&#x6587;&#x4EF6;&#x683C;&#x5F0F;" class="headerlink" title="Zip&#x6587;&#x4EF6;&#x683C;&#x5F0F;"></a>Zip&#x6587;&#x4EF6;&#x683C;&#x5F0F;</h3><p>Google Archive Patch&#x662F;&#x4E25;&#x683C;&#x57FA;&#x4E8E;Zip&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#x7684;&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#xFF0C;&#x56E0;&#x6B64;&#x6709;&#x5FC5;&#x8981;&#x4E86;&#x89E3;&#x4E00;&#x4E0B;Zip&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#x3002;&#x53C2;&#x8003;&#x4E86;&#x7F51;&#x4E0A;&#x7684;&#x51E0;&#x7BC7;&#x6587;&#x7AE0;&#xFF0C;&#x53D1;&#x73B0;&#x5176;&#x4ECB;&#x7ECD;&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#x7684;&#x65F6;&#x5019;&#x72AF;&#x4E86;&#x4E00;&#x4E2A;&#x5C0F;&#x95EE;&#x9898;&#xFF0C;&#x4ED6;&#x4EEC;&#x90FD;&#x662F;&#x6B63;&#x5E8F;&#x7684;&#x4ECB;&#x7ECD;&#x5176;&#x6784;&#x6210;&#xFF0C;&#x4F46;&#x662F;&#x5176;&#x5B9E;&#x5E94;&#x8BE5;&#x5012;&#x8FC7;&#x6765;&#xFF0C;&#x8FD9;&#x6837;&#x66F4;&#x52A0;&#x4FBF;&#x4E8E;&#x7406;&#x89E3;&#x3002;</p><p>&#x4E00;&#x4E2A;Zip&#x6587;&#x4EF6;&#x4E00;&#x822C;&#x6709;&#x4E09;&#x6BB5;&#x6784;&#x6210;</p><p><img src="/2017/10/05/Google-Archive-Patch-%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/zip-format.png" alt="zip-format.png"></p><p>&#x6211;&#x4EEC;&#x4E00;&#x4E00;&#x6765;&#x89E3;&#x91CA;&#x8FD9;&#x4E09;&#x6BB5;&#xFF0C;&#x9996;&#x5148;&#x770B;&#x6700;&#x540E;&#x4E00;&#x6BB5;</p><h4 id="End-of-Central-Directory"><a href="#End-of-Central-Directory" class="headerlink" title="End of Central Directory"></a>End of Central Directory</h4><table><thead><tr><th>Offset</th><th>Bytes</th><th>Description</th><th>&#x5907;&#x6CE8;</th></tr></thead><tbody><tr><td>0</td><td>4</td><td>End of Central Directory SIGNATURE = 0x06054b50</td><td>&#x533A;&#x5757;&#x5934;&#x90E8;&#x6807;&#x8BB0;&#xFF0C;&#x56FA;&#x5B9A;&#x503C;0x06054b50</td></tr><tr><td>4</td><td>2</td><td>disk number for this archive</td><td>&#x5FFD;&#x7565;</td></tr><tr><td>6</td><td>2</td><td>disk number for the central directory</td><td>&#x5FFD;&#x7565;</td></tr><tr><td>8</td><td>2</td><td>num entries in the central directory on this disk</td><td>&#x5FFD;&#x7565;</td></tr><tr><td>10</td><td>2</td><td>num entries in the central directory overall</td><td>&#x6838;&#x5FC3;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#x603B;&#x6570;</td></tr><tr><td>12</td><td>4</td><td>the length of the central directory</td><td>&#x6838;&#x5FC3;&#x76EE;&#x5F55;&#x7684;&#x5927;&#x5C0F;</td></tr><tr><td>16</td><td>4</td><td>the file offset of the central directory</td><td>&#x6838;&#x5FC3;&#x76EE;&#x5F55;&#x7684;&#x504F;&#x79FB;</td></tr><tr><td>20</td><td>2</td><td>the length of the zip file comment</td><td>&#x6CE8;&#x91CA;&#x957F;&#x5EA6;</td></tr><tr><td>22</td><td>n</td><td>from here to the EOF is the zip file comment</td><td>&#x6CE8;&#x91CA;&#x5185;&#x5BB9;</td></tr></tbody></table><p>&#x8BE5;&#x6BB5;&#x7531;&#x4E00;&#x4E2A;&#x8868;&#x683C;&#x6240;&#x793A;&#x7684;&#x7ED3;&#x6784;&#x6784;&#x6210;&#x3002;&#x8FD9;&#x6BB5;&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x627E;&#x51FA;Central Directory&#x7684;&#x4F4D;&#x7F6E;&#x3002;</p><h4 id="Central-Directory"><a href="#Central-Directory" class="headerlink" title="Central Directory"></a>Central Directory</h4><p>&#x7531;End of Central Directory&#x53EF;&#x4EE5;&#x7D22;&#x5F15;&#x51FA;Central Directory&#xFF0C;&#x770B;&#x770B;&#x5176;&#x6784;&#x6210;&#x3002;</p><table><thead><tr><th>Offset</th><th>Bytes</th><th>Description</th><th>&#x5907;&#x6CE8;</th></tr></thead><tbody><tr><td>0</td><td>4</td><td>Central Directory SIGNATURE = 0x02014b50</td><td>&#x533A;&#x5757;&#x5934;&#x90E8;&#x6807;&#x8BB0;&#xFF0C;&#x56FA;&#x5B9A;&#x503C;0x02014b50</td></tr><tr><td>4</td><td>2</td><td>the version-made-by</td><td>&#x5FFD;&#x7565;</td></tr><tr><td>6</td><td>2</td><td>the version-needed-to-extract</td><td>&#x5FFD;&#x7565;</td></tr><tr><td>8</td><td>2</td><td>the general-purpose flags, read for language encoding</td><td>&#x901A;&#x7528;&#x4F4D;&#x6807;&#x8BB0;</td></tr><tr><td>10</td><td>2</td><td>the compression method</td><td>&#x538B;&#x7F29;&#x65B9;&#x6CD5;</td></tr><tr><td>12</td><td>2</td><td>the MSDOS last modified file time</td><td>&#x6587;&#x4EF6;&#x6700;&#x540E;&#x4FEE;&#x6539;&#x65F6;&#x95F4;</td></tr><tr><td>14</td><td>2</td><td>the MSDOS last modified file date</td><td>&#x6587;&#x4EF6;&#x6700;&#x540E;&#x4FEE;&#x6539;&#x65E5;&#x671F;</td></tr><tr><td>16</td><td>4</td><td>the CRC32 of the uncompressed data</td><td>crc32&#x6821;&#x9A8C;&#x7801;</td></tr><tr><td>20</td><td>4</td><td>the compressed size</td><td>&#x538B;&#x7F29;&#x540E;&#x7684;&#x5927;&#x5C0F;</td></tr><tr><td>24</td><td>4</td><td>the uncompressed size</td><td>&#x672A;&#x538B;&#x7F29;&#x7684;&#x5927;&#x5C0F;</td></tr><tr><td>28</td><td>2</td><td>the length of the file name</td><td>&#x6587;&#x4EF6;&#x540D;&#x957F;&#x5EA6;</td></tr><tr><td>30</td><td>2</td><td>the length of the extras</td><td>&#x6269;&#x5C55;&#x57DF;&#x957F;&#x5EA6;</td></tr><tr><td>32</td><td>2</td><td>the length of the comment</td><td>&#x6587;&#x4EF6;&#x6CE8;&#x91CA;&#x957F;&#x5EA6;</td></tr><tr><td>34</td><td>2</td><td>the disk number</td><td>&#x5FFD;&#x7565;</td></tr><tr><td>36</td><td>2</td><td>the internal file attributes</td><td>&#x5FFD;&#x7565;</td></tr><tr><td>38</td><td>4</td><td>the external file attributes</td><td>&#x5FFD;&#x7565;</td></tr><tr><td>42</td><td>4</td><td>the offset of the local section entry, where the data is</td><td>local entry&#x6240;&#x5728;&#x504F;&#x79FB;</td></tr><tr><td>46</td><td>i</td><td>the file name</td><td>&#x6587;&#x4EF6;&#x540D;</td></tr><tr><td>46+i</td><td>j</td><td>the extras</td><td>&#x6269;&#x5C55;&#x57DF;</td></tr><tr><td>46+i+j</td><td>k</td><td>the comment</td><td>&#x6587;&#x4EF6;&#x6CE8;&#x91CA;</td></tr></tbody></table><p>&#x8BE5;&#x6BB5;&#x7531;n&#x4E2A;&#x8868;&#x683C;&#x8868;&#x793A;&#x7684;&#x7ED3;&#x6784;&#x6784;&#x6210;&#x3002;&#x8FD9;&#x6BB5;&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x4E3A;&#x4E86;&#x627E;&#x51FA;Zip&#x6587;&#x4EF6;&#x771F;&#x5B9E;&#x6570;&#x636E;&#x6240;&#x5728;&#x7684;&#x4F4D;&#x7F6E;&#x3002;</p><h4 id="Contents-of-ZIP-entries"><a href="#Contents-of-ZIP-entries" class="headerlink" title="Contents of ZIP entries"></a>Contents of ZIP entries</h4><p>&#x7531;Central Directory&#x6BB5;&#x53EF;&#x4EE5;&#x7D22;&#x5F15;&#x51FA;Local Entry&#x6BB5;&#xFF0C;&#x6700;&#x540E;&#x770B;&#x4E00;&#x4E0B;Local Entry&#x6BB5;</p><table><thead><tr><th>Offset</th><th>Bytes</th><th>Description</th><th>&#x5907;&#x6CE8;</th></tr></thead><tbody><tr><td>0</td><td>4</td><td>Local Entry SIGNATURE = 0x04034b50</td><td>&#x533A;&#x5757;&#x5934;&#x90E8;&#x6807;&#x8BB0;&#xFF0C;&#x56FA;&#x5B9A;&#x503C;0x04034b50</td></tr><tr><td>4</td><td>2</td><td>the version-needed-to-extract</td><td>&#x5FFD;&#x7565;</td></tr><tr><td>6</td><td>2</td><td>the general-purpose flags</td><td>&#x901A;&#x7528;&#x4F4D;&#x6807;&#x8BB0;</td></tr><tr><td>8</td><td>2</td><td>the compression method</td><td>&#x538B;&#x7F29;&#x65B9;&#x6CD5;</td></tr><tr><td>10</td><td>2</td><td>the MSDOS last modified file time</td><td>&#x6587;&#x4EF6;&#x6700;&#x540E;&#x4FEE;&#x6539;&#x65F6;&#x95F4;</td></tr><tr><td>12</td><td>2</td><td>the MSDOS last modified file date</td><td>&#x6587;&#x4EF6;&#x6700;&#x540E;&#x4FEE;&#x6539;&#x65E5;&#x671F;</td></tr><tr><td>14</td><td>4</td><td>the CRC32 of the uncompressed data</td><td>crc32&#x6821;&#x9A8C;&#x7801;</td></tr><tr><td>18</td><td>4</td><td>the compressed size</td><td>&#x538B;&#x7F29;&#x540E;&#x7684;&#x5927;&#x5C0F;</td></tr><tr><td>22</td><td>4</td><td>the uncompressed size</td><td>&#x672A;&#x538B;&#x7F29;&#x7684;&#x5927;&#x5C0F;</td></tr><tr><td>26</td><td>2</td><td>the length of the file name</td><td>&#x6587;&#x4EF6;&#x540D;&#x957F;&#x5EA6;</td></tr><tr><td>28</td><td>2</td><td>the length of the extras</td><td>&#x6269;&#x5C55;&#x57DF;&#x957F;&#x5EA6;</td></tr><tr><td>30</td><td>i</td><td>the file name</td><td>&#x6587;&#x4EF6;&#x540D;</td></tr><tr><td>30+i</td><td>j</td><td>the extras</td><td>&#x6269;&#x5C55;&#x533A;</td></tr><tr><td>30+i+j</td><td>k</td><td>file data</td><td>&#x771F;&#x5B9E;&#x538B;&#x7F29;&#x6570;&#x636E;&#x6240;&#x5728;&#x4F4D;&#x7F6E;</td></tr></tbody></table><p>&#x8BE5;&#x6BB5;&#x7531;n&#x4E2A;&#x8868;&#x683C;&#x8868;&#x793A;&#x7684;&#x7ED3;&#x6784;&#x6784;&#x6210;&#x3002;</p><h4 id="Google-Archive-Patch&#x89E3;&#x6790;Zip&#x6587;&#x4EF6;&#x4EE3;&#x7801;"><a href="#Google-Archive-Patch&#x89E3;&#x6790;Zip&#x6587;&#x4EF6;&#x4EE3;&#x7801;" class="headerlink" title="Google Archive Patch&#x89E3;&#x6790;Zip&#x6587;&#x4EF6;&#x4EE3;&#x7801;"></a>Google Archive Patch&#x89E3;&#x6790;Zip&#x6587;&#x4EF6;&#x4EE3;&#x7801;</h4><p>Google Archive Patch&#x5185;&#x90E8;&#x5B9E;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;&#x89E3;&#x6790;Zip&#x6587;&#x4EF6;&#x7684;mini&#x7ED3;&#x6784;&#xFF0C;&#x89E3;&#x6790;&#x7684;&#x5DE5;&#x4F5C;&#x4E3B;&#x8981;&#x7531;com.google.archivepatcher.generator.MinimalZipParser&#x7C7B;&#x8D1F;&#x8D23;&#xFF0C;&#x627F;&#x8F7D;&#x89E3;&#x6790;&#x51FA;&#x6765;&#x7684;&#x6570;&#x636E;&#x4E3B;&#x8981;&#x7531;MinimalCentralDirectoryMetadata&#x3001;MinimalZipArchive&#x548C;MinimalZipEntry&#x8D1F;&#x8D23;&#x3002;&#x89E3;&#x6790;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x6700;&#x7EC8;&#x8F93;&#x51FA;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x6309;&#x7167;&#x504F;&#x79FB;&#x91CF;&#x6392;&#x5E8F;&#x7684;MinimalZipEntry&#x5217;&#x8868;&#x3002;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;MinimalZipEntry&gt; <span class="title">listEntriesInternal</span><span class="params">(RandomAccessFileInputStream in)</span></span></span><br><span class="line"><span class="function">      <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">    <span class="comment">// Step 1: Locate the end-of-central-directory record header.</span></span><br><span class="line">    <span class="keyword">long</span> offsetOfEocd = MinimalZipParser.locateStartOfEocd(in, <span class="number">32768</span>);</span><br><span class="line">    <span class="keyword">if</span> (offsetOfEocd == -<span class="number">1</span>) {</span><br><span class="line">      <span class="comment">// Archive is weird, abort.</span></span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> ZipException(<span class="string">&quot;EOCD record not found in last 32k of archive, giving up&quot;</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Step 2: Parse the end-of-central-directory data to locate the central directory itself</span></span><br><span class="line">    in.setRange(offsetOfEocd, in.length() - offsetOfEocd);</span><br><span class="line">    MinimalCentralDirectoryMetadata centralDirectoryMetadata = MinimalZipParser.parseEocd(in);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Step 3: Extract a list of all central directory entries (contiguous data stream)</span></span><br><span class="line">    in.setRange(</span><br><span class="line">        centralDirectoryMetadata.getOffsetOfCentralDirectory(),</span><br><span class="line">        centralDirectoryMetadata.getLengthOfCentralDirectory());</span><br><span class="line">    List&lt;MinimalZipEntry&gt; minimalZipEntries =</span><br><span class="line">        <span class="keyword">new</span> ArrayList&lt;MinimalZipEntry&gt;(centralDirectoryMetadata.getNumEntriesInCentralDirectory());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; centralDirectoryMetadata.getNumEntriesInCentralDirectory(); x++) {</span><br><span class="line">      minimalZipEntries.add(MinimalZipParser.parseCentralDirectoryEntry(in));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Step 4: Sort the entries in file order, not central directory order.</span></span><br><span class="line">    Collections.sort(minimalZipEntries, LOCAL_ENTRY_OFFSET_COMAPRATOR);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Step 5: Seek out each local entry and calculate the offset of the compressed data within</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; minimalZipEntries.size(); x++) {</span><br><span class="line">      MinimalZipEntry entry = minimalZipEntries.get(x);</span><br><span class="line">      <span class="keyword">long</span> offsetOfNextEntry;</span><br><span class="line">      <span class="keyword">if</span> (x &lt; minimalZipEntries.size() - <span class="number">1</span>) {</span><br><span class="line">        <span class="comment">// Don&apos;t allow reading past the start of the next entry, for sanity.</span></span><br><span class="line">        offsetOfNextEntry = minimalZipEntries.get(x + <span class="number">1</span>).getFileOffsetOfLocalEntry();</span><br><span class="line">      } <span class="keyword">else</span> {</span><br><span class="line">        <span class="comment">// Last entry. Don&apos;t allow reading into the central directory, for sanity.</span></span><br><span class="line">        offsetOfNextEntry = centralDirectoryMetadata.getOffsetOfCentralDirectory();</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">long</span> rangeLength = offsetOfNextEntry - entry.getFileOffsetOfLocalEntry();</span><br><span class="line">      in.setRange(entry.getFileOffsetOfLocalEntry(), rangeLength);</span><br><span class="line">      <span class="keyword">long</span> relativeDataOffset = MinimalZipParser.parseLocalEntryAndGetCompressedDataOffset(in);</span><br><span class="line">      entry.setFileOffsetOfCompressedData(entry.getFileOffsetOfLocalEntry() + relativeDataOffset);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Done!</span></span><br><span class="line">    <span class="keyword">return</span> minimalZipEntries;</span><br><span class="line">  }</span><br></pre></td></tr></table></figure><p>&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x4E3B;&#x8981;&#x505A;&#x4E86;&#x4E0B;&#x9762;&#x51E0;&#x4EF6;&#x4E8B;</p><ul><li>&#x5B9A;&#x4F4D;End of Central Directory&#x8D77;&#x59CB;&#x504F;&#x79FB;&#x91CF;</li><li>&#x627E;&#x5230;Central Directory&#x6BB5;</li><li>&#x89E3;&#x6790;Central Directory&#x6BB5;</li><li>&#x6392;&#x5E8F;&#xFF0C;&#x6309;&#x7167;&#x504F;&#x79FB;&#x91CF;&#x5347;&#x5E8F;</li><li>&#x89E3;&#x6790;&#x771F;&#x5B9E;&#x6570;&#x636E;&#xFF0C;&#x627E;&#x5230;&#x5176;&#x504F;&#x79FB;&#x91CF;</li></ul><p>&#x5982;&#x4F55;&#x5B9A;&#x4F4D;End of Central Directory&#x8D77;&#x59CB;&#x504F;&#x79FB;&#x91CF;&#xFF0C;&#x5176;&#x5B9E;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x626B;&#x63CF;&#x5B57;&#x8282;&#xFF0C;&#x627E;&#x5230;&#x7279;&#x5B9A;&#x7684;&#x5934;&#x90E8;&#xFF0C;&#x5373;0x06054b50&#xFF0C;&#x5176;&#x5185;&#x90E8;&#x5B9E;&#x73B0;&#x662F;&#x626B;&#x63CF;zip&#x6587;&#x4EF6;&#x7684;&#x6700;&#x540E;32k&#x90E8;&#x5206;&#x7684;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#xFF0C;&#x627E;&#x5230;&#x4E86;&#x5C31;&#x8FD4;&#x56DE;&#xFF0C;&#x627E;&#x4E0D;&#x5230;&#x5C31;&#x629B;&#x5F02;&#x5E38;&#x3002;&#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x679C;&#x6700;&#x540E;32k&#x627E;&#x4E0D;&#x5230;&#x600E;&#x4E48;&#x529E;&#xFF0C;&#x627E;&#x4E86;&#x76F8;&#x5173;&#x8D44;&#x6599;&#xFF0C;&#x4E5F;&#x6CA1;&#x627E;&#x5230;End of Central Directory&#x4E00;&#x5B9A;&#x5728;&#x6700;&#x540E;32k&#x7684;&#x8BF4;&#x6CD5;&#xFF0C;&#x7FFB;&#x4E86;Android Multidex&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x53D1;&#x73B0;&#x5B83;&#x626B;&#x63CF;&#x7684;&#x662F;&#x6700;&#x540E;64k&#x7684;&#x5B57;&#x8282;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x59D1;&#x4E14;&#x8BA4;&#x4E3A;&#x5B83;&#x4E00;&#x5B9A;&#x80FD;&#x626B;&#x63CF;&#x5F97;&#x5230;&#x5427;&#x3002;&#x5176;&#x5B9E;&#x73B0;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">locateStartOfEocd</span><span class="params">(RandomAccessFileInputStream in, <span class="keyword">int</span> searchBufferLength)</span></span></span><br><span class="line"><span class="function">      <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> maxBufferSize = (<span class="keyword">int</span>) Math.min(searchBufferLength, in.length());</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[maxBufferSize];<span class="comment">//32k</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">long</span> rangeStart = in.length() - buffer.length;</span><br><span class="line">    in.setRange(rangeStart, buffer.length);</span><br><span class="line">    readOrDie(in, buffer, <span class="number">0</span>, buffer.length);<span class="comment">//read to buffer</span></span><br><span class="line">    <span class="keyword">int</span> offset = locateStartOfEocd(buffer);<span class="comment">//locate</span></span><br><span class="line">    <span class="keyword">if</span> (offset == -<span class="number">1</span>) {</span><br><span class="line">      <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> rangeStart + offset;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">locateStartOfEocd</span><span class="params">(<span class="keyword">byte</span>[] buffer)</span> </span>{</span><br><span class="line">    <span class="keyword">int</span> last4Bytes = <span class="number">0</span>; <span class="comment">// This is the 32 bits of data from the file</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> offset = buffer.length - <span class="number">1</span>; offset &gt;= <span class="number">0</span>; offset--) {</span><br><span class="line">      last4Bytes &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">      last4Bytes |= buffer[offset];</span><br><span class="line">      <span class="keyword">if</span> (last4Bytes == EOCD_SIGNATURE) {<span class="comment">//0x06054b50</span></span><br><span class="line">        <span class="keyword">return</span> offset;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">  }</span><br></pre></td></tr></table></figure><p>&#x627E;&#x5230;End of Central Directory&#x7684;&#x8D77;&#x59CB;&#x504F;&#x79FB;&#x4F4D;&#x7F6E;&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x662F;&#x89E3;&#x6790;&#x8BE5;&#x6BB5;&#x6570;&#x636E;&#xFF0C;&#x8FD4;&#x56DE;MinimalCentralDirectoryMetadata&#x6570;&#x636E;&#x7ED3;&#x6784;&#x4E86;&#x3002;&#x89E3;&#x6790;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MinimalCentralDirectoryMetadata <span class="title">parseEocd</span><span class="params">(InputStream in)</span></span></span><br><span class="line"><span class="function">      <span class="keyword">throws</span> IOException, ZipException </span>{</span><br><span class="line">    <span class="keyword">if</span> (((<span class="keyword">int</span>) read32BitUnsigned(in)) != EOCD_SIGNATURE) {<span class="comment">//0x06054b50</span></span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> ZipException(<span class="string">&quot;Bad eocd header&quot;</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// *** 4 bytes encode EOCD_SIGNATURE, ignore (already found and verified).</span></span><br><span class="line">    <span class="comment">// 2 bytes encode disk number for this archive, ignore.</span></span><br><span class="line">    <span class="comment">// 2 bytes encode disk number for the central directory, ignore.</span></span><br><span class="line">    <span class="comment">// 2 bytes encode num entries in the central directory on this disk, ignore.</span></span><br><span class="line">    <span class="comment">// *** 2 bytes encode num entries in the central directory overall [READ THIS]</span></span><br><span class="line">    <span class="comment">// *** 4 bytes encode the length of the central directory [READ THIS]</span></span><br><span class="line">    <span class="comment">// *** 4 bytes encode the file offset of the central directory [READ THIS]</span></span><br><span class="line">    <span class="comment">// 2 bytes encode the length of the zip file comment, ignore.</span></span><br><span class="line">    <span class="comment">// Everything else from here to the EOF is the zip file comment, or junk. Ignore.</span></span><br><span class="line">    skipOrDie(in, <span class="number">2</span> + <span class="number">2</span> + <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">int</span> numEntriesInCentralDirectory = read16BitUnsigned(in);<span class="comment">//number</span></span><br><span class="line">    <span class="keyword">if</span> (numEntriesInCentralDirectory == <span class="number">0xffff</span>) {</span><br><span class="line">      <span class="comment">// If 0xffff, this is a zip64 archive and this code doesn&apos;t handle that.</span></span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> ZipException(<span class="string">&quot;No support for zip64&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">long</span> lengthOfCentralDirectory = read32BitUnsigned(in);<span class="comment">//length</span></span><br><span class="line">    <span class="keyword">long</span> offsetOfCentralDirectory = read32BitUnsigned(in);<span class="comment">//offset</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> MinimalCentralDirectoryMetadata(</span><br><span class="line">        numEntriesInCentralDirectory, offsetOfCentralDirectory, lengthOfCentralDirectory);</span><br><span class="line">  }</span><br></pre></td></tr></table></figure><p>&#x4ECE;&#x4EE3;&#x7801;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x5176;&#x5B9E;&#x53EA;&#x662F;&#x89E3;&#x6790;&#x51FA;&#x4E86;&#x4E09;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5206;&#x522B;&#x662F;:</p><ul><li>Central Directory &#x4E2A;&#x6570; n</li><li>Central Directory&#x8D77;&#x59CB;&#x504F;&#x79FB; offset</li><li>Central Directory&#x603B;&#x957F;&#x5EA6; length</li></ul><p>&#x4E4B;&#x540E;&#x5C31;&#x662F;&#x9501;&#x5B9A;&#x6570;&#x636E;&#x533A;&#x57DF;&#x5728;[offset,offest+length]&#xFF0C;&#x5185;&#x90E8;&#x5B9E;&#x73B0;&#x662F;RandomAccessFile&#x3002;for&#x5FAA;&#x73AF;&#xFF0C;&#x5FAA;&#x73AF;&#x6B21;&#x6570;&#x4E3A;n&#xFF0C;&#x4F9D;&#x6B21;&#x89E3;&#x6790;&#x5404;&#x4E2A;Central Directory&#x3002;&#x5176;&#x89E3;&#x6790;&#x5355;&#x4E2A;Central Directory&#x7684;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> MinimalZipEntry <span class="title">parseCentralDirectoryEntry</span><span class="params">(InputStream in)</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">    <span class="comment">// *** 4 bytes encode the CENTRAL_DIRECTORY_ENTRY_SIGNATURE, verify for sanity</span></span><br><span class="line">    <span class="comment">// 2 bytes encode the version-made-by, ignore</span></span><br><span class="line">    <span class="comment">// 2 bytes encode the version-needed-to-extract, ignore</span></span><br><span class="line">    <span class="comment">// *** 2 bytes encode the general-purpose flags, read for language encoding. [READ THIS]</span></span><br><span class="line">    <span class="comment">// *** 2 bytes encode the compression method, [READ THIS]</span></span><br><span class="line">    <span class="comment">// 2 bytes encode the MSDOS last modified file time, ignore</span></span><br><span class="line">    <span class="comment">// 2 bytes encode the MSDOS last modified file date, ignore</span></span><br><span class="line">    <span class="comment">// *** 4 bytes encode the CRC32 of the uncompressed data [READ THIS]</span></span><br><span class="line">    <span class="comment">// *** 4 bytes encode the compressed size [READ THIS]</span></span><br><span class="line">    <span class="comment">// *** 4 bytes encode the uncompressed size [READ THIS]</span></span><br><span class="line">    <span class="comment">// *** 2 bytes encode the length of the file name [READ THIS]</span></span><br><span class="line">    <span class="comment">// *** 2 bytes encode the length of the extras, needed to skip the bytes later [READ THIS]</span></span><br><span class="line">    <span class="comment">// *** 2 bytes encode the length of the comment, needed to skip the bytes later [READ THIS]</span></span><br><span class="line">    <span class="comment">// 2 bytes encode the disk number, ignore</span></span><br><span class="line">    <span class="comment">// 2 bytes encode the internal file attributes, ignore</span></span><br><span class="line">    <span class="comment">// 4 bytes encode the external file attributes, ignore</span></span><br><span class="line">    <span class="comment">// *** 4 bytes encode the offset of the local section entry, where the data is [READ THIS]</span></span><br><span class="line">    <span class="comment">// n bytes encode the file name</span></span><br><span class="line">    <span class="comment">// n bytes encode the extras</span></span><br><span class="line">    <span class="comment">// n bytes encode the comment</span></span><br><span class="line">    <span class="keyword">if</span> (((<span class="keyword">int</span>) read32BitUnsigned(in)) != CENTRAL_DIRECTORY_ENTRY_SIGNATURE) {</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> ZipException(<span class="string">&quot;Bad central directory header&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">    skipOrDie(in, <span class="number">2</span> + <span class="number">2</span>); <span class="comment">// Skip version stuff</span></span><br><span class="line">    <span class="keyword">int</span> generalPurposeFlags = read16BitUnsigned(in);</span><br><span class="line">    <span class="keyword">int</span> compressionMethod = read16BitUnsigned(in);</span><br><span class="line">    skipOrDie(in, <span class="number">2</span> + <span class="number">2</span>); <span class="comment">// Skip MSDOS junk</span></span><br><span class="line">    <span class="keyword">long</span> crc32OfUncompressedData = read32BitUnsigned(in);</span><br><span class="line">    <span class="keyword">long</span> compressedSize = read32BitUnsigned(in);</span><br><span class="line">    <span class="keyword">long</span> uncompressedSize = read32BitUnsigned(in);</span><br><span class="line">    <span class="keyword">int</span> fileNameLength = read16BitUnsigned(in);</span><br><span class="line">    <span class="keyword">int</span> extrasLength = read16BitUnsigned(in);</span><br><span class="line">    <span class="keyword">int</span> commentLength = read16BitUnsigned(in);</span><br><span class="line">    skipOrDie(in, <span class="number">2</span> + <span class="number">2</span> + <span class="number">4</span>); <span class="comment">// Skip the disk number and file attributes</span></span><br><span class="line">    <span class="keyword">long</span> fileOffsetOfLocalEntry = read32BitUnsigned(in);</span><br><span class="line">    <span class="keyword">byte</span>[] fileNameBuffer = <span class="keyword">new</span> <span class="keyword">byte</span>[fileNameLength];</span><br><span class="line">    readOrDie(in, fileNameBuffer, <span class="number">0</span>, fileNameBuffer.length);</span><br><span class="line">    skipOrDie(in, extrasLength + commentLength);</span><br><span class="line">    <span class="comment">// General purpose flag bit 11 is an important hint for the character set used for file names.</span></span><br><span class="line">    <span class="keyword">boolean</span> generalPurposeFlagBit11 = (generalPurposeFlags &amp; (<span class="number">0x1</span> &lt;&lt; <span class="number">10</span>)) != <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> MinimalZipEntry(</span><br><span class="line">        compressionMethod,</span><br><span class="line">        crc32OfUncompressedData,</span><br><span class="line">        compressedSize,</span><br><span class="line">        uncompressedSize,</span><br><span class="line">        fileNameBuffer,</span><br><span class="line">        generalPurposeFlagBit11,</span><br><span class="line">        fileOffsetOfLocalEntry);</span><br><span class="line">  }</span><br></pre></td></tr></table></figure><p>&#x4E3B;&#x8981;&#x89E3;&#x6790;&#x51FA;&#x5982;&#x4E0B;&#x7684;&#x6570;&#x636E;&#xFF1A;</p><ul><li>&#x538B;&#x7F29;&#x65B9;&#x6CD5;</li><li>crc32&#x6821;&#x9A8C;&#x7801;</li><li>&#x538B;&#x7F29;&#x524D;&#x5927;&#x5C0F;</li><li>&#x538B;&#x7F29;&#x540E;&#x5927;&#x5C0F;</li><li>&#x6587;&#x4EF6;&#x540D;</li><li>&#x901A;&#x7528;&#x6807;&#x8BB0;&#x4F4D;</li><li>local entry&#x504F;&#x79FB;&#x4F4D;&#x7F6E;offset</li></ul><p>&#x8FD4;&#x56DE;&#x4E86;&#x4E00;&#x4E2A;list&#xFF0C;&#x91CC;&#x9762;&#x6709;n&#x4E2A;MinimalZipEntry&#x7ED3;&#x6784;&#xFF0C;&#x7ECF;&#x8FC7;&#x6309;offset&#x5347;&#x5E8F;&#x6392;&#x5E8F;&#x540E;&#xFF0C;&#x518D;&#x904D;&#x5386;list&#xFF0C;&#x89E3;&#x6790;&#x5176;&#x5728;local entry&#x4E2D;&#x7684;&#x771F;&#x5B9E;&#x6570;&#x636E;&#x7684;&#x504F;&#x79FB;&#xFF0C;&#x5176;&#x89E3;&#x6790;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">parseLocalEntryAndGetCompressedDataOffset</span><span class="params">(InputStream in)</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">    <span class="comment">// *** 4 bytes encode the LOCAL_ENTRY_SIGNATURE, verify for sanity</span></span><br><span class="line">    <span class="comment">// 2 bytes encode the version-needed-to-extract, ignore</span></span><br><span class="line">    <span class="comment">// 2 bytes encode the general-purpose flags, ignore</span></span><br><span class="line">    <span class="comment">// 2 bytes encode the compression method, ignore (redundant with central directory)</span></span><br><span class="line">    <span class="comment">// 2 bytes encode the MSDOS last modified file time, ignore</span></span><br><span class="line">    <span class="comment">// 2 bytes encode the MSDOS last modified file date, ignore</span></span><br><span class="line">    <span class="comment">// 4 bytes encode the CRC32 of the uncompressed data, ignore (redundant with central directory)</span></span><br><span class="line">    <span class="comment">// 4 bytes encode the compressed size, ignore (redundant with central directory)</span></span><br><span class="line">    <span class="comment">// 4 bytes encode the uncompressed size, ignore (redundant with central directory)</span></span><br><span class="line">    <span class="comment">// *** 2 bytes encode the length of the file name, needed to skip the bytes later [READ THIS]</span></span><br><span class="line">    <span class="comment">// *** 2 bytes encode the length of the extras, needed to skip the bytes later [READ THIS]</span></span><br><span class="line">    <span class="comment">// The rest is the data, which is the main attraction here.</span></span><br><span class="line">    <span class="keyword">if</span> (((<span class="keyword">int</span>) read32BitUnsigned(in)) != LOCAL_ENTRY_SIGNATURE) {</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> ZipException(<span class="string">&quot;Bad local entry header&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">int</span> junkLength = <span class="number">2</span> + <span class="number">2</span> + <span class="number">2</span> + <span class="number">2</span> + <span class="number">2</span> + <span class="number">4</span> + <span class="number">4</span> + <span class="number">4</span>;</span><br><span class="line">    skipOrDie(in, junkLength); <span class="comment">// Skip everything up to the length of the file name</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> fileNameLength = read16BitUnsigned(in);</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> extrasLength = read16BitUnsigned(in);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// The file name is already known and will match the central directory, so no need to read it.</span></span><br><span class="line">    <span class="comment">// The extra field length can be different here versus in the central directory and is used for</span></span><br><span class="line">    <span class="comment">// things like zipaligning APKs. This single value is the critical part as it dictates where the</span></span><br><span class="line">    <span class="comment">// actual DATA for the entry begins.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">4</span> + junkLength + <span class="number">2</span> + <span class="number">2</span> + fileNameLength + extrasLength;</span><br><span class="line">  }</span><br></pre></td></tr></table></figure><p>&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x8DF3;&#x8FC7;&#x4E86;locat entry&#x7684;&#x771F;&#x5B9E;&#x6570;&#x636E;&#x524D;&#x9762;&#x7684;&#x6240;&#x6709;&#x5B57;&#x8282;&#xFF0C;&#x83B7;&#x5F97;&#x504F;&#x79FB;&#x3002;</p><p>&#x81F3;&#x6B64;Zip&#x6587;&#x4EF6;&#x89E3;&#x6790;&#x5B8C;&#x6210;&#x3002;</p><h3 id="&#x5DEE;&#x91CF;&#x6587;&#x4EF6;&#x7684;&#x751F;&#x6210;"><a href="#&#x5DEE;&#x91CF;&#x6587;&#x4EF6;&#x7684;&#x751F;&#x6210;" class="headerlink" title="&#x5DEE;&#x91CF;&#x6587;&#x4EF6;&#x7684;&#x751F;&#x6210;"></a>&#x5DEE;&#x91CF;&#x6587;&#x4EF6;&#x7684;&#x751F;&#x6210;</h3><p>&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#x4E3B;&#x8981;&#x5728;FileByFileV1DeltaGenerator&#x4E2D;&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">generateDelta</span><span class="params">(File oldFile, File newFile, OutputStream patchOut)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> IOException, InterruptedException </span>{</span><br><span class="line">  <span class="keyword">try</span> (TempFileHolder deltaFriendlyOldFile = <span class="keyword">new</span> TempFileHolder();</span><br><span class="line">      TempFileHolder deltaFriendlyNewFile = <span class="keyword">new</span> TempFileHolder();</span><br><span class="line">      TempFileHolder deltaFile = <span class="keyword">new</span> TempFileHolder();</span><br><span class="line">      FileOutputStream deltaFileOut = <span class="keyword">new</span> FileOutputStream(deltaFile.file);</span><br><span class="line">      BufferedOutputStream bufferedDeltaOut = <span class="keyword">new</span> BufferedOutputStream(deltaFileOut)) {</span><br><span class="line">    PreDiffExecutor.Builder builder =</span><br><span class="line">        <span class="keyword">new</span> PreDiffExecutor.Builder()</span><br><span class="line">            .readingOriginalFiles(oldFile, newFile)</span><br><span class="line">            .writingDeltaFriendlyFiles(deltaFriendlyOldFile.file, deltaFriendlyNewFile.file);</span><br><span class="line">    <span class="keyword">for</span> (RecommendationModifier modifier : recommendationModifiers) {</span><br><span class="line">      builder.withRecommendationModifier(modifier);</span><br><span class="line">    }</span><br><span class="line">    PreDiffExecutor executor = builder.build();</span><br><span class="line">    PreDiffPlan preDiffPlan = executor.prepareForDiffing();</span><br><span class="line">    DeltaGenerator deltaGenerator = getDeltaGenerator();</span><br><span class="line">    deltaGenerator.generateDelta(</span><br><span class="line">        deltaFriendlyOldFile.file, deltaFriendlyNewFile.file, bufferedDeltaOut);</span><br><span class="line">    bufferedDeltaOut.close();</span><br><span class="line">    PatchWriter patchWriter =</span><br><span class="line">        <span class="keyword">new</span> PatchWriter(</span><br><span class="line">            preDiffPlan,</span><br><span class="line">            deltaFriendlyOldFile.file.length(),</span><br><span class="line">            deltaFriendlyNewFile.file.length(),</span><br><span class="line">            deltaFile.file);</span><br><span class="line">    patchWriter.writeV1Patch(patchOut);</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">protected</span> DeltaGenerator <span class="title">getDeltaGenerator</span><span class="params">()</span> </span>{</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> BsDiffDeltaGenerator();</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5E72;&#x4E86;&#x5982;&#x4E0B;&#x51E0;&#x4EF6;&#x4E8B;:</p><ul><li>&#x751F;&#x6210;&#x4E86;&#x4E09;&#x4E2A;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#xFF0C;&#x5206;&#x522B;&#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x65E7;&#x6587;&#x4EF6;&#x7684;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x6587;&#x4EF6;&#xFF0C;&#x65B0;&#x6587;&#x4EF6;&#x7684;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x6587;&#x4EF6;&#xFF0C;&#x5DEE;&#x91CF;&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x4E09;&#x4E2A;&#x6587;&#x4EF6;&#x4F1A;&#x5728;jvm&#x9000;&#x51FA;&#x65F6;&#x81EA;&#x52A8;&#x5220;&#x9664;&#x3002;</li><li>&#x8C03;&#x7528;PreDiffExecutor&#x7684;prepareForDiffing&#x751F;&#x6210;PreDiffPlan&#x5BF9;&#x8C61;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x505A;&#x4E86;&#x5F88;&#x591A;&#x5F88;&#x591A;&#x5341;&#x5206;&#x590D;&#x6742;&#x7684;&#x4E8B;&#x60C5;&#xFF0C;&#x540E;&#x9762;&#x7EC6;&#x8BF4;</li><li>&#x5E94;&#x7528;BsDiff&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#x751F;&#x6210;&#x5DEE;&#x91CF;&#x6587;&#x4EF6;</li><li>&#x751F;&#x6210;patch&#x6587;&#x4EF6;&#xFF0C;patch&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#x540E;&#x9762;&#x7EC6;&#x8BF4;&#x3002;</li></ul><p>&#x73B0;&#x5728;&#x6765;&#x770B;&#x4E0B;PreDiffExecutor&#x7684;prepareForDiffing&#x51FD;&#x6570;&#xFF1A;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> PreDiffPlan <span class="title">prepareForDiffing</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">  PreDiffPlan preDiffPlan = generatePreDiffPlan();</span><br><span class="line">  List&lt;TypedRange&lt;JreDeflateParameters&gt;&gt; deltaFriendlyNewFileRecompressionPlan = <span class="keyword">null</span>;</span><br><span class="line">  <span class="keyword">if</span> (deltaFriendlyOldFile != <span class="keyword">null</span>) {</span><br><span class="line">    <span class="comment">// Builder.writingDeltaFriendlyFiles() ensures old and new are non-null when called, so a</span></span><br><span class="line">    <span class="comment">// check on either is sufficient.</span></span><br><span class="line">    deltaFriendlyNewFileRecompressionPlan =</span><br><span class="line">        Collections.unmodifiableList(generateDeltaFriendlyFiles(preDiffPlan));</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> PreDiffPlan(</span><br><span class="line">      preDiffPlan.getQualifiedRecommendations(),</span><br><span class="line">      preDiffPlan.getOldFileUncompressionPlan(),</span><br><span class="line">      preDiffPlan.getNewFileUncompressionPlan(),</span><br><span class="line">      deltaFriendlyNewFileRecompressionPlan);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5E72;&#x4E86;&#x4E0B;&#x9762;&#x51E0;&#x4EF6;&#x4E8B;&#xFF1A;</p><ul><li>&#x8C03;&#x7528;generatePreDiffPlan&#x51FD;&#x6570;&#xFF0C;&#x751F;&#x6210;&#x4E00;&#x4E2A;PreDiffPlan&#x5BF9;&#x8C61;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x540E;&#x9762;&#x7EC6;&#x8BF4;</li><li>&#x6839;&#x636E;&#x8FD4;&#x56DE;&#x7684;PreDiffPlan&#x5BF9;&#x8C61;&#xFF0C;&#x8C03;&#x7528;generateDeltaFriendlyFiles&#x51FD;&#x6570;&#x751F;&#x6210;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x540E;&#x9762;&#x7EC6;&#x8BF4;</li><li>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;PreDiffPlan&#x5BF9;&#x8C61;&#xFF0C;&#x5C06;&#x76F8;&#x5173;&#x53C2;&#x6570;&#x4F20;&#x5165;&#xFF0C;&#x5206;&#x522B;&#x662F;&#x5EFA;&#x8BAE;&#x5217;&#x8868;&#xFF0C;&#x65E7;&#x6587;&#x4EF6;&#x9700;&#x8981;&#x88AB;&#x89E3;&#x538B;&#x7684;&#x5217;&#x8868;&#xFF0C;&#x65B0;&#x95FB;&#x9700;&#x8981;&#x88AB;&#x89E3;&#x538B;&#x7684;&#x5217;&#x8868;&#xFF0C;&#x8FD8;&#x6709;&#x751F;&#x6210;&#x7684;&#x65B0;&#x6587;&#x4EF6;&#x7684;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x76F8;&#x5173;&#x7684;&#x5217;&#x8868;</li></ul><p>&#x73B0;&#x5728;&#x6765;&#x770B;&#x770B;generatePreDiffPlan&#x51FD;&#x6570;&#xFF1A;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> PreDiffPlan <span class="title">generatePreDiffPlan</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">  Map&lt;ByteArrayHolder, MinimalZipEntry&gt; originalOldArchiveZipEntriesByPath =</span><br><span class="line">      <span class="keyword">new</span> HashMap&lt;ByteArrayHolder, MinimalZipEntry&gt;();</span><br><span class="line">  Map&lt;ByteArrayHolder, MinimalZipEntry&gt; originalNewArchiveZipEntriesByPath =</span><br><span class="line">      <span class="keyword">new</span> HashMap&lt;ByteArrayHolder, MinimalZipEntry&gt;();</span><br><span class="line">  Map&lt;ByteArrayHolder, JreDeflateParameters&gt; originalNewArchiveJreDeflateParametersByPath =</span><br><span class="line">      <span class="keyword">new</span> HashMap&lt;ByteArrayHolder, JreDeflateParameters&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (MinimalZipEntry zipEntry : MinimalZipArchive.listEntries(originalOldFile)) {</span><br><span class="line">    ByteArrayHolder key = <span class="keyword">new</span> ByteArrayHolder(zipEntry.getFileNameBytes());</span><br><span class="line">    originalOldArchiveZipEntriesByPath.put(key, zipEntry);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  DefaultDeflateCompressionDiviner diviner = <span class="keyword">new</span> DefaultDeflateCompressionDiviner();</span><br><span class="line">  <span class="keyword">for</span> (DivinationResult divinationResult : diviner.divineDeflateParameters(originalNewFile)) {</span><br><span class="line">    ByteArrayHolder key =</span><br><span class="line">        <span class="keyword">new</span> ByteArrayHolder(divinationResult.minimalZipEntry.getFileNameBytes());</span><br><span class="line">    originalNewArchiveZipEntriesByPath.put(key, divinationResult.minimalZipEntry);</span><br><span class="line">    originalNewArchiveJreDeflateParametersByPath.put(key, divinationResult.divinedParameters);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  PreDiffPlanner preDiffPlanner =</span><br><span class="line">      <span class="keyword">new</span> PreDiffPlanner(</span><br><span class="line">          originalOldFile,</span><br><span class="line">          originalOldArchiveZipEntriesByPath,</span><br><span class="line">          originalNewFile,</span><br><span class="line">          originalNewArchiveZipEntriesByPath,</span><br><span class="line">          originalNewArchiveJreDeflateParametersByPath,</span><br><span class="line">          recommendationModifiers.toArray(<span class="keyword">new</span> RecommendationModifier[] {}));</span><br><span class="line">  <span class="keyword">return</span> preDiffPlanner.generatePreDiffPlan();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;DivinationResult&gt; <span class="title">divineDeflateParameters</span><span class="params">(File archiveFile)</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">  List&lt;DivinationResult&gt; results = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">  <span class="keyword">for</span> (MinimalZipEntry minimalZipEntry : MinimalZipArchive.listEntries(archiveFile)) {</span><br><span class="line">    JreDeflateParameters divinedParameters = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (minimalZipEntry.isDeflateCompressed()) {</span><br><span class="line">      <span class="comment">// TODO(pasc): Reuse streams to avoid churning file descriptors</span></span><br><span class="line">      MultiViewInputStreamFactory isFactory =</span><br><span class="line">          <span class="keyword">new</span> RandomAccessFileInputStreamFactory(</span><br><span class="line">              archiveFile,</span><br><span class="line">              minimalZipEntry.getFileOffsetOfCompressedData(),</span><br><span class="line">              minimalZipEntry.getCompressedSize());</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Keep small entries in memory to avoid unnecessary file I/O.</span></span><br><span class="line">      <span class="keyword">if</span> (minimalZipEntry.getCompressedSize() &lt; (<span class="number">100</span> * <span class="number">1024</span>)) {</span><br><span class="line">        <span class="keyword">try</span> (InputStream is = isFactory.newStream()) {</span><br><span class="line">          <span class="keyword">byte</span>[] compressedBytes = <span class="keyword">new</span> <span class="keyword">byte</span>[(<span class="keyword">int</span>) minimalZipEntry.getCompressedSize()];</span><br><span class="line">          is.read(compressedBytes);</span><br><span class="line">          divinedParameters =</span><br><span class="line">              divineDeflateParameters(<span class="keyword">new</span> ByteArrayInputStreamFactory(compressedBytes));</span><br><span class="line">        } <span class="keyword">catch</span> (Exception ignore) {</span><br><span class="line">          divinedParameters = <span class="keyword">null</span>;</span><br><span class="line">        }</span><br><span class="line">      } <span class="keyword">else</span> {</span><br><span class="line">        divinedParameters = divineDeflateParameters(isFactory);</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    results.add(<span class="keyword">new</span> DivinationResult(minimalZipEntry, divinedParameters));</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> results;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> JreDeflateParameters <span class="title">divineDeflateParameters</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">    MultiViewInputStreamFactory compressedDataInputStreamFactory)</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">  <span class="keyword">byte</span>[] copyBuffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">32</span> * <span class="number">1024</span>];</span><br><span class="line">  <span class="comment">// Iterate over all relevant combinations of nowrap, strategy and level.</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">boolean</span> nowrap : <span class="keyword">new</span> <span class="keyword">boolean</span>[] {<span class="keyword">true</span>, <span class="keyword">false</span>}) {</span><br><span class="line">    Inflater inflater = <span class="keyword">new</span> Inflater(nowrap);</span><br><span class="line">    Deflater deflater = <span class="keyword">new</span> Deflater(<span class="number">0</span>, nowrap);</span><br><span class="line"></span><br><span class="line">    strategy_loop:</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> strategy : <span class="keyword">new</span> <span class="keyword">int</span>[] {<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>}) {</span><br><span class="line">      deflater.setStrategy(strategy);</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> level : LEVELS_BY_STRATEGY.get(strategy)) {</span><br><span class="line">        deflater.setLevel(level);</span><br><span class="line">        inflater.reset();</span><br><span class="line">        deflater.reset();</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">          <span class="keyword">if</span> (matches(inflater, deflater, compressedDataInputStreamFactory, copyBuffer)) {</span><br><span class="line">            end(inflater, deflater);</span><br><span class="line">            <span class="keyword">return</span> JreDeflateParameters.of(level, strategy, nowrap);</span><br><span class="line">          }</span><br><span class="line">        } <span class="keyword">catch</span> (ZipException e) {</span><br><span class="line">          <span class="comment">// Parse error in input. The only possibilities are corruption or the wrong nowrap.</span></span><br><span class="line">          <span class="comment">// Skip all remaining levels and strategies.</span></span><br><span class="line">          <span class="keyword">break</span> strategy_loop;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    end(inflater, deflater);</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>generatePreDiffPlan&#x505A;&#x7684;&#x4E8B;&#x60C5;&#x662F;&#x751F;&#x6210;&#x4E09;&#x4E2A;map&#x5BF9;&#x8C61;&#x3002;</p><ul><li>&#x7B2C;&#x4E00;&#x4E2A;map&#x5BF9;&#x8C61;&#x662F;&#x6301;&#x6709;&#x65E7;&#x6587;&#x4EF6;&#x7684;&#x76F8;&#x5173;&#x6570;&#x636E;&#x3002;key&#x4E3A;Zip Entry&#x7684;&#x6587;&#x4EF6;&#x540D;&#x5BF9;&#x5E94;&#x7684;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#x7684;holder&#x7C7B;ByteArrayHolder&#xFF0C;value&#x4E3A;MinimalZipEntry&#x3002;</li><li>&#x7B2C;&#x4E8C;&#x4E2A;map&#x5BF9;&#x8C61;&#x7684;&#x6301;&#x6709;&#x65B0;&#x6587;&#x4EF6;&#x7684;&#x76F8;&#x5173;&#x6570;&#x636E;&#x3002;key&#x4E3A;Zip Entry&#x7684;&#x6587;&#x4EF6;&#x540D;&#x5BF9;&#x5E94;&#x7684;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#x7684;holder&#x7C7B;ByteArrayHolder&#xFF0C;value&#x4E3A;MinimalZipEntry&#x3002;</li><li>&#x7B2C;&#x4E09;&#x4E2A;map&#x6570;&#x636E;&#x5C31;&#x662F;&#x6301;&#x6709;&#x63A8;&#x6D4B;&#x51FA;&#x6765;&#x7684;&#x65B0;&#x6587;&#x4EF6;&#x7684;Zip Entry&#x7684;&#x538B;&#x7F29;&#x7EA7;&#x522B;&#xFF0C;&#x7B56;&#x7565;&#xFF0C;&#x662F;&#x5426;&#x662F;nowrap&#x4E09;&#x4E2A;&#x6570;&#x636E;&#x3002;key&#x4E3A;Zip Entry&#x7684;&#x6587;&#x4EF6;&#x540D;&#x5BF9;&#x5E94;&#x7684;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#x7684;holder&#x7C7B;ByteArrayHolder&#xFF0C;value&#x4E3A;JreDeflateParameters</li></ul><p>&#x5BF9;&#x4E8E;&#x524D;&#x4E24;&#x4E2A;&#x6570;&#x636E;&#x8C03;&#x7528;&#x524D;&#x9762;&#x89E3;&#x6790;&#x8FC7;&#x7684;Zip&#x6587;&#x4EF6;&#x7ED3;&#x6784;&#x76F8;&#x5173;&#x51FD;&#x6570;&#xFF0C;&#x8FD4;&#x56DE;MinimalZipEntry&#x7684;List&#x7C7B;&#x578B;&#xFF0C;key&#x5C31;&#x6765;&#x81EA;MinimalZipEntry.getFileNameBytes()&#xFF0C;&#x800C;&#x503C;&#x5C31;&#x662F;&#x5176;&#x672C;&#x8EAB;&#x3002;</p><p>&#x800C;&#x7B2C;&#x4E09;&#x4E2A;&#x6570;&#x636E;&#x6765;&#x7684;&#x6BD4;&#x8F83;&#x8270;&#x8F9B;&#xFF0C;&#x9700;&#x8981;&#x7ECF;&#x8FC7;&#x63A8;&#x6D4B;&#xFF0C;&#x63A8;&#x6D4B;&#x7684;&#x65B9;&#x6CD5;&#x5F88;&#x66B4;&#x529B;&#xFF0C;&#x4E09;&#x5C42;for&#x5FAA;&#x73AF;&#xFF0C;&#x5C06;&#x538B;&#x7F29;&#x7684;&#x6570;&#x636E;&#x89E3;&#x538B;&#x7F29;&#xFF0C;&#x518D;&#x5229;&#x7528;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x6392;&#x5217;&#x7EC4;&#x5408;&#xFF0C;&#x5373;level&#xFF0C;strategy&#xFF0C;nowrap&#x6392;&#x5217;&#xFF0C;&#x8FDB;&#x884C;&#x91CD;&#x65B0;&#x538B;&#x7F29;&#xFF0C;&#x538B;&#x7F29;&#x540E;&#x7684;&#x6570;&#x636E;&#x5982;&#x679C;&#x7B49;&#x4E8E;&#x4ECE;Zip&#x4E2D;&#x89E3;&#x6790;&#x51FA;&#x6765;&#x7684;&#x538B;&#x7F29;&#x6570;&#x636E;&#xFF0C;&#x5219;&#x5F97;&#x5230;&#x5BF9;&#x5E94;&#x7684;level&#xFF0C;strategy&#xFF0C;nowrap&#x503C;&#x3002;&#x8FD9;&#x4E09;&#x4E2A;&#x503C;&#x7684;&#x627F;&#x8F7D;&#x65B9;&#x5F0F;&#x5C31;&#x662F;JreDeflateParameters&#x3002;</p><p>&#x5229;&#x7528;&#x8FD9;&#x4E09;&#x4E2A;map&#x6784;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;PreDiffPlanner&#x5BF9;&#x8C61;&#xFF0C;&#x8C03;&#x7528;&#x8BE5;&#x5BF9;&#x8C61;&#x7684;generatePreDiffPlan&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;PreDiffPlan&#xFF0C;&#x5176;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">PreDiffPlan <span class="title">generatePreDiffPlan</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">  List&lt;QualifiedRecommendation&gt; recommendations = getDefaultRecommendations();</span><br><span class="line">  <span class="keyword">for</span> (RecommendationModifier modifier : recommendationModifiers) {</span><br><span class="line">    <span class="comment">// Allow changing the recommendations base on arbitrary criteria.</span></span><br><span class="line">    recommendations = modifier.getModifiedRecommendations(oldFile, newFile, recommendations);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Process recommendations to extract ranges for decompression &amp; recompression</span></span><br><span class="line">  Set&lt;TypedRange&lt;Void&gt;&gt; oldFilePlan = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">  Set&lt;TypedRange&lt;JreDeflateParameters&gt;&gt; newFilePlan = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">  <span class="keyword">for</span> (QualifiedRecommendation recommendation : recommendations) {</span><br><span class="line">    <span class="keyword">if</span> (recommendation.getRecommendation().uncompressOldEntry) {</span><br><span class="line">      <span class="keyword">long</span> offset = recommendation.getOldEntry().getFileOffsetOfCompressedData();</span><br><span class="line">      <span class="keyword">long</span> length = recommendation.getOldEntry().getCompressedSize();</span><br><span class="line">      TypedRange&lt;Void&gt; range = <span class="keyword">new</span> TypedRange&lt;Void&gt;(offset, length, <span class="keyword">null</span>);</span><br><span class="line">      oldFilePlan.add(range);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (recommendation.getRecommendation().uncompressNewEntry) {</span><br><span class="line">      <span class="keyword">long</span> offset = recommendation.getNewEntry().getFileOffsetOfCompressedData();</span><br><span class="line">      <span class="keyword">long</span> length = recommendation.getNewEntry().getCompressedSize();</span><br><span class="line">      JreDeflateParameters newJreDeflateParameters =</span><br><span class="line">          newArchiveJreDeflateParametersByPath.get(</span><br><span class="line">              <span class="keyword">new</span> ByteArrayHolder(recommendation.getNewEntry().getFileNameBytes()));</span><br><span class="line">      TypedRange&lt;JreDeflateParameters&gt; range =</span><br><span class="line">          <span class="keyword">new</span> TypedRange&lt;JreDeflateParameters&gt;(offset, length, newJreDeflateParameters);</span><br><span class="line">      newFilePlan.add(range);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  List&lt;TypedRange&lt;Void&gt;&gt; oldFilePlanList = <span class="keyword">new</span> ArrayList&lt;&gt;(oldFilePlan);</span><br><span class="line">  Collections.sort(oldFilePlanList);</span><br><span class="line">  List&lt;TypedRange&lt;JreDeflateParameters&gt;&gt; newFilePlanList = <span class="keyword">new</span> ArrayList&lt;&gt;(newFilePlan);</span><br><span class="line">  Collections.sort(newFilePlanList);</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> PreDiffPlan(</span><br><span class="line">      Collections.unmodifiableList(recommendations),</span><br><span class="line">      Collections.unmodifiableList(oldFilePlanList),</span><br><span class="line">      Collections.unmodifiableList(newFilePlanList));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> List&lt;QualifiedRecommendation&gt; <span class="title">getDefaultRecommendations</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">  List&lt;QualifiedRecommendation&gt; recommendations = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// This will be used to find files that have been renamed, but not modified. This is relatively</span></span><br><span class="line">  <span class="comment">// cheap to construct as it just requires indexing all entries by the uncompressed CRC32, and</span></span><br><span class="line">  <span class="comment">// the CRC32 is already available in the ZIP headers.</span></span><br><span class="line">  SimilarityFinder trivialRenameFinder =</span><br><span class="line">      <span class="keyword">new</span> Crc32SimilarityFinder(oldFile, oldArchiveZipEntriesByPath.values());</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Iterate over every pair of entries and get a recommendation for what to do.</span></span><br><span class="line">  <span class="keyword">for</span> (Map.Entry&lt;ByteArrayHolder, MinimalZipEntry&gt; newEntry :</span><br><span class="line">      newArchiveZipEntriesByPath.entrySet()) {</span><br><span class="line">    ByteArrayHolder newEntryPath = newEntry.getKey();</span><br><span class="line">    MinimalZipEntry oldZipEntry = oldArchiveZipEntriesByPath.get(newEntryPath);</span><br><span class="line">    <span class="keyword">if</span> (oldZipEntry == <span class="keyword">null</span>) {</span><br><span class="line">      <span class="comment">// The path is only present in the new archive, not in the old archive. Try to find a</span></span><br><span class="line">      <span class="comment">// similar file in the old archive that can serve as a diff base for the new file.</span></span><br><span class="line">      List&lt;MinimalZipEntry&gt; identicalEntriesInOldArchive =</span><br><span class="line">          trivialRenameFinder.findSimilarFiles(newFile, newEntry.getValue());</span><br><span class="line">      <span class="keyword">if</span> (!identicalEntriesInOldArchive.isEmpty()) {</span><br><span class="line">        <span class="comment">// An identical file exists in the old archive at a different path. Use it for the</span></span><br><span class="line">        <span class="comment">// recommendation and carry on with the normal logic.</span></span><br><span class="line">        <span class="comment">// All entries in the returned list are identical, so just pick the first one.</span></span><br><span class="line">        <span class="comment">// NB, in principle it would be optimal to select the file that required the least work</span></span><br><span class="line">        <span class="comment">// to apply the patch - in practice, it is unlikely that an archive will contain multiple</span></span><br><span class="line">        <span class="comment">// copies of the same file that are compressed differently, so don&apos;t bother with that</span></span><br><span class="line">        <span class="comment">// degenerate case.</span></span><br><span class="line">        oldZipEntry = identicalEntriesInOldArchive.get(<span class="number">0</span>);</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If the attempt to find a suitable diff base for the new entry has failed, oldZipEntry is</span></span><br><span class="line">    <span class="comment">// null (nothing to do in that case). Otherwise, there is an old entry that is relevant, so</span></span><br><span class="line">    <span class="comment">// get a recommendation for what to do.</span></span><br><span class="line">    <span class="keyword">if</span> (oldZipEntry != <span class="keyword">null</span>) {</span><br><span class="line">      recommendations.add(getRecommendation(oldZipEntry, newEntry.getValue()));</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> recommendations;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8BE5;&#x51FD;&#x6570;&#x4E3B;&#x8981;&#x751F;&#x6210;&#x4E24;&#x4E2A;List&#x5BF9;&#x8C61;&#xFF0C;&#x5206;&#x522B;&#x662F;&#xFF1A;</p><ul><li>&#x65E7;&#x6587;&#x4EF6;&#x7684;&#x5EFA;&#x8BAE;&#x89E3;&#x538B;&#x7684;Zip Entry&#x7684;&#x538B;&#x7F29;&#x6570;&#x636E;&#x504F;&#x79FB;&#x4F4D;&#x7F6E;&#x548C;&#x6570;&#x636E;&#x957F;&#x5EA6;&#xFF0C;&#x627F;&#x8F7D;&#x7684;&#x8F7D;&#x4F53;&#x662F;TypedRange&#xFF0C;&#x6CDB;&#x578B;&#x662F;Void&#xFF0C;&#x6240;&#x6709;&#x76F8;&#x5173;&#x6587;&#x4EF6;&#x7EC4;&#x6210;&#x4E00;&#x4E2A;List&#x5BF9;&#x8C61;</li><li>&#x65B0;&#x6587;&#x4EF6;&#x7684;&#x5EFA;&#x8BAE;&#x89E3;&#x538B;&#x7684;Zip Entry&#x7684;&#x538B;&#x7F29;&#x6570;&#x636E;&#x7684;&#x504F;&#x79FB;&#x4F4D;&#x7F6E;&#x548C;&#x6570;&#x636E;&#x957F;&#x5EA6;&#xFF0C;&#x627F;&#x8F7D;&#x7684;&#x8F7D;&#x4F53;&#x662F;TypedRange&#xFF0C;&#x6CDB;&#x578B;&#x662F;JreDeflateParameters&#xFF0C;&#x6CDB;&#x578B;&#x53C2;&#x6570;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x6765;&#x81EA;&#x4E0A;&#x4E00;&#x6B65;&#x89E3;&#x6790;&#x51FA;&#x6765;&#x7684;&#x7B2C;&#x4E09;&#x4E2A;map&#xFF0C;&#x6240;&#x6709;&#x76F8;&#x5173;&#x4EF6;&#x7EC4;&#x6210;&#x4E00;&#x4E2A;List&#x5BF9;&#x8C61;</li></ul><p>&#x4E0A;&#x9762;&#x4E24;&#x4E2A;List&#x5BF9;&#x8C61;&#x5404;&#x81EA;&#x6309;&#x504F;&#x79FB;&#x5347;&#x5E8F;&#x6392;&#x5E8F;&#x3002;</p><p>&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x5EFA;&#x8BAE;&#x89E3;&#x538B;&#x7684;Zip Entry&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x662F;&#x600E;&#x4E48;&#x6765;&#x7684;&#x5462;&#xFF1F;&#x6765;&#x81EA;&#x4E0B;&#x9762;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> List&lt;QualifiedRecommendation&gt; <span class="title">getDefaultRecommendations</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">  List&lt;QualifiedRecommendation&gt; recommendations = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// This will be used to find files that have been renamed, but not modified. This is relatively</span></span><br><span class="line">  <span class="comment">// cheap to construct as it just requires indexing all entries by the uncompressed CRC32, and</span></span><br><span class="line">  <span class="comment">// the CRC32 is already available in the ZIP headers.</span></span><br><span class="line">  SimilarityFinder trivialRenameFinder =</span><br><span class="line">      <span class="keyword">new</span> Crc32SimilarityFinder(oldFile, oldArchiveZipEntriesByPath.values());</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Iterate over every pair of entries and get a recommendation for what to do.</span></span><br><span class="line">  <span class="keyword">for</span> (Map.Entry&lt;ByteArrayHolder, MinimalZipEntry&gt; newEntry :</span><br><span class="line">      newArchiveZipEntriesByPath.entrySet()) {</span><br><span class="line">    ByteArrayHolder newEntryPath = newEntry.getKey();</span><br><span class="line">    MinimalZipEntry oldZipEntry = oldArchiveZipEntriesByPath.get(newEntryPath);</span><br><span class="line">    <span class="keyword">if</span> (oldZipEntry == <span class="keyword">null</span>) {</span><br><span class="line">      <span class="comment">// The path is only present in the new archive, not in the old archive. Try to find a</span></span><br><span class="line">      <span class="comment">// similar file in the old archive that can serve as a diff base for the new file.</span></span><br><span class="line">      List&lt;MinimalZipEntry&gt; identicalEntriesInOldArchive =</span><br><span class="line">          trivialRenameFinder.findSimilarFiles(newFile, newEntry.getValue());</span><br><span class="line">      <span class="keyword">if</span> (!identicalEntriesInOldArchive.isEmpty()) {</span><br><span class="line">        <span class="comment">// An identical file exists in the old archive at a different path. Use it for the</span></span><br><span class="line">        <span class="comment">// recommendation and carry on with the normal logic.</span></span><br><span class="line">        <span class="comment">// All entries in the returned list are identical, so just pick the first one.</span></span><br><span class="line">        <span class="comment">// NB, in principle it would be optimal to select the file that required the least work</span></span><br><span class="line">        <span class="comment">// to apply the patch - in practice, it is unlikely that an archive will contain multiple</span></span><br><span class="line">        <span class="comment">// copies of the same file that are compressed differently, so don&apos;t bother with that</span></span><br><span class="line">        <span class="comment">// degenerate case.</span></span><br><span class="line">        oldZipEntry = identicalEntriesInOldArchive.get(<span class="number">0</span>);</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// If the attempt to find a suitable diff base for the new entry has failed, oldZipEntry is</span></span><br><span class="line">    <span class="comment">// null (nothing to do in that case). Otherwise, there is an old entry that is relevant, so</span></span><br><span class="line">    <span class="comment">// get a recommendation for what to do.</span></span><br><span class="line">    <span class="keyword">if</span> (oldZipEntry != <span class="keyword">null</span>) {</span><br><span class="line">      recommendations.add(getRecommendation(oldZipEntry, newEntry.getValue()));</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">return</span> recommendations;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x4E3B;&#x8981;&#x505A;&#x5982;&#x4E0B;&#x5DE5;&#x4F5C;:</p><ul><li>&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x76F8;&#x4F3C;&#x6587;&#x4EF6;&#x67E5;&#x627E;&#x5668;&#xFF0C;&#x5185;&#x90E8;&#x4F7F;&#x7528;Map&#x8FDB;&#x884C;&#x67E5;&#x627E;&#xFF0C;key&#x4E3A;crc32&#xFF0C;&#x503C;&#x4E3A;&#x65E7;&#x6587;&#x4EF6;&#x7684;MinimalZipEntry&#xFF0C;&#x4E14;&#x662F;&#x4E00;&#x4E2A;List&#xFF0C;&#x56E0;&#x4E3A;crc32&#x76F8;&#x540C;&#x7684;&#x6587;&#x4EF6;&#x53EF;&#x80FD;&#x6709;&#x591A;&#x4E2A;&#x3002;</li><li>&#x904D;&#x5386;&#x65B0;&#x6587;&#x4EF6;MinimalZipEntry&#x7684;List&#x5BF9;&#x8C61;&#xFF0C;&#x67E5;&#x770B;&#x5BF9;&#x5E94;&#x540D;&#x5B57;&#x5728;&#x65E7;&#x6587;&#x4EF6;&#x4E2D;&#x662F;&#x5426;&#x5B58;&#x5728;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x901A;&#x8FC7;&#x7B2C;&#x4E00;&#x6B65;&#x7684;&#x76F8;&#x4F3C;&#x6587;&#x4EF6;&#x67E5;&#x627E;&#x5668;&#x67E5;&#x627E;crc32&#x76F8;&#x540C;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x627E;&#x5230;&#x4E86;&#xFF0C;&#x53D6;List&#x5BF9;&#x8C61;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x3002;&#x5982;&#x679C;&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x5219;&#x8868;&#x793A;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x88AB;&#x79FB;&#x9664;&#x4E86;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x7BA1;&#x5B83;&#x3002;</li><li>&#x901A;&#x8FC7;&#x65E7;Entry&#x548C;&#x65B0;Entry&#x8C03;&#x7528;getRecommendation&#x51FD;&#x6570;&#x8FD4;&#x56DE;QualifiedRecommendation&#x5BF9;&#x8C61;&#xFF0C;add&#x5230;List&#x5BF9;&#x8C61;&#x4E2D;&#xFF1B;&#x8BE5;&#x5BF9;&#x8C61;&#x6301;&#x6709;&#x4E86;&#x65B0;&#x65E7;Entry&#xFF0C;&#x4EE5;&#x53CA;&#x65B0;&#x65E7;&#x6587;&#x4EF6;&#x662F;&#x5426;&#x88AB;&#x89E3;&#x538B;&#x7B49;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#x3002;</li><li>&#x8FD4;&#x56DE;&#x627E;&#x5230;&#x7684;QualifiedRecommendation&#x5217;&#x8868;</li></ul><p>QualifiedRecommendation&#x7684;&#x751F;&#x6210;&#x7B97;&#x6CD5;&#x662F;&#x4EC0;&#x4E48;&#x5462;&#xFF0C;&#x5B83;&#x662F;&#x8C03;&#x7528;getRecommendation&#x8FD4;&#x56DE;&#x7684;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x4EE3;&#x7801;&#x5982;&#x4E0B;:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> QualifiedRecommendation <span class="title">getRecommendation</span><span class="params">(MinimalZipEntry oldEntry, MinimalZipEntry newEntry)</span></span></span><br><span class="line"><span class="function">     <span class="keyword">throws</span> IOException </span>{</span><br><span class="line"></span><br><span class="line">   <span class="comment">// Reject anything that is unsuitable for uncompressed diffing.</span></span><br><span class="line">   <span class="comment">// Reason singled out in order to monitor unsupported versions of zlib.</span></span><br><span class="line">   <span class="keyword">if</span> (unsuitableDeflate(newEntry)) {</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> QualifiedRecommendation(</span><br><span class="line">         oldEntry,</span><br><span class="line">         newEntry,</span><br><span class="line">         Recommendation.UNCOMPRESS_NEITHER,</span><br><span class="line">         RecommendationReason.DEFLATE_UNSUITABLE);</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   <span class="comment">// Reject anything that is unsuitable for uncompressed diffing.</span></span><br><span class="line">   <span class="keyword">if</span> (unsuitable(oldEntry, newEntry)) {</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> QualifiedRecommendation(</span><br><span class="line">         oldEntry,</span><br><span class="line">         newEntry,</span><br><span class="line">         Recommendation.UNCOMPRESS_NEITHER,</span><br><span class="line">         RecommendationReason.UNSUITABLE);</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   <span class="comment">// If both entries are already uncompressed there is nothing to do.</span></span><br><span class="line">   <span class="keyword">if</span> (bothEntriesUncompressed(oldEntry, newEntry)) {</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> QualifiedRecommendation(</span><br><span class="line">         oldEntry,</span><br><span class="line">         newEntry,</span><br><span class="line">         Recommendation.UNCOMPRESS_NEITHER,</span><br><span class="line">         RecommendationReason.BOTH_ENTRIES_UNCOMPRESSED);</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   <span class="comment">// The following are now true:</span></span><br><span class="line">   <span class="comment">// 1. At least one of the entries is compressed.</span></span><br><span class="line">   <span class="comment">// 1. The old entry is either uncompressed, or is compressed with deflate.</span></span><br><span class="line">   <span class="comment">// 2. The new entry is either uncompressed, or is reproducibly compressed with deflate.</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (uncompressedChangedToCompressed(oldEntry, newEntry)) {</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> QualifiedRecommendation(</span><br><span class="line">         oldEntry,</span><br><span class="line">         newEntry,</span><br><span class="line">         Recommendation.UNCOMPRESS_NEW,</span><br><span class="line">         RecommendationReason.UNCOMPRESSED_CHANGED_TO_COMPRESSED);</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span> (compressedChangedToUncompressed(oldEntry, newEntry)) {</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> QualifiedRecommendation(</span><br><span class="line">         oldEntry,</span><br><span class="line">         newEntry,</span><br><span class="line">         Recommendation.UNCOMPRESS_OLD,</span><br><span class="line">         RecommendationReason.COMPRESSED_CHANGED_TO_UNCOMPRESSED);</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   <span class="comment">// At this point, both entries must be compressed with deflate.</span></span><br><span class="line">   <span class="keyword">if</span> (compressedBytesChanged(oldEntry, newEntry)) {</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> QualifiedRecommendation(</span><br><span class="line">         oldEntry,</span><br><span class="line">         newEntry,</span><br><span class="line">         Recommendation.UNCOMPRESS_BOTH,</span><br><span class="line">         RecommendationReason.COMPRESSED_BYTES_CHANGED);</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   <span class="comment">// If the compressed bytes have not changed, there is no need to do anything.</span></span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">new</span> QualifiedRecommendation(</span><br><span class="line">       oldEntry,</span><br><span class="line">       newEntry,</span><br><span class="line">       Recommendation.UNCOMPRESS_NEITHER,</span><br><span class="line">       RecommendationReason.COMPRESSED_BYTES_IDENTICAL);</span><br><span class="line"> }</span><br></pre></td></tr></table></figure><p>&#x4E3B;&#x8981;&#x6709;7&#x79CD;&#x7C7B;&#x578B;:</p><ul><li>&#x8BE5;&#x6587;&#x4EF6;&#x88AB;&#x538B;&#x7F29;&#x8FC7;&#xFF0C;&#x4F46;&#x662F;&#x65E0;&#x6CD5;&#x63A8;&#x6D4B;&#x51FA;&#x5176;JreDeflateParamyaseters&#x53C2;&#x6570;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x65E0;&#x6CD5;&#x83B7;&#x5F97;&#x5176;&#x538B;&#x7F29;&#x7EA7;&#x522B;&#xFF0C;&#x7F16;&#x7801;&#x7B56;&#x7565;&#xFF0C;nowrap&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x6CA1;&#x6709;&#x4E86;&#x8FD9;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x65E0;&#x6CD5;&#x91CD;&#x65B0;&#x8FDB;&#x884C;&#x538B;&#x7F29;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x5BF9;&#x4E8E;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x4E0D;&#x5EFA;&#x8BAE;&#x89E3;&#x538B;&#xFF0C;&#x539F;&#x56E0;&#x662F;&#x627E;&#x4E0D;&#x5230;&#x5408;&#x9002;&#x7684;deflate&#x53C2;&#x6570;&#x8FD8;&#x539F;&#x538B;&#x7F29;&#x6570;&#x636E;</li><li>&#x65E7;&#x6587;&#x4EF6;&#xFF0C;&#x6216;&#x65B0;&#x6587;&#x4EF6;&#x88AB;&#x538B;&#x7F29;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x662F;&#x4E0D;&#x652F;&#x6301;&#x7684;&#x538B;&#x7F29;&#x7B97;&#x6CD5;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x4E0D;&#x5EFA;&#x8BAE;&#x89E3;&#x538B;&#x7F29;&#xFF0C;&#x539F;&#x56E0;&#x662F;&#x4F7F;&#x7528;&#x4E86;&#x4E0D;&#x652F;&#x6301;&#x7684;&#x538B;&#x7F29;&#x7B97;&#x6CD5;</li><li>&#x5982;&#x679C;&#x65B0;&#x65E7;&#x6587;&#x4EF6;&#x90FD;&#x6CA1;&#x6709;&#x88AB;&#x538B;&#x7F29;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x4E0D;&#x9700;&#x8981;&#x89E3;&#x538B;&#xFF0C;&#x539F;&#x56E0;&#x662F;&#x90FD;&#x6CA1;&#x6709;&#x88AB;&#x538B;&#x7F29;</li><li>&#x5982;&#x679C;&#x65E7;&#x6587;&#x4EF6;&#x672A;&#x538B;&#x7F29;&#xFF0C;&#x65B0;&#x6587;&#x4EF6;&#x5DF2;&#x538B;&#x7F29;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x65B0;&#x6587;&#x4EF6;&#x9700;&#x8981;&#x89E3;&#x538B;&#xFF0C;&#x539F;&#x56E0;&#x662F;&#x4ECE;&#x672A;&#x538B;&#x7F29;&#x6587;&#x4EF6;&#x53D8;&#x6210;&#x4E86;&#x5DF2;&#x538B;&#x7F29;&#x6587;&#x4EF6;</li><li>&#x5982;&#x679C;&#x65E7;&#x6587;&#x4EF6;&#x5DF2;&#x538B;&#x7F29;&#xFF0C;&#x65B0;&#x6587;&#x4EF6;&#x672A;&#x538B;&#x7F29;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x65E7;&#x6587;&#x4EF6;&#x9700;&#x8981;&#x89E3;&#x538B;&#xFF0C;&#x539F;&#x56E0;&#x662F;&#x4ECE;&#x5DF2;&#x538B;&#x7F29;&#x6587;&#x4EF6;&#x53D8;&#x6210;&#x4E86;&#x672A;&#x538B;&#x7F29;&#x6587;&#x4EF6;</li><li>&#x5982;&#x679C;&#x65B0;&#x65E7;&#x6587;&#x4EF6;&#x90FD;&#x5DF2;&#x7ECF;&#x538B;&#x7F29;&#xFF0C;&#x4E14;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x9700;&#x8981;&#x89E3;&#x538B;&#x65B0;&#x65E7;&#x6587;&#x4EF6;&#xFF0C;&#x539F;&#x56E0;&#x662F;&#x6587;&#x4EF6;&#x53D1;&#x751F;&#x6539;&#x53D8;</li><li>&#x6CA1;&#x6709;&#x65B0;&#x65E7;&#x6587;&#x4EF6;&#x6CA1;&#x6709;&#x53D1;&#x751F;&#x53D8;&#x5316;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x4E0D;&#x9700;&#x8981;&#x89E3;&#x538B;&#x65B0;&#x65E7;&#x6587;&#x4EF6;&#xFF0C;&#x539F;&#x56E0;&#x662F;&#x6587;&#x4EF6;&#x672A;&#x53D1;&#x751F;&#x6539;&#x53D8;</li></ul><p>&#x6709;&#x4E86;&#x4EE5;&#x4E0A;&#x4FE1;&#x606F;&#xFF0C;&#x518D;&#x6765;&#x770B;&#x770B;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x7684;&#x6587;&#x4EF6;&#x662F;&#x600E;&#x4E48;&#x751F;&#x6210;&#x7684;&#xFF1A;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">  <span class="keyword">private</span> List&lt;TypedRange&lt;JreDeflateParameters&gt;&gt; generateDeltaFriendlyFiles(PreDiffPlan preDiffPlan)</span><br><span class="line">      <span class="keyword">throws</span> IOException {</span><br><span class="line">    <span class="keyword">try</span> (FileOutputStream out = <span class="keyword">new</span> FileOutputStream(deltaFriendlyOldFile);</span><br><span class="line">        BufferedOutputStream bufferedOut = <span class="keyword">new</span> BufferedOutputStream(out)) {</span><br><span class="line">      DeltaFriendlyFile.generateDeltaFriendlyFile(</span><br><span class="line">          preDiffPlan.getOldFileUncompressionPlan(), originalOldFile, bufferedOut);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">try</span> (FileOutputStream out = <span class="keyword">new</span> FileOutputStream(deltaFriendlyNewFile);</span><br><span class="line">        BufferedOutputStream bufferedOut = <span class="keyword">new</span> BufferedOutputStream(out)) {</span><br><span class="line">      <span class="keyword">return</span> DeltaFriendlyFile.generateDeltaFriendlyFile(</span><br><span class="line">          preDiffPlan.getNewFileUncompressionPlan(), originalNewFile, bufferedOut);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; List&lt;TypedRange&lt;T&gt;&gt; generateDeltaFriendlyFile(</span><br><span class="line">      List&lt;TypedRange&lt;T&gt;&gt; rangesToUncompress, File file, OutputStream deltaFriendlyOut)</span><br><span class="line">      <span class="keyword">throws</span> IOException {</span><br><span class="line">    <span class="keyword">return</span> generateDeltaFriendlyFile(</span><br><span class="line">        rangesToUncompress, file, deltaFriendlyOut, <span class="keyword">true</span>, DEFAULT_COPY_BUFFER_SIZE);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; List&lt;TypedRange&lt;T&gt;&gt; generateDeltaFriendlyFile(</span><br><span class="line">      List&lt;TypedRange&lt;T&gt;&gt; rangesToUncompress,</span><br><span class="line">      File file,</span><br><span class="line">      OutputStream deltaFriendlyOut,</span><br><span class="line">      <span class="keyword">boolean</span> generateInverse,</span><br><span class="line">      <span class="keyword">int</span> copyBufferSize)</span><br><span class="line">      <span class="keyword">throws</span> IOException {</span><br><span class="line">    List&lt;TypedRange&lt;T&gt;&gt; inverseRanges = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (generateInverse) {</span><br><span class="line">      inverseRanges = <span class="keyword">new</span> ArrayList&lt;TypedRange&lt;T&gt;&gt;(rangesToUncompress.size());</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">long</span> lastReadOffset = <span class="number">0</span>;</span><br><span class="line">    RandomAccessFileInputStream oldFileRafis = <span class="keyword">null</span>;</span><br><span class="line">    PartiallyUncompressingPipe filteredOut =</span><br><span class="line">        <span class="keyword">new</span> PartiallyUncompressingPipe(deltaFriendlyOut, copyBufferSize);</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">      oldFileRafis = <span class="keyword">new</span> RandomAccessFileInputStream(file);</span><br><span class="line">      <span class="keyword">for</span> (TypedRange&lt;T&gt; rangeToUncompress : rangesToUncompress) {</span><br><span class="line">        <span class="keyword">long</span> gap = rangeToUncompress.getOffset() - lastReadOffset;</span><br><span class="line">        <span class="keyword">if</span> (gap &gt; <span class="number">0</span>) {</span><br><span class="line">          <span class="comment">// Copy bytes up to the range start point</span></span><br><span class="line">          oldFileRafis.setRange(lastReadOffset, gap);</span><br><span class="line">          filteredOut.pipe(oldFileRafis, PartiallyUncompressingPipe.Mode.COPY);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Now uncompress the range.</span></span><br><span class="line">        oldFileRafis.setRange(rangeToUncompress.getOffset(), rangeToUncompress.getLength());</span><br><span class="line">        <span class="keyword">long</span> inverseRangeStart = filteredOut.getNumBytesWritten();</span><br><span class="line">        <span class="comment">// TODO(andrewhayden): Support nowrap=false here? Never encountered in practice.</span></span><br><span class="line">        <span class="comment">// This would involve catching the ZipException, checking if numBytesWritten is still zero,</span></span><br><span class="line">        <span class="comment">// resetting the stream and trying again.</span></span><br><span class="line">        filteredOut.pipe(oldFileRafis, PartiallyUncompressingPipe.Mode.UNCOMPRESS_NOWRAP);</span><br><span class="line">        lastReadOffset = rangeToUncompress.getOffset() + rangeToUncompress.getLength();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (generateInverse) {</span><br><span class="line">          <span class="keyword">long</span> inverseRangeEnd = filteredOut.getNumBytesWritten();</span><br><span class="line">          <span class="keyword">long</span> inverseRangeLength = inverseRangeEnd - inverseRangeStart;</span><br><span class="line">          TypedRange&lt;T&gt; inverseRange =</span><br><span class="line">              <span class="keyword">new</span> TypedRange&lt;T&gt;(</span><br><span class="line">                  inverseRangeStart, inverseRangeLength, rangeToUncompress.getMetadata());</span><br><span class="line">          inverseRanges.add(inverseRange);</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">      <span class="comment">// Finish the final bytes of the file</span></span><br><span class="line">      <span class="keyword">long</span> bytesLeft = oldFileRafis.length() - lastReadOffset;</span><br><span class="line">      <span class="keyword">if</span> (bytesLeft &gt; <span class="number">0</span>) {</span><br><span class="line">        oldFileRafis.setRange(lastReadOffset, bytesLeft);</span><br><span class="line">        filteredOut.pipe(oldFileRafis, PartiallyUncompressingPipe.Mode.COPY);</span><br><span class="line">      }</span><br><span class="line">    } <span class="keyword">finally</span> {</span><br><span class="line">      <span class="keyword">try</span> {</span><br><span class="line">        oldFileRafis.close();</span><br><span class="line">      } <span class="keyword">catch</span> (Exception ignored) {</span><br><span class="line">        <span class="comment">// Nothing</span></span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">try</span> {</span><br><span class="line">        filteredOut.close();</span><br><span class="line">      } <span class="keyword">catch</span> (Exception ignored) {</span><br><span class="line">        <span class="comment">// Nothing</span></span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> inverseRanges;</span><br><span class="line">  }</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x6BD4;&#x8F83;&#x5DE7;&#x5999;&#xFF0C;&#x4E5F;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#xFF0C;&#x5176;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;&#xFF1A;</p><ul><li>&#x904D;&#x5386;&#x9700;&#x8981;&#x89E3;&#x538B;&#x7684;&#x5217;&#x8868;&#xFF0C;&#x83B7;&#x5F97;&#x5176;&#x504F;&#x79FB;&#xFF0C;&#x5C06;&#x8BE5;&#x504F;&#x79FB;&#x51CF;&#x53BB;&#x4E0A;&#x6B21;&#x8BFB;&#x7684;&#x504F;&#x79FB;&#x4F4D;&#x7F6E;lastReadOffset&#xFF0C;&#x5F97;&#x5230;&#x4E00;&#x4E2A;gap&#x503C;&#xFF0C;&#x8FD9;&#x4E2A;&#x503C;&#x4F7F;&#x7528;COPY&#x76F4;&#x63A5;&#x62F7;&#x8D1D;&#x5B50;&#x6770;&#x6570;&#x7EC4;</li><li>&#x7136;&#x540E;&#x5C06;&#x6570;&#x636E;&#x5B9A;&#x4F4D;&#x5230;[offset,offset+length]&#x4E4B;&#x95F4;&#xFF0C;&#x83B7;&#x5F97;&#x5DF2;&#x7ECF;&#x89E3;&#x538B;&#x5199;&#x5165;&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#x5927;&#x5C0F;&#xFF0C;&#x8D4B;&#x503C;&#x7ED9;inverseRangeStart&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x538B;&#x7F29;&#x6570;&#x636E;&#x4F7F;&#x7528;&#x5BF9;&#x5E94;&#x7684;&#x53C2;&#x6570;&#x8FDB;&#x884C;&#x89E3;&#x538B;&#xFF0C;&#x5C06;&#x4E0A;&#x6B21;&#x8BFB;&#x7684;&#x504F;&#x79FB;&#x4F4D;&#x7F6E;lastReadOffset&#x8BBE;&#x7F6E;&#x4E3A;&#x5F53;&#x524D;&#x7684;offset+length&#x503C;&#x3002;</li><li>&#x5224;&#x65AD;generateInverse&#x662F;&#x5426;&#x4E3A;true&#xFF0C;&#x8FD9;&#x91CC;&#x8FD9;&#x4E2A;&#x503C;&#x6C38;&#x8FDC;&#x4E3A;true&#xFF0C;&#x56E0;&#x4E3A;&#x5165;&#x53C2;&#x4F20;&#x4E86;true&#x3002;&#x83B7;&#x5F97;&#x5DF2;&#x7ECF;&#x89E3;&#x538B;&#x5199;&#x5165;&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#x5927;&#x5C0F;&#xFF0C;&#x8D4B;&#x503C;&#x7ED9;inverseRangeEnd&#xFF0C;&#x4F7F;&#x7528;inverseRangeEnd&#x51CF;&#x53BB;inverseRangeStart&#x5C31;&#x662F;&#x89E3;&#x538B;&#x4E4B;&#x540E;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x6784;&#x5EFA;TypedRange&#x5BF9;&#x8C61;&#xFF0C;add&#x5230;list&#x4E2D;</li><li>&#x6240;&#x6709;&#x6570;&#x636E;&#x904D;&#x5386;&#x5B8C;&#x4E4B;&#x540E;&#xFF0C;&#x5224;&#x65AD;&#x5F53;&#x524D;&#x8BFB;&#x7684;&#x4F4D;&#x7F6E;&#x5230;&#x6587;&#x4EF6;&#x7ED3;&#x5C3E;&#x662F;&#x5426;&#x8FD8;&#x6709;&#x6570;&#x636E;&#x5269;&#x4F59;&#xFF0C;&#x5982;&#x679C;&#x6709;&#xFF0C;&#x5219;&#x7EE7;&#x7EED;&#x5199;&#x5165;</li><li>&#x8FD4;&#x56DE;TypedRange&#x7684;List&#x5BF9;&#x8C61;&#x3002;</li></ul><p>&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#x62BD;&#x8C61;&#xFF0C;&#x7528;&#x4E00;&#x5F20;&#x56FE;&#x6765;&#x8BF4;&#x660E;&#x6574;&#x4E2A;&#x6587;&#x4EF6;&#x89E3;&#x538B;&#x8FC7;&#x7A0B;&#x3002;</p><p><img src="/2017/10/05/Google-Archive-Patch-%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/friendly_generator.png" alt="friendly_generator.png"></p><p>&#x4E0A;&#x56FE;&#x662F;zip&#x6587;&#x4EF6;&#xFF0C;&#x7EFF;&#x8272;&#x7684;gap&#x662F;&#x4E00;&#x4E9B;&#x63CF;&#x8FF0;&#x4FE1;&#x606F;&#xFF0C;&#x7EA2;&#x8272;&#x7684;&#x8868;&#x793A;&#x771F;&#x5B9E;&#x7684;&#x538B;&#x7F29;&#x6570;&#x636E;&#xFF0C;&#x84DD;&#x8272;&#x7684;&#x8868;&#x793A;&#x6587;&#x4EF6;&#x672B;&#x5C3E;&#x9057;&#x7559;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5BF9;&#x4E8E;gap&#xFF0C;&#x6267;&#x884C;&#x62F7;&#x8D1D;&#x64CD;&#x4F5C;&#xFF0C;&#x5BF9;&#x4E8E;&#x538B;&#x7F29;&#x6570;&#x636E;&#xFF0C;&#x6267;&#x884C;&#x89E3;&#x538B;&#x64CD;&#x4F5C;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x89E3;&#x538B;&#x4E4B;&#x540E;&#x771F;&#x5B9E;&#x7684;&#x504F;&#x79FB;offset&#x548C;&#x89E3;&#x538B;&#x4E4B;&#x540E;&#x771F;&#x5B9E;&#x6570;&#x636E;&#x7684;&#x5927;&#x5C0F;length&#xFF0C;&#x6240;&#x6709;&#x6570;&#x636E;&#x904D;&#x5386;&#x5B8C;&#x4E4B;&#x540E;&#xFF0C;&#x6587;&#x4EF6;&#x672B;&#x5C3E;&#x8FD8;&#x6709;&#x4E00;&#x90E8;&#x5206;&#x9057;&#x7559;&#x6570;&#x636E;&#xFF0C;&#x5BF9;&#x5176;&#x6267;&#x884C;&#x62F7;&#x8D1D;&#x64CD;&#x4F5C;&#x3002;</p><p>&#x7279;&#x522B;&#x6CE8;&#x610F;&#x8FD4;&#x56DE;&#x7684;TypedRange&#x662F;&#x65B0;&#x6587;&#x4EF6;&#x7684;&#x89E3;&#x538B;&#x4E4B;&#x540E;&#x7684;offset&#x548C;length&#xFF0C;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x5341;&#x5206;&#x91CD;&#x8981;&#xFF0C;&#x8FD8;&#x539F;zip&#x6587;&#x4EF6;&#x5C31;&#x9760;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x4E86;&#x3002;</p><p>&#x6709;&#x4E86;&#x65B0;&#x65E7;&#x6587;&#x4EF6;&#x7684;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x6587;&#x4EF6;&#x4E4B;&#x540E;&#x505A;&#x4EC0;&#x4E48;&#x5462;&#xFF0C;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x4F7F;&#x7528;BsDiff&#x751F;&#x6210;&#x5DEE;&#x91CF;&#x6587;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x5DEE;&#x91CF;&#x6587;&#x4EF6;&#x5199;&#x5165;patch&#x6587;&#x4EF6;&#x3002;patch&#x6587;&#x4EF6;&#x7684;&#x683C;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A;</p><table><thead><tr><th>Offset</th><th>Bytes</th><th>Description</th><th>&#x5907;&#x6CE8;</th></tr></thead><tbody><tr><td>0</td><td>8</td><td>Versioned Identifier</td><td>&#x5934;&#x90E8;&#x6807;&#x8BB0;&#xFF0C;&#x56FA;&#x5B9A;&#x503C;&#x201D;GFbFv1_0&#x201D;&#xFF0C;UTF-8&#x5B57;&#x7B26;&#x4E32;</td></tr><tr><td>8</td><td>4</td><td>Flags (currently unused, but reserved)</td><td>&#x6807;&#x8BB0;&#x672A;&#xFF0C;&#x9884;&#x7559;</td></tr><tr><td>12</td><td>8</td><td>Delta-friendly old archive size</td><td>&#x65E7;&#x6587;&#x4EF6;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#xFF0C;64&#x4F4D;&#x65E0;&#x7B26;&#x53F7;&#x6574;&#x578B;</td></tr><tr><td>20</td><td>4</td><td>Num old archive uncompression ops</td><td>&#x65E7;&#x6587;&#x4EF6;&#x5F85;&#x89E3;&#x538B;&#x6587;&#x4EF6;&#x4E2A;&#x6570;&#xFF0C;32&#x4F4D;&#x65E0;&#x7B26;&#x53F7;&#x6574;&#x578B;</td></tr><tr><td>24</td><td>i</td><td>Old archive uncompression op 1&#x2026;n</td><td>&#x65E7;&#x6587;&#x4EF6;&#x5F85;&#x89E3;&#x538B;&#x6587;&#x4EF6;&#x7684;&#x504F;&#x79FB;&#x548C;&#x5927;&#x5C0F;&#xFF0C;&#x603B;&#x5171;n&#x4E2A;</td></tr><tr><td>24+i</td><td>4</td><td>Num new archive recompression ops</td><td>&#x65B0;&#x6587;&#x4EF6;&#x5F85;&#x538B;&#x7F29;&#x6587;&#x4EF6;&#x4E2A;&#x6570;&#xFF0C;32&#x4F4D;&#x65E0;&#x7B26;&#x53F7;&#x6574;&#x578B;</td></tr><tr><td>24+i+4</td><td>j</td><td>New archive recompression op 1&#x2026;n</td><td>&#x65B0;&#x6587;&#x4EF6;&#x5F85;&#x538B;&#x7F29;&#x6587;&#x4EF6;&#x7684;&#x504F;&#x79FB;&#x548C;&#x5927;&#x5C0F;&#xFF0C;&#x603B;&#x5171;n&#x4E2A;</td></tr><tr><td>24+i+4+j</td><td>4</td><td>Num delta descriptor records</td><td>&#x65B0;&#x6587;&#x4EF6;&#x5DEE;&#x91CF;&#x63CF;&#x8FF0;&#x4E2A;&#x6570;&#xFF0C;32&#x4F4D;&#x65E0;&#x7B26;&#x53F7;&#x6574;&#x578B;</td></tr><tr><td>24+i+4+j+4</td><td>k</td><td>Delta descriptor record 1&#x2026;n</td><td>&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#x63CF;&#x8FF0;&#x8BB0;&#x5F55;&#xFF0C;&#x603B;&#x5171;n&#x4E2A;</td></tr><tr><td>24+i+4+j+4+k</td><td>l</td><td>Delta 1&#x2026;n</td><td>&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#x63CF;&#x8FF0;</td></tr></tbody></table><p>Old Archive Uncompression Op&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5982;&#x4E0B;</p><table><thead><tr><th>Bytes</th><th>Description</th><th>&#x5907;&#x6CE8;</th></tr></thead><tbody><tr><td>8</td><td>Offset of first byte to uncompress</td><td>&#x5F85;&#x89E3;&#x538B;&#x7684;&#x504F;&#x79FB;&#x4F4D;&#x7F6E;&#xFF0C;64&#x4F4D;&#x65E0;&#x7B26;&#x53F7;&#x6574;&#x578B;</td></tr><tr><td>8</td><td>Number of bytes to uncompress</td><td>&#x5F85;&#x89E3;&#x538B;&#x7684;&#x5B57;&#x8282;&#x4E2A;&#x6570;&#xFF0C;64&#x4F4D;&#x65E0;&#x7B26;&#x53F7;&#x6574;&#x578B;</td></tr></tbody></table><p>New Archive Recompression Op&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5982;&#x4E0B;</p><table><thead><tr><th>Bytes</th><th>Description</th><th>&#x5907;&#x6CE8;</th></tr></thead><tbody><tr><td>8</td><td>Offset of first byte to compress</td><td>&#x5F85;&#x538B;&#x7F29;&#x7684;&#x504F;&#x79FB;&#x4F4D;&#x7F6E;&#xFF0C;64&#x4F4D;&#x65E0;&#x7B26;&#x53F7;&#x6574;&#x578B;</td></tr><tr><td>8</td><td>Number of bytes to compress</td><td>&#x5F85;&#x538B;&#x7F29;&#x7684;&#x5B57;&#x8282;&#x4E2A;&#x6570;&#xFF0C;64&#x4F4D;&#x65E0;&#x7B26;&#x53F7;&#x6574;&#x578B;</td></tr><tr><td>4</td><td>Compression settings</td><td>&#x538B;&#x7F29;&#x53C2;&#x6570;&#xFF0C;&#x5373;&#x538B;&#x7F29;&#x7EA7;&#x522B;&#xFF0C;&#x7F16;&#x7801;&#x7B56;&#x7565;&#xFF0C;nowrap</td></tr></tbody></table><p>Compression Settings&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5982;&#x4E0B;</p><table><thead><tr><th>Bytes</th><th>Description</th><th>&#x5907;&#x6CE8;</th></tr></thead><tbody><tr><td>1</td><td>Compatibility window ID</td><td>&#x517C;&#x5BB9;&#x7A97;&#x53E3;&#xFF0C;&#x5F53;&#x524D;&#x53D6;&#x503C;&#x4E3A;0&#xFF0C;&#x5373;&#x9ED8;&#x8BA4;&#x517C;&#x5BB9;&#x7A97;&#x53E3;</td></tr><tr><td>1</td><td>Deflate level</td><td>&#x538B;&#x7F29;&#x7EA7;&#x522B;&#xFF0C;&#x53D6;&#x503C;[1,9]</td></tr><tr><td>1</td><td>Deflate strategy</td><td>&#x7F16;&#x7801;&#x7B56;&#x7565;&#xFF0C;&#x53D6;&#x503C;[0,2]</td></tr><tr><td>1</td><td>Wrap mode</td><td>&#x53D6;&#x503C;0=wrap,1=nowrap</td></tr></tbody></table><p>Compatibility Window&#x5373;&#x517C;&#x5BB9;&#x7A97;&#x53E3;&#xFF0C;&#x5176;&#x9ED8;&#x8BA4;&#x7684;&#x517C;&#x5BB9;&#x7A97;&#x53E3;ID&#x53D6;&#x503C;&#x4E3A;0&#xFF0C;&#x9ED8;&#x8BA4;&#x517C;&#x5BB9;&#x7A97;&#x53E3;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#x914D;&#x7F6E;</p><ul><li>&#x4F7F;&#x7528;deflate&#x7B97;&#x6CD5;&#x8FDB;&#x884C;&#x538B;&#x7F29;&#xFF08;zlib&#xFF09;</li><li>32768&#x4E2A;&#x5B57;&#x8282;&#x7684;buffer&#x5927;&#x5C0F;</li><li>&#x5DF2;&#x7ECF;&#x88AB;&#x9A8C;&#x8BC1;&#x7684;&#x538B;&#x7F29;&#x7EA7;&#x522B;&#xFF0C;1-9</li><li>&#x5DF2;&#x7ECF;&#x88AB;&#x9A8C;&#x8BC1;&#x8FC7;&#x7684;&#x7F16;&#x7801;&#x7B56;&#x7565;&#xFF0C;0-2</li><li>&#x5DF2;&#x7ECF;&#x88AB;&#x9A8C;&#x8BC1;&#x8FC7;&#x7684;wrap&#x6A21;&#x5F0F;&#xFF0C;wrap&#x548C;nowrap</li></ul><p>&#x9ED8;&#x8BA4;&#x517C;&#x5BB9;&#x7A97;&#x53E3;&#x53EF;&#x4EE5;&#x517C;&#x5BB9;Android4.0&#x4E4B;&#x540E;&#x7684;&#x7CFB;&#x7EDF;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x517C;&#x5BB9;&#x7A97;&#x53E3;&#x662F;&#x600E;&#x4E48;&#x5F97;&#x5230;&#x7684;&#x5462;&#xFF0C;&#x5176;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x7C7B;&#x53EB;DefaultDeflateCompatibilityWindow&#xFF0C;&#x53EF;&#x4EE5;&#x8C03;&#x7528;getIncompatibleValues&#x83B7;&#x5F97;&#x5176;&#x4E0D;&#x517C;&#x5BB9;&#x7684;&#x53C2;&#x6570;&#x5217;&#x8868;JreDeflateParameters&#xFF08;&#x538B;&#x7F29;&#x7EA7;&#x522B;&#xFF0C;&#x7F16;&#x7801;&#x7B56;&#x7565;&#xFF0C;nowrap&#x7684;&#x627F;&#x8F7D;&#x4F53;&#xFF09;&#xFF0C;&#x5185;&#x90E8;&#x901A;&#x8FC7;&#x6392;&#x5217;&#x7EC4;&#x5408;&#x8FD9;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5BF9;&#x4E00;&#x6BB5;&#x5185;&#x5BB9;&#x8FDB;&#x884C;&#x538B;&#x7F29;&#xFF0C;&#x4EA7;&#x751F;&#x538B;&#x7F29;&#x540E;&#x7684;&#x6570;&#x636E;&#x7684;16&#x8FDB;&#x5236;&#x7684;&#x7F16;&#x7801;&#xFF0C;&#x4E0E;&#x5185;&#x7F6E;&#x7684;&#x9884;&#x671F;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x5BF9;&#x6BD4;&#xFF0C;&#x5982;&#x679C;&#x76F8;&#x540C;&#x5219;&#x8868;&#x793A;&#x517C;&#x5BB9;&#xFF0C;&#x4E0D;&#x76F8;&#x540C;&#x8868;&#x793A;&#x4E0D;&#x517C;&#x5BB9;&#x3002;</p><p>&#x8FD9;&#x91CC;&#x6709;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5B98;&#x65B9;&#x8868;&#x793A;&#x53EF;&#x4EE5;&#x517C;&#x5BB9;&#x538B;&#x7F29;&#x7EA7;&#x522B;1-9&#xFF0C;&#x7F16;&#x7801;&#x7B56;&#x7565;0-2&#xFF0C;wrap&#x548C;nowrap&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x6211;&#x6D4B;&#x8BD5;&#x4E0B;&#x6765;&#xFF0C;&#x53D1;&#x73B0;&#x5728;pc&#x4E0A;&#x6709;&#x4E00;&#x90E8;&#x5206;&#x7EC4;&#x5408;&#x662F;&#x4E0D;&#x517C;&#x5BB9;&#x7684;&#xFF0C;&#x5927;&#x6982;&#x7EA6;4&#x4E2A;&#x7EC4;&#x5408;&#x3002;Android&#x4E0A;&#x6CA1;&#x6709;&#x6D4B;&#x8BD5;&#x8FC7;&#xFF0C;&#x4E0D;&#x77E5;&#x9053;&#x662F;&#x5426;&#x6709;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;</p><p>Delta Descriptor Record&#x7528;&#x4E8E;&#x63CF;&#x8FF0;&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#xFF0C;&#x5728;&#x5F53;&#x524D;&#x7684;V1&#x7248;Patch&#x4E2D;&#xFF0C;&#x53EA;&#x6709;BsDiff&#x7B97;&#x6CD5;&#xFF0C;&#x56E0;&#x6B64;&#x53EA;&#x6709;&#x4E00;&#x6761;&#x8BE5;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x5176;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x5982;&#x4E0B;:</p><table><thead><tr><th>Bytes</th><th>Description</th><th>&#x5907;&#x6CE8;</th></tr></thead><tbody><tr><td>1</td><td>Delta format ID</td><td>&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#x5BF9;&#x5E94;&#x7684;&#x679A;&#x4E3E;id&#xFF0C;bsdiff&#x53D6;&#x503C;0</td></tr><tr><td>8</td><td>Old delta-friendly region start</td><td>&#x65E7;&#x6587;&#x4EF6;&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#x5E94;&#x7528;&#x7684;&#x504F;&#x79FB;&#x4F4D;&#x7F6E;</td></tr><tr><td>8</td><td>Old delta-friendly region length</td><td>&#x65E7;&#x6587;&#x4EF6;&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#x5E94;&#x7528;&#x7684;&#x957F;&#x5EA6;</td></tr><tr><td>8</td><td>New delta-friendly region start</td><td>&#x65B0;&#x6587;&#x4EF6;&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#x5E94;&#x7528;&#x7684;&#x504F;&#x79FB;&#x4F4D;&#x7F6E;</td></tr><tr><td>8</td><td>New delta-friendly region length</td><td>&#x65B0;&#x6587;&#x4EF6;&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#x5E94;&#x7528;&#x7684;&#x957F;&#x5EA6;</td></tr><tr><td>8</td><td>Delta length</td><td>&#x751F;&#x6210;&#x7684;&#x5DEE;&#x91CF;&#x6587;&#x4EF6;&#x7684;&#x957F;&#x5EA6;</td></tr></tbody></table><p>&#x751F;&#x6210;patch&#x6587;&#x4EF6;&#x7684;&#x51FD;&#x6570;&#x662F;writeV1Patch&#xFF0C;&#x5176;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeV1Patch</span><span class="params">(OutputStream out)</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">  <span class="comment">// Use DataOutputStream for ease of writing. This is deliberately left open, as closing it would</span></span><br><span class="line">  <span class="comment">// close the output stream that was passed in and that is not part of the method&apos;s documented</span></span><br><span class="line">  <span class="comment">// behavior.</span></span><br><span class="line">  <span class="meta">@SuppressWarnings</span>(<span class="string">&quot;resource&quot;</span>)</span><br><span class="line">  DataOutputStream dataOut = <span class="keyword">new</span> DataOutputStream(out);</span><br><span class="line"></span><br><span class="line">  dataOut.write(PatchConstants.IDENTIFIER.getBytes(<span class="string">&quot;US-ASCII&quot;</span>));<span class="comment">//GFbFv1_0</span></span><br><span class="line">  dataOut.writeInt(<span class="number">0</span>); <span class="comment">// Flags (reserved)</span></span><br><span class="line">  dataOut.writeLong(deltaFriendlyOldFileSize);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Write out all the delta-friendly old file uncompression instructions</span></span><br><span class="line">  dataOut.writeInt(plan.getOldFileUncompressionPlan().size());</span><br><span class="line">  <span class="keyword">for</span> (TypedRange&lt;Void&gt; range : plan.getOldFileUncompressionPlan()) {</span><br><span class="line">    dataOut.writeLong(range.getOffset());</span><br><span class="line">    dataOut.writeLong(range.getLength());</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Write out all the delta-friendly new file recompression instructions</span></span><br><span class="line">  dataOut.writeInt(plan.getDeltaFriendlyNewFileRecompressionPlan().size());</span><br><span class="line">  <span class="keyword">for</span> (TypedRange&lt;JreDeflateParameters&gt; range : plan.getDeltaFriendlyNewFileRecompressionPlan()) {</span><br><span class="line">    dataOut.writeLong(range.getOffset());</span><br><span class="line">    dataOut.writeLong(range.getLength());</span><br><span class="line">    <span class="comment">// Write the deflate information</span></span><br><span class="line">    dataOut.write(PatchConstants.CompatibilityWindowId.DEFAULT_DEFLATE.patchValue);</span><br><span class="line">    dataOut.write(range.getMetadata().level);</span><br><span class="line">    dataOut.write(range.getMetadata().strategy);</span><br><span class="line">    dataOut.write(range.getMetadata().nowrap ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Now the delta section</span></span><br><span class="line">  <span class="comment">// First write the number of deltas present in the patch. In v1, there is always exactly one</span></span><br><span class="line">  <span class="comment">// delta, and it is for the entire input; in future versions there may be multiple deltas, of</span></span><br><span class="line">  <span class="comment">// arbitrary types.</span></span><br><span class="line">  dataOut.writeInt(<span class="number">1</span>);</span><br><span class="line">  <span class="comment">// In v1 the delta format is always bsdiff, so write it unconditionally.</span></span><br><span class="line">  dataOut.write(PatchConstants.DeltaFormat.BSDIFF.patchValue);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Write the working ranges. In v1 these are always the entire contents of the delta-friendly</span></span><br><span class="line">  <span class="comment">// old file and the delta-friendly new file. These are for forward compatibility with future</span></span><br><span class="line">  <span class="comment">// versions that may allow deltas of arbitrary formats to be mapped to arbitrary ranges.</span></span><br><span class="line">  dataOut.writeLong(<span class="number">0</span>); <span class="comment">// i.e., start of the working range in the delta-friendly old file</span></span><br><span class="line">  dataOut.writeLong(deltaFriendlyOldFileSize); <span class="comment">// i.e., length of the working range in old</span></span><br><span class="line">  dataOut.writeLong(<span class="number">0</span>); <span class="comment">// i.e., start of the working range in the delta-friendly new file</span></span><br><span class="line">  dataOut.writeLong(deltaFriendlyNewFileSize); <span class="comment">// i.e., length of the working range in new</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// Finally, the length of the delta and the delta itself.</span></span><br><span class="line">  dataOut.writeLong(deltaFile.length());</span><br><span class="line">  <span class="keyword">try</span> (FileInputStream deltaFileIn = <span class="keyword">new</span> FileInputStream(deltaFile);</span><br><span class="line">      BufferedInputStream deltaIn = <span class="keyword">new</span> BufferedInputStream(deltaFileIn)) {</span><br><span class="line">    <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">32768</span>];</span><br><span class="line">    <span class="keyword">int</span> numRead = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((numRead = deltaIn.read(buffer)) &gt;= <span class="number">0</span>) {</span><br><span class="line">      dataOut.write(buffer, <span class="number">0</span>, numRead);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  dataOut.flush();</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4E3B;&#x8981;&#x505A;&#x4E86;&#x5982;&#x4E0B;&#x51E0;&#x6B65;&#xFF1A;</p><ul><li>&#x5199;&#x5165;&#x6587;&#x4EF6;&#x5934;&#xFF0C;&#x201D;GFbFv1_0&#x201D;</li><li>&#x5199;&#x5165;&#x6807;&#x8BB0;&#x4F4D;&#xFF0C;&#x9884;&#x7559;&#xFF0C;&#x503C;&#x4E3A;0</li><li>&#x5199;&#x5165;&#x65E7;&#x6587;&#x4EF6;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x6587;&#x4EF6;&#x7684;&#x5927;&#x5C0F;</li><li>&#x5199;&#x5165;&#x65E7;&#x6587;&#x4EF6;&#x9700;&#x8981;&#x89E3;&#x538B;&#x7684;entry&#x4E2A;&#x6570;</li><li>&#x4F9D;&#x6B21;&#x5199;&#x5165;&#x65E7;&#x6587;&#x4EF6;n&#x4E2A;&#x5F85;&#x89E3;&#x538B;&#x7684;entry&#x7684;&#x504F;&#x79FB;&#x548C;&#x957F;&#x5EA6;</li><li>&#x5199;&#x5165;&#x65B0;&#x6587;&#x4EF6;&#x9700;&#x8981;&#x538B;&#x7F29;&#x7684;entry&#x7684;&#x4E2A;&#x6570;</li><li>&#x4F9D;&#x6B21;&#x5199;&#x5165;&#x65B0;&#x6587;&#x4EF6;n&#x4E2A;&#x5F85;&#x538B;&#x7F29;&#x7684;entry&#x7684;&#x504F;&#x79FB;&#x548C;&#x957F;&#x5EA6;&#xFF0C;&#x517C;&#x5BB9;&#x7A97;&#x53E3;&#xFF08;&#x7A97;&#x53E3;id&#xFF0C;&#x538B;&#x7F29;&#x7EA7;&#x522B;&#xFF0C;&#x538B;&#x7F29;&#x7B56;&#x7565;&#xFF0C;nowrap&#xFF09;</li><li>&#x5199;&#x5165;&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#x63CF;&#x8FF0;&#x4E2A;&#x6570;&#xFF0C;&#x53EA;&#x4F7F;&#x7528;&#x4E86;bsdiff&#xFF0C;&#x56E0;&#x6B64;&#x503C;&#x4E3A;1</li><li>&#x5199;&#x5165;&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;id&#xFF0C;&#x65E7;&#x6587;&#x4EF6;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x6587;&#x4EF6;&#x5E94;&#x7528;&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#x7684;&#x504F;&#x79FB;&#x548C;&#x957F;&#x5EA6;&#xFF0C;&#x65B0;&#x6587;&#x4EF6;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x6587;&#x4EF6;&#x5E94;&#x7528;&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#x7684;&#x504F;&#x79FB;&#x548C;&#x957F;&#x5EA6;</li><li>&#x5199;&#x5165;patch&#x6587;&#x4EF6;&#x7684;&#x5927;&#x5C0F;</li><li>&#x5199;&#x5165;bsdiff&#x751F;&#x6210;&#x7684;patch&#x6587;&#x4EF6;&#x5185;&#x5BB9;</li></ul><h3 id="&#x65B0;&#x6587;&#x4EF6;&#x7684;&#x5408;&#x6210;"><a href="#&#x65B0;&#x6587;&#x4EF6;&#x7684;&#x5408;&#x6210;" class="headerlink" title="&#x65B0;&#x6587;&#x4EF6;&#x7684;&#x5408;&#x6210;"></a>&#x65B0;&#x6587;&#x4EF6;&#x7684;&#x5408;&#x6210;</h3><p>&#x5408;&#x6210;&#x4E3B;&#x8981;&#x901A;&#x8FC7;com.google.archivepatcher.applier.FileByFileV1DeltaApplier&#x7684;applyDelta&#xFF0C;&#x6700;&#x7EC8;&#x4F1A;&#x8C03;&#x7528;&#x5230;applyDeltaInternal&#x65B9;&#x6CD5;&#xFF0C;&#x5176;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">applyDeltaInternal</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">      File oldBlob, File deltaFriendlyOldBlob, InputStream deltaIn, OutputStream newBlobOut)</span></span></span><br><span class="line"><span class="function">      <span class="keyword">throws</span> IOException </span>{</span><br><span class="line"></span><br><span class="line">    <span class="comment">// First, read the patch plan from the patch stream.</span></span><br><span class="line">    PatchReader patchReader = <span class="keyword">new</span> PatchReader();</span><br><span class="line">    PatchApplyPlan plan = patchReader.readPatchApplyPlan(deltaIn);</span><br><span class="line">    writeDeltaFriendlyOldBlob(plan, oldBlob, deltaFriendlyOldBlob);</span><br><span class="line">    <span class="comment">// Apply the delta. In v1 there is always exactly one delta descriptor, it is bsdiff, and it</span></span><br><span class="line">    <span class="comment">// takes up the rest of the patch stream - so there is no need to examine the list of</span></span><br><span class="line">    <span class="comment">// DeltaDescriptors in the patch at all.</span></span><br><span class="line">    <span class="keyword">long</span> deltaLength = plan.getDeltaDescriptors().get(<span class="number">0</span>).getDeltaLength();</span><br><span class="line">    DeltaApplier deltaApplier = getDeltaApplier();</span><br><span class="line">    <span class="comment">// Don&apos;t close this stream, as it is just a limiting wrapper.</span></span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">&quot;resource&quot;</span>)</span><br><span class="line">    LimitedInputStream limitedDeltaIn = <span class="keyword">new</span> LimitedInputStream(deltaIn, deltaLength);</span><br><span class="line">    <span class="comment">// Don&apos;t close this stream, as it would close the underlying OutputStream (that we don&apos;t own).</span></span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(<span class="string">&quot;resource&quot;</span>)</span><br><span class="line">    PartiallyCompressingOutputStream recompressingNewBlobOut =</span><br><span class="line">        <span class="keyword">new</span> PartiallyCompressingOutputStream(</span><br><span class="line">            plan.getDeltaFriendlyNewFileRecompressionPlan(),</span><br><span class="line">            newBlobOut,</span><br><span class="line">            DEFAULT_COPY_BUFFER_SIZE);</span><br><span class="line">    deltaApplier.applyDelta(deltaFriendlyOldBlob, limitedDeltaIn, recompressingNewBlobOut);</span><br><span class="line">    recompressingNewBlobOut.flush();</span><br><span class="line">  }</span><br></pre></td></tr></table></figure><p>&#x4E3B;&#x8981;&#x505A;&#x4E86;&#x5982;&#x4E0B;&#x51E0;&#x4EF6;&#x4E8B;&#xFF1A;</p><ul><li>&#x89E3;&#x6790;patch&#x6587;&#x4EF6;&#x751F;&#x6210;PatchApplyPlan&#x5BF9;&#x8C61;</li><li>&#x751F;&#x6210;&#x65E7;&#x6587;&#x4EF6;&#x7684;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x6587;&#x4EF6;</li><li>&#x5E94;&#x7528;&#x5408;&#x6210;&#x7B97;&#x6CD5;&#xFF0C;&#x5408;&#x6210;&#x65B0;&#x6587;&#x4EF6;&#x7684;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x6587;&#x4EF6;&#xFF0C;&#x4E8E;&#x6B64;&#x540C;&#x65F6;&#x65B0;&#x6587;&#x4EF6;zip&#x5305;&#x5728;&#x6D41;&#x7684;&#x5199;&#x5165;&#x8FC7;&#x7A0B;&#x4E2D;&#x5B8C;&#x6210;&#x5408;&#x6210;&#x3002;</li></ul><p>&#x5BF9;&#x4E8E;&#x7B2C;&#x4E00;&#x6B65;&#xFF0C;&#x6765;&#x770B;&#x770B;&#x5982;&#x4F55;&#x89E3;&#x6790;&#x7684;&#xFF0C;&#x89E3;&#x6790;&#x4EE3;&#x7801;&#x5982;&#x4E0B;:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> PatchApplyPlan <span class="title">readPatchApplyPlan</span><span class="params">(InputStream in)</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">   <span class="comment">// Use DataOutputStream for ease of writing. This is deliberately left open, as closing it would</span></span><br><span class="line">   <span class="comment">// close the output stream that was passed in and that is not part of the method&apos;s documented</span></span><br><span class="line">   <span class="comment">// behavior.</span></span><br><span class="line">   <span class="meta">@SuppressWarnings</span>(<span class="string">&quot;resource&quot;</span>)</span><br><span class="line">   DataInputStream dataIn = <span class="keyword">new</span> DataInputStream(in);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// Read header and flags.</span></span><br><span class="line">   <span class="keyword">byte</span>[] expectedIdentifier = PatchConstants.IDENTIFIER.getBytes(<span class="string">&quot;US-ASCII&quot;</span>);</span><br><span class="line">   <span class="keyword">byte</span>[] actualIdentifier = <span class="keyword">new</span> <span class="keyword">byte</span>[expectedIdentifier.length];</span><br><span class="line">   dataIn.readFully(actualIdentifier);</span><br><span class="line">   <span class="keyword">if</span> (!Arrays.equals(expectedIdentifier, actualIdentifier)) {</span><br><span class="line">     <span class="keyword">throw</span> <span class="keyword">new</span> PatchFormatException(<span class="string">&quot;Bad identifier&quot;</span>);</span><br><span class="line">   }</span><br><span class="line">   dataIn.skip(<span class="number">4</span>); <span class="comment">// Flags (ignored in v1)</span></span><br><span class="line">   <span class="keyword">long</span> deltaFriendlyOldFileSize = checkNonNegative(</span><br><span class="line">       dataIn.readLong(), <span class="string">&quot;delta-friendly old file size&quot;</span>);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// Read old file uncompression instructions.</span></span><br><span class="line">   <span class="keyword">int</span> numOldFileUncompressionInstructions = (<span class="keyword">int</span>) checkNonNegative(</span><br><span class="line">       dataIn.readInt(), <span class="string">&quot;old file uncompression instruction count&quot;</span>);</span><br><span class="line">   List&lt;TypedRange&lt;Void&gt;&gt; oldFileUncompressionPlan =</span><br><span class="line">       <span class="keyword">new</span> ArrayList&lt;TypedRange&lt;Void&gt;&gt;(numOldFileUncompressionInstructions);</span><br><span class="line">   <span class="keyword">long</span> lastReadOffset = -<span class="number">1</span>;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; numOldFileUncompressionInstructions; x++) {</span><br><span class="line">     <span class="keyword">long</span> offset = checkNonNegative(dataIn.readLong(), <span class="string">&quot;old file uncompression range offset&quot;</span>);</span><br><span class="line">     <span class="keyword">long</span> length = checkNonNegative(dataIn.readLong(), <span class="string">&quot;old file uncompression range length&quot;</span>);</span><br><span class="line">     <span class="keyword">if</span> (offset &lt; lastReadOffset) {</span><br><span class="line">       <span class="keyword">throw</span> <span class="keyword">new</span> PatchFormatException(<span class="string">&quot;old file uncompression ranges out of order or overlapping&quot;</span>);</span><br><span class="line">     }</span><br><span class="line">     TypedRange&lt;Void&gt; range = <span class="keyword">new</span> TypedRange&lt;Void&gt;(offset, length, <span class="keyword">null</span>);</span><br><span class="line">     oldFileUncompressionPlan.add(range);</span><br><span class="line">     lastReadOffset = offset + length; <span class="comment">// To check that the next range starts after the current one</span></span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   <span class="comment">// Read new file recompression instructions</span></span><br><span class="line">   <span class="keyword">int</span> numDeltaFriendlyNewFileRecompressionInstructions = dataIn.readInt();</span><br><span class="line">   checkNonNegative(</span><br><span class="line">       numDeltaFriendlyNewFileRecompressionInstructions,</span><br><span class="line">       <span class="string">&quot;delta-friendly new file recompression instruction count&quot;</span>);</span><br><span class="line">   List&lt;TypedRange&lt;JreDeflateParameters&gt;&gt; deltaFriendlyNewFileRecompressionPlan =</span><br><span class="line">       <span class="keyword">new</span> ArrayList&lt;TypedRange&lt;JreDeflateParameters&gt;&gt;(</span><br><span class="line">           numDeltaFriendlyNewFileRecompressionInstructions);</span><br><span class="line">   lastReadOffset = -<span class="number">1</span>;</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; numDeltaFriendlyNewFileRecompressionInstructions; x++) {</span><br><span class="line">     <span class="keyword">long</span> offset = checkNonNegative(</span><br><span class="line">         dataIn.readLong(), <span class="string">&quot;delta-friendly new file recompression range offset&quot;</span>);</span><br><span class="line">     <span class="keyword">long</span> length = checkNonNegative(</span><br><span class="line">         dataIn.readLong(), <span class="string">&quot;delta-friendly new file recompression range length&quot;</span>);</span><br><span class="line">     <span class="keyword">if</span> (offset &lt; lastReadOffset) {</span><br><span class="line">       <span class="keyword">throw</span> <span class="keyword">new</span> PatchFormatException(</span><br><span class="line">           <span class="string">&quot;delta-friendly new file recompression ranges out of order or overlapping&quot;</span>);</span><br><span class="line">     }</span><br><span class="line">     lastReadOffset = offset + length; <span class="comment">// To check that the next range starts after the current one</span></span><br><span class="line"></span><br><span class="line">     <span class="comment">// Read the JreDeflateParameters</span></span><br><span class="line">     <span class="comment">// Note that v1 only supports the default deflate compatibility window.</span></span><br><span class="line">     checkRange(</span><br><span class="line">         dataIn.readByte(),</span><br><span class="line">         PatchConstants.CompatibilityWindowId.DEFAULT_DEFLATE.patchValue,</span><br><span class="line">         PatchConstants.CompatibilityWindowId.DEFAULT_DEFLATE.patchValue,</span><br><span class="line">         <span class="string">&quot;compatibility window id&quot;</span>);</span><br><span class="line">     <span class="keyword">int</span> level = (<span class="keyword">int</span>) checkRange(dataIn.readUnsignedByte(), <span class="number">1</span>, <span class="number">9</span>, <span class="string">&quot;recompression level&quot;</span>);</span><br><span class="line">     <span class="keyword">int</span> strategy = (<span class="keyword">int</span>) checkRange(dataIn.readUnsignedByte(), <span class="number">0</span>, <span class="number">2</span>, <span class="string">&quot;recompression strategy&quot;</span>);</span><br><span class="line">     <span class="keyword">int</span> nowrapInt = (<span class="keyword">int</span>) checkRange(dataIn.readUnsignedByte(), <span class="number">0</span>, <span class="number">1</span>, <span class="string">&quot;recompression nowrap&quot;</span>);</span><br><span class="line">     TypedRange&lt;JreDeflateParameters&gt; range =</span><br><span class="line">         <span class="keyword">new</span> TypedRange&lt;JreDeflateParameters&gt;(</span><br><span class="line">             offset,</span><br><span class="line">             length,</span><br><span class="line">             JreDeflateParameters.of(level, strategy, nowrapInt == <span class="number">0</span> ? <span class="keyword">false</span> : <span class="keyword">true</span>));</span><br><span class="line">     deltaFriendlyNewFileRecompressionPlan.add(range);</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   <span class="comment">// Read the delta metadata, but stop before the first byte of the actual delta.</span></span><br><span class="line">   <span class="comment">// V1 has exactly one delta and it must be bsdiff.</span></span><br><span class="line">   <span class="keyword">int</span> numDeltaRecords = (<span class="keyword">int</span>) checkRange(dataIn.readInt(), <span class="number">1</span>, <span class="number">1</span>, <span class="string">&quot;num delta records&quot;</span>);</span><br><span class="line"></span><br><span class="line">   List&lt;DeltaDescriptor&gt; deltaDescriptors = <span class="keyword">new</span> ArrayList&lt;DeltaDescriptor&gt;(numDeltaRecords);</span><br><span class="line">   <span class="keyword">for</span> (<span class="keyword">int</span> x = <span class="number">0</span>; x &lt; numDeltaRecords; x++) {</span><br><span class="line">     <span class="keyword">byte</span> deltaFormatByte = (<span class="keyword">byte</span>)</span><br><span class="line">     checkRange(</span><br><span class="line">         dataIn.readByte(),</span><br><span class="line">         PatchConstants.DeltaFormat.BSDIFF.patchValue,</span><br><span class="line">         PatchConstants.DeltaFormat.BSDIFF.patchValue,</span><br><span class="line">         <span class="string">&quot;delta format&quot;</span>);</span><br><span class="line">     <span class="keyword">long</span> deltaFriendlyOldFileWorkRangeOffset = checkNonNegative(</span><br><span class="line">         dataIn.readLong(), <span class="string">&quot;delta-friendly old file work range offset&quot;</span>);</span><br><span class="line">     <span class="keyword">long</span> deltaFriendlyOldFileWorkRangeLength = checkNonNegative(</span><br><span class="line">         dataIn.readLong(), <span class="string">&quot;delta-friendly old file work range length&quot;</span>);</span><br><span class="line">     <span class="keyword">long</span> deltaFriendlyNewFileWorkRangeOffset = checkNonNegative(</span><br><span class="line">         dataIn.readLong(), <span class="string">&quot;delta-friendly new file work range offset&quot;</span>);</span><br><span class="line">     <span class="keyword">long</span> deltaFriendlyNewFileWorkRangeLength = checkNonNegative(</span><br><span class="line">         dataIn.readLong(), <span class="string">&quot;delta-friendly new file work range length&quot;</span>);</span><br><span class="line">     <span class="keyword">long</span> deltaLength = checkNonNegative(dataIn.readLong(), <span class="string">&quot;delta length&quot;</span>);</span><br><span class="line">     DeltaDescriptor descriptor =</span><br><span class="line">         <span class="keyword">new</span> DeltaDescriptor(</span><br><span class="line">             PatchConstants.DeltaFormat.fromPatchValue(deltaFormatByte),</span><br><span class="line">             <span class="keyword">new</span> TypedRange&lt;Void&gt;(</span><br><span class="line">                 deltaFriendlyOldFileWorkRangeOffset, deltaFriendlyOldFileWorkRangeLength, <span class="keyword">null</span>),</span><br><span class="line">             <span class="keyword">new</span> TypedRange&lt;Void&gt;(</span><br><span class="line">                 deltaFriendlyNewFileWorkRangeOffset, deltaFriendlyNewFileWorkRangeLength, <span class="keyword">null</span>),</span><br><span class="line">             deltaLength);</span><br><span class="line">     deltaDescriptors.add(descriptor);</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">new</span> PatchApplyPlan(</span><br><span class="line">       Collections.unmodifiableList(oldFileUncompressionPlan),</span><br><span class="line">       deltaFriendlyOldFileSize,</span><br><span class="line">       Collections.unmodifiableList(deltaFriendlyNewFileRecompressionPlan),</span><br><span class="line">       Collections.unmodifiableList(deltaDescriptors));</span><br><span class="line"> }</span><br></pre></td></tr></table></figure><p>&#x5206;&#x4E3A;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#x6B65;&#x9AA4;&#xFF1A;</p><ul><li>&#x8BFB;&#x6587;&#x4EF6;&#x5934;&#xFF0C;&#x6821;&#x9A8C;&#x6587;&#x4EF6;&#x5934;</li><li>&#x5FFD;&#x7565;4&#x4E2A;&#x5B57;&#x8282;&#x7684;&#x6807;&#x8BB0;&#x4F4D;</li><li>&#x8BFB;&#x65E7;&#x6587;&#x4EF6;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x6587;&#x4EF6;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x5E76;&#x6821;&#x9A8C;&#xFF0C;&#x975E;&#x8D1F;&#x6570;</li><li>&#x8BFB;&#x65E7;&#x6587;&#x4EF6;&#x5F85;&#x89E3;&#x538B;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x5E76;&#x6821;&#x9A8C;&#xFF0C;&#x975E;&#x8D1F;&#x6570;</li><li>&#x8BFB;n&#x4E2A;&#x65E7;&#x6587;&#x4EF6;&#x5F85;&#x89E3;&#x538B;&#x7684;&#x504F;&#x79FB;&#xFF0C;&#x957F;&#x5EA6;&#xFF0C;&#x5E76;&#x6821;&#x9A8C;&#xFF0C;&#x975E;&#x8D1F;&#x6570;</li><li>&#x8BFB;&#x65B0;&#x6587;&#x4EF6;&#x5F85;&#x538B;&#x7F29;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x5E76;&#x6821;&#x9A8C;&#xFF0C;&#x975E;&#x8D1F;&#x6570;</li><li>&#x8BFB;n&#x4E2A;&#x65B0;&#x6587;&#x4EF6;&#x5F85;&#x538B;&#x7F29;&#x7684;&#x504F;&#x79FB;&#xFF0C;&#x957F;&#x5EA6;&#xFF0C;&#x5E76;&#x6821;&#x9A8C;&#xFF0C;&#x975E;&#x8D1F;&#x6570;&#xFF0C;&#x538B;&#x7F29;&#x7EA7;&#x522B;&#xFF0C;&#x7F16;&#x7801;&#x7B56;&#x7565;&#xFF0C;nowrap&#x503C;</li><li>&#x8BFB;&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#x4E2A;&#x6570;</li><li>&#x8BFB;n&#x4E2A;&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#x63CF;&#x8FF0;&#x3002;&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;id&#xFF0C;&#x65E7;&#x6587;&#x4EF6;&#x5E94;&#x7528;&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#x7684;&#x504F;&#x79FB;&#x548C;&#x957F;&#x5EA6;&#xFF0C;&#x65B0;&#x6587;&#x4EF6;&#x5E94;&#x7528;&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#x7684;&#x504F;&#x79FB;&#x548C;&#x957F;&#x5EA6;&#xFF0C;&#x751F;&#x6210;&#x7684;&#x5DEE;&#x91CF;&#x6587;&#x4EF6;&#x7684;&#x5927;&#x5C0F;</li><li>&#x8FD4;&#x56DE;PatchApplyPlan&#x5BF9;&#x8C61;</li></ul><p>&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x662F;&#x6839;&#x636E;&#x8FD4;&#x56DE;&#x7684;PatchApplyPlan&#x5BF9;&#x8C61;&#xFF0C;&#x83B7;&#x5F97;&#x65E7;&#x6587;&#x4EF6;&#x5F85;&#x89E3;&#x538B;&#x7684;&#x4E00;&#x4E2A;TypedRange&#x7684;List&#x5BF9;&#x8C61;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;DeltaFriendlyFile.generateDeltaFriendlyFile&#x751F;&#x4EA7;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x548C;&#x751F;&#x4EA7;patch&#x7684;&#x90A3;&#x4E2A;&#x8FC7;&#x7A0B;&#x4E00;&#x6837;&#xFF0C;&#x4E0D;&#x91CD;&#x590D;&#x63CF;&#x8FF0;&#x3002;&#x5176;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">writeDeltaFriendlyOldBlob</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">     PatchApplyPlan plan, File oldBlob, File deltaFriendlyOldBlob)</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">   RandomAccessFileOutputStream deltaFriendlyOldFileOut = <span class="keyword">null</span>;</span><br><span class="line">   <span class="keyword">try</span> {</span><br><span class="line">     deltaFriendlyOldFileOut =</span><br><span class="line">         <span class="keyword">new</span> RandomAccessFileOutputStream(</span><br><span class="line">             deltaFriendlyOldBlob, plan.getDeltaFriendlyOldFileSize());</span><br><span class="line">     DeltaFriendlyFile.generateDeltaFriendlyFile(</span><br><span class="line">         plan.getOldFileUncompressionPlan(),</span><br><span class="line">         oldBlob,</span><br><span class="line">         deltaFriendlyOldFileOut,</span><br><span class="line">         <span class="keyword">false</span>,</span><br><span class="line">         DEFAULT_COPY_BUFFER_SIZE);</span><br><span class="line">   } <span class="keyword">finally</span> {</span><br><span class="line">     <span class="keyword">try</span> {</span><br><span class="line">       deltaFriendlyOldFileOut.close();</span><br><span class="line">     } <span class="keyword">catch</span> (Exception ignored) {</span><br><span class="line">       <span class="comment">// Nothing</span></span><br><span class="line">     }</span><br><span class="line">   }</span><br></pre></td></tr></table></figure><p>&#x63A5;&#x4E0B;&#x91CC;&#x5C31;&#x662F;&#x5408;&#x6210;&#x65B0;&#x6587;&#x4EF6;&#x4E86;&#xFF0C;&#x4F7F;&#x7528;BsPatch&#x7B97;&#x6CD5;&#x5B8C;&#x6210;&#x5408;&#x6210;&#x5E76;&#x5199;&#x5165;Outputstream&#x4E2D;&#xFF0C;&#x800C;&#x8FD9;&#x4E2A;OutputStream&#x7ECF;&#x8FC7;&#x88C5;&#x9970;&#x8005;&#x6A21;&#x5F0F;&#x5305;&#x88C5;&#xFF0C;&#x6700;&#x7EC8;&#x4F20;&#x5165;&#x7684;&#x662F;PartiallyCompressingOutputStream&#x8F93;&#x51FA;&#x6D41;&#xFF0C;&#x6784;&#x5EFA;PartiallyCompressingOutputStream&#x5BF9;&#x8C61;&#x6240;&#x9700;&#x53C2;&#x6570;&#x5C31;&#x662F;&#x65B0;&#x6587;&#x4EF6;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x6587;&#x4EF6;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x538B;&#x7F29;&#x7684;&#x6570;&#x636E;&#x7684;TypedRange&#x7684;List&#x5BF9;&#x8C61;&#x3002;&#x6700;&#x7EC8;&#xFF0C;&#x5408;&#x6210;Zip&#x6587;&#x4EF6;&#x7684;&#x5DE5;&#x4F5C;&#x4F1A;&#x8F97;&#x8F6C;&#x5230;PartiallyCompressingOutputStream&#x4E2D;&#x7684;writeChunk&#x51FD;&#x6570;&#xFF0C;&#x5176;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">writeChunk</span><span class="params">(<span class="keyword">byte</span>[] buffer, <span class="keyword">int</span> offset, <span class="keyword">int</span> length)</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">    <span class="keyword">if</span> (bytesTillCompressionStarts() == <span class="number">0</span> &amp;&amp; !currentlyCompressing()) {</span><br><span class="line">      <span class="comment">// Compression will begin immediately.</span></span><br><span class="line">      JreDeflateParameters parameters = nextCompressedRange.getMetadata();</span><br><span class="line">      <span class="keyword">if</span> (deflater == <span class="keyword">null</span>) {</span><br><span class="line">        deflater = <span class="keyword">new</span> Deflater(parameters.level, parameters.nowrap);</span><br><span class="line">      } <span class="keyword">else</span> <span class="keyword">if</span> (lastDeflateParameters.nowrap != parameters.nowrap) {</span><br><span class="line">        <span class="comment">// Last deflater must be destroyed because nowrap settings do not match.</span></span><br><span class="line">        deflater.end();</span><br><span class="line">        deflater = <span class="keyword">new</span> Deflater(parameters.level, parameters.nowrap);</span><br><span class="line">      }</span><br><span class="line">      <span class="comment">// Deflater will already have been reset at the end of this method, no need to do it again.</span></span><br><span class="line">      <span class="comment">// Just set up the right parameters.</span></span><br><span class="line">      deflater.setLevel(parameters.level);</span><br><span class="line">      deflater.setStrategy(parameters.strategy);</span><br><span class="line">      deflaterOut = <span class="keyword">new</span> DeflaterOutputStream(normalOut, deflater, compressionBufferSize);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> numBytesToWrite;</span><br><span class="line">    OutputStream writeTarget;</span><br><span class="line">    <span class="keyword">if</span> (currentlyCompressing()) {</span><br><span class="line">      <span class="comment">// Don&apos;t write past the end of the compressed range.</span></span><br><span class="line">      numBytesToWrite = (<span class="keyword">int</span>) Math.min(length, bytesTillCompressionEnds());</span><br><span class="line">      writeTarget = deflaterOut;</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">      writeTarget = normalOut;</span><br><span class="line">      <span class="keyword">if</span> (nextCompressedRange == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="comment">// All compression ranges have been consumed.</span></span><br><span class="line">        numBytesToWrite = length;</span><br><span class="line">      } <span class="keyword">else</span> {</span><br><span class="line">        <span class="comment">// Don&apos;t write past the point where the next compressed range begins.</span></span><br><span class="line">        numBytesToWrite = (<span class="keyword">int</span>) Math.min(length, bytesTillCompressionStarts());</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    writeTarget.write(buffer, offset, numBytesToWrite);</span><br><span class="line">    numBytesWritten += numBytesToWrite;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (currentlyCompressing() &amp;&amp; bytesTillCompressionEnds() == <span class="number">0</span>) {</span><br><span class="line">      <span class="comment">// Compression range complete. Finish the output and set up for the next run.</span></span><br><span class="line">      deflaterOut.finish();</span><br><span class="line">      deflaterOut.flush();</span><br><span class="line">      deflaterOut = <span class="keyword">null</span>;</span><br><span class="line">      deflater.reset();</span><br><span class="line">      lastDeflateParameters = nextCompressedRange.getMetadata();</span><br><span class="line">      <span class="keyword">if</span> (rangeIterator.hasNext()) {</span><br><span class="line">        <span class="comment">// More compression ranges await in the future.</span></span><br><span class="line">        nextCompressedRange = rangeIterator.next();</span><br><span class="line">      } <span class="keyword">else</span> {</span><br><span class="line">        <span class="comment">// All compression ranges have been consumed.</span></span><br><span class="line">        nextCompressedRange = <span class="keyword">null</span>;</span><br><span class="line">        deflater.end();</span><br><span class="line">        deflater = <span class="keyword">null</span>;</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> numBytesToWrite;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">currentlyCompressing</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">return</span> deflaterOut != <span class="keyword">null</span>;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">long</span> <span class="title">bytesTillCompressionStarts</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (nextCompressedRange == <span class="keyword">null</span>) {</span><br><span class="line">      <span class="comment">// All compression ranges have been consumed</span></span><br><span class="line">      <span class="keyword">return</span> -<span class="number">1L</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> nextCompressedRange.getOffset() - numBytesWritten;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">long</span> <span class="title">bytesTillCompressionEnds</span><span class="params">()</span> </span>{</span><br><span class="line">    <span class="keyword">if</span> (nextCompressedRange == <span class="keyword">null</span>) {</span><br><span class="line">      <span class="comment">// All compression ranges have been consumed</span></span><br><span class="line">      <span class="keyword">return</span> -<span class="number">1L</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> (nextCompressedRange.getOffset() + nextCompressedRange.getLength()) - numBytesWritten;</span><br><span class="line">  }</span><br></pre></td></tr></table></figure><p>&#x5408;&#x6210;&#x7B97;&#x6CD5;&#x7684;&#x6838;&#x5FC3;&#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x4E86;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x8BBE;&#x8BA1;&#x7684;&#x5341;&#x5206;&#x5DE7;&#x5999;&#xFF0C;&#x5EFA;&#x8BAE;&#x6253;&#x4E2A;&#x65AD;&#x70B9;&#x8DD1;&#x4E00;&#x8DD1;&#xFF0C;&#x597D;&#x597D;&#x7406;&#x89E3;&#x4E00;&#x4E0B;&#x3002;&#x8FD9;&#x91CC;&#x7B80;&#x5355;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x3002;</p><ul><li>&#x5728;PartiallyCompressingOutputStream&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x83B7;&#x5F97;&#x4E86;compressionRanges&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x6570;&#x636E;</li><li>&#x5224;&#x65AD;&#x5199;&#x5165;&#x7684;&#x6570;&#x636E;&#x8DDD;&#x79BB;&#x4E0B;&#x4E00;&#x4E2A;&#x538B;&#x7F29;&#x6570;&#x636E;&#x5F00;&#x59CB;&#x5982;&#x679C;&#x662F;0&#xFF0C;&#x4E14;&#x5F53;&#x524D;&#x5E76;&#x4E0D;&#x5728;&#x538B;&#x7F29;&#xFF0C;&#x5219;&#x83B7;&#x5F97;&#x538B;&#x7F29;&#x8BBE;&#x7F6E;&#xFF0C;&#x5373;&#x538B;&#x7F29;&#x7EA7;&#x522B;&#xFF0C;&#x7F16;&#x7801;&#x7B56;&#x7565;&#xFF0C;nowrap&#xFF0C;&#x5E76;&#x8FDB;&#x884C;&#x8BBE;&#x7F6E;&#x3002;&#x5E76;&#x5305;&#x88C5;&#x8F93;&#x51FA;&#x6D41;&#x4E3A;&#x538B;&#x7F29;&#x6D41;&#x3002;</li><li>&#x5982;&#x679C;&#x5F53;&#x524D;&#x6B63;&#x5728;&#x538B;&#x7F29;&#xFF0C;&#x5219;&#x5224;&#x65AD;&#x5F53;&#x524D;&#x5199;&#x5165;&#x7684;&#x6570;&#x636E;&#x957F;&#x5EA6;&#x548C;&#x5F85;&#x538B;&#x7F29;&#x7684;&#x6570;&#x636E;&#x957F;&#x5EA6;&#xFF0C;&#x53D6;&#x5176;&#x4E2D;&#x5C0F;&#x7684;&#x4E00;&#x4E2A;&#xFF0C;&#x8BBE;&#x7F6E;&#x76EE;&#x6807;&#x8F93;&#x51FA;&#x6D41;&#x4E3A;&#x538B;&#x7F29;&#x6D41;&#xFF0C;&#x5373;&#x8D1F;&#x8D23;&#x538B;&#x7F29;&#x5DE5;&#x4F5C;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x62F7;&#x8D1D;&#x5DE5;&#x4F5C;&#x3002;</li><li>&#x5982;&#x679C;&#x5F53;&#x524D;&#x4E0D;&#x5728;&#x538B;&#x7F29;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x4E0B;&#x4E00;&#x4E2A;&#x538B;&#x7F29;&#x6570;&#x636E;&#x4E86;&#xFF0C;&#x5219;&#x76F4;&#x63A5;&#x5199;&#x5165;&#x5BF9;&#x5E94;&#x957F;&#x5EA6;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x5982;&#x679C;&#x8FD8;&#x6709;&#x4E0B;&#x4E00;&#x4E2A;&#x538B;&#x7F29;&#x6570;&#x636E;&#xFF0C;&#x5219;&#x53D6;&#x5F53;&#x524D;&#x5199;&#x5165;&#x6570;&#x636E;&#x7684;&#x957F;&#x5EA6;&#x548C;&#x8DDD;&#x79BB;&#x4E0B;&#x4E00;&#x4E2A;&#x538B;&#x7F29;&#x6570;&#x636E;&#x7684;&#x504F;&#x79FB;&#x4F4D;&#x7F6E;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x53D6;&#x5176;&#x4E2D;&#x5C0F;&#x7684;&#x4E00;&#x4E2A;&#xFF0C;&#x8BBE;&#x7F6E;&#x76EE;&#x6807;&#x8F93;&#x51FA;&#x6D41;&#x4E3A;&#x6B63;&#x5E38;&#x6D41;&#xFF0C;&#x5373;&#x8FDB;&#x884C;&#x62F7;&#x8D1D;&#x5DE5;&#x4F5C;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x538B;&#x7F29;&#x5DE5;&#x4F5C;</li><li>&#x5224;&#x65AD;&#x5F53;&#x524D;&#x662F;&#x5426;&#x6B63;&#x5728;&#x538B;&#x7F29;&#xFF0C;&#x5E76;&#x4E14;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x6240;&#x6709;&#x538B;&#x7F29;&#x6570;&#x636E;&#x90FD;&#x5DF2;&#x7ECF;&#x5199;&#x5165;&#x5B8C;&#x5168;&#xFF0C;&#x6267;&#x884C;&#x538B;&#x7F29;&#x6D41;&#x7684;finish&#x548C;flush&#x64CD;&#x4F5C;&#xFF0C;&#x91CD;&#x7F6E;&#x538B;&#x7F29;&#x76F8;&#x5173;&#x914D;&#x7F6E;&#x9879;&#xFF0C;&#x5E76;&#x79FB;&#x52A8;&#x5F85;&#x538B;&#x7F29;&#x7684;&#x6570;&#x636E;&#x5230;&#x4E0B;&#x4E00;&#x6761;&#x8BB0;&#x5F55;&#x3002;</li><li>&#x91CD;&#x590D;&#x4EE5;&#x4E0A;&#x64CD;&#x4F5C;&#xFF0C;&#x76F4;&#x5230;&#x6240;&#x6709;&#x6570;&#x636E;&#x5199;&#x5165;&#x5B8C;&#x5168;&#x3002;</li></ul><p>&#x8FC7;&#x7A0B;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#xFF0C;&#x540C;&#x6837;&#x7684;&#x7528;&#x4E00;&#x5F20;&#x56FE;&#x6765;&#x8868;&#x793A;:</p><p><img src="/2017/10/05/Google-Archive-Patch-%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/recompress.png" alt="recompress.png"></p><p>&#x5408;&#x6210;&#x7684;&#x65B0;&#x7684;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x7684;&#x6587;&#x4EF6;&#x6570;&#x636E;&#x5982;&#x4E0A;&#x56FE;&#x8868;&#x793A;&#x3002;</p><p>&#x5F53;&#x9047;&#x5230;&#x7EFF;&#x8272;&#x7684;gap&#x533A;&#x57DF;&#x65F6;&#xFF0C;&#x5219;&#x6267;&#x884C;&#x4E8C;&#x8FDB;&#x5236;&#x62F7;&#x8D1D;&#x64CD;&#x4F5C;&#xFF0C;&#x5C06;&#x5176;&#x62F7;&#x8D1D;&#x5230;&#x8F93;&#x51FA;&#x6D41;&#x53BB;&#xFF0C;&#x5F53;&#x9047;&#x5230;&#x7EA2;&#x8272;&#x7684;&#x5DF2;&#x7ECF;&#x89E3;&#x538B;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4F1A;&#x4F7F;&#x7528;&#x5BF9;&#x5E94;&#x7684;&#x538B;&#x7F29;&#x7EA7;&#x522B;&#xFF0C;&#x7F16;&#x7801;&#x7B56;&#x7565;&#xFF0C;nowrap&#x53C2;&#x6570;&#x5C06;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x538B;&#x7F29;&#xFF0C;&#x5C06;&#x84DD;&#x8272;&#x7684;&#x5269;&#x4F59;&#x6570;&#x636E;&#x5199;&#x5165;&#x76EE;&#x6807;&#x6570;&#x636E;&#x3002;</p><p>&#x5C31;&#x8FD9;&#x6837;&#x6574;&#x4E2A;&#x5408;&#x6210;&#x64CD;&#x4F5C;&#x5C31;&#x5B8C;&#x6210;&#x4E86;&#x3002;</p><p>&#x8FD9;&#x6837;&#x4E3A;&#x4F55;&#x80FD;&#x5B8C;&#x6210;zip&#x6587;&#x4EF6;&#x7684;&#x5408;&#x6210;&#x5462;&#xFF0C;&#x4E0A;&#x9762;&#x7684;&#x89E3;&#x6790;&#x5DF2;&#x7ECF;&#x5F88;&#x6E05;&#x695A;&#x4E86;&#xFF0C;&#x5176;&#x5B9E;Google Archive Patch&#x8BB0;&#x5F55;&#x4E86;&#x6240;&#x6709;&#x65B0;&#x6587;&#x4EF6;&#x4E2D;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x538B;&#x7F29;&#x7684;&#x6570;&#x636E;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5BF9;&#x4E8E;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#xFF0C;&#x4F7F;&#x7528;&#x8FD9;&#x4E9B;&#x53C2;&#x6570;&#x538B;&#x7F29;&#xFF0C;&#x5F97;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x538B;&#x7F29;&#x6570;&#x636E;&#xFF0C;&#x5199;&#x5165;&#x5176;&#x5728;&#x65B0;&#x6587;&#x4EF6;&#x7684;&#x771F;&#x5B9E;&#x4F4D;&#x7F6E;&#xFF0C;&#x800C;&#x5BF9;&#x4E8E;Zip&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x5176;&#x4ED6;&#x6570;&#x636E;&#xFF0C;&#x5219;&#x6267;&#x884C;&#x7684;&#x662F;&#x62F7;&#x8D1D;&#x64CD;&#x4F5C;&#xFF0C;&#x8FD9;&#x6837;&#x4E24;&#x79CD;&#x64CD;&#x4F5C;&#x5408;&#x8D77;&#x6765;&#xFF0C;&#x6700;&#x7EC8;&#x5C31;&#x4EA7;&#x751F;&#x4E86;&#x65B0;&#x7684;Zip&#x6587;&#x4EF6;&#x3002;&#x4E14;&#x5BF9;&#x4E8E;Apk&#x6765;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x65E0;&#x9700;&#x5173;&#x5FC3;&#x5176;&#x7B7E;&#x540D;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x771F;&#x662F;&#x5DE7;&#x5999;&#xFF0C;&#x611F;&#x53F9;&#x4E00;&#x4E0B; !</p><h3 id="Patch&#x6587;&#x4EF6;&#x7684;&#x538B;&#x7F29;&#x548C;&#x89E3;&#x538B;"><a href="#Patch&#x6587;&#x4EF6;&#x7684;&#x538B;&#x7F29;&#x548C;&#x89E3;&#x538B;" class="headerlink" title="Patch&#x6587;&#x4EF6;&#x7684;&#x538B;&#x7F29;&#x548C;&#x89E3;&#x538B;"></a>Patch&#x6587;&#x4EF6;&#x7684;&#x538B;&#x7F29;&#x548C;&#x89E3;&#x538B;</h3><p>Google Archive Patch&#x4E0D;&#x5BF9;patch&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x538B;&#x7F29;&#xFF0C;&#x538B;&#x7F29;&#x5DE5;&#x4F5C;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x8FDB;&#x884C;&#xFF0C;&#x4FDD;&#x8BC1;patch&#x6587;&#x4EF6;&#x7684;&#x5927;&#x5C0F;&#x5F88;&#x5C0F;&#xFF0C;&#x800C;&#x5BA2;&#x6237;&#x7AEF;&#x63A5;&#x53D7;&#x5230;patch&#x540E;&#x9700;&#x8981;&#x5BF9;&#x5E94;&#x7684;&#x89E3;&#x538B;&#x3002;&#x8FD9;&#x4E48;&#x505A;&#xFF0C;&#x4FDD;&#x8BC1;&#x4E86;&#x538B;&#x7F29;patch&#x7B97;&#x6CD5;&#x7684;&#x5145;&#x5206;&#x81EA;&#x7531;&#xFF0C;&#x53EF;&#x81EA;&#x884C;&#x9009;&#x62E9;&#xFF0C;&#x65B9;&#x4FBF;&#x6269;&#x5C55;&#x3002;</p><h3 id="&#x901A;&#x7528;&#x7684;&#x5DEE;&#x91CF;&#x751F;&#x6210;&#x548C;&#x5408;&#x6210;&#x6846;&#x67B6;"><a href="#&#x901A;&#x7528;&#x7684;&#x5DEE;&#x91CF;&#x751F;&#x6210;&#x548C;&#x5408;&#x6210;&#x6846;&#x67B6;" class="headerlink" title="&#x901A;&#x7528;&#x7684;&#x5DEE;&#x91CF;&#x751F;&#x6210;&#x548C;&#x5408;&#x6210;&#x6846;&#x67B6;"></a>&#x901A;&#x7528;&#x7684;&#x5DEE;&#x91CF;&#x751F;&#x6210;&#x548C;&#x5408;&#x6210;&#x6846;&#x67B6;</h3><p>&#x8FD9;&#x51E0;&#x5929;&#x7B80;&#x5355;&#x7684;&#x5B9E;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;&#x901A;&#x7528;&#x7684;&#x5DEE;&#x91CF;&#x751F;&#x6210;&#x548C;&#x5408;&#x6210;&#x6846;&#x67B6;&#xFF0C;github&#x5730;&#x5740;&#x89C1; <a href="https://github.com/lizhangqu/CorePatch" target="_blank" rel="noopener">CorePatch</a> ,&#x76EE;&#x524D;&#x5DF2;&#x7ECF;&#x5B9E;&#x73B0;bsdiff&#x548C;Google Archive Patch&#x4EE5;&#x53CA;&#x5168;&#x91CF;&#x5408;&#x6210;&#xFF08;&#x76F4;&#x63A5;&#x62F7;&#x8D1D;&#x6587;&#x4EF6;&#xFF09;</p><h3 id="&#x4F18;&#x5316;"><a href="#&#x4F18;&#x5316;" class="headerlink" title="&#x4F18;&#x5316;"></a>&#x4F18;&#x5316;</h3><h4 id="&#x751F;&#x6210;&#x5DEE;&#x91CF;&#x6587;&#x4EF6;&#x4F18;&#x5316;"><a href="#&#x751F;&#x6210;&#x5DEE;&#x91CF;&#x6587;&#x4EF6;&#x4F18;&#x5316;" class="headerlink" title="&#x751F;&#x6210;&#x5DEE;&#x91CF;&#x6587;&#x4EF6;&#x4F18;&#x5316;"></a>&#x751F;&#x6210;&#x5DEE;&#x91CF;&#x6587;&#x4EF6;&#x4F18;&#x5316;</h4><p>&#x751F;&#x6210;&#x5DEE;&#x91CF;&#x6587;&#x4EF6;&#x4F7F;&#x7528;&#x7684;&#x662F;bsdiff&#xFF0C;&#x4F46;&#x662F;&#x5BF9;&#x5E94;&#x7684;&#x57FA;&#x7840;&#x6587;&#x4EF6;&#x7ECF;&#x8FC7;&#x89E3;&#x538B;&#x4E4B;&#x540E;&#xFF0C;&#x5176;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x5927;&#x5927;&#x53D8;&#x5927;&#xFF0C;&#x5BFC;&#x81F4;&#x751F;&#x6210;&#x5DEE;&#x91CF;&#x6587;&#x4EF6;&#x7684;&#x65F6;&#x95F4;&#x5927;&#x5927;&#x589E;&#x52A0;&#xFF0C;&#x8FD9;&#x91CC;&#x6CA1;&#x6709;&#x529E;&#x6CD5;&#x4F18;&#x5316;&#xFF0C;&#x552F;&#x4E00;&#x7684;&#x4F18;&#x5316;&#x70B9;&#x5C31;&#x662F;&#x4F7F;&#x7528;&#x5176;&#x4ED6;&#x66F4;&#x4F18;&#x5DEE;&#x91CF;&#x751F;&#x6210;&#x7B97;&#x6CD5;&#xFF0C;&#x800C;&#x4E0D;&#x662F;BsDiff&#x7B97;&#x6CD5;&#x3002;</p><h4 id="&#x5408;&#x6210;&#x65B0;&#x6587;&#x4EF6;&#x4F18;&#x5316;"><a href="#&#x5408;&#x6210;&#x65B0;&#x6587;&#x4EF6;&#x4F18;&#x5316;" class="headerlink" title="&#x5408;&#x6210;&#x65B0;&#x6587;&#x4EF6;&#x4F18;&#x5316;"></a>&#x5408;&#x6210;&#x65B0;&#x6587;&#x4EF6;&#x4F18;&#x5316;</h4><p>&#x5408;&#x6210;&#x4F7F;&#x7528;BsPatch&#x8FDB;&#x884C;&#x5408;&#x6210;&#xFF0C;&#x8FD9;&#x4E2A;&#x8FC7;&#x7A0B;&#x662F;&#x5341;&#x5206;&#x5FEB;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x4E0D;&#x4F18;&#x5316;&#xFF0C;&#x4F46;&#x662F;&#x9700;&#x8981;&#x4F18;&#x5316;&#x7684;&#x70B9;&#x662F;&#x5408;&#x6210;&#x65B0;&#x7684;Zip&#x6587;&#x4EF6;&#x8FC7;&#x7A0B;&#xFF0C;&#x5373;&#x4E0A;&#x9762;&#x63D0;&#x5230;&#x7684;writeChunk&#x51FD;&#x6570;&#xFF0C;&#x800C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x552F;&#x4E00;&#x7684;&#x8017;&#x65F6;&#x70B9;&#x5C31;&#x662F;&#x538B;&#x7F29;&#x64CD;&#x4F5C;&#xFF0C;&#x57FA;&#x672C;&#x4E0A;&#x538B;&#x7F29;&#x64CD;&#x4F5C;&#x8017;&#x65F6;&#x5360;&#x5168;&#x90E8;&#x8017;&#x65F6;&#x7684;80%-90%&#x5DE6;&#x53F3;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x57FA;&#x672C;&#x6CA1;&#x4EC0;&#x4E48;&#x4F18;&#x5316;&#x70B9;&#x3002;</p><h3 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h3><p>Google Archive Patch&#x7684;&#x6838;&#x5FC3;&#x662F;&#x751F;&#x6210;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x6587;&#x4EF6;&#xFF0C;&#x5E94;&#x7528;&#x5DEE;&#x91CF;&#x7B97;&#x6CD5;&#xFF0C;&#x8BB0;&#x5F55;&#x65B0;&#x6587;&#x4EF6;&#x5DEE;&#x91CF;&#x53CB;&#x597D;&#x6587;&#x4EF6;&#x4E2D;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x538B;&#x7F29;&#x7684;&#x504F;&#x79FB;&#x548C;&#x957F;&#x5EA6;&#xFF0C;&#x5E94;&#x7528;&#x5408;&#x6210;&#x7B97;&#x6CD5;&#x5408;&#x6210;&#x65B0;&#x6587;&#x4EF6;&#x65F6;&#xFF0C;&#x5BF9;&#x4E8E;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x538B;&#x7F29;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x7528;patch&#x4E2D;&#x7684;&#x538B;&#x7F29;&#x76F8;&#x5173;&#x7684;&#x53C2;&#x6570;&#x8FDB;&#x884C;&#x538B;&#x7F29;&#xFF0C;&#x5F97;&#x5230;&#x538B;&#x7F29;&#x6570;&#x636E;&#xFF0C;&#x800C;&#x5BF9;&#x4E8E;&#x975E;&#x538B;&#x7F29;&#x6570;&#x636E;&#xFF0C;&#x5982;Zip&#x6587;&#x4EF6;&#x683C;&#x5F0F;&#x4E2D;&#x5176;&#x4ED6;&#x6570;&#x636E;&#xFF0C;&#x5219;&#x6267;&#x884C;&#x62F7;&#x8D1D;&#x64CD;&#x4F5C;&#x3002;&#x6700;&#x7EC8;&#x5B8C;&#x7F8E;&#x7684;&#x5408;&#x6210;&#x4E86;&#x65B0;&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x7684;&#x4F18;&#x70B9;&#x662F;patch&#x6BD4;&#x57FA;&#x4E8E;&#x6587;&#x4EF6;&#x7EA7;&#x522B;&#x7684;bsdiff&#x751F;&#x6210;&#x7684;&#x8981;&#x5C0F;&#xFF0C;&#x7F3A;&#x70B9;&#x662F;&#x751F;&#x6210;&#x65F6;&#x95F4;&#x957F;&#xFF0C;&#x5408;&#x6210;&#x65F6;&#x95F4;&#x957F;&#x3002;</p><p>&#x8BE5;&#x7B97;&#x6CD5;&#x6838;&#x5FC3;&#x7684;&#x4E00;&#x4E2A;&#x57FA;&#x672C;&#x8981;&#x6C42;&#x5C31;&#x662F;&#x4F7F;&#x7528;&#x76F8;&#x540C;&#x7684;&#x538B;&#x7F29;&#x7EA7;&#x522B;&#xFF0C;&#x7F16;&#x7801;&#x7B56;&#x7565;&#x548C;nowrap&#x53C2;&#x6570;&#xFF0C;&#x5BF9;&#x76F8;&#x540C;&#x7684;&#x6570;&#x636E;&#x8FDB;&#x884C;&#x538B;&#x7F29;&#xFF0C;&#x5F97;&#x5230;&#x7684;&#x6570;&#x636E;&#x6570;&#x636E;&#x3002;&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x524D;&#x63D0;&#x5982;&#x679C;&#x4E0D;&#x6EE1;&#x8DB3;&#xFF0C;&#x5219;&#x8BE5;&#x7B97;&#x6CD5;&#x5C31;&#x6CA1;&#x6709;&#x610F;&#x4E49;&#x4E86;&#x3002;</p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>android</tag>
        <tag>bspatch</tag>
        <tag>bsdiff</tag>
        <tag>archive patch</tag>
        <tag>delta</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 生成 Linux 交叉编译工具链</title>
    <url>/2017/08/18/Mac%E7%94%9F%E6%88%90Linux%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7%E9%93%BE/</url>
    <content><![CDATA[<p>&#x9700;&#x8981;&#x5728;Mac&#x4E0A;&#x7F16;&#x8BD1;&#x51FA;Linux&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x53EF;&#x7528;&#x7684;&#x52A8;&#x6001;&#x5E93;&#xFF0C;&#x4F7F;&#x7528;crosstool-ng&#x751F;&#x6210;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;</p><a id="more"></a><h3 id="&#x5927;&#x5C0F;&#x5199;&#x654F;&#x611F;&#x7684;&#x78C1;&#x76D8;"><a href="#&#x5927;&#x5C0F;&#x5199;&#x654F;&#x611F;&#x7684;&#x78C1;&#x76D8;" class="headerlink" title="&#x5927;&#x5C0F;&#x5199;&#x654F;&#x611F;&#x7684;&#x78C1;&#x76D8;"></a>&#x5927;&#x5C0F;&#x5199;&#x654F;&#x611F;&#x7684;&#x78C1;&#x76D8;</h3><h4 id="&#x521B;&#x5EFA;"><a href="#&#x521B;&#x5EFA;" class="headerlink" title="&#x521B;&#x5EFA;"></a>&#x521B;&#x5EFA;</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">hdiutil <span class="keyword">create</span> -volname <span class="string">&quot;crosstool-ng&quot;</span> -<span class="keyword">type</span> <span class="keyword">SPARSE</span> -fs <span class="string">&apos;Case-sensitive Journaled HFS+&apos;</span> -<span class="keyword">size</span> <span class="number">20</span>g crosstool-ng.dmg</span><br></pre></td></tr></table></figure><h4 id="&#x6302;&#x8F7D;"><a href="#&#x6302;&#x8F7D;" class="headerlink" title="&#x6302;&#x8F7D;"></a>&#x6302;&#x8F7D;</h4><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">hdiutil attach crosstool-ng<span class="selector-class">.dmg</span><span class="selector-class">.sparseimage</span> -mountpoint /Volumes/crosstool-ng</span><br></pre></td></tr></table></figure><h4 id="&#x5378;&#x8F7D;&#xFF08;&#x4F7F;&#x7528;&#x5B8C;&#x540E;&#x8FDB;&#x884C;&#x5378;&#x8F7D;&#xFF09;"><a href="#&#x5378;&#x8F7D;&#xFF08;&#x4F7F;&#x7528;&#x5B8C;&#x540E;&#x8FDB;&#x884C;&#x5378;&#x8F7D;&#xFF09;" class="headerlink" title="&#x5378;&#x8F7D;&#xFF08;&#x4F7F;&#x7528;&#x5B8C;&#x540E;&#x8FDB;&#x884C;&#x5378;&#x8F7D;&#xFF09;"></a>&#x5378;&#x8F7D;&#xFF08;&#x4F7F;&#x7528;&#x5B8C;&#x540E;&#x8FDB;&#x884C;&#x5378;&#x8F7D;&#xFF09;</h4><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">hdiutil <span class="built_in">detach</span> /Volumes/crosstool-ng</span><br></pre></td></tr></table></figure><h3 id="&#x5B89;&#x88C5;&#x4F9D;&#x8D56;"><a href="#&#x5B89;&#x88C5;&#x4F9D;&#x8D56;" class="headerlink" title="&#x5B89;&#x88C5;&#x4F9D;&#x8D56;"></a>&#x5B89;&#x88C5;&#x4F9D;&#x8D56;</h3><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>autoconf <span class="keyword">binutils </span>gawk gmp gnu-sed help2man mpfr openssl pcre readline wget xz</span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x540E;&#x7EED;&#x62A5;&#x4EC0;&#x4E48;&#x9519;&#xFF0C;&#x63D0;&#x793A;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x5305;&#x7EE7;&#x7EED;&#x5B89;&#x88C5;&#x5BF9;&#x5E94;&#x5305;&#x5373;&#x53EF;&#x3002;</p><h3 id="&#x7F16;&#x8BD1;crosstool-ng"><a href="#&#x7F16;&#x8BD1;crosstool-ng" class="headerlink" title="&#x7F16;&#x8BD1;crosstool-ng"></a>&#x7F16;&#x8BD1;crosstool-ng</h3><p>crosstool-ng&#x7684;&#x6587;&#x6863;&#x5730;&#x5740;&#x5728; <a href="http://crosstool-ng.github.io/docs/" target="_blank" rel="noopener">http://crosstool-ng.github.io/docs/</a></p><p>github&#x5730;&#x5740;&#x5728; <a href="https://github.com/crosstool-ng/crosstool-ng" target="_blank" rel="noopener">https://github.com/crosstool-ng/crosstool-ng</a></p><h4 id="&#x4E0B;&#x8F7D;&#x6E90;&#x7801;"><a href="#&#x4E0B;&#x8F7D;&#x6E90;&#x7801;" class="headerlink" title="&#x4E0B;&#x8F7D;&#x6E90;&#x7801;"></a>&#x4E0B;&#x8F7D;&#x6E90;&#x7801;</h4><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">wget http:<span class="regexp">//</span>crosstool-ng.org<span class="regexp">/download/</span>crosstool-ng<span class="regexp">/crosstool-ng-1.23.0.tar.bz2</span></span><br></pre></td></tr></table></figure><h4 id="&#x89E3;&#x538B;"><a href="#&#x89E3;&#x538B;" class="headerlink" title="&#x89E3;&#x538B;"></a>&#x89E3;&#x538B;</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-jxvf</span> <span class="selector-tag">crosstool-ng-1</span><span class="selector-class">.23</span><span class="selector-class">.0</span><span class="selector-class">.tar</span><span class="selector-class">.bz2</span></span><br></pre></td></tr></table></figure><h4 id="&#x8FDB;&#x5165;&#x6E90;&#x7801;&#x76EE;&#x5F55;"><a href="#&#x8FDB;&#x5165;&#x6E90;&#x7801;&#x76EE;&#x5F55;" class="headerlink" title="&#x8FDB;&#x5165;&#x6E90;&#x7801;&#x76EE;&#x5F55;"></a>&#x8FDB;&#x5165;&#x6E90;&#x7801;&#x76EE;&#x5F55;</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">cd crosstool-ng<span class="number">-1.23</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><h4 id="&#x6267;&#x884C;bootstrap&#x811A;&#x672C;&#xFF08;&#x53EF;&#x9009;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x6587;&#x4EF6;&#x5B58;&#x5728;&#x7684;&#x8BDD;&#x9700;&#x8981;&#x6267;&#x884C;&#xFF0C;&#x4E0D;&#x5B58;&#x5728;&#x8BE5;&#x6587;&#x4EF6;&#x5219;&#x8DF3;&#x8FC7;&#x6B64;&#x6B65;&#x9AA4;&#xFF09;"><a href="#&#x6267;&#x884C;bootstrap&#x811A;&#x672C;&#xFF08;&#x53EF;&#x9009;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x6587;&#x4EF6;&#x5B58;&#x5728;&#x7684;&#x8BDD;&#x9700;&#x8981;&#x6267;&#x884C;&#xFF0C;&#x4E0D;&#x5B58;&#x5728;&#x8BE5;&#x6587;&#x4EF6;&#x5219;&#x8DF3;&#x8FC7;&#x6B64;&#x6B65;&#x9AA4;&#xFF09;" class="headerlink" title="&#x6267;&#x884C;bootstrap&#x811A;&#x672C;&#xFF08;&#x53EF;&#x9009;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x6587;&#x4EF6;&#x5B58;&#x5728;&#x7684;&#x8BDD;&#x9700;&#x8981;&#x6267;&#x884C;&#xFF0C;&#x4E0D;&#x5B58;&#x5728;&#x8BE5;&#x6587;&#x4EF6;&#x5219;&#x8DF3;&#x8FC7;&#x6B64;&#x6B65;&#x9AA4;&#xFF09;"></a>&#x6267;&#x884C;bootstrap&#x811A;&#x672C;&#xFF08;&#x53EF;&#x9009;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x6587;&#x4EF6;&#x5B58;&#x5728;&#x7684;&#x8BDD;&#x9700;&#x8981;&#x6267;&#x884C;&#xFF0C;&#x4E0D;&#x5B58;&#x5728;&#x8BE5;&#x6587;&#x4EF6;&#x5219;&#x8DF3;&#x8FC7;&#x6B64;&#x6B65;&#x9AA4;&#xFF09;</h4><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="string">./bootstrap</span></span><br></pre></td></tr></table></figure><h4 id="&#x6267;&#x884C;configure"><a href="#&#x6267;&#x884C;configure" class="headerlink" title="&#x6267;&#x884C;configure"></a>&#x6267;&#x884C;configure</h4><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="string">./configure</span></span><br></pre></td></tr></table></figure><h4 id="&#x6267;&#x884C;&#x7F16;&#x8BD1;"><a href="#&#x6267;&#x884C;&#x7F16;&#x8BD1;" class="headerlink" title="&#x6267;&#x884C;&#x7F16;&#x8BD1;"></a>&#x6267;&#x884C;&#x7F16;&#x8BD1;</h4><figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line"><span class="built_in">make</span> -j4</span><br></pre></td></tr></table></figure><h4 id="&#x6267;&#x884C;&#x5B89;&#x88C5;"><a href="#&#x6267;&#x884C;&#x5B89;&#x88C5;" class="headerlink" title="&#x6267;&#x884C;&#x5B89;&#x88C5;"></a>&#x6267;&#x884C;&#x5B89;&#x88C5;</h4><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">make <span class="keyword">install</span></span><br></pre></td></tr></table></figure><p>&#x4E4B;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;ct-ng&#x547D;&#x4EE4;&#x4E86;</p><h3 id="&#x914D;&#x7F6E;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;"><a href="#&#x914D;&#x7F6E;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;" class="headerlink" title="&#x914D;&#x7F6E;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;"></a>&#x914D;&#x7F6E;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;</h3><p>&#x521B;&#x5EFA;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#x5E76;&#x8FDB;&#x5165;</p><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">mkdir <span class="keyword">workdir</span><span class="bash"></span></span><br><span class="line"><span class="bash"><span class="built_in">cd</span> workdir</span></span><br></pre></td></tr></table></figure><p>&#x62F7;&#x8D1D;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x3002;&#x8FD9;&#x91CC;&#x57FA;&#x4E8E;&#x6E90;&#x7801;&#x76EE;&#x5F55;crosstool-ng-1.23.0/sample/x86_64-unknown-linux-gnu&#x4E0B;&#x7684;config&#x8FDB;&#x884C;&#x81EA;&#x5B9A;&#x4E49;</p><figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">cp <span class="built_in">path</span>/to/crosstool-ng<span class="number">-1.23</span><span class="number">.0</span>/sample/x86_64-unknown-linux-gnu/crosstool.<span class="built_in">config</span> .<span class="built_in">config</span></span><br></pre></td></tr></table></figure><p>&#x914D;&#x7F6E;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x9700;&#x8981;&#x5C06;&#x4E00;&#x4E9B;&#x76EE;&#x5F55;&#x6307;&#x5411;&#x6211;&#x4EEC;&#x6700;&#x5F00;&#x59CB;&#x521B;&#x5EFA;&#x7684;&#x5927;&#x5C0F;&#x5199;&#x654F;&#x611F;&#x7684;&#x78C1;&#x76D8;</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ct-ng menuconfig</span></span><br></pre></td></tr></table></figure><p>&#x9009;&#x62E9;Paths and misc options&#xFF0C;&#x627E;&#x5230;Paths&#xFF0C;&#x4E0B;&#x9762;&#x6709;&#x4E09;&#x4E2A;&#x8DEF;&#x5F84;&#x9700;&#x8981;&#x4FEE;&#x6539;</p><p>&#x4FEE;&#x6539;Local tarballs dictory&#x6307;&#x5411;&#x5927;&#x5C0F;&#x5199;&#x654F;&#x611F;&#x7684;&#x78C1;&#x76D8;&#xFF0C;&#x5982;</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/Volumes/</span>crosstool-ng<span class="regexp">/src</span></span><br></pre></td></tr></table></figure><p>&#x4FEE;&#x6539;Working dictory&#x6307;&#x5411;&#x5927;&#x5C0F;&#x5199;&#x654F;&#x611F;&#x7684;&#x78C1;&#x76D8;&#xFF0C;&#x5982;</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/Volumes/</span>crosstool-ng<span class="regexp">/.build</span></span><br></pre></td></tr></table></figure><p>&#x4FEE;&#x6539;x-tools&#x6307;&#x5411;&#x5927;&#x5C0F;&#x5199;&#x654F;&#x611F;&#x7684;&#x78C1;&#x76D8;&#xFF0C;&#x5982;</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="symbol">CT_PREFIX:</span>-<span class="regexp">/Volumes/crosstool</span>-ng/x-tools}/<span class="variable">${</span><span class="symbol">CT_HOST:</span>+HOST-<span class="variable">${</span>CT_HOST}/}<span class="variable">${</span>CT_TARGET}</span><br></pre></td></tr></table></figure><p>&#x56E0;&#x4E3A;&#x9700;&#x8981;&#x7528;&#x5230;&#x4ECE;&#x5386;&#x53F2;&#x6784;&#x5EFA;&#x65AD;&#x70B9;&#x7EE7;&#x7EED;&#x6784;&#x5EFA;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5C06;Paths and misc options-&gt;crosstool-NG behavior&#x9009;&#x9879;&#x4E0B;&#x7684;Debug crosstool-NG&#x52FE;&#x9009;&#xFF0C;&#x7136;&#x540E;&#x7EE7;&#x7EED;&#x52FE;&#x9009;Save intermediate steps</p><p>&#x4FEE;&#x6539;&#x5B8C;&#x6210;&#x540E;&#x4FDD;&#x5B58;&#x7136;&#x540E;&#x9000;&#x51FA;</p><h4 id="&#x4FEE;&#x6539;binutils&#x7248;&#x672C;"><a href="#&#x4FEE;&#x6539;binutils&#x7248;&#x672C;" class="headerlink" title="&#x4FEE;&#x6539;binutils&#x7248;&#x672C;"></a>&#x4FEE;&#x6539;binutils&#x7248;&#x672C;</h4><p>&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x62F7;&#x8D1D;&#x7684;config&#x4F7F;&#x7528;&#x7684;&#x662F;2.28&#x7684;binutils&#xFF0C;&#x800C;gnu&#x7684;ftp&#x4E0A;&#x4E0D;&#x5B58;&#x5728;&#x8BE5;&#x7248;&#x672C;&#x5BF9;&#x5E94;xy&#x540E;&#x7F00;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x7248;&#x672C;&#x4E3A;2.28.1&#xFF0C;&#x800C;2.28.1&#x7248;&#x672C;&#x662F;&#x5B58;&#x5728;xy&#x540E;&#x7F00;&#x7684;&#x6587;&#x4EF6;&#x7684;</p><p>&#x8FD8;&#x662F;&#x4E00;&#x6837;&#x8FDB;&#x5165;menuconfig&#xFF0C;&#x627E;&#x5230;Binary utilities-&gt;binutils version&#xFF0C;&#x4FEE;&#x6539;&#x7248;&#x672C;&#x53F7;&#x4E3A;2.28.1&#xFF0C;&#x4F46;&#x662F;&#x53D1;&#x73B0;&#x8FD9;&#x91CC;&#x6CA1;&#x6709;2.28.1&#x7684;&#x9009;&#x9879;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x6E90;&#x7801;&#xFF0C;&#x7136;&#x540E;&#x91CD;&#x65B0;&#x6267;&#x884C;&#x7F16;&#x8BD1;&#x5B89;&#x88C5;&#x6B65;&#x9AA4;</p><p>&#x6253;&#x5F00;&#x6E90;&#x7801;crosstool-ng-1.23.0/config/binutils/binutils.in&#x6587;&#x4EF6;&#xFF0C;&#x627E;&#x5230;&#x5982;&#x4E0B;&#x4EE3;&#x7801;</p><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">config</span> <span class="keyword">BINUTILS_V_2_28</span></span><br><span class="line"><span class="keyword"> </span>   <span class="keyword">bool</span></span><br><span class="line"><span class="keyword"> </span>   prompt <span class="string">&quot;2.28&quot;</span></span><br><span class="line">    <span class="keyword">select </span><span class="keyword">BINUTILS_2_27_or_later</span></span><br></pre></td></tr></table></figure><p>&#x5728;&#x524D;&#x9762;&#x52A0;&#x5165;</p><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">config</span> <span class="keyword">BINUTILS_V_2_28_1</span></span><br><span class="line"><span class="keyword"> </span>   <span class="keyword">bool</span></span><br><span class="line"><span class="keyword"> </span>   prompt <span class="string">&quot;2.28.1&quot;</span></span><br><span class="line">    <span class="keyword">select </span><span class="keyword">BINUTILS_2_27_or_later</span></span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x5F80;&#x4E0B;&#x627E;&#x5230;&#x5982;&#x4E0B;&#x4EE3;&#x7801;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># CT_INSERT_VERSION_STRING_BELOW</span></span><br><span class="line">default <span class="string">&quot;2.28&quot;</span> <span class="keyword">if</span> BINUTILS_V_2_28</span><br><span class="line">default <span class="string">&quot;2.27&quot;</span> <span class="keyword">if</span> BINUTILS_V_2_27</span><br><span class="line">default <span class="string">&quot;2.26&quot;</span> <span class="keyword">if</span> BINUTILS_V_2_26</span><br><span class="line">default <span class="string">&quot;2.25.1&quot;</span> <span class="keyword">if</span> BINUTILS_V_2_25_1</span><br><span class="line">default <span class="string">&quot;linaro-2.25.0-2015.01-2&quot;</span> <span class="keyword">if</span> BINUTILS_LINARO_V_2_25</span><br><span class="line">default <span class="string">&quot;linaro-2.24.0-2014.11-2&quot;</span> <span class="keyword">if</span> BINUTILS_LINARO_V_2_24</span><br><span class="line">default <span class="string">&quot;2.24&quot;</span> <span class="keyword">if</span> BINUTILS_V_2_24</span><br><span class="line">default <span class="string">&quot;linaro-2.23.2-2013.10-4&quot;</span> <span class="keyword">if</span> BINUTILS_LINARO_V_2_23_2</span><br><span class="line">default <span class="string">&quot;2.23.2&quot;</span> <span class="keyword">if</span> BINUTILS_V_2_23_2</span><br></pre></td></tr></table></figure><p>&#x5728;&#x524D;&#x9762;&#x52A0;&#x5165;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;</p><figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">default</span> <span class="string">&quot;2.28.1&quot;</span> <span class="keyword">if</span> BINUTILS_V_2_28_1</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x91CD;&#x65B0;&#x6267;&#x884C;./configure&#x3001;make -j4&#x3001;make install&#x7B49;&#x547D;&#x4EE4;&#x91CD;&#x65B0;&#x5B89;&#x88C5;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x6B21;&#x8FDB;&#x5165;menuconfig&#xFF0C;&#x4F1A;&#x53D1;&#x73B0;&#x53EF;&#x4EE5;&#x9009;&#x62E9;2.29&#x4E86;</p><h3 id="&#x751F;&#x6210;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;"><a href="#&#x751F;&#x6210;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;" class="headerlink" title="&#x751F;&#x6210;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;"></a>&#x751F;&#x6210;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;</h3><p>&#x5728;workdir&#x4E0B;&#x6267;&#x884C;&#x547D;&#x4EE4;&#x6784;&#x5EFA;</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ct-ng build</span></span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x4F1A;&#x4E0B;&#x8F7D;&#x4E00;&#x4E9B;zip&#x6587;&#x4EF6;&#x5230;/Volumes/crosstool-ng/.build/tarballs&#x4E0B;&#xFF0C;&#x6587;&#x4EF6;&#x6709;</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">binutils-2</span><span class="selector-class">.28</span><span class="selector-class">.1</span><span class="selector-class">.tar</span><span class="selector-class">.xz</span></span><br><span class="line"><span class="selector-tag">expat-2</span><span class="selector-class">.2</span><span class="selector-class">.0</span><span class="selector-class">.tar</span><span class="selector-class">.bz2</span></span><br><span class="line"><span class="selector-tag">gcc-6</span><span class="selector-class">.3</span><span class="selector-class">.0</span><span class="selector-class">.tar</span><span class="selector-class">.bz2</span></span><br><span class="line"><span class="selector-tag">gdb-7</span><span class="selector-class">.12</span><span class="selector-class">.1</span><span class="selector-class">.tar</span><span class="selector-class">.xz</span></span><br><span class="line"><span class="selector-tag">gettext-0</span><span class="selector-class">.19</span><span class="selector-class">.8</span><span class="selector-class">.1</span><span class="selector-class">.tar</span><span class="selector-class">.xz</span></span><br><span class="line"><span class="selector-tag">glibc-2</span><span class="selector-class">.25</span><span class="selector-class">.tar</span><span class="selector-class">.xz</span></span><br><span class="line"><span class="selector-tag">gmp-6</span><span class="selector-class">.1</span><span class="selector-class">.2</span><span class="selector-class">.tar</span><span class="selector-class">.xz</span></span><br><span class="line"><span class="selector-tag">isl-0</span><span class="selector-class">.16</span><span class="selector-class">.1</span><span class="selector-class">.tar</span><span class="selector-class">.xz</span></span><br><span class="line"><span class="selector-tag">libiconv-1</span><span class="selector-class">.15</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line"><span class="selector-tag">linux-4</span><span class="selector-class">.10</span><span class="selector-class">.8</span><span class="selector-class">.tar</span><span class="selector-class">.xz</span></span><br><span class="line"><span class="selector-tag">m4-1</span><span class="selector-class">.4</span><span class="selector-class">.18</span><span class="selector-class">.tar</span><span class="selector-class">.xz</span></span><br><span class="line"><span class="selector-tag">mpc-1</span><span class="selector-class">.0</span><span class="selector-class">.3</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line"><span class="selector-tag">mpfr-3</span><span class="selector-class">.1</span><span class="selector-class">.5</span><span class="selector-class">.tar</span><span class="selector-class">.xz</span></span><br><span class="line"><span class="selector-tag">ncurses-6</span><span class="selector-class">.0</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x4F60;&#x89C9;&#x5F97;&#x4E0B;&#x8F7D;&#x6162;&#xFF0C;&#x53EF;&#x4EE5;&#x624B;&#x52A8;&#x4E0B;&#x8F7D;&#x8FD9;&#x4E9B;&#x6587;&#x4EF6;&#xFF0C;&#x5C06;&#x5176;&#x653E;&#x5165;/Volumes/crosstool-ng/.build/tarballs&#xFF0C;&#x6CE8;&#x610F;&#x540D;&#x5B57;&#x4FDD;&#x6301;&#x548C;&#x4E0A;&#x9762;&#x4E00;&#x6837;&#x3002;</p><p>&#x4E4B;&#x540E;&#x4F1A;&#x6267;&#x884C;&#x89E3;&#x538B;&#xFF0C;&#x6784;&#x5EFA;&#xFF0C;&#x5B89;&#x88C5;&#x7B49;&#x64CD;&#x4F5C;&#xFF0C;&#x5927;&#x7EA6;&#x9700;&#x8981;2-3&#x5C0F;&#x65F6;&#x540E;&#x7F16;&#x8BD1;&#x5B8C;&#x6210;&#x3002;</p><p>&#x56E0;&#x4E3A;&#x5F00;&#x542F;&#x4E86;debug&#x76F8;&#x5173;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5982;&#x679C;&#x4E2D;&#x65AD;&#x4E86;&#x6784;&#x5EFA;&#xFF0C;&#x53EF;&#x4EE5;&#x968F;&#x65F6;&#x4ECE;&#x4E2D;&#x65AD;&#x7684;&#x5730;&#x65B9;&#x7EE7;&#x7EED;&#x6784;&#x5EFA;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;step&#x5373;&#x53EF;&#xFF0C;step&#x53EF;&#x4EE5;&#x4ECE;&#x63A7;&#x5236;&#x53F0;&#x7684;&#x8F93;&#x51FA;log&#x4E2D;&#x627E;&#x5230;&#x3002;</p><p>&#x5047;&#x8BBE;log&#x4E2D;&#x51FA;&#x73B0;&#x4E86;&#x5982;&#x4E0B;&#x5B57;&#x6837;&#xFF0C;&#x9700;&#x8981;&#x4ECE;&#x8BE5;&#x6B65;&#x9AA4;&#x6062;&#x590D;</p><figure class="highlight pf"><table><tr><td class="code"><pre><span class="line">Saving <span class="keyword">state</span> <span class="keyword">to</span> restart at step &apos;companion_tools_for_build&apos;...</span><br></pre></td></tr></table></figure><p>&#x53EA;&#x9700;&#x8981;&#x6267;&#x884C;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x5373;&#x53EF;</p><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ct</span>-ng companion_tools_for_build+</span><br></pre></td></tr></table></figure><p>&#x6216;&#x8005;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">ct-ng build <span class="attribute">RESTART</span>=companion_tools_for_build</span><br></pre></td></tr></table></figure><h3 id="&#x7F16;&#x5199;cmake-toolchain&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;&#x6587;&#x4EF6;"><a href="#&#x7F16;&#x5199;cmake-toolchain&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;&#x6587;&#x4EF6;" class="headerlink" title="&#x7F16;&#x5199;cmake toolchain&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;&#x6587;&#x4EF6;"></a>&#x7F16;&#x5199;cmake toolchain&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;&#x6587;&#x4EF6;</h3><p>&#x5173;&#x4E8E;cmake toolchain&#x7684;&#x7F16;&#x5199;&#xFF0C;&#x89C1;cmake&#x6587;&#x6863; <a href="https://cmake.org/cmake/help/latest/manual/cmake-toolchains.7.html#cross-compiling" target="_blank" rel="noopener">cross-compiling</a></p><p>&#x521B;&#x5EFA;linux-x86_64.toolchain.cmake&#x6587;&#x4EF6;&#xFF0C;&#x52A0;&#x5165;&#x5982;&#x4E0B;&#x5185;&#x5BB9;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">set</span>(CMAKE_SYSTEM_NAME Linux)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_SYSTEM_VERSION 1)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_SYSTEM_PROCESSOR x86_64)</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">set</span>(LINUX_TOOLCHAIN_NAME x86_64-unknown-linux-gnu-)</span><br><span class="line"><span class="builtin-name">set</span>(LINUX_TOOLCHAIN_ROOT /Volumes/crosstool-ng/x-tools/x86_64-unknown-linux-gnu)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_SYSROOT <span class="variable">${LINUX_TOOLCHAIN_ROOT}</span>/x86_64-unknown-linux-gnu/sysroot)</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_COMPILER   <span class="variable">${LINUX_TOOLCHAIN_ROOT}</span>/bin/<span class="variable">${LINUX_TOOLCHAIN_NAME}</span>gcc)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_COMPILER <span class="variable">${LINUX_TOOLCHAIN_ROOT}</span>/bin/<span class="variable">${LINUX_TOOLCHAIN_NAME}</span>g++)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_AR           <span class="variable">${LINUX_TOOLCHAIN_ROOT}</span>/bin/<span class="variable">${LINUX_TOOLCHAIN_NAME}</span>ar CACHE FILEPATH <span class="string">&quot;Archiver&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_RANLIB       <span class="variable">${LINUX_TOOLCHAIN_ROOT}</span>/bin/<span class="variable">${LINUX_TOOLCHAIN_NAME}</span>ranlib CACHE FILEPATH <span class="string">&quot;Ranlib&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_COMPILER <span class="variable">${LINUX_TOOLCHAIN_ROOT}</span>/bin/<span class="variable">${LINUX_TOOLCHAIN_NAME}</span>as)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_LINKER       <span class="variable">${LINUX_TOOLCHAIN_ROOT}</span>/bin/<span class="variable">${LINUX_TOOLCHAIN_NAME}</span>ld)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_NM           <span class="variable">${LINUX_TOOLCHAIN_ROOT}</span>/bin/<span class="variable">${LINUX_TOOLCHAIN_NAME}</span>nm)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_OBJCOPY      <span class="variable">${LINUX_TOOLCHAIN_ROOT}</span>/bin/<span class="variable">${LINUX_TOOLCHAIN_NAME}</span>objcopy)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_OBJDUMP      <span class="variable">${LINUX_TOOLCHAIN_ROOT}</span>/bin/<span class="variable">${LINUX_TOOLCHAIN_NAME}</span>objdump)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_STRIP        <span class="variable">${LINUX_TOOLCHAIN_ROOT}</span>/bin/<span class="variable">${LINUX_TOOLCHAIN_NAME}</span>strip)</span><br><span class="line"></span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_SYSROOT = <span class="variable">${CMAKE_SYSROOT}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_C_COMPILER = <span class="variable">${CMAKE_C_COMPILER}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_CXX_COMPILER = <span class="variable">${CMAKE_CXX_COMPILER}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_AR = <span class="variable">${CMAKE_AR}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_RANLIB = <span class="variable">${CMAKE_RANLIB}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_ASM_COMPILER = <span class="variable">${CMAKE_ASM_COMPILER}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_LINKER = <span class="variable">${CMAKE_LINKER}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_NM = <span class="variable">${CMAKE_NM}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_OBJCOPY = <span class="variable">${CMAKE_OBJCOPY}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_OBJDUMP = <span class="variable">${CMAKE_OBJDUMP}</span>&quot;</span>)</span><br><span class="line">message(STATUS <span class="string">&quot;CMAKE_STRIP = <span class="variable">${CMAKE_STRIP}</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set or retrieve the cached flags.</span></span><br><span class="line"><span class="comment"># This is necessary in case the user sets/changes flags in subsequent</span></span><br><span class="line"><span class="comment"># configures. If we included the flags in here, they would get</span></span><br><span class="line"><span class="comment"># overwritten.</span></span><br><span class="line"></span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_FLAGS <span class="string">&quot;&quot;</span></span><br><span class="line">	CACHE STRING <span class="string">&quot;Flags used by the compiler during all build types.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_FLAGS <span class="string">&quot;&quot;</span></span><br><span class="line">	CACHE STRING <span class="string">&quot;Flags used by the compiler during all build types.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_FLAGS <span class="string">&quot;&quot;</span></span><br><span class="line">	CACHE STRING <span class="string">&quot;Flags used by the compiler during all build types.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_FLAGS_DEBUG <span class="string">&quot;&quot;</span></span><br><span class="line">	CACHE STRING <span class="string">&quot;Flags used by the compiler during debug builds.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_FLAGS_DEBUG <span class="string">&quot;&quot;</span></span><br><span class="line">	CACHE STRING <span class="string">&quot;Flags used by the compiler during debug builds.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_FLAGS_DEBUG <span class="string">&quot;&quot;</span></span><br><span class="line">	CACHE STRING <span class="string">&quot;Flags used by the compiler during debug builds.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_FLAGS_RELEASE <span class="string">&quot;&quot;</span></span><br><span class="line">	CACHE STRING <span class="string">&quot;Flags used by the compiler during release builds.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_FLAGS_RELEASE <span class="string">&quot;&quot;</span></span><br><span class="line">	CACHE STRING <span class="string">&quot;Flags used by the compiler during release builds.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_FLAGS_RELEASE <span class="string">&quot;&quot;</span></span><br><span class="line">	CACHE STRING <span class="string">&quot;Flags used by the compiler during release builds.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_MODULE_LINKER_FLAGS <span class="string">&quot;&quot;</span></span><br><span class="line">	CACHE STRING <span class="string">&quot;Flags used by the linker during the creation of modules.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_SHARED_LINKER_FLAGS <span class="string">&quot;&quot;</span></span><br><span class="line">	CACHE STRING <span class="string">&quot;Flags used by the linker during the creation of dll&apos;s.&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_EXE_LINKER_FLAGS <span class="string">&quot;&quot;</span></span><br><span class="line">	CACHE STRING <span class="string">&quot;Flags used by the linker.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_FLAGS             <span class="string">&quot;<span class="variable">${CMAKE_C_FLAGS}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_FLAGS           <span class="string">&quot;<span class="variable">${CMAKE_CXX_FLAGS}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_FLAGS           <span class="string">&quot;<span class="variable">${CMAKE_ASM_FLAGS}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_FLAGS_DEBUG       <span class="string">&quot;<span class="variable">${CMAKE_C_FLAGS_DEBUG}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_FLAGS_DEBUG     <span class="string">&quot;<span class="variable">${CMAKE_CXX_FLAGS_DEBUG}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_FLAGS_DEBUG     <span class="string">&quot;<span class="variable">${CMAKE_ASM_FLAGS_DEBUG}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_C_FLAGS_RELEASE     <span class="string">&quot;<span class="variable">${CMAKE_C_FLAGS_RELEASE}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_CXX_FLAGS_RELEASE   <span class="string">&quot;<span class="variable">${CMAKE_CXX_FLAGS_RELEASE}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_ASM_FLAGS_RELEASE   <span class="string">&quot;<span class="variable">${CMAKE_ASM_FLAGS_RELEASE}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_SHARED_LINKER_FLAGS <span class="string">&quot;<span class="variable">${CMAKE_SHARED_LINKER_FLAGS}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_MODULE_LINKER_FLAGS <span class="string">&quot;<span class="variable">${CMAKE_MODULE_LINKER_FLAGS}</span>&quot;</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_EXE_LINKER_FLAGS    <span class="string">&quot;<span class="variable">${CMAKE_EXE_LINKER_FLAGS}</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#set(CMAKE_CXX_FLAGS           &quot;${CMAKE_CXX_FLAGS} -Wno-unknown-pragmas&quot;)</span></span><br><span class="line"><span class="comment"># or </span></span><br><span class="line"><span class="comment">#add_definitions(&quot;-Wno-unknown-pragmas&quot;)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_FIND_ROOT_PATH <span class="variable">${LINUX_TOOLCHAIN_ROOT}</span>)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLYONLY)</span><br><span class="line"><span class="builtin-name">set</span>(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE BOTH)</span><br><span class="line"></span><br><span class="line"><span class="comment">#make VERVOSE=1 to output the log</span></span><br></pre></td></tr></table></figure><p>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;CMAKE_AR&#x548C;CMAKE_RANLIB&#x540E;&#x9762;&#x52A0;&#x4E86;CACHE FILEPATH&#xFF0C;&#x8FD9;&#x662F;&#x5FC5;&#x987B;&#x7684;&#xFF0C;&#x4E0D;&#x7136;&#x53EF;&#x80FD;&#x4F1A;&#x51FA;&#x9519;&#x3002;</p><h3 id="&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;"><a href="#&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;" class="headerlink" title="&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;"></a>&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;</h3><p>&#x901A;&#x8FC7;CMAKE_TOOLCHAIN_FILE&#x53C2;&#x6570;&#x6307;&#x5B9A;toolchain&#x6587;&#x4EF6;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">cmake <span class="attribute">-DCMAKE_TOOLCHAIN_FILE</span>=../linux-x86_64.toolchain.cmake <span class="built_in">..</span></span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x6267;&#x884C;make&#xFF0C;&#x6267;&#x884C;make&#x8FC7;&#x7A0B;&#x4E2D;&#x5982;&#x679C;&#x53D1;&#x751F;&#x9519;&#x8BEF;&#xFF0C;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;VERVOSE=1&#x5C06;&#x4E00;&#x4E9B;&#x4FE1;&#x606F;&#x8F93;&#x51FA;&#xFF0C;&#x4FBF;&#x4E8E;&#x8C03;&#x8BD5;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">make <span class="attribute">VERVOSE</span>=1</span><br></pre></td></tr></table></figure><h3 id="&#x6D4B;&#x8BD5;"><a href="#&#x6D4B;&#x8BD5;" class="headerlink" title="&#x6D4B;&#x8BD5;"></a>&#x6D4B;&#x8BD5;</h3><p>&#x5C06;&#x7F16;&#x8BD1;&#x51FA;&#x6765;&#x7684;&#x52A8;&#x6001;&#x5E93;&#x62F7;&#x5230;linux&#x4E0A;&#x53BB;&#x6D4B;&#x8BD5;&#xFF0C;&#x770B;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x4F7F;&#x7528;&#xFF0C;&#x5982;&#x679C;&#x51FA;&#x73B0;&#x4E86;&#x7C7B;&#x4F3C; libstdc++.so.6: version `CXXABI_ARM_1.3.8&#x2019; not found &#x7684;&#x9519;&#x8BEF;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x751F;&#x6210;&#x7684;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;&#x548C;&#x670D;&#x52A1;&#x5668;&#x73AF;&#x5883;&#x7684;gcc&#x7248;&#x672C;&#x4E0D;&#x4E00;&#x81F4;&#x5BFC;&#x81F4;&#x7684;&#xFF0C;&#x8981;&#x4E48;&#x4FEE;&#x6539;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;&#x7684;gcc&#x7248;&#x672C;&#x548C;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x7684;gcc&#x7248;&#x672C;&#x4E00;&#x6837;&#xFF0C;&#x8981;&#x4E48;&#x4FEE;&#x6539;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x7684;gcc&#x7248;&#x672C;&#x548C;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;&#x7684;gcc&#x7248;&#x672C;&#x4E00;&#x6837;&#xFF0C;&#x65E0;&#x8BBA;&#x54EA;&#x79CD;&#x65B9;&#x5F0F;&#x90FD;&#x53EF;&#x4EE5;&#x3002;</p><h3 id="&#x5173;&#x4E8E;jni"><a href="#&#x5173;&#x4E8E;jni" class="headerlink" title="&#x5173;&#x4E8E;jni"></a>&#x5173;&#x4E8E;jni</h3><p>&#x56E0;&#x4E3A;&#x7528;&#x5230;&#x4E86;jni&#xFF0C;&#x9700;&#x8981;&#x7528;&#x5230;&#x76F8;&#x5173;&#x7684;&#x5934;&#x6587;&#x4EF6;&#xFF0C;&#x800C;crosstool-ng&#x5176;&#x5B9E;&#x662F;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;java&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x6D4B;&#x8BD5;&#x4E0B;&#x6765;&#x53D1;&#x73B0;&#x5BBF;&#x4E3B;&#x673A;Mac&#x9700;&#x8981;&#x7528;&#x5230;gcj&#xFF0C;&#x627E;&#x4E86;&#x4E00;&#x5927;&#x5708;&#x53D1;&#x73B0;gcj&#x8001;&#x65E9;&#x5DF2;&#x7ECF;&#x4ECE;gcc&#x4E2D;&#x88AB;&#x79FB;&#x9664;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x9700;&#x8981;&#x7528;&#xFF0C;&#x5219;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x7F16;&#x8BD1;&#xFF0C;&#x5B9E;&#x5728;&#x9EBB;&#x70E6;&#x3002;&#x6240;&#x4EE5;&#x5E72;&#x8106;&#x7B80;&#x5355;&#x70B9;&#xFF0C;&#x76F4;&#x63A5;&#x62F7;&#x8D1D;&#x5934;&#x6587;&#x4EF6;&#x5C31;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;</p><ol><li>&#x5230;&#x670D;&#x52A1;&#x5668;&#x7684;JAVA_HOME&#x76EE;&#x5F55;&#xFF0C;&#x5C06;include&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x4E0B;&#x6765;&#x76F4;&#x63A5;&#x7528;</li><li>&#x4E0B;&#x8F7D;linux&#x7684;jdk&#x538B;&#x7F29;&#x5305;&#xFF0C;&#x76F4;&#x63A5;&#x63D0;&#x53D6;&#x51FA;&#x6765;&#x7528;</li></ol><p>&#x7F16;&#x8BD1;&#x7684;&#x65F6;&#x5019;&#x6307;&#x5B9A;jni&#x7684;&#x5934;&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#x5373;&#x53EF;&#xFF0C;&#x8FD9;&#x91CC;&#x5C06;include&#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x653E;&#x5728;/Volumes/crosstool-ng/java-linux&#x4E0B;&#x7684;include&#x76EE;&#x5F55;</p><h3 id="&#x5173;&#x4E8E;gradle"><a href="#&#x5173;&#x4E8E;gradle" class="headerlink" title="&#x5173;&#x4E8E;gradle"></a>&#x5173;&#x4E8E;gradle</h3><p>gradle&#x91CC;&#x7528;cmake&#x7F16;&#x8BD1;c/c++&#x4EE3;&#x7801;&#xFF0C;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x5199;gradle&#x811A;&#x672C;&#xFF0C;&#x8FD9;&#x91CC;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x81EA;&#x5DF1;&#x5199;&#x7684;&#x811A;&#x672C;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">apply plugin: JNIPlugin</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> JNIPlugin <span class="keyword">implements</span> Plugin&lt;<span class="keyword">Project</span>&gt; {</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">def</span> currentOS() {</span><br><span class="line">        <span class="keyword">final</span> String p = System.getProperty(<span class="string">&quot;os.name&quot;</span>).toLowerCase();</span><br><span class="line">        <span class="keyword">if</span> (p.contains(<span class="string">&quot;linux&quot;</span>)) {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;linux&quot;</span></span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (p.contains(<span class="string">&quot;os x&quot;</span>) || p.contains(<span class="string">&quot;darwin&quot;</span>)) {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;darwin&quot;</span></span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (p.contains(<span class="string">&quot;windows&quot;</span>)) {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;windows&quot;</span></span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">return</span> p.replaceAll(<span class="string">&quot;\\s&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> String currentArchitecture() {</span><br><span class="line">        <span class="keyword">final</span> String arch = System.getProperty(<span class="string">&quot;os.arch&quot;</span>).toLowerCase()</span><br><span class="line">        <span class="keyword">return</span> (arch.equals(<span class="string">&quot;amd64&quot;</span>)) ? <span class="string">&quot;x86_64&quot;</span> : arch</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> apply(<span class="keyword">Project</span> <span class="keyword">project</span>) {</span><br><span class="line">        <span class="keyword">project</span>.afterEvaluate {</span><br><span class="line"></span><br><span class="line"><span class="comment">//            def osList = [&quot;darwin&quot;, &quot;linux&quot;]</span></span><br><span class="line"><span class="comment">//            def architectureList = [&quot;x86_64&quot;]</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//&#x5F53;&#x524D;&#x73AF;&#x5883;&#x4E3A;mac</span></span><br><span class="line">            <span class="keyword">def</span> osList = [<span class="string">&quot;${currentOS()}&quot;</span>, <span class="string">&quot;linux&quot;</span>]</span><br><span class="line">            <span class="keyword">def</span> architectureList = [<span class="string">&quot;${currentArchitecture()}&quot;</span>]</span><br><span class="line">            <span class="keyword">def</span> javaHomeList = [</span><br><span class="line">                    <span class="string">&quot;${currentOS()}&quot;</span>: <span class="string">&quot;${System.getenv(&apos;JAVA_HOME&apos;)}&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;linux&quot;</span>         : <span class="string">&quot;/Volumes/crosstool-ng/java-linux&quot;</span></span><br><span class="line">            ]</span><br><span class="line"></span><br><span class="line">            osList.<span class="keyword">each</span> {os -&gt;</span><br><span class="line">                architectureList.<span class="keyword">each</span> {architecture -&gt;</span><br><span class="line">                    <span class="keyword">def</span> javaHome = javaHomeList.get(os)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">File</span> staticWorkingDir = <span class="keyword">project</span>.<span class="keyword">file</span>(<span class="string">&quot;jni/demo-static/${os}-${architecture}&quot;</span>)</span><br><span class="line">                    <span class="keyword">File</span> dynamicWorkingDir = <span class="keyword">project</span>.<span class="keyword">file</span>(<span class="string">&quot;jni/demo-dynamic/${os}-${architecture}&quot;</span>)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">def</span> demoStaticCleanTask = <span class="keyword">project</span>.<span class="keyword">task</span>(<span class="string">&quot;cleanDemoStaticFor${os.capitalize()}${architecture.capitalize()}&quot;</span>)</span><br><span class="line">                    demoStaticCleanTask.setGroup(<span class="string">&quot;jni&quot;</span>)</span><br><span class="line">                    demoStaticCleanTask.<span class="keyword">doLast</span> {</span><br><span class="line">                        <span class="keyword">project</span>.<span class="keyword">println</span> <span class="string">&quot;delete demo static cmake files ${demoStaticCleanTask}&quot;</span></span><br><span class="line">                        GFileUtils.deleteDirectory(demoStaticCleanTask)</span><br><span class="line">                    }</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">def</span> demoDynamicCleanTask = <span class="keyword">project</span>.<span class="keyword">task</span>(<span class="string">&quot;cleanDemoDynamicFor${os.capitalize()}${architecture.capitalize()}&quot;</span>)</span><br><span class="line">                    demoDynamicCleanTask.setGroup(<span class="string">&quot;jni&quot;</span>)</span><br><span class="line">                    demoDynamicCleanTask.<span class="keyword">doLast</span> {</span><br><span class="line">                        <span class="keyword">project</span>.<span class="keyword">println</span> <span class="string">&quot;delete demo dynamic cmake files ${dynamicWorkingDir}&quot;</span></span><br><span class="line">                        GFileUtils.deleteDirectory(dynamicWorkingDir)</span><br><span class="line">                    }</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">def</span> cleanTask = <span class="keyword">project</span>.tasks.findByName(<span class="string">&quot;clean&quot;</span>)</span><br><span class="line">                    <span class="keyword">if</span> (cleanTask) {</span><br><span class="line">                        cleanTask.dependsOn demoStaticCleanTask</span><br><span class="line">                        cleanTask.dependsOn demoDynamicCleanTask</span><br><span class="line">                    }</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">def</span> demoStaticTask = <span class="keyword">project</span>.<span class="keyword">task</span>(<span class="string">&quot;demoStaticFor${os.capitalize()}${architecture.capitalize()}&quot;</span>)</span><br><span class="line">                    demoStaticTask.setGroup(<span class="string">&quot;jni&quot;</span>)</span><br><span class="line"></span><br><span class="line">                    demoStaticTask.<span class="keyword">doLast</span> {</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">File</span> staticLibrary = <span class="keyword">new</span> <span class="keyword">File</span>(staticWorkingDir, <span class="string">&quot;/install/lib/libdemostatic.a&quot;</span>)</span><br><span class="line">                        <span class="keyword">if</span> (!staticLibrary.exists()) {</span><br><span class="line">                            <span class="keyword">project</span>.<span class="keyword">println</span> <span class="string">&quot;staticLibrary not exist.&quot;</span></span><br><span class="line">                            GFileUtils.deleteDirectory(staticWorkingDir)</span><br><span class="line">                            GFileUtils.mkdirs(staticWorkingDir)</span><br><span class="line"></span><br><span class="line">                            <span class="comment">//generate cmake files</span></span><br><span class="line">                            <span class="keyword">project</span>.exec(<span class="keyword">new</span> Action&lt;ExecSpec&gt;() {</span><br><span class="line">                                @Override</span><br><span class="line">                                <span class="keyword">void</span> execute(ExecSpec execSpec) {</span><br><span class="line">                                    execSpec.workingDir staticWorkingDir</span><br><span class="line">                                    execSpec.executable <span class="string">&quot;cmake&quot;</span></span><br><span class="line">                                    <span class="keyword">if</span> (os == <span class="string">&quot;linux&quot;</span> &amp;&amp; currentOS() != <span class="string">&quot;linux&quot;</span>) {</span><br><span class="line">                                        execSpec.args <span class="string">&quot;-DCMAKE_TOOLCHAIN_FILE=${project.file(&apos;jni/linux-x86_64.toolchain.cmake&apos;)}&quot;</span></span><br><span class="line">                                    }</span><br><span class="line">                                    execSpec.args(<span class="string">&quot;..&quot;</span>)</span><br><span class="line">                                }</span><br><span class="line">                            })</span><br><span class="line"></span><br><span class="line">                            <span class="comment">//clean</span></span><br><span class="line">                            <span class="keyword">project</span>.exec(<span class="keyword">new</span> Action&lt;ExecSpec&gt;() {</span><br><span class="line">                                @Override</span><br><span class="line">                                <span class="keyword">void</span> execute(ExecSpec execSpec) {</span><br><span class="line">                                    execSpec.workingDir staticWorkingDir</span><br><span class="line">                                    execSpec.executable <span class="string">&quot;make&quot;</span></span><br><span class="line">                                    execSpec.args(<span class="string">&quot;clean&quot;</span>)</span><br><span class="line">                                }</span><br><span class="line">                            })</span><br><span class="line">                        }</span><br><span class="line"></span><br><span class="line">                        <span class="comment">//make</span></span><br><span class="line">                        <span class="keyword">project</span>.exec(<span class="keyword">new</span> Action&lt;ExecSpec&gt;() {</span><br><span class="line">                            @Override</span><br><span class="line">                            <span class="keyword">void</span> execute(ExecSpec execSpec) {</span><br><span class="line">                                execSpec.workingDir staticWorkingDir</span><br><span class="line">                                execSpec.executable <span class="string">&quot;make&quot;</span></span><br><span class="line">                                execSpec.args(<span class="string">&quot;-j4&quot;</span>)</span><br><span class="line">                            }</span><br><span class="line">                        })</span><br><span class="line"></span><br><span class="line">                        <span class="comment">//install</span></span><br><span class="line">                        <span class="keyword">project</span>.exec(<span class="keyword">new</span> Action&lt;ExecSpec&gt;() {</span><br><span class="line">                            @Override</span><br><span class="line">                            <span class="keyword">void</span> execute(ExecSpec execSpec) {</span><br><span class="line">                                execSpec.workingDir staticWorkingDir</span><br><span class="line">                                execSpec.executable <span class="string">&quot;make&quot;</span></span><br><span class="line">                                execSpec.args(<span class="string">&quot;install&quot;</span>)</span><br><span class="line">                            }</span><br><span class="line">                        })</span><br><span class="line">                    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    <span class="keyword">def</span> demoDynamicTask = <span class="keyword">project</span>.<span class="keyword">task</span>(<span class="string">&quot;demoDynamicFor${os.capitalize()}${architecture.capitalize()}&quot;</span>)</span><br><span class="line">                    demoDynamicTask.setGroup(<span class="string">&quot;jni&quot;</span>)</span><br><span class="line">                    demoDynamicTask.dependsOn demoStaticTask</span><br><span class="line">                    demoDynamicTask.<span class="keyword">doLast</span> {</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">File</span> dynamicLibraryDir = <span class="keyword">new</span> <span class="keyword">File</span>(dynamicWorkingDir, <span class="string">&quot;/install/lib&quot;</span>)</span><br><span class="line">                        <span class="keyword">File</span> demoStaticInstallDir = <span class="keyword">new</span> <span class="keyword">File</span>(staticWorkingDir, <span class="string">&quot;/install&quot;</span>)</span><br><span class="line">                        String demoVersion = <span class="string">&quot;0.0.1&quot;</span></span><br><span class="line"></span><br><span class="line">                        <span class="keyword">File</span>[] dynamicLibrary = dynamicLibraryDir.listFiles(<span class="keyword">new</span> FileFilter() {</span><br><span class="line">                            @Override</span><br><span class="line">                            <span class="keyword">boolean</span> accept(<span class="keyword">File</span> pathname) {</span><br><span class="line">                                <span class="keyword">return</span> pathname.isFile() &amp;&amp; pathname.getName().startsWith(<span class="string">&quot;lib&quot;</span>)</span><br><span class="line">                            }</span><br><span class="line">                        })</span><br><span class="line">                        <span class="keyword">if</span> (!dynamicLibraryDir.exists() || dynamicLibrary == <span class="keyword">null</span> || dynamicLibrary.length == <span class="number">0</span>) {</span><br><span class="line">                            <span class="keyword">project</span>.<span class="keyword">println</span> <span class="string">&quot;dynamicLibrary not exist.&quot;</span></span><br><span class="line">                            GFileUtils.deleteDirectory(dynamicWorkingDir)</span><br><span class="line">                            GFileUtils.mkdirs(dynamicWorkingDir)</span><br><span class="line"></span><br><span class="line">                            <span class="comment">//generate cmake files</span></span><br><span class="line">                            <span class="keyword">project</span>.exec(<span class="keyword">new</span> Action&lt;ExecSpec&gt;() {</span><br><span class="line">                                @Override</span><br><span class="line">                                <span class="keyword">void</span> execute(ExecSpec execSpec) {</span><br><span class="line">                                    execSpec.workingDir dynamicWorkingDir</span><br><span class="line">                                    execSpec.executable <span class="string">&quot;cmake&quot;</span></span><br><span class="line">                                    execSpec.args(<span class="string">&quot;-DDEMO_INSTALL_PATH=${demoStaticInstallDir.absolutePath}&quot;</span>)</span><br><span class="line">                                    execSpec.args(<span class="string">&quot;-DVERSION=${demoVersion}&quot;</span>)</span><br><span class="line">                                    execSpec.args(<span class="string">&quot;-DJAVA_INCLUDE=${javaHome}/include&quot;</span>)</span><br><span class="line">                                    execSpec.args(<span class="string">&quot;-DJAVA_OS_INCLUDE=${javaHome}/include/${os}&quot;</span>)</span><br><span class="line">                                    <span class="keyword">if</span> (os == <span class="string">&quot;linux&quot;</span> &amp;&amp; currentOS() != <span class="string">&quot;linux&quot;</span>) {</span><br><span class="line">                                        execSpec.args <span class="string">&quot;-DCMAKE_TOOLCHAIN_FILE=${project.file(&apos;jni/linux-x86_64.toolchain.cmake&apos;)}&quot;</span></span><br><span class="line">                                    }</span><br><span class="line">                                    execSpec.args(<span class="string">&quot;..&quot;</span>)</span><br><span class="line">                                }</span><br><span class="line">                            })</span><br><span class="line"></span><br><span class="line">                            <span class="comment">//clean</span></span><br><span class="line">                            <span class="keyword">project</span>.exec(<span class="keyword">new</span> Action&lt;ExecSpec&gt;() {</span><br><span class="line">                                @Override</span><br><span class="line">                                <span class="keyword">void</span> execute(ExecSpec execSpec) {</span><br><span class="line">                                    execSpec.workingDir dynamicWorkingDir</span><br><span class="line">                                    execSpec.executable <span class="string">&quot;make&quot;</span></span><br><span class="line">                                    execSpec.args(<span class="string">&quot;clean&quot;</span>)</span><br><span class="line">                                }</span><br><span class="line">                            })</span><br><span class="line">                        }</span><br><span class="line"></span><br><span class="line">                        <span class="comment">//make</span></span><br><span class="line">                        <span class="keyword">project</span>.exec(<span class="keyword">new</span> Action&lt;ExecSpec&gt;() {</span><br><span class="line">                            @Override</span><br><span class="line">                            <span class="keyword">void</span> execute(ExecSpec execSpec) {</span><br><span class="line">                                execSpec.workingDir dynamicWorkingDir</span><br><span class="line">                                execSpec.executable <span class="string">&quot;make&quot;</span></span><br><span class="line">                                execSpec.args(<span class="string">&quot;VERBOSE=1&quot;</span>)</span><br><span class="line">                                execSpec.args(<span class="string">&quot;-j4&quot;</span>)</span><br><span class="line">                            }</span><br><span class="line">                        })</span><br><span class="line"></span><br><span class="line">                        <span class="comment">//install</span></span><br><span class="line">                        <span class="keyword">project</span>.exec(<span class="keyword">new</span> Action&lt;ExecSpec&gt;() {</span><br><span class="line">                            @Override</span><br><span class="line">                            <span class="keyword">void</span> execute(ExecSpec execSpec) {</span><br><span class="line">                                execSpec.workingDir dynamicWorkingDir</span><br><span class="line">                                execSpec.executable <span class="string">&quot;make&quot;</span></span><br><span class="line">                                execSpec.args(<span class="string">&quot;install&quot;</span>)</span><br><span class="line">                            }</span><br><span class="line">                        })</span><br><span class="line">                    }</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">def</span> compileJavaTask = <span class="keyword">project</span>.tasks.findByName(<span class="string">&quot;compileJava&quot;</span>)</span><br><span class="line">                    <span class="keyword">if</span> (compileJavaTask) {</span><br><span class="line">                        compileJavaTask.dependsOn demoStaticTask</span><br><span class="line">                        compileJavaTask.dependsOn demoDynamicTask</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5F53;&#x7136;&#x6253;&#x5305;jar&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x5C06;&#x52A8;&#x6001;&#x5E93;&#x6253;&#x5230;jar&#x5305;&#x91CC;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">apply plugin: <span class="string">&apos;java&apos;</span></span><br><span class="line"><span class="keyword">sourceCompatibility</span> = <span class="number">1.8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">def</span> currentOS() {</span><br><span class="line">    <span class="keyword">final</span> String p = System.getProperty(<span class="string">&quot;os.name&quot;</span>).toLowerCase()</span><br><span class="line">    <span class="keyword">if</span> (p.contains(<span class="string">&quot;linux&quot;</span>)) {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;linux&quot;</span></span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (p.contains(<span class="string">&quot;os x&quot;</span>) || p.contains(<span class="string">&quot;darwin&quot;</span>)) {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;darwin&quot;</span></span><br><span class="line">    } <span class="keyword">else</span> <span class="keyword">if</span> (p.contains(<span class="string">&quot;windows&quot;</span>)) {</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;windows&quot;</span></span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        <span class="keyword">return</span> p.replaceAll(<span class="string">&quot;\\s&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">def</span> currentArchitecture() {</span><br><span class="line">    <span class="keyword">final</span> String arch = System.getProperty(<span class="string">&quot;os.arch&quot;</span>).toLowerCase()</span><br><span class="line">    <span class="keyword">return</span> (arch.equals(<span class="string">&quot;amd64&quot;</span>)) ? <span class="string">&quot;x86_64&quot;</span> : arch</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">jar {</span><br><span class="line">    <span class="comment">//def osList = [&quot;darwin&quot;, &quot;linux&quot;]</span></span><br><span class="line">    <span class="comment">//def architectureList = [&quot;x86_64&quot;]</span></span><br><span class="line">    <span class="keyword">def</span> osList = [<span class="string">&quot;${currentOS()}&quot;</span>, <span class="string">&quot;linux&quot;</span>]</span><br><span class="line">    <span class="keyword">def</span> architectureList = [<span class="string">&quot;${currentArchitecture()}&quot;</span>]</span><br><span class="line"></span><br><span class="line">    osList.<span class="keyword">each</span> {os -&gt;</span><br><span class="line">        architectureList.<span class="keyword">each</span> {architecture -&gt;</span><br><span class="line">            <span class="comment">//copy shared library to classpath when assemble a jar</span></span><br><span class="line">            <span class="keyword">from</span>(<span class="keyword">project</span>.<span class="keyword">file</span>(<span class="string">&quot;jni/demoDynamic/${os}-${architecture}/install/lib&quot;</span>)) {</span><br><span class="line">                <span class="keyword">into</span> <span class="string">&quot;com/lizhangqu/lib/dynamic/${os}-${architecture}&quot;</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>cmake&#x4E2D;&#x9700;&#x8981;&#x6307;&#x5B9A;&#x5B89;&#x88C5;&#x76EE;&#x5F55;</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">if</span><span class="params">(NOT DEFINED CMAKE_INSTALL_PREFIX)</span></span></span><br><span class="line"><span class="function"><span class="title">set</span><span class="params">(CMAKE_INSTALL_PREFIX <span class="string">&quot;${CMAKE_BINARY_DIR}/install&quot;</span> CACHE PATH <span class="string">&quot;Installation Directory&quot;</span>)</span></span></span><br><span class="line"><span class="function"><span class="title">endif</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">message</span><span class="params">(STATUS <span class="string">&quot;CMAKE_INSTALL_PREFIX = ${CMAKE_INSTALL_PREFIX}&quot;</span>)</span></span></span><br></pre></td></tr></table></figure><p>cmake &#x4E2D;install&#x52A8;&#x6001;&#x5E93;</p><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">install(TARGETS demodynamic LIBRARY DESTINATION <span class="class"><span class="keyword">lib</span>)</span></span><br></pre></td></tr></table></figure><h3 id="&#x5173;&#x4E8E;java&#x52A0;&#x8F7D;"><a href="#&#x5173;&#x4E8E;java&#x52A0;&#x8F7D;" class="headerlink" title="&#x5173;&#x4E8E;java&#x52A0;&#x8F7D;"></a>&#x5173;&#x4E8E;java&#x52A0;&#x8F7D;</h3><p>&#x53C2;&#x8003;tensorflow&#x7684;&#x52A8;&#x6001;&#x5E93;&#x52A0;&#x8F7D;&#x65B9;&#x5F0F;&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> class NativeLibrary {</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">boolean</span> DEBUG = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> PACKAGENAME = <span class="string">&quot;com/lizhangqu/lib/dynamic&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> LIBNAME = <span class="string">&quot;demodynamic&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> load() {</span><br><span class="line">        <span class="keyword">if</span> (isLoaded() || tryLoadLibrary()) {</span><br><span class="line">            <span class="comment">// Either:</span></span><br><span class="line">            <span class="comment">// (1) The native library has already been statically loaded, OR</span></span><br><span class="line">            <span class="comment">// (2) The required native code has been statically linked (through a custom launcher), OR</span></span><br><span class="line">            <span class="comment">// (3) The native code is part of another library (such as an an application-level libraryh)</span></span><br><span class="line">            <span class="comment">// that has already been loaded.</span></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">            <span class="comment">// Doesn&apos;t matter how, but it seems the native code is loaded, so nothing else to do.</span></span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// Native code is not present, perhaps it has been packaged into the .jar file containing this.</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> resourceName = makeResourceName();</span><br><span class="line">        <span class="built_in">log</span>(<span class="string">&quot;resourceName: &quot;</span> + resourceName);</span><br><span class="line">        InputStream resource =</span><br><span class="line">                NativeLibrary.class.getClassLoader().getResourceAsStream(resourceName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//retry</span></span><br><span class="line">        <span class="keyword">if</span> (resource == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">String</span> abiName = makeABILibName();</span><br><span class="line">            <span class="built_in">log</span>(<span class="string">&quot;abiName: &quot;</span> + abiName);</span><br><span class="line">            resource = NativeLibrary.class.getResourceAsStream(abiName);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (resource == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UnsatisfiedLinkError(</span><br><span class="line">                    <span class="keyword">String</span>.format(</span><br><span class="line">                            <span class="string">&quot;Cannot find bridge native library for OS: %s, architecture: %s. &quot;</span>,</span><br><span class="line">                            os(), architecture()));</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            System.load(extractResource(resource));</span><br><span class="line">        } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UnsatisfiedLinkError(</span><br><span class="line">                    <span class="keyword">String</span>.format(</span><br><span class="line">                            <span class="string">&quot;Unable to extract native library into a temporary file (%s)&quot;</span>, e.toString()));</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">boolean</span> tryLoadLibrary() {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            System.loadLibrary(LIBNAME);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        } <span class="keyword">catch</span> (UnsatisfiedLinkError e) {</span><br><span class="line">            <span class="built_in">log</span>(<span class="string">&quot;tryLoadLibraryFailed: &quot;</span> + e.getMessage());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">boolean</span> isLoaded() {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="comment">//&#x63D0;&#x4F9B;getVersion&#x65B9;&#x6CD5;&#x7528;&#x4E8E;&#x6D4B;&#x8BD5;&#x662F;&#x5426;&#x52A0;&#x8F7D;&#x6210;&#x529F;</span></span><br><span class="line">            <span class="keyword">String</span> version = DemoDynamic.getVersion();</span><br><span class="line">            <span class="built_in">log</span>(<span class="string">&quot;version: &quot;</span> + version);</span><br><span class="line">            <span class="built_in">log</span>(<span class="string">&quot;isLoaded: true&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        } <span class="keyword">catch</span> (UnsatisfiedLinkError e) {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">String</span> extractResource(InputStream resource) <span class="keyword">throws</span> IOException {</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> sampleFilename = System.mapLibraryName(LIBNAME);</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> dot = sampleFilename.indexOf(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> prefix = (dot &lt; <span class="number">0</span>) ? sampleFilename : sampleFilename.substring(<span class="number">0</span>, dot);</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> suffix = (dot &lt; <span class="number">0</span>) ? <span class="keyword">null</span> : sampleFilename.substring(dot);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> File dst = File.createTempFile(prefix, suffix);</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> dstPath = dst.getAbsolutePath();</span><br><span class="line">        dst.deleteOnExit();</span><br><span class="line">        <span class="built_in">log</span>(<span class="string">&quot;extracting native library to: &quot;</span> + dstPath);</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">long</span> nbytes = <span class="built_in">copy</span>(resource, dst);</span><br><span class="line">        <span class="built_in">log</span>(<span class="keyword">String</span>.format(<span class="string">&quot;copied %d bytes to %s&quot;</span>, nbytes, dstPath));</span><br><span class="line">        <span class="keyword">return</span> dstPath;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">String</span> os() {</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> p = System.getProperty(<span class="string">&quot;os.name&quot;</span>).toLowerCase();</span><br><span class="line">        <span class="keyword">if</span> (p.contains(<span class="string">&quot;linux&quot;</span>)) {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;linux&quot;</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (p.contains(<span class="string">&quot;os x&quot;</span>) || p.contains(<span class="string">&quot;darwin&quot;</span>)) {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;darwin&quot;</span>;</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> (p.contains(<span class="string">&quot;windows&quot;</span>)) {</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;windows&quot;</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">return</span> p.replaceAll(<span class="string">&quot;\\s&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">String</span> architecture() {</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> arch = System.getProperty(<span class="string">&quot;os.arch&quot;</span>).toLowerCase();</span><br><span class="line">        <span class="keyword">return</span> (arch.equals(<span class="string">&quot;amd64&quot;</span>)) ? <span class="string">&quot;x86_64&quot;</span> : arch;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="built_in">log</span>(<span class="keyword">String</span> msg) {</span><br><span class="line">        <span class="keyword">if</span> (DEBUG) {</span><br><span class="line">            System.err.<span class="built_in">println</span>(<span class="string">&quot;com.lizhangqu.lib.dynamic.NativeLibrary: &quot;</span> + msg);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">String</span> makeResourceName() {</span><br><span class="line">        <span class="keyword">return</span> PACKAGENAME</span><br><span class="line">                + <span class="keyword">String</span>.format(<span class="string">&quot;/%s-%s/&quot;</span>, os(), architecture())</span><br><span class="line">                + System.mapLibraryName(LIBNAME);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">String</span> makeABILibName() {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">String</span>.format(<span class="string">&quot;%s-%s/&quot;</span>, os(), architecture())</span><br><span class="line">                + System.mapLibraryName(LIBNAME);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="built_in">copy</span>(InputStream src, File dstFile) <span class="keyword">throws</span> IOException {</span><br><span class="line">        FileOutputStream dst = <span class="keyword">new</span> FileOutputStream(dstFile);</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="built_in">byte</span>[] buffer = <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">1</span> &lt;&lt; <span class="number">20</span>]; <span class="comment">// 1MB</span></span><br><span class="line">            <span class="keyword">long</span> ret = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">int</span> n = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> ((n = src.read(buffer)) &gt;= <span class="number">0</span>) {</span><br><span class="line">                dst.write(buffer, <span class="number">0</span>, n);</span><br><span class="line">                ret += n;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> ret;</span><br><span class="line">        } <span class="keyword">finally</span> {</span><br><span class="line">            dst.close();</span><br><span class="line">            src.close();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>交叉编译</tag>
        <tag>Mac</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>再谈 brew</title>
    <url>/2017/08/16/%E5%86%8D%E8%B0%88brew/</url>
    <content><![CDATA[<p>&#x7528;brew&#x4E00;&#x76F4;&#x90FD;&#x662F;&#x50BB;&#x4E4E;&#x4E4E;&#x7684;brew install&#x6765;&#x5B89;&#x88C5;&#x67D0;&#x4E2A;&#x8F6F;&#x4EF6;&#xFF0C;&#x76F4;&#x5230;&#x6709;&#x4E00;&#x5929;&#xFF0C;&#x9700;&#x8981;&#x5B89;&#x88C5;&#x4E00;&#x4E2A;&#x4F4E;&#x7248;&#x672C;&#x7684;&#x8F6F;&#x4EF6;&#xFF0C;&#x53D1;&#x73B0;&#x81EA;&#x5DF1;&#x4E0D;&#x4F1A;&#xFF0C;&#x4E8E;&#x662F;&#x518D;&#x8C08;&#x8C08;&#x8FD9;&#x4E1C;&#x897F;&#x3002;</p><a id="more"></a><p>&#x5B89;&#x88C5;brew</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>bin<span class="regexp">/ruby -e &quot;$(curl -fsSL https:/</span><span class="regexp">/raw.githubusercontent.com/</span>Homebrew<span class="regexp">/install/m</span>aster<span class="regexp">/install)&quot;</span></span><br></pre></td></tr></table></figure><p>&#x5347;&#x7EA7;brew&#x81EA;&#x8EAB;</p><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">brew </span>update</span><br></pre></td></tr></table></figure><p>&#x67E5;&#x770B;brew&#x81EA;&#x8EAB;&#x7684;&#x4E00;&#x4E9B;&#x4FE1;&#x606F;</p><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="built_in">config</span></span><br></pre></td></tr></table></figure><p>&#x5B89;&#x88C5;&#x67D0;&#x4E2A;&#x8F6F;&#x4EF6;</p><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>[FORMULA...]</span><br></pre></td></tr></table></figure><p>&#x5378;&#x8F7D;&#x67D0;&#x4E2A;&#x8F6F;&#x4EF6;</p><figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">brew</span></span> uninstall FORMULA...</span><br></pre></td></tr></table></figure><p>&#x5347;&#x7EA7;&#x67D0;&#x4E2A;&#x8F6F;&#x4EF6;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">brew<span class="built_in"> upgrade </span>[FORMULA<span class="built_in">..</span>.]</span><br></pre></td></tr></table></figure><p>&#x67E5;&#x770B;&#x67D0;&#x4E2A;&#x8F6F;&#x4EF6;&#x7684;&#x5B89;&#x88C5;&#x8BE6;&#x60C5;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">brew <span class="builtin-name">info</span> [FORMULA<span class="built_in">..</span>.]</span><br></pre></td></tr></table></figure><p>&#x6253;&#x5F00;&#x67D0;&#x4E2A;&#x8F6F;&#x4EF6;&#x7684;&#x4E3B;&#x9875;</p><figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line">brew home <span class="string">[FORMULA...]</span></span><br></pre></td></tr></table></figure><p>&#x67E5;&#x770B;&#x67D0;&#x4E2A;&#x8F6F;&#x4EF6;&#x7684;&#x5B89;&#x88C5;&#x9009;&#x9879;</p><figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line">brew options <span class="string">[FORMULA...]</span></span><br></pre></td></tr></table></figure><p>&#x5217;&#x51FA;&#x67D0;&#x4E2A;&#x8F6F;&#x4EF6;&#x5B89;&#x88C5;&#x7684;&#x6240;&#x6709;&#x4FE1;&#x606F;</p><figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line">brew <span class="built_in">list</span> <span class="meta">[</span>FORMULA<span class="params">...</span><span class="meta">]</span></span><br></pre></td></tr></table></figure><p>&#x641C;&#x7D22;&#x67D0;&#x4E2A;&#x8F6F;&#x4EF6;</p><figure class="highlight excel"><table><tr><td class="code"><pre><span class="line">brew <span class="built_in">search</span> [<span class="built_in">TEXT</span>|/REGEX/]</span><br></pre></td></tr></table></figure><p>&#x5982;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">brew search <span class="built_in">auto</span>make</span><br></pre></td></tr></table></figure><p>&#x4F7F;&#x7528;rb&#x6587;&#x4EF6;&#x6765;&#x5B89;&#x88C5;&#xFF0C;&#x652F;&#x6301;&#x8FDC;&#x7A0B;&#x6587;&#x4EF6;&#x6216;&#x672C;&#x5730;&#x6587;&#x4EF6;</p><p>&#x5982;</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">brew install https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/Homebrew/</span>homebrew-core<span class="regexp">/487047e550fa24bc0486c0f0243da837ddaa488c/</span>Formula<span class="regexp">/cmake.rb</span></span><br></pre></td></tr></table></figure><p>&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x672C;&#x5730;&#x6587;&#x4EF6;</p><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>cmake.rb</span><br></pre></td></tr></table></figure><p>&#x5B89;&#x88C5;&#x7279;&#x5B9A;&#x7248;&#x672C;&#x7684;&#x8F6F;&#x4EF6;</p><p>&#x65B9;&#x6CD5;&#x4E00;&#xFF1A;</p><p>&#x9996;&#x5148;&#x627E;&#x5230;github&#x4E0A;&#x7684;rb&#x6587;&#x4EF6;&#xFF0C;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7248;&#x672C;&#x7684;raw&#x6587;&#x4EF6;&#xFF0C;&#x5982;<a href="https://raw.githubusercontent.com/Homebrew/homebrew-core/487047e550fa24bc0486c0f0243da837ddaa488c/Formula/cmake.rb&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#x6765;&#x5B89;&#x88C5;" target="_blank" rel="noopener">https://raw.githubusercontent.com/Homebrew/homebrew-core/487047e550fa24bc0486c0f0243da837ddaa488c/Formula/cmake.rb&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#x6765;&#x5B89;&#x88C5;</a></p><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>&#x8FDC;&#x7A0B;&#x5730;&#x5740;</span><br></pre></td></tr></table></figure><p>&#x65B9;&#x6CD5;&#x4E8C;&#xFF1A;</p><p>&#x5982;&#x679C;&#x627E;&#x4E0D;&#x5230;&#x5BF9;&#x5E94;&#x7248;&#x672C;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x6700;&#x65B0;&#x7684;rb&#x6587;&#x4EF6;&#x4E0B;&#x8F7D;&#x5230;&#x672C;&#x5730;&#xFF0C;&#x4FEE;&#x6539;url&#x548C;sha256&#x503C;&#x4E3A;&#x4F60;&#x9700;&#x8981;&#x7684;&#x7248;&#x672C;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#x6765;&#x5B89;&#x88C5;</p><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>&#x6587;&#x4EF6;&#x8DEF;&#x5F84;</span><br></pre></td></tr></table></figure><p>mac&#x4E0A;sha256&#x7684;&#x503C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5982;&#x4E0B;&#x547D;&#x4EE4;&#x8BA1;&#x7B97;</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">shasum -<span class="selector-tag">a</span> <span class="number">256</span> &#x6587;&#x4EF6;&#x8DEF;&#x5F84;</span><br></pre></td></tr></table></figure><p>&#x53BB;&#x9664;&#x94FE;&#x63A5;</p><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">brew </span>unlink formula</span><br></pre></td></tr></table></figure><p>&#x94FE;&#x63A5;</p><figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line">brew <span class="keyword">link</span> <span class="meta">[</span>FORMULA<span class="params">...</span><span class="meta">]</span></span><br></pre></td></tr></table></figure><p>&#x5207;&#x6362;&#x7248;&#x672C;</p><figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">brew <span class="keyword">switch</span> <span class="xml"><span class="tag">&lt;<span class="name">name</span>&gt;</span> </span><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
        <tag>brew</tag>
      </tags>
  </entry>
  <entry>
    <title>一种使用 Fresco 非侵入式加载图片的方式</title>
    <url>/2017/07/27/%E4%B8%80%E7%A7%8D%E4%BD%BF%E7%94%A8Fresco%E9%9D%9E%E4%BE%B5%E5%85%A5%E5%BC%8F%E5%8A%A0%E8%BD%BD%E5%9B%BE%E7%89%87%E7%9A%84%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>Fresco&#x6709;&#x591A;&#x53FC;&#x6211;&#x5C31;&#x4E0D;&#x8BF4;&#x4E86;&#xFF01;</p><a id="more"></a><h3 id="SimpleDraweeView&#x7684;&#x4E0D;&#x8DB3;"><a href="#SimpleDraweeView&#x7684;&#x4E0D;&#x8DB3;" class="headerlink" title="SimpleDraweeView&#x7684;&#x4E0D;&#x8DB3;"></a>SimpleDraweeView&#x7684;&#x4E0D;&#x8DB3;</h3><p>&#x7528;&#x8FC7;<strong>Fresco</strong>&#x7684;&#x540C;&#x5B66;&#x90FD;&#x77E5;&#x9053;&#xFF0C;&#x4F7F;&#x7528;&#x5B83;&#x6709;&#x4E00;&#x5B9A;&#x7684;&#x6210;&#x672C;&#xFF0C;&#x5FC5;&#x987B;&#x628A;&#x6240;&#x6709;<strong>ImageView</strong>&#x66FF;&#x6362;&#x4E3A;<strong>SimpleDraweeView</strong>&#xFF0C;&#x4E14;&#x662F;&#x4FB5;&#x5165;&#x5E03;&#x5C40;&#x5F0F;&#x7684;&#x4FEE;&#x6539;&#x3002;</p><p>&#x7A0D;&#x5FAE;&#x597D;&#x4E00;&#x70B9;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x4FEE;&#x6539;&#x9879;&#x76EE;&#x4E2D;&#x7684;<strong>ImageView</strong>&#x7684;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#x3002;&#x5982;&#x4E0B;&#xFF1A;</p><p>&#x5728;&#x4E00;&#x4E9B;&#x5927;&#x578B;&#x9879;&#x76EE;&#x4E2D;&#xFF0C;&#x53EF;&#x80FD;&#x4E1A;&#x52A1;&#x4E0A;&#x5E76;&#x6CA1;&#x6709;&#x76F4;&#x63A5;&#x5728;&#x5E03;&#x5C40;&#x4E2D;&#x4F7F;&#x7528;<strong>android.widget.ImageView</strong>&#xFF0C;&#x800C;&#x662F;&#x81EA;&#x5B9A;&#x4E49;&#x4E00;&#x5C42;&#xFF0C;&#x5B9E;&#x73B0;&#x4E1A;&#x52A1;&#x4E0A;&#x7684;&#x90E8;&#x5206;&#x9700;&#x6C42;&#xFF08;<strong>&#x5982;webp&#x8F6C;&#x6362;/&#x964D;&#x7EA7;&#x652F;&#x6301;&#xFF0C;&#x5BBD;&#x9AD8;&#x88C1;&#x526A;&#x652F;&#x6301;&#x7B49;&#x7B49;</strong>&#xFF09;&#xFF0C;&#x540C;&#x65F6;&#x65B9;&#x4FBF;&#x5230;&#x65F6;&#x5019;&#x53EF;&#x76F4;&#x63A5;&#x901A;&#x8FC7;&#x4FEE;&#x6539;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#x6765;&#x968F;&#x610F;&#x66FF;&#x6362;&#x56FE;&#x7247;&#x5E93;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyImageView</span> <span class="keyword">extends</span> <span class="title">ImageView</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyImageView</span><span class="params">(Context context)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">        init();</span><br><span class="line">    }</span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyImageView</span><span class="params">(Context context, @Nullable AttributeSet attrs)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        init();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyImageView</span><span class="params">(Context context, @Nullable AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">        init();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5728;&#x5E03;&#x5C40;&#x91CC;&#x5E76;&#x4E0D;&#x662F;&#x76F4;&#x63A5;&#x4F7F;&#x7528;<strong>android.widget.ImageView</strong>&#xFF0C;&#x800C;&#x662F;&#x4F7F;&#x7528;<strong>MyImageView</strong></p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">io.github.lizhangqu.sample.MyImageView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;100dp&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;100dp&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>&#x6240;&#x4EE5;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x4F7F;&#x7528;<strong>Fresco</strong>&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5C06;<strong>MyImageView</strong>&#x7684;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#x4FEE;&#x6539;&#x4E3A;&#x7EE7;&#x627F;<strong>SimpleDraweeView</strong>&#x5373;&#x53EF;&#xFF0C;&#x65E0;&#x9700;&#x6539;&#x52A8;&#x4E1A;&#x52A1;&#x4EE3;&#x7801;&#x3002;</p><p>&#x4E8B;&#x7269;&#x603B;&#x662F;&#x6709;&#x4E24;&#x9762;&#x6027;&#x7684;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x867D;&#x7136;&#x6709;&#x5176;&#x4F18;&#x70B9;&#xFF0C;&#x4F46;&#x662F;&#x4E5F;&#x6709;&#x5F0A;&#x7AEF;&#xFF0C;&#x5C31;&#x662F;&#x7528;&#x5230;&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x90FD;&#x5FC5;&#x987B;&#x4F7F;&#x7528;<strong>MyImageView</strong>&#x800C;&#x4E0D;&#x662F;<strong>ImageView</strong>&#xFF08;&#x867D;&#x7136;<strong>SimpleDraweeView</strong>&#x4E5F;&#x4E00;&#x6837;&#xFF09;&#x3002;&#x4F46;&#x662F;&#x4ED6;&#x6BD4;&#x76F4;&#x63A5;&#x5728;&#x5E03;&#x5C40;&#x4E2D;&#x4F7F;&#x7528;<strong>SimpleDraweeView</strong>&#x8981;&#x5F88;&#x591A;&#xFF0C;&#x6536;&#x655B;&#x4E86;&#x56FE;&#x7247;&#x7684;&#x5165;&#x53E3;&#xFF0C;&#x65B9;&#x4FBF;&#x66FF;&#x6362;&#x3002;&#x8FD8;&#x6709;&#x4E00;&#x70B9;&#x5C31;&#x662F;&#x5404;&#x4E2A;&#x57FA;&#x7840;&#x5E93;&#x5F97;&#x4F9D;&#x8D56;&#x8FD9;&#x4E2A;&#x7EE7;&#x627F;&#x4E86;&#x7684;View&#x3002;</p><h3 id="&#x56FE;&#x7247;&#x9009;&#x62E9;&#x5668;&#x5F15;&#x53D1;&#x7684;&#x95EE;&#x9898;"><a href="#&#x56FE;&#x7247;&#x9009;&#x62E9;&#x5668;&#x5F15;&#x53D1;&#x7684;&#x95EE;&#x9898;" class="headerlink" title="&#x56FE;&#x7247;&#x9009;&#x62E9;&#x5668;&#x5F15;&#x53D1;&#x7684;&#x95EE;&#x9898;"></a>&#x56FE;&#x7247;&#x9009;&#x62E9;&#x5668;&#x5F15;&#x53D1;&#x7684;&#x95EE;&#x9898;</h3><p>&#x6700;&#x8FD1;&#x60F3;&#x628A;&#x9879;&#x76EE;&#x4E2D;&#x7684;&#x56FE;&#x7247;&#x9009;&#x62E9;&#x5668;&#x7ED9;&#x6362;&#x6389;&#xFF0C;&#x56E0;&#x4E3A;&#x76EE;&#x524D;&#x4F7F;&#x7528;&#x7684;&#x56FE;&#x7247;&#x9009;&#x62E9;&#x5668;&#x6548;&#x679C;&#x5E76;&#x4E0D;&#x662F;&#x5F88;&#x597D;&#xFF0C;&#x4EE3;&#x7801;&#x4FEE;&#x6539;&#x81EA;github&#x4E0A;&#x4E00;&#x4E2A;&#x9879;&#x76EE;<a href="https://github.com/hongwangsong/ImageChoose" target="_blank" rel="noopener">ImageChoose</a>&#xFF0C;&#x9879;&#x76EE;&#x6BD4;&#x8F83;&#x8001;&#xFF0C;&#x76EE;&#x524D;&#x5DF2;&#x7ECF;&#x6CA1;&#x4EBA;&#x7EF4;&#x62A4;&#x4E86;&#x3002;&#x4E8E;&#x662F;&#x6253;&#x7B97;&#x6362;&#x4E00;&#x4E2A;&#x56FE;&#x7247;&#x9009;&#x62E9;&#x5668;&#xFF0C;&#x800C;&#x524D;&#x6BB5;&#x65F6;&#x95F4;&#xFF0C;&#x77E5;&#x4E4E;&#x521A;&#x597D;&#x5F00;&#x6E90;&#x4E86;&#x4E00;&#x4E2A;&#x56FE;&#x7247;&#x9009;&#x62E9;&#x5668;&#xFF0C;&#x5C31;&#x62FF;&#x5B83;&#x5F00;&#x5200;&#x4E86;&#xFF0C;&#x9879;&#x76EE;&#x5730;&#x5740; <a href="https://github.com/zhihu/Matisse" target="_blank" rel="noopener">Matisse</a>&#x3002;</p><p>&#x5C06;&#x9879;&#x76EE;clone&#x4E0B;&#x6765;&#x4E00;&#x770B;&#xFF0C;&#x61F5;&#x903C;&#x4E86;&#xFF0C;&#x6CA1;&#x6709;&#x5BF9;<strong>Fresco</strong>&#x7684;&#x652F;&#x6301;&#xFF0C;&#x800C;&#x9879;&#x76EE;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x662F;<strong>Fresco</strong>&#xFF0C;&#x603B;&#x4E0D;&#x80FD;&#x56E0;&#x4E3A;&#x4E00;&#x4E2A;&#x56FE;&#x7247;&#x9009;&#x62E9;&#x5668;&#x5F15;&#x5165;&#x4E24;&#x5957;&#x56FE;&#x7247;&#x5E93;&#x5427;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x5751;&#x7239;&#x7684;&#x505A;&#x6CD5;&#x3002;&#x4E8E;&#x662F;&#x770B;&#x4E86;&#x4E0B;issue&#xFF0C;&#x53D1;&#x73B0;&#x8FD8;&#x662F;&#x6709;&#x5F88;&#x591A;&#x8FD9;&#x6837;&#x7684;&#x8BC9;&#x6C42;&#x7684;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><ul><li><a href="https://github.com/zhihu/Matisse/issues/113" target="_blank" rel="noopener">Why not add FrescoEngine?</a></li><li><a href="https://github.com/zhihu/Matisse/issues/119" target="_blank" rel="noopener">&#x5EFA;&#x8BAE;&#x652F;&#x6301;&#x4E0B;fresco</a></li><li><a href="https://github.com/zhihu/Matisse/issues/141" target="_blank" rel="noopener">How to support for Fresco?</a></li></ul><p>&#x770B;&#x4E00;&#x4E2A;&#x56DE;&#x590D;</p><blockquote><p><a href="https://github.com/logan676" target="_blank" rel="noopener">@Logan676</a> As you said, why not add FrescoEngine? I&#x2019;ve asked myself the same question. The truth is that Fresco has a lot of customizations, it defines its own view which is <code>SimpleDraweeView</code>. So, if we want to support Fresco, it&#x2019;s not that simple you just implement <code>ImageEngine</code>, a lot more work needed.</p></blockquote><p>&#x770B;&#x6765;&#x77E5;&#x4E4E;&#x4E0D;&#x652F;&#x6301;Fresco&#x4E5F;&#x662F;&#x6709;&#x539F;&#x56E0;&#x7684;&#x3002;</p><h3 id="&#x5BFB;&#x627E;&#x89E3;&#x51B3;&#x65B9;&#x5F0F;"><a href="#&#x5BFB;&#x627E;&#x89E3;&#x51B3;&#x65B9;&#x5F0F;" class="headerlink" title="&#x5BFB;&#x627E;&#x89E3;&#x51B3;&#x65B9;&#x5F0F;"></a>&#x5BFB;&#x627E;&#x89E3;&#x51B3;&#x65B9;&#x5F0F;</h3><p>&#x662F;&#x5426;&#x5B58;&#x5728;&#x4E00;&#x79CD;&#x4E0D;&#x4F7F;&#x7528;<strong>SimpleDraweeView</strong>&#x800C;&#x80FD;&#x52A0;&#x8F7D;&#x56FE;&#x7247;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x901A;&#x8FC7;&#x67E5;&#x770B;&#x6587;&#x6863; <a href="https://www.fresco-cn.org/docs/writing-custom-views.html" target="_blank" rel="noopener">writing-custom-views</a> &#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#xFF0C;<strong>Fresco</strong>&#x662F;&#x652F;&#x6301;&#x81EA;&#x5B9A;&#x4E49;View&#x7684;&#x3002;&#x4E3B;&#x8981;&#x9700;&#x8981;&#x5904;&#x7406;&#x4EE5;&#x4E0B;&#x51E0;&#x4EF6;&#x4E8B;&#x60C5;</p><ul><li>&#x5904;&#x7406;&#x597D;<strong>DraweeHolder</strong>&#x7684;<strong>attach</strong>/<strong>detach</strong>&#x4E8B;&#x4EF6;</li><li>&#x5982;&#x679C;&#x5F00;&#x542F;&#x4E86;&#x52A0;&#x8F7D;&#x5931;&#x8D25;&#x70B9;&#x51FB;&#x91CD;&#x8BD5;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x9700;&#x8981;&#x5904;&#x7406;&#x597D;<strong>View</strong>&#x7684;<strong>onTouchEvent</strong>&#x4E8B;&#x4EF6;</li><li><strong>DraweeHolder</strong>&#x548C;<strong>DraweeHierarchy</strong>&#x5BF9;&#x8C61;&#x7684;&#x521B;&#x5EFA;&#x5C3D;&#x91CF;&#x53EA;&#x521B;&#x5EFA;&#x4E00;&#x6B21;&#xFF0C;&#x56E0;&#x4E3A;&#x5F00;&#x9500;&#x6BD4;&#x8F83;&#x5927;</li><li>&#x901A;&#x8FC7;<strong>DraweeHolder.getTopLevelDrawable()</strong>&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x62FF;&#x5230;<strong>Drawable</strong>&#x5BF9;&#x8C61;&#xFF0C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x5373;&#x53EF;&#xFF0C;&#x4F46;&#x662F;&#x4F60;&#x4E0D;&#x80FD;&#x968F;&#x610F;&#x7684;&#x53D8;&#x6362;&#x8FD9;&#x4E2A;<strong>Drawable</strong>&#x5BF9;&#x8C61;</li></ul><p>&#x4F46;&#x662F;&#x6211;&#x4EEC;&#x73B0;&#x5728;&#x6CA1;&#x6709;&#x7EE7;&#x627F;<strong>ImageView</strong>&#xFF0C;&#x6240;&#x4EE5;&#x6CA1;&#x529E;&#x6CD5;&#x5904;&#x7406;<strong>attach</strong>/<strong>detach</strong>&#x4E8B;&#x4EF6;&#xFF0C;&#x552F;&#x4E00;&#x53EF;&#x884C;&#x7684;&#x5C31;&#x662F;<strong>View.OnAttachStateChangeListener</strong>&#x4E8B;&#x4EF6;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//remove listener if needed</span></span><br><span class="line">targetView.removeOnAttachStateChangeListener(mDraweeHolderDispatcher);</span><br><span class="line"><span class="comment">//if is already attached, call method onViewAttachedToWindow.</span></span><br><span class="line"><span class="keyword">if</span> (isAttachedToWindow(targetView)) {</span><br><span class="line">	mDraweeHolderDispatcher.onViewAttachedToWindow(targetView);</span><br><span class="line">}</span><br><span class="line"><span class="comment">//add attach state change listener</span></span><br><span class="line">targetView.addOnAttachStateChangeListener(mDraweeHolderDispatcher);</span><br></pre></td></tr></table></figure><p>&#x4F46;&#x662F;&#x5728;&#x8C03;&#x7528;<strong>addOnAttachStateChangeListener</strong>&#x524D;&#xFF0C;&#x53EF;&#x80FD;&#x8BE5;View&#x5DF2;&#x7ECF;AttachedToWindow&#x4E86;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x5224;&#x65AD;&#x662F;&#x5426;&#x5DF2;&#x7ECF;AttachedToWindow&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x662F;&#x7684;&#x8BDD;&#xFF0C;&#x624B;&#x52A8;&#x8C03;&#x7528;&#x4E00;&#x904D;<strong>onViewAttachedToWindow</strong>.</p><p>&#x5BF9;&#x4E8E;&#x70B9;&#x51FB;&#x91CD;&#x8BD5;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x719F;&#x6089;View&#x7684;&#x4E8B;&#x4EF6;&#x673A;&#x5236;&#xFF0C;&#x5C31;&#x5F88;&#x597D;&#x529E;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x5BF9;View&#x8BBE;&#x7F6E;&#x4E86;OnTouchListener&#xFF0C;&#x90A3;&#x4E48;OnTouchListener&#x4F1A;&#x4F18;&#x5148;&#x4E8E;onTouchEvent&#x65B9;&#x6CD5;&#x8C03;&#x7528;</p><p>&#x5BF9;&#x5E94;&#x7684;&#x4E8B;&#x4EF6;&#x5206;&#x53D1;&#x7684;&#x4EE3;&#x7801;&#x5982;&#x4E0B;:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ListenerInfo li = mListenerInfo;</span><br><span class="line"><span class="keyword">if</span> (li != <span class="keyword">null</span> &amp;&amp; li.mOnTouchListener != <span class="keyword">null</span></span><br><span class="line">        &amp;&amp; (mViewFlags &amp; ENABLED_MASK) == ENABLED</span><br><span class="line">        &amp;&amp; li.mOnTouchListener.onTouch(<span class="keyword">this</span>, event)) {</span><br><span class="line">    result = <span class="keyword">true</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!result &amp;&amp; onTouchEvent(event)) {</span><br><span class="line">    result = <span class="keyword">true</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x8BBE;&#x7F6E;OnTouchListener&#x5373;&#x53EF;&#xFF0C;<strong>&#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x4F1A;&#x8986;&#x76D6;&#x5DF2;&#x6709;&#x7684;OnTouchListener&#x4E8B;&#x4EF6;&#xFF0C;&#x8FD9;&#x91CC;&#x662F;&#x4E00;&#x4E2A;&#x5751;&#x70B9;</strong>&#x3002;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">targetView.setOnTouchListener(mDraweeHolderDispatcher);</span><br></pre></td></tr></table></figure><p>mDraweeHolderDispatcher&#x662F;DraweeHolderDispatcher&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x5176;&#x4F5C;&#x7528;&#x4E3B;&#x8981;&#x505A;&#x5404;&#x79CD;&#x4E8B;&#x4EF6;&#x7684;&#x5206;&#x53D1;&#xFF0C;&#x5206;&#x53D1;&#x5230;mDraweeHolder&#x5BF9;&#x5E94;&#x7684;&#x4E8B;&#x4EF6;&#x4E0A;&#x53BB;&#xFF0C;&#x5176;&#x5B9E;&#x73B0;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">DraweeHolderDispatcher</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnAttachStateChangeListener</span>, <span class="title">View</span>.<span class="title">OnTouchListener</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onViewAttachedToWindow</span><span class="params">(View v)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (mDraweeHolder != <span class="keyword">null</span>) {</span><br><span class="line">            mDraweeHolder.onAttach();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onViewDetachedFromWindow</span><span class="params">(View v)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (mDraweeHolder != <span class="keyword">null</span>) {</span><br><span class="line">            mDraweeHolder.onDetach();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouch</span><span class="params">(View v, MotionEvent event)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (mDraweeHolder != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">if</span> (mDraweeHolder.onTouchEvent(event)) {</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x901A;&#x8FC7;&#x7FFB;&#x770B;SimpleDraweeView&#x53CA;&#x5176;&#x7236;&#x7C7B;&#x6E90;&#x7801;&#xFF0C;&#x53D1;&#x73B0;Fresco&#x8FD8;&#x91CD;&#x5199;&#x4E86;View&#x7684;&#x53E6;&#x5916;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x3002;</p><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onStartTemporaryDetach</span><span class="params">()</span> </span>{</span><br><span class="line">  <span class="keyword">super</span>.onStartTemporaryDetach();</span><br><span class="line">  onDetach();</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onFinishTemporaryDetach</span><span class="params">()</span> </span>{</span><br><span class="line">  <span class="keyword">super</span>.onFinishTemporaryDetach();</span><br><span class="line">  onAttach();</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x6709;&#x4EC0;&#x4E48;&#x7528;&#x5462;&#xFF0C;&#x53C2;&#x8003;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;<a href="http://blog.csdn.net/industriously/article/details/53894214" target="_blank" rel="noopener">Android&#x4E2D;&#x5224;&#x65AD;&#x5B50;View&#x4ECE;ListView&#x4E2D;&#x79FB;&#x9664;</a>&#xFF0C;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x4E86;AbstractListView&#x5176;&#x5B50;&#x7C7B;&#xFF0C;&#x5982;ListView&#x6216;&#x8005;GridView&#xFF0C;&#x4F60;&#x6700;&#x597D;&#x5904;&#x7406;&#x4E00;&#x4E0B;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x56E0;&#x4E3A;&#x4ED6;&#x4EEC;&#x7684;item&#x88AB;&#x79FB;&#x51FA;&#x5C4F;&#x5E55;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5176;detach&#x5E76;&#x6CA1;&#x6709;&#x8C03;&#x7528;&#xFF0C;&#x800C;&#x662F;&#x8C03;&#x7528;onStartTemporaryDetach&#x548C;onFinishTemporaryDetach&#x3002;&#x4F46;&#x662F;RecyclerView&#x4E0D;&#x5B58;&#x5728;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;&#x5904;&#x7406;&#x65B9;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A;</p><p>&#x95EE;&#x9898;&#x7684;&#x6700;&#x5927;&#x963B;&#x788D;&#x662F;&#x8FD9;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x5E76;&#x6CA1;&#x6709;&#x5411;&#x5916;&#x5206;&#x53D1;&#xFF0C;&#x552F;&#x4E00;&#x7684;&#x9014;&#x5F84;&#x5C31;&#x662F;&#x7EE7;&#x627F;&#x91CD;&#x5199;&#xFF0C;&#x4E8E;&#x662F;&#x727A;&#x7272;&#x4E0B;&#xFF0C;&#x8BA9;&#x5176;&#x53EF;&#x6709;&#x53EF;&#x65E0;&#x5427;&#xFF0C;&#x5982;&#x679C;&#x4ED6;&#x5B58;&#x5728;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x8C03;&#x7528;&#x5BF9;&#x5E94;&#x7684;&#x4E8B;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5C31;&#x65E0;&#x89C6;&#xFF0C;&#x4E5F;&#x907F;&#x514D;&#x4E86;&#x4FB5;&#x5165;&#x3002;&#x91C7;&#x7528;&#x63A5;&#x53E3;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5982;&#x679C;&#x4F20;&#x8FDB;&#x6765;&#x7684;View&#x662F;&#x6211;&#x4EEC;&#x5BF9;&#x5E94;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x5219;&#x8BA9;&#x5176;&#x81EA;&#x5DF1;&#x5206;&#x53D1;&#x8FD9;&#x4E24;&#x4E2A;&#x4E8B;&#x4EF6;&#x51FA;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x6211;&#x4EEC;&#x8C03;&#x7528;&#x5BF9;&#x5E94;&#x7684;attch&#x548C;detach&#x4E8B;&#x4EF6;&#x3002;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">public<span class="built_in"> interface </span>TemporaryDetachListener {</span><br><span class="line"></span><br><span class="line">    void onSaveTemporaryDetachListener(TemporaryDetachListener listener);</span><br><span class="line"></span><br><span class="line">    void onStartTemporaryDetach(View view);</span><br><span class="line"></span><br><span class="line">    void onFinishTemporaryDetach(View view);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">//&#x5982;&#x679C;view&#x662F;TemporaryDetachListener&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x5219;&#x5C06;mDraweeHolderDispatcher&#x4F20;&#x5165;&#xFF0C;&#x8BA9;View&#x6301;&#x6709;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x5BF9;&#x5E94;&#x7684;&#x65B9;&#x6CD5;&#x4E2D;&#x5916;&#x8C03;&#xFF0C;&#x5916;&#x8C03;&#x540E;&#x5728;&#x6211;&#x4EEC;&#x7684;mDraweeHolderDispatcher&#x4E2D;&#x5206;&#x53D1;&#x3002;</span></span><br><span class="line"><span class="keyword">if</span> (targetView instanceof TemporaryDetachListener) {</span><br><span class="line">    ((TemporaryDetachListener) targetView).on<span class="constructor">SaveTemporaryDetachListener(<span class="params">mDraweeHolderDispatcher</span>)</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5BF9;&#x5E94;&#x7684;ImageView&#x7684;&#x5B50;&#x7C7B;&#x5B9E;&#x73B0;&#x5982;&#x4E0B;:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyImageView</span> <span class="keyword">extends</span> <span class="title">ImageView</span> <span class="keyword">implements</span> <span class="title">FrescoLoader</span>.<span class="title">TemporaryDetachListener</span> </span>{</span><br><span class="line">    FrescoLoader.TemporaryDetachListener listener;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyImageView</span><span class="params">(Context context)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyImageView</span><span class="params">(Context context, @Nullable AttributeSet attrs)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyImageView</span><span class="params">(Context context, @Nullable AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStartTemporaryDetach</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>.onStartTemporaryDetach();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.listener != <span class="keyword">null</span>) {</span><br><span class="line">            listener.onStartTemporaryDetach(<span class="keyword">this</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFinishTemporaryDetach</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">super</span>.onFinishTemporaryDetach();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.listener != <span class="keyword">null</span>) {</span><br><span class="line">            listener.onFinishTemporaryDetach(<span class="keyword">this</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSaveTemporaryDetachListener</span><span class="params">(FrescoLoader.TemporaryDetachListener listener)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.listener = listener;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStartTemporaryDetach</span><span class="params">(View view)</span> </span>{</span><br><span class="line">        <span class="comment">//empty</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFinishTemporaryDetach</span><span class="params">(View view)</span> </span>{</span><br><span class="line">        <span class="comment">//empty</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8865;&#x5145;DraweeHolderDispatcher&#x5B9E;&#x73B0;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">DraweeHolderDispatcher</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnAttachStateChangeListener</span>, <span class="title">View</span>.<span class="title">OnTouchListener</span>, <span class="title">TemporaryDetachListener</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onViewAttachedToWindow</span><span class="params">(View v)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (mDraweeHolder != <span class="keyword">null</span>) {</span><br><span class="line">            mDraweeHolder.onAttach();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onViewDetachedFromWindow</span><span class="params">(View v)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (mDraweeHolder != <span class="keyword">null</span>) {</span><br><span class="line">            mDraweeHolder.onDetach();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSaveTemporaryDetachListener</span><span class="params">(TemporaryDetachListener listener)</span> </span>{</span><br><span class="line">        <span class="comment">//empty</span></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStartTemporaryDetach</span><span class="params">(View view)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (mDraweeHolder != <span class="keyword">null</span>) {</span><br><span class="line">            mDraweeHolder.onDetach();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFinishTemporaryDetach</span><span class="params">(View view)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (mDraweeHolder != <span class="keyword">null</span>) {</span><br><span class="line">            mDraweeHolder.onAttach();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouch</span><span class="params">(View v, MotionEvent event)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (mDraweeHolder != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">if</span> (mDraweeHolder.onTouchEvent(event)) {</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p><strong>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;onStartTemporaryDetach&#x548C;onFinishTemporaryDetach&#x5E76;&#x4E0D;&#x662F;&#x5FC5;&#x8981;&#x7684;&#xFF0C;&#x53EA;&#x6709;&#x4F60;&#x4F7F;&#x7528;&#x4E86;AbstractListView&#x5176;&#x5B50;&#x7C7B;&#xFF0C;&#x4F60;&#x6700;&#x597D;&#x5904;&#x7406;&#x4E00;&#x4E0B;&#xFF0C;&#x5176;&#x4ED6;&#x60C5;&#x51B5;&#x65E0;&#x89C6;&#x5373;&#x53EF;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x59D1;&#x4E14;&#x5C31;&#x65E0;&#x89C6;&#x4ED6;&#x4E86;&#xFF0C;&#x4E0A;&#x9762;&#x5C31;&#x5F53;&#x63D0;&#x4F9B;&#x4E00;&#x79CD;&#x5B9E;&#x73B0;&#x7684;&#x53C2;&#x8003;&#x5427;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x6700;&#x597D;&#x7684;&#x60C5;&#x51B5;&#x5C31;&#x662F;&#x5904;&#x7406;&#x4E00;&#x4E0B;&#x54AF;&#xFF0C;&#x4E5F;&#x4E0D;&#x6392;&#x9664;AbstractListView&#x5B50;&#x7C7B;&#x4E4B;&#x5916;&#x7684;&#x7C7B;&#x5B58;&#x5728;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5BFC;&#x81F4;&#x7684;&#x76F4;&#x63A5;&#x95EE;&#x9898;&#x5C31;&#x662F;&#x5185;&#x5B58;&#x65E0;&#x6CD5;&#x53CA;&#x65F6;&#x56DE;&#x6536;&#xFF0C;&#x5360;&#x7528;&#x8FC7;&#x9AD8;</strong>.</p><p>&#x6B64;&#x5916;&#xFF0C;&#x6211;&#x7684;<strong>&#x5FA1;&#x7528;&#x6316;&#x5751;&#x5C0F;&#x80FD;&#x624B;</strong>&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x79CD;&#x9ED1;&#x79D1;&#x6280;&#x7528;&#x4E8E;&#x68C0;&#x6D4B;&#x8FD9;&#x4E24;&#x4E2A;&#x4E8B;&#x4EF6;&#xFF0C;&#x8D34;&#x51FA;&#x4EE3;&#x7801;&#x4EC5;&#x4F9B;&#x53C2;&#x8003;&#x3002;&#x539F;&#x7406;&#x662F;onStartTemporaryDetach&#x7684;&#x65F6;&#x5019;view.getParent()&#x4E3A;null&#xFF0C;&#x90A3;&#x4E48;&#x53EA;&#x8981;&#x5728;View&#x7684;onPreDraw&#x4E2D;&#x8FDB;&#x884C;&#x68C0;&#x6D4B;&#xFF0C;&#x4E00;&#x76F4;&#x5F80;&#x4E0A;&#x641C;&#x7D22;rootView&#xFF0C;&#x627E;&#x5230;rootView&#x4E0E;view.getRootView()&#x4E0D;&#x4E00;&#x81F4;&#xFF0C;&#x5C31;&#x8BF4;&#x660E;getParent()&#x4E3A;null&#xFF0C;&#x4E2D;&#x95F4;&#x65AD;&#x4E86;&#x4E00;&#x5C42;&#x5173;&#x7CFB;&#x3002;&#x867D;&#x7136;&#x662F;attach&#x72B6;&#x6001;&#xFF0C;&#x4F46;&#x662F;&#x5374;&#x62FF;&#x4E0D;&#x5230;parent&#xFF0C;&#x5373;onStartTemporaryDetach&#x6216;onFinishTemporaryDetach&#xFF0C;&#x5982;&#x679C;&#x662F;&#x6B63;&#x5E38;&#x7684;attach&#x6216;&#x8005;detach&#xFF0C;&#x5219;&#x6700;&#x7EC8;&#x627E;&#x5230;&#x7684;rootView&#x662F;&#x4E00;&#x81F4;&#x7684;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x517C;&#x5BB9;abs listview attach/detach &#x4E0D;&#x56DE;&#x8C03;&#xFF0C;&#x56DE;&#x8C03;onStartTemporaryDetach/onFinishTemporaryDetach&#x95EE;&#x9898;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lizhangqu</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> V1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2017-07-27 15:28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewCompat</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addOnAttachStateChangeListener</span><span class="params">(View view, View.OnAttachStateChangeListener listener)</span> </span>{</span><br><span class="line">        CompatAttachStateChangeListener.addOnAttachStateChangeListener(view, listener);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">CompatAttachStateChangeListener</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnAttachStateChangeListener</span>, <span class="title">ViewTreeObserver</span>.<span class="title">OnPreDrawListener</span> </span>{</span><br><span class="line">        <span class="keyword">private</span> View mView;</span><br><span class="line">        <span class="keyword">private</span> View.OnAttachStateChangeListener mListener;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> myAttached;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> yourAttached;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addOnAttachStateChangeListener</span><span class="params">(View view, View.OnAttachStateChangeListener listener)</span> </span>{</span><br><span class="line">            <span class="keyword">new</span> CompatAttachStateChangeListener(view, listener);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        CompatAttachStateChangeListener(View view, View.OnAttachStateChangeListener listener) {</span><br><span class="line">            mView = view;</span><br><span class="line">            mListener = listener;</span><br><span class="line">            myAttached = isAttachedToWindow(mView);</span><br><span class="line">            yourAttached = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (myAttached) mView.getViewTreeObserver().addOnPreDrawListener(<span class="keyword">this</span>);</span><br><span class="line">            mView.addOnAttachStateChangeListener(<span class="keyword">this</span>);</span><br><span class="line">            update();</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onViewAttachedToWindow</span><span class="params">(View v)</span> </span>{</span><br><span class="line">            <span class="keyword">if</span> (myAttached) <span class="keyword">return</span>;</span><br><span class="line">            myAttached = <span class="keyword">true</span>;</span><br><span class="line">            mView.getViewTreeObserver().addOnPreDrawListener(<span class="keyword">this</span>);</span><br><span class="line">            update();</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onViewDetachedFromWindow</span><span class="params">(View v)</span> </span>{</span><br><span class="line">            <span class="keyword">if</span> (!myAttached) <span class="keyword">return</span>;</span><br><span class="line">            myAttached = <span class="keyword">false</span>;</span><br><span class="line">            mView.getViewTreeObserver().removeOnPreDrawListener(<span class="keyword">this</span>);</span><br><span class="line">            update();</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onPreDraw</span><span class="params">()</span> </span>{</span><br><span class="line">            update();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>{</span><br><span class="line">            <span class="keyword">boolean</span> attached = attach();</span><br><span class="line">            <span class="keyword">if</span> (yourAttached != attached) {</span><br><span class="line">                yourAttached = attached;</span><br><span class="line">                <span class="keyword">if</span> (yourAttached) {</span><br><span class="line">                    mListener.onViewAttachedToWindow(mView);</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    mListener.onViewDetachedFromWindow(mView);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">attach</span><span class="params">()</span> </span>{</span><br><span class="line">            <span class="keyword">if</span> (myAttached) {</span><br><span class="line">                View root = mView;</span><br><span class="line">                <span class="keyword">while</span> (<span class="keyword">true</span>) {</span><br><span class="line">                    ViewParent parent = root.getParent();</span><br><span class="line">                    <span class="keyword">if</span> (!(parent <span class="keyword">instanceof</span> View)) <span class="keyword">break</span>;</span><br><span class="line">                    root = (View) parent;</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">if</span> (root == mView.getRootView()) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isAttachedToWindow</span><span class="params">(View view)</span> </span>{</span><br><span class="line">            <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">19</span>) {</span><br><span class="line">                <span class="keyword">return</span> view.isAttachedToWindow();</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="keyword">return</span> view.getWindowToken() != <span class="keyword">null</span>;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5C31;&#x662F;&#x5C06;onStartTemporaryDetach&#x548C;onFinishTemporaryDetach&#x4E8B;&#x4EF6;&#x7B49;&#x6548;&#x4E3A;onViewAttachedToWindow&#x4E3A;onViewDetachedFromWindow&#x4E8B;&#x4EF6;&#x5916;&#x53D1;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x65E0;&#x89C6;onStartTemporaryDetach&#x548C;onFinishTemporaryDetach&#x4E8B;&#x4EF6;&#x4E86;&#x3002;</p><p>&#x6700;&#x7EC8;&#x52A0;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x63A7;&#x5236;&#x8FD9;&#x79CD;&#x517C;&#x5BB9;&#x903B;&#x8F91;&#xFF0C;&#x7B49;&#x5230;&#x9700;&#x8981;&#x5F00;&#x542F;&#x65F6;&#x4E3B;&#x52A8;&#x4F20;&#x5165;&#x53C2;&#x6570;&#x5F00;&#x542F;&#xFF0C;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (mCompatTemporaryDetach) {</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">ViewCompat</span>.</span></span>add<span class="constructor">OnAttachStateChangeListener(<span class="params">targetView</span>, <span class="params">mDraweeHolderDispatcher</span>)</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">    <span class="comment">//if targetView is instanceof TemporaryDetachListener, set TemporaryDetachListener</span></span><br><span class="line">    <span class="comment">//you should override onSaveTemporaryDetachListener(TemporaryDetachListener l) to holder the param TemporaryDetachListener.</span></span><br><span class="line">    <span class="comment">//also override method onStartTemporaryDetach() and onFinishTemporaryDetach() to call the holder&apos;s onStartTemporaryDetach() and onFinishTemporaryDetach()</span></span><br><span class="line">    <span class="keyword">if</span> (targetView instanceof TemporaryDetachListener) {</span><br><span class="line">        ((TemporaryDetachListener) targetView).on<span class="constructor">SaveTemporaryDetachListener(<span class="params">mDraweeHolderDispatcher</span>)</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//if is already attached, call method onViewAttachedToWindow.</span></span><br><span class="line">    <span class="keyword">if</span> (is<span class="constructor">AttachedToWindow(<span class="params">targetView</span>)</span>) {</span><br><span class="line">        mDraweeHolderDispatcher.on<span class="constructor">ViewAttachedToWindow(<span class="params">targetView</span>)</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//add attach state change listener</span></span><br><span class="line">    targetView.add<span class="constructor">OnAttachStateChangeListener(<span class="params">mDraweeHolderDispatcher</span>)</span>;</span><br><span class="line">}</span><br><span class="line">targetView.set<span class="constructor">OnTouchListener(<span class="params">mDraweeHolderDispatcher</span>)</span>;</span><br></pre></td></tr></table></figure><p>&#x63A5;&#x7740;&#x5C31;&#x53EF;&#x4EE5;&#x6109;&#x5FEB;&#x7684;&#x4F7F;&#x7528;&#x4E86;&#x3002;</p><p>&#x5BF9;mDraweeHolder&#x8BBE;&#x7F6E;&#x4E86;&#x5404;&#x79CD;&#x53C2;&#x6570;&#x540E;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8C03;&#x7528;&#x5BF9;&#x5E94;&#x7684;getTopLevelDrawable&#x65B9;&#x6CD5;&#xFF0C;&#x8FD4;&#x56DE;Drawable&#x5BF9;&#x8C61;&#xFF0C;&#x5C06;&#x5176;&#x8BBE;&#x7F6E;&#x5230;ImageView&#x4E0A;&#x3002;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//set image drawable</span></span><br><span class="line">targetView.setImageDrawable(mDraweeHolder.getTopLevelDrawable());</span><br></pre></td></tr></table></figure><p>&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x4F55;&#x4FDD;&#x8BC1;DraweeHolder&#x5BF9;&#x8C61;&#x53EA;&#x521B;&#x5EFA;&#x4E00;&#x904D;&#xFF0C;&#x5E76;&#x4E14;&#x4FDD;&#x8BC1;addOnAttachStateChangeListener&#x53EA;&#x4F1A;&#x8C03;&#x7528;&#x4E00;&#x6B21;&#xFF0C;&#x5B9E;&#x5728;&#x662F;&#x592A;&#x96BE;&#x4E86;&#xFF0C;&#x5FC5;&#x987B;&#x727A;&#x7272;&#x4E00;&#x4E0B;&#xFF0C;&#x4E0D;&#x7136;&#x4E0D;&#x4F18;&#x96C5;&#xFF0C;<strong>&#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5FC5;&#x987B;&#x727A;&#x7272;&#x6389;View&#x7684;tag&#x76F8;&#x5173;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x7684;ImageView&#x7528;&#x4E86;Tag&#xFF0C;&#x90A3;&#x4E48;&#x4F60;&#x7684;Tag&#x4F1A;&#x88AB;&#x6211;&#x4EEC;&#x8986;&#x76D6;&#xFF0C;&#x8BF7;&#x8F6C;&#x79FB;&#x4F60;&#x7684;Tag&#x76F8;&#x5173;&#x529F;&#x80FD;&#xFF0C;&#x4F7F;&#x7528;&#x5176;&#x4ED6;&#x65B9;&#x5F0F;&#x3002;</strong>&#x56E0;&#x4E3A;&#x4E3A;&#x4E86;&#x8BA9;View&#x6301;&#x6709;DraweeHolder&#x5BF9;&#x8C61;&#xFF0C;&#x907F;&#x514D;&#x91CD;&#x590D;&#x521B;&#x5EFA;&#xFF0C;&#x53EA;&#x80FD;&#x8FD9;&#x4E48;&#x505A;&#x4E86;&#xFF0C;&#x5148;&#x4ECE;Tag&#x4E2D;&#x53D6;DraweeHolder&#xFF0C;&#x5982;&#x679C;&#x53D6;&#x4E0D;&#x5230;&#xFF0C;&#x5219;&#x521B;&#x5EFA;&#xFF0C;&#x5426;&#x5219;&#xFF0C;&#x590D;&#x7528;&#x73B0;&#x6709;&#x7684;DraweeHolder&#x5BF9;&#x8C61;&#x3002;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//we should use tag</span></span><br><span class="line"><span class="keyword">if</span> (mDraweeHolder == <span class="keyword">null</span>) {</span><br><span class="line">    Object tag = targetView.getTag();</span><br><span class="line">    <span class="keyword">if</span> (tag <span class="keyword">instanceof</span> DraweeHolder) {</span><br><span class="line">        mDraweeHolder = (DraweeHolder&lt;DraweeHierarchy&gt;) tag;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"><span class="keyword">if</span> (mDraweeHolder == <span class="keyword">null</span>) </span><br><span class="line">	mDraweeHolder = DraweeHolder.create(<span class="keyword">null</span>, targetView.getContext());</span><br><span class="line">    <span class="keyword">if</span> (mDraweeHolderDispatcher == <span class="keyword">null</span>) {</span><br><span class="line">        mDraweeHolderDispatcher = <span class="keyword">new</span> DraweeHolderDispatcher();</span><br><span class="line">    }</span><br><span class="line">    targetView.setTag(mDraweeHolder);</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">	<span class="comment">//reuse</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x4E9B;&#x4E8B;&#x60C5;&#x641E;&#x5B9A;&#x4E86;&#x5C31;&#x662F;&#x53C2;&#x6570;&#x4F20;&#x9012;&#x7684;&#x4E8B;&#x60C5;&#x4E86;&#xFF0C;&#x5C06;Fresco&#x9700;&#x8981;&#x7684;&#x53C2;&#x6570;&#x5C01;&#x88C5;&#x6210;&#x94FE;&#x5F0F;&#x63A5;&#x53E3;&#x8C03;&#x7528;&#x5BF9;&#x5E94;&#x7684;Fresco&#x65B9;&#x6CD5;&#x8BBE;&#x7F6E;&#x5373;&#x53EF;&#xFF0C;&#x5176;&#x5B8C;&#x6574;&#x5B9E;&#x73B0;&#x6211;&#x5DF2;&#x7ECF;push&#x5230;github&#x4E0A;&#xFF0C;&#x4F20;&#x9001;&#x95E8;<a href="https://github.com/lizhangqu/FrescoLoader/blob/master/library/src/main/java/io/github/lizhangqu/fresco/FrescoLoader.java" target="_blank" rel="noopener">FrescoLoader.java</a></p><p>&#x8FD9;&#x91CC;&#x4E5F;&#x8D34;&#x4E00;&#x4E0B;&#x5B9E;&#x73B0;&#xFF0C;&#x65B9;&#x4FBF;&#x67E5;&#x770B;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Copyright 2017 &#x533A;&#x957F;. All rights reserved.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//Redistribution and use in source and binary forms, with or without</span></span><br><span class="line"><span class="comment">//modification, are permitted provided that the following conditions are</span></span><br><span class="line"><span class="comment">//met:</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//* Redistributions of source code must retain the above copyright</span></span><br><span class="line"><span class="comment">//notice, this list of conditions and the following disclaimer.</span></span><br><span class="line"><span class="comment">//* Redistributions in binary form must reproduce the above</span></span><br><span class="line"><span class="comment">//copyright notice, this list of conditions and the following disclaimer</span></span><br><span class="line"><span class="comment">//in the documentation and/or other materials provided with the</span></span><br><span class="line"><span class="comment">//distribution.</span></span><br><span class="line"><span class="comment">//* Neither the name of Google Inc. nor the names of its</span></span><br><span class="line"><span class="comment">//contributors may be used to endorse or promote products derived from</span></span><br><span class="line"><span class="comment">//this software without specific prior written permission.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS</span></span><br><span class="line"><span class="comment">//&quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT</span></span><br><span class="line"><span class="comment">//LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR</span></span><br><span class="line"><span class="comment">//A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT</span></span><br><span class="line"><span class="comment">//OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,</span></span><br><span class="line"><span class="comment">//SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT</span></span><br><span class="line"><span class="comment">//LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,</span></span><br><span class="line"><span class="comment">//DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY</span></span><br><span class="line"><span class="comment">//THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT</span></span><br><span class="line"><span class="comment">//(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE</span></span><br><span class="line"><span class="comment">//OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span></span><br><span class="line"><span class="keyword">package</span> io.github.lizhangqu.fresco;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.graphics.ColorFilter;</span><br><span class="line"><span class="keyword">import</span> android.graphics.Point;</span><br><span class="line"><span class="keyword">import</span> android.graphics.PointF;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.Drawable;</span><br><span class="line"><span class="keyword">import</span> android.graphics.drawable.StateListDrawable;</span><br><span class="line"><span class="keyword">import</span> android.net.Uri;</span><br><span class="line"><span class="keyword">import</span> android.os.Build;</span><br><span class="line"><span class="keyword">import</span> android.view.MotionEvent;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.facebook.common.util.UriUtil;</span><br><span class="line"><span class="keyword">import</span> com.facebook.drawee.backends.pipeline.Fresco;</span><br><span class="line"><span class="keyword">import</span> com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder;</span><br><span class="line"><span class="keyword">import</span> com.facebook.drawee.controller.ControllerListener;</span><br><span class="line"><span class="keyword">import</span> com.facebook.drawee.drawable.ScalingUtils;</span><br><span class="line"><span class="keyword">import</span> com.facebook.drawee.generic.GenericDraweeHierarchy;</span><br><span class="line"><span class="keyword">import</span> com.facebook.drawee.generic.GenericDraweeHierarchyBuilder;</span><br><span class="line"><span class="keyword">import</span> com.facebook.drawee.generic.RoundingParams;</span><br><span class="line"><span class="keyword">import</span> com.facebook.drawee.interfaces.DraweeController;</span><br><span class="line"><span class="keyword">import</span> com.facebook.drawee.interfaces.DraweeHierarchy;</span><br><span class="line"><span class="keyword">import</span> com.facebook.drawee.view.DraweeHolder;</span><br><span class="line"><span class="keyword">import</span> com.facebook.imagepipeline.common.ResizeOptions;</span><br><span class="line"><span class="keyword">import</span> com.facebook.imagepipeline.request.ImageRequest;</span><br><span class="line"><span class="keyword">import</span> com.facebook.imagepipeline.request.ImageRequestBuilder;</span><br><span class="line"><span class="keyword">import</span> com.facebook.imagepipeline.request.Postprocessor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * fresco&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x5668;, https://www.fresco-cn.org/docs/</span></span><br><span class="line"><span class="comment"> * see: https://www.fresco-cn.org/docs/writing-custom-views.html</span></span><br><span class="line"><span class="comment"> * if you use this FrescoLoader, please make sure you have not use the ImageView&apos;s tag</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lizhangqu</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span> V1.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2017-07-26 13:16</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FrescoLoader</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mCompatTemporaryDetach;</span><br><span class="line">    <span class="keyword">private</span> DraweeHolderDispatcher mDraweeHolderDispatcher;</span><br><span class="line">    <span class="keyword">private</span> DraweeHolder&lt;DraweeHierarchy&gt; mDraweeHolder;</span><br><span class="line">    <span class="keyword">private</span> Postprocessor mPostprocessor;</span><br><span class="line">    <span class="keyword">private</span> ControllerListener mControllerListener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Uri mUri;</span><br><span class="line">    <span class="keyword">private</span> Uri mLowerUri;</span><br><span class="line">    <span class="keyword">private</span> ResizeOptions mResizeOptions;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mDesiredAspectRatio;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mUseFixedWidth;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mAutoRotateEnabled = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mFadeDuration;</span><br><span class="line">    <span class="keyword">private</span> Drawable mPlaceholderDrawable;</span><br><span class="line">    <span class="keyword">private</span> Drawable mRetryDrawable;</span><br><span class="line">    <span class="keyword">private</span> Drawable mFailureDrawable;</span><br><span class="line">    <span class="keyword">private</span> Drawable mProgressBarDrawable;</span><br><span class="line">    <span class="keyword">private</span> Drawable mBackgroundDrawable;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#x7F29;&#x653E;&#x65B9;&#x5F0F;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scaleType &#x652F;&#x6301;&#x4EE5;&#x4E0B;&#x7C7B;&#x578B;&#x53C2;&#x6570;</span></span><br><span class="line"><span class="comment">     * center &#x5C45;&#x4E2D;&#x65E0;&#x7F29;&#x653E;</span></span><br><span class="line"><span class="comment">     * centerCrop &#x4FDD;&#x6301;&#x5BBD;&#x9AD8;&#x6BD4;&#x7F29;&#x5C0F;&#x6216;&#x653E;&#x5927;&#xFF0C;&#x4F7F;&#x5F97;&#x4E24;&#x8FB9;&#x90FD;&#x5927;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;&#x663E;&#x793A;&#x8FB9;&#x754C;&#x3002;&#x5C45;&#x4E2D;&#x663E;&#x793A;</span></span><br><span class="line"><span class="comment">     * focusCrop &#x540C;centerCrop, &#x4F46;&#x5C45;&#x4E2D;&#x70B9;&#x4E0D;&#x662F;&#x4E2D;&#x70B9;&#xFF0C;&#x800C;&#x662F;&#x6307;&#x5B9A;&#x7684;&#x67D0;&#x4E2A;&#x70B9;</span></span><br><span class="line"><span class="comment">     * centerInside &#x4F7F;&#x4E24;&#x8FB9;&#x90FD;&#x5728;&#x663E;&#x793A;&#x8FB9;&#x754C;&#x5185;&#xFF0C;&#x5C45;&#x4E2D;&#x663E;&#x793A;&#x3002;&#x5982;&#x679C;&#x56FE;&#x5C3A;&#x5BF8;&#x5927;&#x4E8E;&#x663E;&#x793A;&#x8FB9;&#x754C;&#xFF0C;&#x5219;&#x4FDD;&#x6301;&#x957F;&#x5BBD;&#x6BD4;&#x7F29;&#x5C0F;&#x56FE;&#x7247;&#x3002;</span></span><br><span class="line"><span class="comment">     * fitCenter &#x4FDD;&#x6301;&#x5BBD;&#x9AD8;&#x6BD4;&#xFF0C;&#x7F29;&#x5C0F;&#x6216;&#x8005;&#x653E;&#x5927;&#xFF0C;&#x4F7F;&#x5F97;&#x56FE;&#x7247;&#x5B8C;&#x5168;&#x663E;&#x793A;&#x5728;&#x663E;&#x793A;&#x8FB9;&#x754C;&#x5185;&#x3002;&#x5C45;&#x4E2D;&#x663E;&#x793A;</span></span><br><span class="line"><span class="comment">     * fitStart &#x540C;&#x4E0A;&#x3002;&#x4F46;&#x4E0D;&#x5C45;&#x4E2D;&#xFF0C;&#x548C;&#x663E;&#x793A;&#x8FB9;&#x754C;&#x5DE6;&#x4E0A;&#x5BF9;&#x9F50;</span></span><br><span class="line"><span class="comment">     * fitEnd &#x540C;fitCenter&#xFF0C; &#x4F46;&#x4E0D;&#x5C45;&#x4E2D;&#xFF0C;&#x548C;&#x663E;&#x793A;&#x8FB9;&#x754C;&#x53F3;&#x4E0B;&#x5BF9;&#x9F50;</span></span><br><span class="line"><span class="comment">     * fitXY &#x4E0D;&#x4FDD;&#x5B58;&#x5BBD;&#x9AD8;&#x6BD4;&#xFF0C;&#x586B;&#x5145;&#x6EE1;&#x663E;&#x793A;&#x8FB9;&#x754C;</span></span><br><span class="line"><span class="comment">     * none &#x5982;&#x8981;&#x4F7F;&#x7528;tile mode&#x663E;&#x793A;, &#x9700;&#x8981;&#x8BBE;&#x7F6E;&#x4E3A;none</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> ScalingUtils.ScaleType mPlaceholderScaleType;</span><br><span class="line">    <span class="keyword">private</span> ScalingUtils.ScaleType mRetryScaleType;</span><br><span class="line">    <span class="keyword">private</span> ScalingUtils.ScaleType mFailureScaleType;</span><br><span class="line">    <span class="keyword">private</span> ScalingUtils.ScaleType mProgressScaleType;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ScalingUtils.ScaleType mActualImageScaleType;</span><br><span class="line">    <span class="keyword">private</span> PointF mActualImageFocusPoint;</span><br><span class="line">    <span class="keyword">private</span> ColorFilter mActualImageColorFilter;</span><br><span class="line">    <span class="keyword">private</span> RoundingParams mRoundingParams;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;Drawable&gt; mOverlays;</span><br><span class="line">    <span class="keyword">private</span> Drawable mPressedStateOverlay;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mTapToRetryEnabled;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mAutoPlayAnimations;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mRetainImageOnFailure;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mProgressiveRenderingEnabled;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mLocalThumbnailPreviewsEnabled;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">FrescoLoader</span><span class="params">(Context context)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mContext = context.getApplicationContext();</span><br><span class="line">        <span class="keyword">this</span>.mDraweeHolderDispatcher = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.mDesiredAspectRatio = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">this</span>.mUseFixedWidth = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">this</span>.mFadeDuration = GenericDraweeHierarchyBuilder.DEFAULT_FADE_DURATION;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.mPlaceholderDrawable = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">this</span>.mPlaceholderScaleType = GenericDraweeHierarchyBuilder.DEFAULT_SCALE_TYPE;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.mRetryDrawable = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">this</span>.mRetryScaleType = GenericDraweeHierarchyBuilder.DEFAULT_SCALE_TYPE;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.mFailureDrawable = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">this</span>.mFailureScaleType = GenericDraweeHierarchyBuilder.DEFAULT_SCALE_TYPE;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.mProgressBarDrawable = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">this</span>.mProgressScaleType = GenericDraweeHierarchyBuilder.DEFAULT_SCALE_TYPE;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.mActualImageScaleType = GenericDraweeHierarchyBuilder.DEFAULT_ACTUAL_IMAGE_SCALE_TYPE;</span><br><span class="line">        <span class="keyword">this</span>.mActualImageFocusPoint = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">this</span>.mActualImageColorFilter = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.mBackgroundDrawable = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">this</span>.mOverlays = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">this</span>.mPressedStateOverlay = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">this</span>.mRoundingParams = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.mTapToRetryEnabled = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.mAutoPlayAnimations = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.mRetainImageOnFailure = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.mProgressiveRenderingEnabled = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.mLocalThumbnailPreviewsEnabled = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.mPostprocessor = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">this</span>.mControllerListener = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">this</span>.mDraweeHolder = <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasHierarchy</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (mDraweeHolder != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">return</span> mDraweeHolder.hasHierarchy();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DraweeHierarchy <span class="title">getHierarchy</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (mDraweeHolder != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">return</span> mDraweeHolder.getHierarchy();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DraweeController <span class="title">getController</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (mDraweeHolder != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">return</span> mDraweeHolder.getController();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasController</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (mDraweeHolder != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">return</span> mDraweeHolder.getController() != <span class="keyword">null</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//****************context start*******************</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> FrescoLoader <span class="title">with</span><span class="params">(Context context)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (context == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">&quot;context == null&quot;</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> FrescoLoader(context);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//****************context start*******************</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//****************load start*******************</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">load</span><span class="params">(Uri uri)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mUri = uri;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">load</span><span class="params">(String uri)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> load(Uri.parse(uri));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">load</span><span class="params">(File file)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> load(Uri.fromFile(file));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">load</span><span class="params">(<span class="keyword">int</span> resourceId)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> load(</span><br><span class="line">                <span class="keyword">new</span> Uri.Builder()</span><br><span class="line">                        .scheme(UriUtil.LOCAL_RESOURCE_SCHEME)</span><br><span class="line">                        .path(String.valueOf(resourceId))</span><br><span class="line">                        .build()</span><br><span class="line">        );</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//****************load end*******************</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//**************lowerLoad start**************</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">lowerLoad</span><span class="params">(Uri uri)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mLowerUri = uri;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">lowerLoad</span><span class="params">(String uri)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> lowerLoad(Uri.parse(uri));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">lowerLoad</span><span class="params">(File file)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> lowerLoad(Uri.fromFile(file));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">lowerLoad</span><span class="params">(<span class="keyword">int</span> resourceId)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> lowerLoad(</span><br><span class="line">                <span class="keyword">new</span> Uri.Builder()</span><br><span class="line">                        .scheme(UriUtil.LOCAL_RESOURCE_SCHEME)</span><br><span class="line">                        .path(String.valueOf(resourceId))</span><br><span class="line">                        .build()</span><br><span class="line">        );</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//**************lowerLoad end****************</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//**************drawable and scaleType start****************</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">placeholder</span><span class="params">(Drawable placeholderDrawable)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mPlaceholderDrawable = placeholderDrawable;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">placeholder</span><span class="params">(<span class="keyword">int</span> placeholderResId)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> placeholder(mContext.getResources().getDrawable(placeholderResId));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">placeholderScaleType</span><span class="params">(ImageView.ScaleType scaleType)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mPlaceholderScaleType = convertToFrescoScaleType(scaleType, GenericDraweeHierarchyBuilder.DEFAULT_SCALE_TYPE);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">retry</span><span class="params">(Drawable retryDrawable)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mRetryDrawable = retryDrawable;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">retry</span><span class="params">(<span class="keyword">int</span> retryResId)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> retry(mContext.getResources().getDrawable(retryResId));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">retryScaleType</span><span class="params">(ImageView.ScaleType scaleType)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mRetryScaleType = convertToFrescoScaleType(scaleType, GenericDraweeHierarchyBuilder.DEFAULT_SCALE_TYPE);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">failure</span><span class="params">(Drawable failureDrawable)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mFailureDrawable = failureDrawable;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">failure</span><span class="params">(<span class="keyword">int</span> failureResId)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> failure(mContext.getResources().getDrawable(failureResId));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">failureScaleType</span><span class="params">(ImageView.ScaleType scaleType)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mFailureScaleType = convertToFrescoScaleType(scaleType, GenericDraweeHierarchyBuilder.DEFAULT_SCALE_TYPE);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">progressBar</span><span class="params">(Drawable placeholderDrawable)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mProgressBarDrawable = placeholderDrawable;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">progressBar</span><span class="params">(<span class="keyword">int</span> progressResId)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> progressBar(mContext.getResources().getDrawable(progressResId));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">progressBarScaleType</span><span class="params">(ImageView.ScaleType scaleType)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mPlaceholderScaleType = convertToFrescoScaleType(scaleType, GenericDraweeHierarchyBuilder.DEFAULT_SCALE_TYPE);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">backgroundDrawable</span><span class="params">(Drawable backgroundDrawable)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mBackgroundDrawable = backgroundDrawable;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">backgroundDrawable</span><span class="params">(<span class="keyword">int</span> backgroundResId)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> backgroundDrawable(mContext.getResources().getDrawable(backgroundResId));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">actualScaleType</span><span class="params">(ImageView.ScaleType scaleType)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mActualImageScaleType = convertToFrescoScaleType(scaleType, GenericDraweeHierarchyBuilder.DEFAULT_ACTUAL_IMAGE_SCALE_TYPE);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">focusPoint</span><span class="params">(PointF focusPoint)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mActualImageFocusPoint = focusPoint;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//**************drawable and scaleType end****************</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//**************overlays start****************</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">overlays</span><span class="params">(List&lt;Drawable&gt; overlays)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mOverlays = overlays;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">overlay</span><span class="params">(Drawable overlay)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> overlays(overlay == <span class="keyword">null</span> ? <span class="keyword">null</span> : Collections.singletonList(overlay));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">overlay</span><span class="params">(<span class="keyword">int</span> resId)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> overlay(mContext.getResources().getDrawable(resId));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">pressedStateOverlay</span><span class="params">(Drawable drawable)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (drawable == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">this</span>.mPressedStateOverlay = <span class="keyword">null</span>;</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            StateListDrawable stateListDrawable = <span class="keyword">new</span> StateListDrawable();</span><br><span class="line">            stateListDrawable.addState(<span class="keyword">new</span> <span class="keyword">int</span>[]{android.R.attr.state_pressed}, drawable);</span><br><span class="line">            <span class="keyword">this</span>.mPressedStateOverlay = stateListDrawable;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">pressedStateOverlay</span><span class="params">(<span class="keyword">int</span> resId)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> pressedStateOverlay(mContext.getResources().getDrawable(resId));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//**************overlays end****************</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//**************colorFilter start****************</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">colorFilter</span><span class="params">(ColorFilter colorFilter)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mActualImageColorFilter = colorFilter;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//**************colorFilter end****************</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//***************RoundingParams start****************</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">cornersRadius</span><span class="params">(<span class="keyword">int</span> radius)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.mRoundingParams == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">this</span>.mRoundingParams = <span class="keyword">new</span> RoundingParams();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">this</span>.mRoundingParams.setCornersRadius(radius);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">border</span><span class="params">(<span class="keyword">int</span> borderColor, <span class="keyword">float</span> borderWidth)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.mRoundingParams == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">this</span>.mRoundingParams = <span class="keyword">new</span> RoundingParams();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">this</span>.mRoundingParams.setBorder(borderColor, borderWidth);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">borderColor</span><span class="params">(<span class="keyword">int</span> borderColor)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.mRoundingParams == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">this</span>.mRoundingParams = <span class="keyword">new</span> RoundingParams();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">this</span>.mRoundingParams.setBorderColor(borderColor);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">borderWidth</span><span class="params">(<span class="keyword">float</span> borderWidth)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.mRoundingParams == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">this</span>.mRoundingParams = <span class="keyword">new</span> RoundingParams();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">this</span>.mRoundingParams.setBorderWidth(borderWidth);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">roundAsCircle</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.mRoundingParams == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">this</span>.mRoundingParams = <span class="keyword">new</span> RoundingParams();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">this</span>.mRoundingParams.setRoundAsCircle(<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">cornersRadii</span><span class="params">(<span class="keyword">float</span> topLeft, <span class="keyword">float</span> topRight, <span class="keyword">float</span> bottomRight, <span class="keyword">float</span> bottomLeft)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.mRoundingParams == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">this</span>.mRoundingParams = <span class="keyword">new</span> RoundingParams();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">this</span>.mRoundingParams.setCornersRadii(topLeft, topRight, bottomRight, bottomLeft);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">cornersRadii</span><span class="params">(<span class="keyword">float</span>[] radii)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.mRoundingParams == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">this</span>.mRoundingParams = <span class="keyword">new</span> RoundingParams();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">this</span>.mRoundingParams.setCornersRadii(radii);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">overlayColor</span><span class="params">(<span class="keyword">int</span> overlayColor)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.mRoundingParams == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">this</span>.mRoundingParams = <span class="keyword">new</span> RoundingParams();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">this</span>.mRoundingParams.setOverlayColor(overlayColor);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">padding</span><span class="params">(<span class="keyword">float</span> padding)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.mRoundingParams == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">this</span>.mRoundingParams = <span class="keyword">new</span> RoundingParams();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">this</span>.mRoundingParams.setPadding(padding);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">roundingMethodWithOverlayColor</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.mRoundingParams == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">this</span>.mRoundingParams = <span class="keyword">new</span> RoundingParams();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">this</span>.mRoundingParams.setRoundingMethod(RoundingParams.RoundingMethod.OVERLAY_COLOR);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">roundingMethodWithBitmapOnly</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.mRoundingParams == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">this</span>.mRoundingParams = <span class="keyword">new</span> RoundingParams();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">this</span>.mRoundingParams.setRoundingMethod(RoundingParams.RoundingMethod.BITMAP_ONLY);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//***************RoundingParams end****************</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//***************resize start****************</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">resize</span><span class="params">(Point point)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mResizeOptions = <span class="keyword">new</span> ResizeOptions(point.x, point.y);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">resize</span><span class="params">(<span class="keyword">int</span> targetWidth, <span class="keyword">int</span> targetHeight)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mResizeOptions = <span class="keyword">new</span> ResizeOptions(targetWidth, targetHeight);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//***************resize end****************</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//***************fadeDuration start****************</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">fadeDuration</span><span class="params">(<span class="keyword">int</span> fadeDuration)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mFadeDuration = fadeDuration;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//***************fadeDuration end****************</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//***************desiredAspectRatio start****************</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">desiredAspectRatioWithWidth</span><span class="params">(<span class="keyword">float</span> desiredAspectRatio)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mUseFixedWidth = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">this</span>.mDesiredAspectRatio = desiredAspectRatio;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">desiredAspectRatioWithHeight</span><span class="params">(<span class="keyword">float</span> desiredAspectRatio)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mUseFixedWidth = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">this</span>.mDesiredAspectRatio = desiredAspectRatio;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//***************desiredAspectRatio end****************</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//***************boolean start****************</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">autoRotateEnabled</span><span class="params">(<span class="keyword">boolean</span> enabled)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mAutoRotateEnabled = enabled;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">autoPlayAnimations</span><span class="params">(<span class="keyword">boolean</span> enabled)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mAutoPlayAnimations = enabled;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">retainImageOnFailure</span><span class="params">(<span class="keyword">boolean</span> enabled)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mRetainImageOnFailure = enabled;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">progressiveRenderingEnabled</span><span class="params">(<span class="keyword">boolean</span> enabled)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mProgressiveRenderingEnabled = enabled;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">localThumbnailPreviewsEnabled</span><span class="params">(<span class="keyword">boolean</span> enabled)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mLocalThumbnailPreviewsEnabled = enabled;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">tapToRetryEnabled</span><span class="params">(<span class="keyword">boolean</span> tapToRetryEnabled)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mTapToRetryEnabled = tapToRetryEnabled;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//***************boolean end****************</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//use fresco class method</span></span><br><span class="line">    <span class="comment">//you&apos;d better not use</span></span><br><span class="line">    <span class="meta">@Deprecated</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">postProcessor</span><span class="params">(Postprocessor postProcessor)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mPostprocessor = postProcessor;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//you&apos;d better not use</span></span><br><span class="line">    <span class="meta">@Deprecated</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">controllerListener</span><span class="params">(ControllerListener controllerListener)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mControllerListener = controllerListener;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &#x517C;&#x5BB9;listview&#x7684;onStartTemporaryDetach&#x548C;onFinishTemporaryDetach</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> compatTemporaryDetach</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> FrescoLoader <span class="title">compatTemporaryDetach</span><span class="params">(<span class="keyword">boolean</span> compatTemporaryDetach)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.mCompatTemporaryDetach = compatTemporaryDetach;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//load into an ImageView</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">into</span><span class="params">(ImageView targetView)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (targetView == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (mUri == <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">//we should use tag</span></span><br><span class="line">        <span class="keyword">if</span> (mDraweeHolder == <span class="keyword">null</span>) {</span><br><span class="line">            Object tag = targetView.getTag();</span><br><span class="line">            <span class="keyword">if</span> (tag <span class="keyword">instanceof</span> DraweeHolder) {</span><br><span class="line">                mDraweeHolder = (DraweeHolder&lt;DraweeHierarchy&gt;) tag;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">if</span> (mDraweeHolder == <span class="keyword">null</span>) {</span><br><span class="line">            mDraweeHolder = DraweeHolder.create(<span class="keyword">null</span>, targetView.getContext());</span><br><span class="line">            <span class="keyword">if</span> (mDraweeHolderDispatcher == <span class="keyword">null</span>) {</span><br><span class="line">                mDraweeHolderDispatcher = <span class="keyword">new</span> DraweeHolderDispatcher();</span><br><span class="line">            }</span><br><span class="line">            GenericDraweeHierarchy hierarchy = <span class="keyword">new</span> GenericDraweeHierarchyBuilder(targetView.getResources())</span><br><span class="line">                    .setPlaceholderImage(mPlaceholderDrawable)</span><br><span class="line">                    .setPlaceholderImageScaleType(mPlaceholderScaleType)</span><br><span class="line">                    .setFailureImage(mFailureDrawable)</span><br><span class="line">                    .setFailureImageScaleType(mFailureScaleType)</span><br><span class="line">                    .setProgressBarImage(mProgressBarDrawable)</span><br><span class="line">                    .setProgressBarImageScaleType(mProgressScaleType)</span><br><span class="line">                    .setRetryImage(mRetryDrawable)</span><br><span class="line">                    .setRetryImageScaleType(mRetryScaleType)</span><br><span class="line">                    .setFadeDuration(mFadeDuration)</span><br><span class="line">                    .setActualImageFocusPoint(mActualImageFocusPoint)</span><br><span class="line">                    .setActualImageColorFilter(mActualImageColorFilter)</span><br><span class="line">                    .setActualImageScaleType(mActualImageScaleType)</span><br><span class="line">                    .setBackground(mBackgroundDrawable)</span><br><span class="line">                    .setOverlays(mOverlays)</span><br><span class="line">                    .setPressedStateOverlay(mPressedStateOverlay)</span><br><span class="line">                    .setRoundingParams(mRoundingParams)</span><br><span class="line">                    .build();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//set hierarchy</span></span><br><span class="line">            mDraweeHolder.setHierarchy(hierarchy);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//image request</span></span><br><span class="line">            ImageRequest request = ImageRequestBuilder.newBuilderWithSource(mUri)</span><br><span class="line">                    .setAutoRotateEnabled(mAutoRotateEnabled)</span><br><span class="line">                    .setLocalThumbnailPreviewsEnabled(mLocalThumbnailPreviewsEnabled)</span><br><span class="line">                    .setPostprocessor(mPostprocessor)</span><br><span class="line">                    .setProgressiveRenderingEnabled(mProgressiveRenderingEnabled)</span><br><span class="line">                    .setResizeOptions(mResizeOptions)</span><br><span class="line">                    .build();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//controller</span></span><br><span class="line">            PipelineDraweeControllerBuilder controllerBuilder = Fresco.newDraweeControllerBuilder()</span><br><span class="line">                    .setAutoPlayAnimations(mAutoPlayAnimations)</span><br><span class="line">                    .setControllerListener(mControllerListener)</span><br><span class="line">                    .setImageRequest(request)</span><br><span class="line">                    .setOldController(mDraweeHolder.getController())</span><br><span class="line">                    .setRetainImageOnFailure(mRetainImageOnFailure)</span><br><span class="line">                    .setTapToRetryEnabled(mTapToRetryEnabled);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//if set the mLowerUri, then pass this param</span></span><br><span class="line">            <span class="keyword">if</span> (mLowerUri != <span class="keyword">null</span>) {</span><br><span class="line">                controllerBuilder.setLowResImageRequest(ImageRequest.fromUri(mLowerUri));</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//build controller</span></span><br><span class="line">            DraweeController draweeController = controllerBuilder.build();</span><br><span class="line">            <span class="comment">//set controller</span></span><br><span class="line">            mDraweeHolder.setController(draweeController);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (mCompatTemporaryDetach) {</span><br><span class="line">                ViewCompat.addOnAttachStateChangeListener(targetView, mDraweeHolderDispatcher);</span><br><span class="line">            } <span class="keyword">else</span> {</span><br><span class="line">                <span class="comment">//if targetView is instanceof TemporaryDetachListener, set TemporaryDetachListener</span></span><br><span class="line">                <span class="comment">//you should override onSaveTemporaryDetachListener(TemporaryDetachListener l) to holder the param TemporaryDetachListener.</span></span><br><span class="line">                <span class="comment">//also override method onStartTemporaryDetach() and onFinishTemporaryDetach() to call the holder&apos;s onStartTemporaryDetach() and onFinishTemporaryDetach()</span></span><br><span class="line">                <span class="keyword">if</span> (targetView <span class="keyword">instanceof</span> TemporaryDetachListener) {</span><br><span class="line">                    ((TemporaryDetachListener) targetView).onSaveTemporaryDetachListener(mDraweeHolderDispatcher);</span><br><span class="line">                }</span><br><span class="line">                <span class="comment">//if is already attached, call method onViewAttachedToWindow.</span></span><br><span class="line">                <span class="keyword">if</span> (isAttachedToWindow(targetView)) {</span><br><span class="line">                    mDraweeHolderDispatcher.onViewAttachedToWindow(targetView);</span><br><span class="line">                }</span><br><span class="line">                <span class="comment">//add attach state change listener</span></span><br><span class="line">                targetView.addOnAttachStateChangeListener(mDraweeHolderDispatcher);</span><br><span class="line">            }</span><br><span class="line">            targetView.setOnTouchListener(mDraweeHolderDispatcher);</span><br><span class="line">            targetView.setTag(mDraweeHolder);</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            GenericDraweeHierarchy hierarchy = <span class="keyword">new</span> GenericDraweeHierarchyBuilder(targetView.getResources())</span><br><span class="line">                    .setPlaceholderImage(mPlaceholderDrawable)</span><br><span class="line">                    .setPlaceholderImageScaleType(mPlaceholderScaleType)</span><br><span class="line">                    .setFailureImage(mFailureDrawable)</span><br><span class="line">                    .setFailureImageScaleType(mFailureScaleType)</span><br><span class="line">                    .setProgressBarImage(mProgressBarDrawable)</span><br><span class="line">                    .setProgressBarImageScaleType(mProgressScaleType)</span><br><span class="line">                    .setRetryImage(mRetryDrawable)</span><br><span class="line">                    .setRetryImageScaleType(mRetryScaleType)</span><br><span class="line">                    .setFadeDuration(mFadeDuration)</span><br><span class="line">                    .setActualImageFocusPoint(mActualImageFocusPoint)</span><br><span class="line">                    .setActualImageColorFilter(mActualImageColorFilter)</span><br><span class="line">                    .setActualImageScaleType(mActualImageScaleType)</span><br><span class="line">                    .setBackground(mBackgroundDrawable)</span><br><span class="line">                    .setOverlays(mOverlays)</span><br><span class="line">                    .setPressedStateOverlay(mPressedStateOverlay)</span><br><span class="line">                    .setRoundingParams(mRoundingParams)</span><br><span class="line">                    .build();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//set hierarchy</span></span><br><span class="line">            mDraweeHolder.setHierarchy(hierarchy);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//image request</span></span><br><span class="line">            ImageRequest request = ImageRequestBuilder.newBuilderWithSource(mUri)</span><br><span class="line">                    .setAutoRotateEnabled(mAutoRotateEnabled)</span><br><span class="line">                    .setLocalThumbnailPreviewsEnabled(mLocalThumbnailPreviewsEnabled)</span><br><span class="line">                    .setPostprocessor(mPostprocessor)</span><br><span class="line">                    .setProgressiveRenderingEnabled(mProgressiveRenderingEnabled)</span><br><span class="line">                    .setResizeOptions(mResizeOptions)</span><br><span class="line">                    .build();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//controller</span></span><br><span class="line">            PipelineDraweeControllerBuilder controllerBuilder = Fresco.newDraweeControllerBuilder()</span><br><span class="line">                    .setAutoPlayAnimations(mAutoPlayAnimations)</span><br><span class="line">                    .setControllerListener(mControllerListener)</span><br><span class="line">                    .setImageRequest(request)</span><br><span class="line">                    .setOldController(mDraweeHolder.getController())</span><br><span class="line">                    .setRetainImageOnFailure(mRetainImageOnFailure)</span><br><span class="line">                    .setTapToRetryEnabled(mTapToRetryEnabled);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">//if set the mLowerUri, then pass this param</span></span><br><span class="line">            <span class="keyword">if</span> (mLowerUri != <span class="keyword">null</span>) {</span><br><span class="line">                controllerBuilder.setLowResImageRequest(ImageRequest.fromUri(mLowerUri));</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">//build controller</span></span><br><span class="line">            DraweeController draweeController = controllerBuilder.build();</span><br><span class="line">            <span class="comment">//set controller</span></span><br><span class="line">            mDraweeHolder.setController(draweeController);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">//compat for desiredAspectRatio</span></span><br><span class="line">        <span class="keyword">if</span> (mDesiredAspectRatio != <span class="number">0</span>) {</span><br><span class="line">            ViewGroup.LayoutParams layoutParams = targetView.getLayoutParams();</span><br><span class="line">            <span class="keyword">if</span> (layoutParams != <span class="keyword">null</span>) {</span><br><span class="line">                <span class="keyword">int</span> width = layoutParams.width;</span><br><span class="line">                <span class="keyword">int</span> height = layoutParams.height;</span><br><span class="line">                <span class="keyword">int</span> newWidth = -<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> newHeight = -<span class="number">1</span>;</span><br><span class="line">                <span class="comment">//mDesiredAspectRatio= width/height;</span></span><br><span class="line">                <span class="keyword">if</span> (mUseFixedWidth) {</span><br><span class="line">                    <span class="comment">//with must &gt; 0 &amp; height=0</span></span><br><span class="line">                    <span class="keyword">if</span> (width &gt; <span class="number">0</span> &amp;&amp; height == <span class="number">0</span>) {</span><br><span class="line">                        newWidth = width;</span><br><span class="line">                        newHeight = (<span class="keyword">int</span>) (width * <span class="number">1.0</span> / mDesiredAspectRatio + <span class="number">0.5</span>);</span><br><span class="line">                    }</span><br><span class="line">                } <span class="keyword">else</span> {</span><br><span class="line">                    <span class="comment">//height must &gt; 0 &amp; width=0</span></span><br><span class="line">                    <span class="keyword">if</span> (height &gt; <span class="number">0</span> &amp;&amp; width == <span class="number">0</span>) {</span><br><span class="line">                        newHeight = height;</span><br><span class="line">                        newWidth = (<span class="keyword">int</span>) (height * mDesiredAspectRatio + <span class="number">0.5</span>);</span><br><span class="line">                    }</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">if</span> (newWidth != -<span class="number">1</span> &amp;&amp; newHeight != -<span class="number">1</span>) {</span><br><span class="line">                    layoutParams.width = newWidth;</span><br><span class="line">                    layoutParams.height = newHeight;</span><br><span class="line">                    targetView.requestLayout();</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">//set image drawable</span></span><br><span class="line">        targetView.setImageDrawable(mDraweeHolder.getTopLevelDrawable());</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isAttachedToWindow</span><span class="params">(View view)</span> </span>{</span><br><span class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= <span class="number">19</span>) {</span><br><span class="line">            <span class="keyword">return</span> view.isAttachedToWindow();</span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            <span class="keyword">return</span> view.getWindowToken() != <span class="keyword">null</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ScalingUtils.<span class="function">ScaleType <span class="title">convertToFrescoScaleType</span><span class="params">(ImageView.ScaleType scaleType, ScalingUtils.ScaleType defaultScaleType)</span> </span>{</span><br><span class="line">        <span class="keyword">switch</span> (scaleType) {</span><br><span class="line">            <span class="keyword">case</span> CENTER:</span><br><span class="line">                <span class="keyword">return</span> ScalingUtils.ScaleType.CENTER;</span><br><span class="line">            <span class="keyword">case</span> CENTER_CROP:</span><br><span class="line">                <span class="keyword">return</span> ScalingUtils.ScaleType.CENTER_CROP;</span><br><span class="line">            <span class="keyword">case</span> CENTER_INSIDE:</span><br><span class="line">                <span class="keyword">return</span> ScalingUtils.ScaleType.CENTER_INSIDE;</span><br><span class="line">            <span class="keyword">case</span> FIT_CENTER:</span><br><span class="line">                <span class="keyword">return</span> ScalingUtils.ScaleType.FIT_CENTER;</span><br><span class="line">            <span class="keyword">case</span> FIT_START:</span><br><span class="line">                <span class="keyword">return</span> ScalingUtils.ScaleType.FIT_START;</span><br><span class="line">            <span class="keyword">case</span> FIT_END:</span><br><span class="line">                <span class="keyword">return</span> ScalingUtils.ScaleType.FIT_END;</span><br><span class="line">            <span class="keyword">case</span> FIT_XY:</span><br><span class="line">                <span class="keyword">return</span> ScalingUtils.ScaleType.FIT_XY;</span><br><span class="line">            <span class="keyword">case</span> MATRIX:</span><br><span class="line">                <span class="comment">//NOTE this case</span></span><br><span class="line">                <span class="comment">//you should set FocusPoint to make sentence</span></span><br><span class="line">                <span class="keyword">return</span> ScalingUtils.ScaleType.FOCUS_CROP;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> defaultScaleType;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//if needed, let&apos;s your image view implement this interface</span></span><br><span class="line">    <span class="comment">//also it&apos;s not must be required to implement this interface</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">TemporaryDetachListener</span> </span>{</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onSaveTemporaryDetachListener</span><span class="params">(TemporaryDetachListener listener)</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onStartTemporaryDetach</span><span class="params">(View view)</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onFinishTemporaryDetach</span><span class="params">(View view)</span></span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//DraweeHolder event dispatch</span></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">DraweeHolderDispatcher</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnAttachStateChangeListener</span>, <span class="title">View</span>.<span class="title">OnTouchListener</span>, <span class="title">TemporaryDetachListener</span> </span>{</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onViewAttachedToWindow</span><span class="params">(View v)</span> </span>{</span><br><span class="line">            <span class="keyword">if</span> (mDraweeHolder != <span class="keyword">null</span>) {</span><br><span class="line">                mDraweeHolder.onAttach();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onViewDetachedFromWindow</span><span class="params">(View v)</span> </span>{</span><br><span class="line">            <span class="keyword">if</span> (mDraweeHolder != <span class="keyword">null</span>) {</span><br><span class="line">                mDraweeHolder.onDetach();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSaveTemporaryDetachListener</span><span class="params">(TemporaryDetachListener listener)</span> </span>{</span><br><span class="line">            <span class="comment">//empty</span></span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStartTemporaryDetach</span><span class="params">(View view)</span> </span>{</span><br><span class="line">            <span class="keyword">if</span> (mDraweeHolder != <span class="keyword">null</span>) {</span><br><span class="line">                mDraweeHolder.onDetach();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFinishTemporaryDetach</span><span class="params">(View view)</span> </span>{</span><br><span class="line">            <span class="keyword">if</span> (mDraweeHolder != <span class="keyword">null</span>) {</span><br><span class="line">                mDraweeHolder.onAttach();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouch</span><span class="params">(View v, MotionEvent event)</span> </span>{</span><br><span class="line">            <span class="keyword">if</span> (mDraweeHolder != <span class="keyword">null</span>) {</span><br><span class="line">                <span class="keyword">if</span> (mDraweeHolder.onTouchEvent(event)) {</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5751;"><a href="#&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5751;" class="headerlink" title="&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5751;"></a>&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5751;</h3><p>&#x5F53;&#x4F60;&#x770B;&#x5230;&#x8FD9;&#x91CC;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5176;&#x5B9E;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x5751;&#xFF0C;&#x5C31;&#x662F;&#x867D;&#x7136;DraweeHolder&#x4E00;&#x4E2A;View&#x53EA;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#xFF0C;&#x4F46;&#x662F;GenericDraweeHierarchy&#xFF0C;ImageRequest&#xFF0C;PipelineDraweeControllerBuilder&#x7B49;&#x5BF9;&#x8C61;&#x8FD8;&#x662F;&#x591A;&#x6B21;&#x521B;&#x5EFA;&#x4E86;&#xFF0C;&#x5176;&#x5B9E;&#x8FD9;&#x4E9B;&#x4E5F;&#x662F;&#x53EF;&#x4EE5;&#x590D;&#x7528;&#x7684;&#xFF0C;&#x8FD9;&#x91CC;&#x5C31;&#x59D1;&#x4E14;&#x5148;&#x4E0D;&#x590D;&#x7528;&#x4E86;</p><h3 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h3><ul><li>&#x727A;&#x7272;&#x4E86;View&#x7684;Tag&#x76F8;&#x5173;&#x529F;&#x80FD;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x7528;&#x4E86;&#xFF0C;&#x5FC5;&#x987B;&#x4F7F;&#x7528;&#x5176;&#x4ED6;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#x4F60;&#x7684;Tag&#x76F8;&#x5173;&#x529F;&#x80FD;&#xFF08;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x4F7F;&#x7528;Tag&#xFF0C;&#x90A3;&#x66F4;&#x597D;&#x4E86;&#xFF09;</li><li>&#x727A;&#x7272;&#x4E86;View&#x7684;OnTouchListener&#x4E8B;&#x4EF6;&#xFF08;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x4F7F;&#x7528;OnTouchListener&#xFF0C;&#x90A3;&#x66F4;&#x597D;&#x4E86;&#xFF09;</li><li>GenericDraweeHierarchy&#xFF0C;ImageRequest&#xFF0C;PipelineDraweeControllerBuilder&#x7B49;&#x5BF9;&#x8C61;&#x7684;&#x591A;&#x6B21;&#x521B;&#x5EFA;&#x95EE;&#x9898;&#xFF08;&#x53EF;&#x7EE7;&#x7EED;&#x4F18;&#x5316;&#x4EE3;&#x7801;&#xFF0C;&#x53EA;&#x521B;&#x5EFA;&#x4E00;&#x6B21;&#xFF0C;&#x53CD;&#x6B63;&#x6211;&#x662F;&#x61D2;&#x5F97;&#x4F18;&#x5316;&#x4E86;&#xFF09;</li><li>onStartTemporaryDetach&#x548C;onFinishTemporaryDetach&#x4E8B;&#x4EF6;&#x5916;&#x53D1;&#x7684;&#x63A5;&#x53E3;&#x4FB5;&#x5165;&#x6027;&#xFF08;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x4F7F;&#x7528;AbstractListView&#x5176;&#x5B50;&#x7C7B;&#x5219;&#x53EF;&#x4E0D;&#x5B9E;&#x73B0;&#xFF0C;&#x5426;&#x5219;&#x6700;&#x597D;&#x5C06;item&#x4E2D;&#x4F7F;&#x7528;&#x5230;&#x7684;ImageView&#x5B9E;&#x73B0;TemporaryDetachListener&#x63A5;&#x53E3;&#xFF0C;&#x8FD9;&#x4E0D;&#x5F97;&#x4E0D;&#x52A0;&#x5165;&#x4E00;&#x5C42;&#x63A5;&#x53E3;&#x5B9E;&#x73B0;&#x5173;&#x7CFB;&#xFF09;&#xFF0C;<strong>&#x53EF;&#x4F7F;&#x7528;mCompatTemporaryDetach&#x53C2;&#x6570;&#x4E3B;&#x52A8;&#x5F00;&#x542F;&#x9ED1;&#x79D1;&#x6280;&#xFF0C;&#x8FD9;&#x6837;&#x4E5F;&#x5C31;&#x4E0D;&#x7528;&#x4FB5;&#x5165;&#x4E86;</strong></li></ul><p>&#x5982;&#x679C;&#x4F60;&#x63A5;&#x53D7;&#x5F97;&#x4E86;&#x4EE5;&#x4E0A;&#x51E0;&#x70B9;&#x95EE;&#x9898;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x653E;&#x5FC3;&#x4F7F;&#x7528;&#x5427;&#xFF0C;&#x5426;&#x5219;&#xFF0C;&#x8FD8;&#x662F;&#x8001;&#x8001;&#x5B9E;&#x5B9E;&#x7684;&#x7528;&#x6700;&#x5F00;&#x5934;&#x63D0;&#x5230;&#x7684;&#x7EE7;&#x627F;&#x5173;&#x7CFB;&#x5F0F;&#x53BB;&#x5B9E;&#x73B0;&#x3002;&#x4E0D;&#x8FC7;&#x8FD9;&#x5BF9;&#x4E8E;&#x5B9E;&#x73B0;&#x77E5;&#x4E4E;&#x56FE;&#x7247;&#x9009;&#x62E9;&#x5668;&#x7684;FrescoEngine&#x5DF2;&#x7ECF;&#x7EF0;&#x7EF0;&#x6709;&#x4F59;&#x4E86;&#x3002;</p><p>&#x6700;&#x540E;&#x4F7F;&#x7528;FrescoLoader</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">FrescoLoader.with(view.getContext())</span><br><span class="line">            .progressiveRenderingEnabled(<span class="keyword">true</span>)</span><br><span class="line">            .fadeDuration(<span class="number">2000</span>)</span><br><span class="line">            .autoPlayAnimations(<span class="keyword">true</span>)</span><br><span class="line">            .autoRotateEnabled(<span class="keyword">true</span>)</span><br><span class="line">            .retainImageOnFailure(<span class="keyword">true</span>)</span><br><span class="line">            .desiredAspectRatioWithHeight(<span class="number">0.5F</span>)</span><br><span class="line">            .tapToRetryEnabled(<span class="keyword">true</span>)</span><br><span class="line">            .focusPoint(<span class="keyword">new</span> PointF(<span class="number">30</span>, <span class="number">50</span>))</span><br><span class="line">            .resize(<span class="number">400</span>, <span class="number">400</span>)</span><br><span class="line">            .fadeDuration(<span class="number">1000</span>)</span><br><span class="line">            .border(Color.RED, <span class="number">10</span>)</span><br><span class="line">            .borderColor(Color.RED)</span><br><span class="line">            .borderWidth(<span class="number">10</span>)</span><br><span class="line">            .cornersRadii(<span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>, <span class="number">10</span>)</span><br><span class="line">            .cornersRadius(<span class="number">10</span>)</span><br><span class="line">            .roundAsCircle()</span><br><span class="line">            .backgroundDrawable(ContextCompat.getDrawable(getApplicationContext(), R.mipmap.bg_zero))</span><br><span class="line">            .progressBar(ContextCompat.getDrawable(getApplicationContext(), R.mipmap.icon_progress_bar))</span><br><span class="line">            .progressBarScaleType(ImageView.ScaleType.CENTER_CROP)</span><br><span class="line">            .placeholder(ContextCompat.getDrawable(getApplicationContext(), R.mipmap.icon_placeholder))</span><br><span class="line">            .placeholderScaleType(ImageView.ScaleType.CENTER_CROP)</span><br><span class="line">            .failure(ContextCompat.getDrawable(getApplicationContext(), R.mipmap.icon_failure))</span><br><span class="line">            .failureScaleType(ImageView.ScaleType.CENTER_CROP)</span><br><span class="line">            .retry(ContextCompat.getDrawable(getApplicationContext(), R.mipmap.icon_retry))</span><br><span class="line">            .retryScaleType(ImageView.ScaleType.CENTER_CROP)</span><br><span class="line">            .colorFilter(<span class="keyword">new</span> PorterDuffColorFilter(Color.RED, PorterDuff.Mode.DARKEN))</span><br><span class="line">            .overlays(overlays)</span><br><span class="line">            .pressedStateOverlay(ContextCompat.getDrawable(getApplicationContext(), R.mipmap.bg_one))</span><br><span class="line">            .actualScaleType(ImageView.ScaleType.CENTER_CROP)</span><br><span class="line">            .lowerLoad(R.mipmap.ic_launcher_round)</span><br><span class="line">            .load(<span class="string">&quot;http://desk.fd.zol-img.com.cn/t_s960x600c5/g5/M00/0D/01/ChMkJlgq0z-IC78PAA1UbwykJUgAAXxIwMAwQcADVSH340.jpg&quot;</span>)</span><br><span class="line">            .localThumbnailPreviewsEnabled(<span class="keyword">true</span>)</span><br><span class="line">            .into(image);</span><br></pre></td></tr></table></figure><p>&#x77E5;&#x4E4E;&#x56FE;&#x7247;&#x9009;&#x62E9;&#x5668;Fresco&#x7684;&#x5B9E;&#x73B0;&#x4E5F;&#x5C31;&#x5F88;&#x7B80;&#x5355;&#x4E86;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FrescoEngine</span> <span class="keyword">implements</span> <span class="title">ImageEngine</span> </span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadThumbnail</span><span class="params">(Context context, <span class="keyword">int</span> resize, Drawable placeholder, ImageView imageView, Uri uri)</span> </span>{</span><br><span class="line">        FrescoLoader.with(context)</span><br><span class="line">                .placeholder(placeholder)</span><br><span class="line">                .resize(resize, resize)</span><br><span class="line">                .progressiveRenderingEnabled(<span class="keyword">true</span>)</span><br><span class="line">                .load(uri)</span><br><span class="line">                .fadeDuration(<span class="number">300</span>)</span><br><span class="line">                .actualScaleType(ImageView.ScaleType.CENTER_CROP)</span><br><span class="line">                .into(imageView);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadGifThumbnail</span><span class="params">(Context context, <span class="keyword">int</span> resize, Drawable placeholder, ImageView imageView, Uri uri)</span> </span>{</span><br><span class="line">        FrescoLoader.with(context)</span><br><span class="line">                .placeholder(placeholder)</span><br><span class="line">                .resize(resize, resize)</span><br><span class="line">                .progressiveRenderingEnabled(<span class="keyword">true</span>)</span><br><span class="line">                .load(uri)</span><br><span class="line">                .fadeDuration(<span class="number">300</span>)</span><br><span class="line">                .actualScaleType(ImageView.ScaleType.CENTER_CROP)</span><br><span class="line">                .autoPlayAnimations(<span class="keyword">true</span>)</span><br><span class="line">                .into(imageView);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadImage</span><span class="params">(Context context, <span class="keyword">int</span> resizeX, <span class="keyword">int</span> resizeY, ImageView imageView, Uri uri)</span> </span>{</span><br><span class="line">        FrescoLoader.with(context)</span><br><span class="line">                .resize(resizeX, resizeY)</span><br><span class="line">                .progressiveRenderingEnabled(<span class="keyword">true</span>)</span><br><span class="line">                .load(uri)</span><br><span class="line">                .fadeDuration(<span class="number">300</span>)</span><br><span class="line">                .actualScaleType(ImageView.ScaleType.CENTER_CROP)</span><br><span class="line">                .into(imageView);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadGifImage</span><span class="params">(Context context, <span class="keyword">int</span> resizeX, <span class="keyword">int</span> resizeY, ImageView imageView, Uri uri)</span> </span>{</span><br><span class="line">        FrescoLoader.with(context)</span><br><span class="line">                .resize(resizeX, resizeY)</span><br><span class="line">                .progressiveRenderingEnabled(<span class="keyword">true</span>)</span><br><span class="line">                .load(uri)</span><br><span class="line">                .fadeDuration(<span class="number">300</span>)</span><br><span class="line">                .actualScaleType(ImageView.ScaleType.CENTER_CROP)</span><br><span class="line">                .autoPlayAnimations(<span class="keyword">true</span>)</span><br><span class="line">                .into(imageView);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">supportAnimatedGif</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Fresco</tag>
        <tag>ImageLoader</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 代理系统级 HttpUrlConnection 请求到第三方网络库 - 支持 Http/2.0 及 HttpDNS</title>
    <url>/2017/07/13/Android%E4%BB%A3%E7%90%86%E7%B3%BB%E7%BB%9F%E7%BA%A7HttpUrlConnection%E8%AF%B7%E6%B1%82%E5%88%B0%E7%AC%AC%E4%B8%89%E6%96%B9%E7%BD%91%E7%BB%9C%E5%BA%93-%E6%94%AF%E6%8C%81Http-2-0%E5%8F%8AHttpDNS/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>&#x770B;&#x5230;&#x8FD9;&#x4E2A;&#x6807;&#x9898;&#xFF0C;&#x597D;&#x957F;&#x54C7;&#xFF08;&#x6069;&#xFF0C;&#x597D;&#x957F;&#xFF09;&#xFF01;&#x5206;&#x89E3;&#x4E00;&#x4E0B;&#xFF1A;</p><ol><li>&#x4F7F;&#x7528;&#x539F;&#x751F;&#x7684;HttpUrlConnection&#x8BF7;&#x6C42;&#x4EE3;&#x7801;.</li><li>&#x5728;&#x4E0D;&#x6539;&#x53D8;&#x73B0;&#x6709;&#x4EE3;&#x7801;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#x5C06;&#x8BF7;&#x6C42;&#x4EE3;&#x7406;&#x5230;&#x7B2C;&#x4E09;&#x65B9;&#x7F51;&#x7EDC;&#x5E93;&#xFF0C;&#x5982;OkHttp, Chromium&#x7F51;&#x7EDC;&#x6808;, CURL&#x7B49;.</li><li>&#x4EE3;&#x7406;&#x5230;&#x7B2C;&#x4E09;&#x65B9;&#x7F51;&#x7EDC;&#x5E93;&#x540E;&#x53EF;&#x4EE5;&#x652F;&#x6301;Http/2.0, HttpDNS&#x7B49;&#x7279;&#x6027;.</li></ol><p>&#x8981;&#x8FBE;&#x5230;&#x600E;&#x4E48;&#x6837;&#x7684;&#x4E00;&#x4E2A;&#x76EE;&#x7684;&#x5462;&#xFF0C;&#x65E0;&#x4EE3;&#x7801;&#x65E0;fuck</p><figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line">try {</span><br><span class="line">    URL url = new URL(<span class="string">&quot;https://www.weidian.com&quot;</span>);</span><br><span class="line">    HttpURLConnection connection = (HttpURLConnection) url.openConnection();</span><br><span class="line">    connection.setRequestMethod(<span class="string">&quot;<span class="keyword">GET</span>&quot;</span>);</span><br><span class="line">    connection.connect();</span><br><span class="line">} catch (Exception e) {</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6700;&#x7EC8;&#x7684;&#x76EE;&#x7684;&#x5C31;&#x662F;&#x4F7F;&#x7528;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#xFF0C;&#x4F46;&#x662F;&#x771F;&#x6B63;&#x7684;&#x8BF7;&#x6C42;&#x662F;&#x7B2C;&#x4E09;&#x65B9;&#x7F51;&#x7EDC;&#x5E93;&#x4EE3;&#x7406;&#x53D1;&#x51FA;&#x53BB;&#x7684;&#x3002;</p><a id="more"></a><h3 id="&#x5751;&#x7239;&#x7684;Google&#x7238;&#x7238;"><a href="#&#x5751;&#x7239;&#x7684;Google&#x7238;&#x7238;" class="headerlink" title="&#x5751;&#x7239;&#x7684;Google&#x7238;&#x7238;"></a>&#x5751;&#x7239;&#x7684;Google&#x7238;&#x7238;</h3><p>&#x5728;Android 4.4&#x4E4B;&#x540E;&#xFF0C;Google&#x7238;&#x7238;&#x5C06;Android&#x4E0A;&#x7684;HttpUrlConnection&#x5B9E;&#x73B0;&#x4FEE;&#x6539;&#x6210;&#x4E86;OkHttp&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x652F;&#x6301;&#x663E;&#x5F97;&#x6709;&#x70B9;&#x5751;&#x7239;&#xFF0C;&#x5B83;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x9ED1;&#x76D2;&#x5B50;&#xFF0C;&#x6CA1;&#x6709;&#x5C06;&#x4EFB;&#x4F55;&#x63A7;&#x5236;OkHttp&#x7684;&#x5C5E;&#x6027;&#x66B4;&#x9732;&#x51FA;&#x6765;&#xFF0C;&#x5176;&#x5B9E;&#x8FD9;&#x624D;&#x662F;&#x5408;&#x7406;&#x7684;&#xFF0C;&#x6BD5;&#x7ADF;&#x4E0D;&#x80FD;&#x8BA9;&#x5F00;&#x53D1;&#x8005;&#x611F;&#x77E5;&#x5230;&#x5E95;&#x5C42;&#x7684;&#x5B9E;&#x73B0;&#x561B;&#x3002;&#x4F46;&#x662F;&#x7FFB;&#x770B;AOSP&#x7684;&#x5B9E;&#x73B0; <a href="https://android.googlesource.com/platform/external/okhttp/+/master/android/main/java/com/squareup/okhttp/HttpsHandler.java" target="_blank" rel="noopener">HttpsHandler.java</a>&#xFF0C;&#x4F1A;&#x770B;&#x5230;&#x4E00;&#x6BB5;&#x5751;&#x7239;&#x7684;&#x4EE3;&#x7801;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> static final List&lt;Protocol&gt; HTTP_1_1_ONLY =</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">Collections</span>.</span></span>singleton<span class="constructor">List(Protocol.HTTP_1_1)</span>;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Creates an OkHttpClient suitable for creating {@link HttpsURLConnection} instances on</span></span><br><span class="line"><span class="comment"> * Android.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// Visible for android.net.Network.</span></span><br><span class="line">public static OkUrlFactory create<span class="constructor">HttpsOkUrlFactory(Proxy <span class="params">proxy</span>)</span> {</span><br><span class="line">    <span class="comment">// The HTTPS OkHttpClient is an HTTP OkHttpClient with extra configuration.</span></span><br><span class="line">    OkUrlFactory okUrlFactory = <span class="module-access"><span class="module"><span class="identifier">HttpHandler</span>.</span></span>create<span class="constructor">HttpOkUrlFactory(<span class="params">proxy</span>)</span>;</span><br><span class="line">    <span class="comment">// All HTTPS requests are allowed.</span></span><br><span class="line">    okUrlFactory.set<span class="constructor">UrlFilter(<span class="params">null</span>)</span>;</span><br><span class="line">    OkHttpClient okHttpClient = okUrlFactory.client<span class="literal">()</span>;</span><br><span class="line">    <span class="comment">// Only enable HTTP/1.1 (implies HTTP/1.0). Disable SPDY / HTTP/2.0.</span></span><br><span class="line">    okHttpClient.set<span class="constructor">Protocols(HTTP_1_1_ONLY)</span>;</span><br><span class="line">    okHttpClient.set<span class="constructor">ConnectionSpecs(Collections.<span class="params">singletonList</span>(TLS_CONNECTION_SPEC)</span>);</span><br><span class="line">    <span class="comment">// Android support certificate pinning via NetworkSecurityConfig so there is no need to</span></span><br><span class="line">    <span class="comment">// also expose OkHttp&apos;s mechanism. The OkHttpClient underlying https HttpsURLConnections</span></span><br><span class="line">    <span class="comment">// in Android should therefore always use the default certificate pinner, whose set of</span></span><br><span class="line">    <span class="comment">// {@code hostNamesToPin} is empty.</span></span><br><span class="line">    okHttpClient.set<span class="constructor">CertificatePinner(CertificatePinner.DEFAULT)</span>;</span><br><span class="line">    <span class="comment">// OkHttp does not automatically honor the system-wide HostnameVerifier set with</span></span><br><span class="line">    <span class="comment">// HttpsURLConnection.setDefaultHostnameVerifier().</span></span><br><span class="line">    okUrlFactory.client<span class="literal">()</span>.set<span class="constructor">HostnameVerifier(HttpsURLConnection.<span class="params">getDefaultHostnameVerifier</span>()</span>);</span><br><span class="line">    <span class="comment">// OkHttp does not automatically honor the system-wide SSLSocketFactory set with</span></span><br><span class="line">    <span class="comment">// HttpsURLConnection.setDefaultSSLSocketFactory().</span></span><br><span class="line">    <span class="comment">// See https://github.com/square/okhttp/issues/184 for details.</span></span><br><span class="line">    okHttpClient.set<span class="constructor">SslSocketFactory(HttpsURLConnection.<span class="params">getDefaultSSLSocketFactory</span>()</span>);</span><br><span class="line">    return okUrlFactory;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x770B;&#x5230;<strong>okHttpClient.setProtocols(HTTP_1_1_ONLY);</strong>&#x8FD9;&#x4E00;&#x884C;&#xFF0C;&#x6CA1;&#x9519;&#xFF0C;&#x5BF9;OkHttp&#x8BBE;&#x7F6E;&#x4E86;&#x53EA;&#x652F;&#x6301;Http/1.1&#x534F;&#x8BAE;&#xFF0C;&#x5373;&#x4F7F;OkHttp&#x652F;&#x6301;&#x4E86;SPDY&#x548C;Http/2.0&#xFF0C;&#x4F46;&#x662F;&#x4E5F;&#x88AB;Google&#x7238;&#x7238;&#x7981;&#x7528;&#x4E86;&#x3002;&#x6069;&#xFF0C;&#x6240;&#x4EE5;&#x522B;&#x4EE5;&#x4E3A;&#x5E95;&#x5C42;&#x66FF;&#x6362;&#x6210;&#x4E86;OkHttp&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x5C31;&#x4EE5;&#x4E3A;OkHttp&#x7684;&#x6240;&#x6709;&#x7279;&#x6027;&#x90FD;&#x88AB;&#x7EE7;&#x627F;&#x8FC7;&#x6765;&#x4E86;&#xFF0C;&#x8FD9;&#x662F;&#x5927;&#x9519;&#x7279;&#x9519;&#x7684;&#x3002;</p><h3 id="&#x7EC6;&#x8BFB;java-net-URL&#x7C7B;"><a href="#&#x7EC6;&#x8BFB;java-net-URL&#x7C7B;" class="headerlink" title="&#x7EC6;&#x8BFB;java.net.URL&#x7C7B;"></a>&#x7EC6;&#x8BFB;java.net.URL&#x7C7B;</h3><p>&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x518D;&#x53BB;&#x770B;&#x770B;java.net.URL&#x7C7B;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x627E;&#x4E00;&#x627E;&#x6709;&#x6CA1;&#x6709;&#x5176;&#x4ED6;&#x65B9;&#x5F0F;&#xFF0C;&#x5C06;&#x7CFB;&#x7EDF;&#x7EA7;&#x8BF7;&#x6C42;&#x4EE3;&#x7406;&#x5230;&#x7B2C;&#x4E09;&#x65B9;&#x7F51;&#x7EDC;&#x5E93;&#x4E0A;&#x3002;</p><p>AOSP&#x4E0A;&#x7684;&#x4EE3;&#x7801;&#x5728;<a href="https://android.googlesource.com/platform/libcore/+/master/ojluni/src/main/java/java/net/URL.java" target="_blank" rel="noopener">URL.java</a></p><h4 id="URL-openConnection"><a href="#URL-openConnection" class="headerlink" title="URL.openConnection()"></a>URL.openConnection()</h4><p>&#x9996;&#x5148;&#x770B;&#x5230;openConnection&#x65B9;&#x6CD5;&#x7684;&#x5B9E;&#x73B0;</p><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> URLConnection openConnection() <span class="keyword">throws</span> java.io.IOException {</span><br><span class="line">    <span class="function"><span class="keyword">return</span> <span class="keyword">handler</span>.<span class="title">openConnection</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x8F6C;&#x4EA4;&#x7ED9;&#x4E86;handler&#x5BF9;&#x8C61;&#x7684;openConnection&#xFF0C;&#x5165;&#x53C2;&#x662F;this&#xFF0C;&#x4E5F;&#x5C31;&#x662F;URL&#x5BF9;&#x8C61;&#x3002;</p><p>&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;handler&#x662F;&#x4EC0;&#x4E48;&#x4E1C;&#x897F;&#x5462;&#xFF0C;&#x7EE7;&#x7EED;&#x5F80;&#x4E0B;&#x770B;</p><h4 id="URLStreamHandler"><a href="#URLStreamHandler" class="headerlink" title="URLStreamHandler"></a>URLStreamHandler</h4><p>handler&#x5176;&#x5B9E;&#x5C31;&#x662F;URLStreamHandler&#x5BF9;&#x8C61;</p><p>&#x5728;URL&#x4E2D;&#x67E5;&#x627E;&#x4E00;&#x4E0B;&#x4EE3;&#x7801;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5B83;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x6709;&#x8FD9;&#x4E48;&#x4E00;&#x6BB5;&#x83B7;&#x53D6;handler&#x7684;&#x4EE3;&#x7801;</p><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">handler</span> == <span class="keyword">null</span> &amp;&amp;</span><br><span class="line">    (<span class="keyword">handler</span> = getURLStreamHandler(protocol)) == <span class="keyword">null</span>) {</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> MalformedURLException(<span class="string">&quot;unknown protocol: &quot;</span> + protocol);</span><br><span class="line">}</span><br><span class="line"><span class="keyword">this</span>.<span class="keyword">handler</span> = <span class="keyword">handler</span>;</span><br></pre></td></tr></table></figure><p>&#x4ECE;&#x4EE3;&#x7801;&#x4E2D;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;handler&#x5C31;&#x662F;&#x5904;&#x7406;&#x67D0;&#x4E2A;&#x534F;&#x8BAE;&#x7684;&#x771F;&#x6B63;&#x5E55;&#x540E;&#x64CD;&#x7EB5;&#x8005;&#xFF0C;&#x63A5;&#x7740;&#x5230;&#x4E86;getURLStreamHandler&#x65B9;&#x6CD5;&#xFF0C;&#x65B9;&#x6CD5;&#x7684;&#x5165;&#x53C2;&#x5C31;&#x662F;&#x534F;&#x8BAE;&#xFF0C;&#x5982;http, http, ftp&#x7B49;&#xFF0C;&#x5982;&#x679C;&#x8FD4;&#x56DE;&#x503C;&#x662F;&#x7A7A;&#xFF0C;&#x5219;&#x5F53;&#x524D;&#x8BF7;&#x6C42;&#x4F1A;&#x629B;&#x51FA;&#x4E00;&#x4E2A;&#x672A;&#x77E5;&#x534F;&#x8BAE;&#x7684;&#x5F02;&#x5E38;&#x3002;</p><h4 id="getURLStreamHandler"><a href="#getURLStreamHandler" class="headerlink" title="getURLStreamHandler"></a>getURLStreamHandler</h4><p>&#x6765;&#x770B;&#x770B;getURLStreamHandler&#x7684;&#x771F;&#x6B63;&#x5B9E;&#x73B0;&#x90E8;&#x5206;</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * A table of protocol handlers.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">static Hashtable&lt;String,URLStreamHandler&gt; handlers = <span class="built_in">new</span> Hashtable&lt;&gt;();</span><br><span class="line">private static <span class="keyword">Object</span> streamHandlerLock = <span class="built_in">new</span> <span class="keyword">Object</span>();</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns the Stream Handler.</span></span><br><span class="line"><span class="comment"> * @param protocol the protocol to use</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">static URLStreamHandler getURLStreamHandler(String protocol) {</span><br><span class="line">    URLStreamHandler <span class="keyword">handler</span> = handlers.<span class="keyword">get</span>(protocol);</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">handler</span> == <span class="keyword">null</span>) {</span><br><span class="line">        <span class="type">boolean</span> checkedWithFactory = <span class="keyword">false</span>;</span><br><span class="line">        // Use the factory (<span class="keyword">if</span> <span class="keyword">any</span>)</span><br><span class="line">        <span class="keyword">if</span> (factory != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">handler</span> = factory.createURLStreamHandler(protocol);</span><br><span class="line">            checkedWithFactory = <span class="keyword">true</span>;</span><br><span class="line">        }</span><br><span class="line">        // Try java protocol <span class="keyword">handler</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">handler</span> == <span class="keyword">null</span>) {</span><br><span class="line">            final String packagePrefixList = <span class="keyword">System</span>.getProperty(protocolPathProp,&quot;&quot;);</span><br><span class="line">            StringTokenizer packagePrefixIter = <span class="built_in">new</span> StringTokenizer(packagePrefixList, &quot;|&quot;);</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">handler</span> == <span class="keyword">null</span> &amp;&amp;</span><br><span class="line">                   packagePrefixIter.hasMoreTokens()) {</span><br><span class="line">                String packagePrefix = packagePrefixIter.nextToken().trim();</span><br><span class="line">                try {</span><br><span class="line">                    String clsName = packagePrefix + &quot;.&quot; + protocol +</span><br><span class="line">                      &quot;.Handler&quot;;</span><br><span class="line">                    <span class="keyword">Class</span>&lt;?&gt; cls = <span class="keyword">null</span>;</span><br><span class="line">                    try {</span><br><span class="line">                        ClassLoader cl = ClassLoader.getSystemClassLoader();</span><br><span class="line">                        cls = <span class="keyword">Class</span>.forName(clsName, <span class="keyword">true</span>, cl);</span><br><span class="line">                    } catch (ClassNotFoundException e) {</span><br><span class="line">                        ClassLoader contextLoader = Thread.currentThread().getContextClassLoader();</span><br><span class="line">                        <span class="keyword">if</span> (contextLoader != <span class="keyword">null</span>) {</span><br><span class="line">                            cls = <span class="keyword">Class</span>.forName(clsName, <span class="keyword">true</span>, contextLoader);</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                    <span class="keyword">if</span> (cls != <span class="keyword">null</span>) {</span><br><span class="line">                        <span class="keyword">handler</span>  =</span><br><span class="line">                          (URLStreamHandler)cls.newInstance();</span><br><span class="line">                    }</span><br><span class="line">                } catch (ReflectiveOperationException ignored) {</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        // Fallback <span class="keyword">to</span> built-<span class="keyword">in</span> stream <span class="keyword">handler</span>.</span><br><span class="line">        // Makes okhttp the <span class="keyword">default</span> http/https <span class="keyword">handler</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">handler</span> == <span class="keyword">null</span>) {</span><br><span class="line">            try {</span><br><span class="line">                // <span class="keyword">BEGIN</span> Android-changed</span><br><span class="line">                // Use <span class="keyword">of</span> okhttp <span class="keyword">for</span> http <span class="keyword">and</span> https</span><br><span class="line">                // Removed unnecessary use <span class="keyword">of</span> reflection <span class="keyword">for</span> sun classes</span><br><span class="line">                <span class="keyword">if</span> (protocol.equals(&quot;file&quot;)) {</span><br><span class="line">                    <span class="keyword">handler</span> = <span class="built_in">new</span> sun.net.www.protocol.file.<span class="keyword">Handler</span>();</span><br><span class="line">                } <span class="keyword">else</span> <span class="keyword">if</span> (protocol.equals(&quot;ftp&quot;)) {</span><br><span class="line">                    <span class="keyword">handler</span> = <span class="built_in">new</span> sun.net.www.protocol.ftp.<span class="keyword">Handler</span>();</span><br><span class="line">                } <span class="keyword">else</span> <span class="keyword">if</span> (protocol.equals(&quot;jar&quot;)) {</span><br><span class="line">                    <span class="keyword">handler</span> = <span class="built_in">new</span> sun.net.www.protocol.jar.<span class="keyword">Handler</span>();</span><br><span class="line">                } <span class="keyword">else</span> <span class="keyword">if</span> (protocol.equals(&quot;http&quot;)) {</span><br><span class="line">                    <span class="keyword">handler</span> = (URLStreamHandler)<span class="keyword">Class</span>.</span><br><span class="line">                        forName(&quot;com.android.okhttp.HttpHandler&quot;).newInstance();</span><br><span class="line">                } <span class="keyword">else</span> <span class="keyword">if</span> (protocol.equals(&quot;https&quot;)) {</span><br><span class="line">                    <span class="keyword">handler</span> = (URLStreamHandler)<span class="keyword">Class</span>.</span><br><span class="line">                        forName(&quot;com.android.okhttp.HttpsHandler&quot;).newInstance();</span><br><span class="line">                }</span><br><span class="line">                // <span class="keyword">END</span> Android-changed</span><br><span class="line">            } catch (<span class="keyword">Exception</span> e) {</span><br><span class="line">                throw <span class="built_in">new</span> AssertionError(e);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        synchronized (streamHandlerLock) {</span><br><span class="line">            URLStreamHandler handler2 = <span class="keyword">null</span>;</span><br><span class="line">            // <span class="keyword">Check</span> again <span class="keyword">with</span> hashtable just <span class="keyword">in</span> <span class="keyword">case</span> another</span><br><span class="line">            // thread created a <span class="keyword">handler</span> since we last checked</span><br><span class="line">            handler2 = handlers.<span class="keyword">get</span>(protocol);</span><br><span class="line">            <span class="keyword">if</span> (handler2 != <span class="keyword">null</span>) {</span><br><span class="line">                <span class="keyword">return</span> handler2;</span><br><span class="line">            }</span><br><span class="line">            // <span class="keyword">Check</span> <span class="keyword">with</span> factory <span class="keyword">if</span> another thread <span class="keyword">set</span> a</span><br><span class="line">            // factory since our last <span class="keyword">check</span></span><br><span class="line">            <span class="keyword">if</span> (!checkedWithFactory &amp;&amp; factory != <span class="keyword">null</span>) {</span><br><span class="line">                handler2 = factory.createURLStreamHandler(protocol);</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span> (handler2 != <span class="keyword">null</span>) {</span><br><span class="line">                // The <span class="keyword">handler</span> <span class="keyword">from</span> the factory must be given more</span><br><span class="line">                // importance. <span class="keyword">Discard</span> the <span class="keyword">default</span> <span class="keyword">handler</span> that</span><br><span class="line">                // this thread created.</span><br><span class="line">                <span class="keyword">handler</span> = handler2;</span><br><span class="line">            }</span><br><span class="line">            // <span class="keyword">Insert</span> this <span class="keyword">handler</span> <span class="keyword">into</span> the hashtable</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">handler</span> != <span class="keyword">null</span>) {</span><br><span class="line">                handlers.put(protocol, <span class="keyword">handler</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">handler</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><ol><li>&#x9996;&#x5148;&#x4ECE;handlers&#x4E2D;&#x6839;&#x636E;&#x534F;&#x8BAE;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;URLStreamHandler&#x5BF9;&#x8C61;&#xFF0C;handlers&#x662F;&#x4E00;&#x4E2A;&#x9759;&#x6001;&#x7684;Hashtable&lt;String,URLStreamHandler&gt;&#xFF0C;&#x4E3B;&#x8981;&#x8D77;&#x5230;&#x4E00;&#x4E2A;&#x7F13;&#x5B58;&#x7684;&#x4F5C;&#x7528;&#xFF0C;&#x5982;&#x679C;&#x83B7;&#x53D6;&#x4E0D;&#x5230;&#xFF0C;&#x5219;&#x7EE7;&#x7EED;&#x4E0B;&#x4E00;&#x6B65;&#x64CD;&#x4F5C;&#x3002;</li><li>&#x5224;&#x65AD;factory&#x5BF9;&#x8C61;&#x662F;&#x5426;&#x4E3A;&#x7A7A;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x8C03;&#x7528;factory.createURLStreamHandler&#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x4E00;&#x4E2A;URLStreamHandler&#x5BF9;&#x8C61;&#xFF0C;&#x5982;&#x679C;URLStreamHandler&#x5BF9;&#x8C61;&#x4E0D;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x6807;&#x8BB0;checkedWithFactory&#x53D8;&#x91CF;&#x4E3A;true&#xFF0C;&#x7528;&#x4E8E;&#x540E;&#x9762;&#x68C0;&#x67E5;&#x65F6;&#x4F7F;&#x7528;&#xFF0C;&#x5982;&#x679C;&#x8FD4;&#x56DE;&#x7A7A;&#xFF0C;&#x5219;&#x7EE7;&#x7EED;&#x4E0B;&#x4E00;&#x6B65;&#x64CD;&#x4F5C;</li><li>&#x83B7;&#x53D6;&#x7CFB;&#x7EDF;java.protocol.handler.pkgs&#x5C5E;&#x6027;&#xFF0C;&#x8BE5;&#x503C;&#x662F;JVM&#x7684;&#x542F;&#x52A8;&#x53C2;&#x6570;&#xFF0C;&#x901A;&#x8FC7;-D java.protocol.handler.pkgs&#x6765;&#x8BBE;&#x7F6E;URLStreamHandler&#x5B9E;&#x73B0;&#x7C7B;&#x7684;&#x5305;&#x8DEF;&#x5F84;&#xFF0C;&#x4F8B;&#x5982;-D java.protocol.handler.pkgs=com.sample.protocol&#xFF0C;&#x4EE3;&#x8868;&#x5904;&#x7406;&#x5B9E;&#x73B0;&#x7C7B;&#x7686;&#x5728;&#x8FD9;&#x4E2A;&#x5305;&#x4E0B;&#x3002;&#x5982;&#x679C;&#x9700;&#x8981;&#x591A;&#x4E2A;&#x5305;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x4E48;&#x4F7F;&#x7528;&#x201C;|&#x201D; &#x5206;&#x5272;&#x3002;&#x6BD4;&#x5982;-D java.protocol.handler.pkgs=com.sample.protocol1|com.sample.protocol2&#xFF1B;&#x800C;JDK&#x5185;&#x90E8;&#x9ED8;&#x8BA4;&#x5B9E;&#x73B0;&#x7C7B;&#x5747;&#x662F;&#x5728;sun.net.<a href="http://www.protocol&#x5305;&#x4E0B;&#x3002;&#x8BBE;&#x7F6E;&#x8FDB;&#x53BB;&#x7684;&#x5305;&#x4E0B;&#x7684;&#x7C7B;&#x7684;&#x547D;&#x540D;&#x6A21;&#x5F0F;&#x5FC5;&#x987B;&#x4E3A;[package_path].[protocol].Handler&#xFF0C;&#x6BD4;&#x5982;&#x6211;&#x5B9E;&#x73B0;&#x4E86;http&#x534F;&#x8BAE;&#xFF0C;&#x5219;&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#x4E3A;com.sample.protocol.http.Handler&#xFF0C;&#x518D;&#x6BD4;&#x5982;&#x6211;&#x5B9E;&#x73B0;&#x4E86;https&#x534F;&#x8BAE;&#xFF0C;&#x5219;&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#x4E3A;com.sample.protocol.https.Handler&#xFF0C;&#x56E0;&#x4E3A;&#x662F;&#x9700;&#x8981;&#x7528;&#x5230;&#x53CD;&#x5C04;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x4E9B;&#x5B9E;&#x73B0;&#x7C7B;&#x5FC5;&#x987B;&#x6709;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x3002;&#x4E86;&#x89E3;&#x4E86;&#x8FD9;&#x4E2A;&#x539F;&#x7406;&#x4E4B;&#x540E;&#xFF0C;&#x4E4B;&#x540E;&#x5C31;&#x662F;&#x904D;&#x5386;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#x7684;&#x6240;&#x6709;URLStreamHandler&#xFF0C;&#x76F4;&#x5230;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x5BF9;&#x5E94;&#x534F;&#x8BAE;&#x7684;URLStreamHandler&#xFF0C;&#x53CD;&#x5C04;&#x6784;&#x9020;&#x5B83;&#xFF1B;&#x5982;&#x679C;&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x5219;&#x7EE7;&#x7EED;&#x4E0B;&#x4E00;&#x6B65;&#x64CD;&#x4F5C;&#x3002;" target="_blank" rel="noopener">www.protocol&#x5305;&#x4E0B;&#x3002;&#x8BBE;&#x7F6E;&#x8FDB;&#x53BB;&#x7684;&#x5305;&#x4E0B;&#x7684;&#x7C7B;&#x7684;&#x547D;&#x540D;&#x6A21;&#x5F0F;&#x5FC5;&#x987B;&#x4E3A;[package_path].[protocol].Handler&#xFF0C;&#x6BD4;&#x5982;&#x6211;&#x5B9E;&#x73B0;&#x4E86;http&#x534F;&#x8BAE;&#xFF0C;&#x5219;&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#x4E3A;com.sample.protocol.http.Handler&#xFF0C;&#x518D;&#x6BD4;&#x5982;&#x6211;&#x5B9E;&#x73B0;&#x4E86;https&#x534F;&#x8BAE;&#xFF0C;&#x5219;&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#x4E3A;com.sample.protocol.https.Handler&#xFF0C;&#x56E0;&#x4E3A;&#x662F;&#x9700;&#x8981;&#x7528;&#x5230;&#x53CD;&#x5C04;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x4E9B;&#x5B9E;&#x73B0;&#x7C7B;&#x5FC5;&#x987B;&#x6709;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x3002;&#x4E86;&#x89E3;&#x4E86;&#x8FD9;&#x4E2A;&#x539F;&#x7406;&#x4E4B;&#x540E;&#xFF0C;&#x4E4B;&#x540E;&#x5C31;&#x662F;&#x904D;&#x5386;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#x7684;&#x6240;&#x6709;URLStreamHandler&#xFF0C;&#x76F4;&#x5230;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x5BF9;&#x5E94;&#x534F;&#x8BAE;&#x7684;URLStreamHandler&#xFF0C;&#x53CD;&#x5C04;&#x6784;&#x9020;&#x5B83;&#xFF1B;&#x5982;&#x679C;&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x5219;&#x7EE7;&#x7EED;&#x4E0B;&#x4E00;&#x6B65;&#x64CD;&#x4F5C;&#x3002;</a></li><li>&#x5982;&#x679C;&#x534F;&#x8BAE;&#x662F;file&#x534F;&#x8BAE;&#xFF0C;&#x5219;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x5305;&#x4E0B;&#x7684;package_path.file.Handler&#x5BF9;&#x8C61;&#xFF0C;&#x5373;sun.net.<a href="http://www.protocol.file.Handler&#x5BF9;&#x8C61;" target="_blank" rel="noopener">www.protocol.file.Handler&#x5BF9;&#x8C61;</a></li><li>&#x5982;&#x679C;&#x534F;&#x8BAE;&#x662F;ftp&#x534F;&#x8BAE;&#xFF0C;&#x5219;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x5305;&#x4E0B;&#x7684;package_path.ftp.Handler&#x5BF9;&#x8C61;&#xFF0C;&#x5373;sun.net.<a href="http://www.protocol.ftp.Handler&#x5BF9;&#x8C61;" target="_blank" rel="noopener">www.protocol.ftp.Handler&#x5BF9;&#x8C61;</a></li><li>&#x5982;&#x679C;&#x534F;&#x8BAE;&#x662F;jar&#x534F;&#x8BAE;&#xFF0C;&#x5219;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x5305;&#x4E0B;&#x7684;package_path.jar.Handler&#x5BF9;&#x8C61;&#xFF0C;&#x5373;sun.net.<a href="http://www.protocol.jar.Handler&#x5BF9;&#x8C61;" target="_blank" rel="noopener">www.protocol.jar.Handler&#x5BF9;&#x8C61;</a></li><li>&#x5982;&#x679C;&#x534F;&#x8BAE;&#x662F;http&#x534F;&#x8BAE;&#xFF0C;&#x5219;&#x4F7F;&#x7528;com.android.okhttp.HttpHandler&#xFF0C;&#x6CE8;&#x610F;&#x6B64;&#x65F6;OkHttp&#x767B;&#x573A;&#x4E86;&#xFF0C;&#x8C03;&#x7528;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x53CD;&#x5C04;&#x8C03;&#x7528;&#x3002;&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#x5728;<a href="https://android.googlesource.com/platform/external/okhttp/+/master/android/main/java/com/squareup/okhttp/HttpsHandler.java" target="_blank" rel="noopener">HttpsHandler.java</a></li><li>&#x5982;&#x679C;&#x534F;&#x8BAE;&#x662F;https&#x534F;&#x8BAE;&#xFF0C;&#x5219;&#x4F7F;&#x7528;com.android.okhttp.HttpsHandler&#xFF0C;&#x4E5F;&#x662F;&#x53CD;&#x5C04;&#x8C03;&#x7528;&#xFF0C;&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#x5728;<a href="https://android.googlesource.com/platform/external/okhttp/+/master/android/main/java/com/squareup/okhttp/HttpsHandler.java" target="_blank" rel="noopener">HttpsHandler.java</a></li><li>&#x7EC6;&#x5FC3;&#x7684;&#x4F60;&#x4F1A;&#x53D1;&#x73B0;&#xFF0C;&#x4EE3;&#x7801;&#x4E2D;&#x53CD;&#x5C04;&#x7684;&#x662F;com.android.okhttp.HttpHandler&#x548C;com.android.okhttp.HttpsHandler&#xFF0C;&#x4F46;&#x662F;AOSP&#x4E0A;&#x7684;&#x6E90;&#x7801;&#x5374;&#x662F;com.squareup.okhttp.HttpHandler&#x548C;com.android.okhttp.HttpsHandler&#xFF0C;&#x8FD9;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF0C;&#x56E0;&#x4E3A;&#x9879;&#x76EE;&#x76EE;&#x5F55;&#x4E0B;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x53EB;<a href="https://android.googlesource.com/platform/external/okhttp/+/master/jarjar-rules.txt" target="_blank" rel="noopener">jarjar-rules.txt</a>&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5B83;&#x4F1A;&#x5C06;com.squareup&#x91CD;&#x547D;&#x540D;&#x4E3A;com.android&#xFF0C;&#x4EE5;&#x53CA;&#x5C06;okio&#x91CD;&#x547D;&#x540D;&#x4E3A;com.android.okhttp.okio</li><li>&#x6700;&#x540E;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x68C0;&#x67E5;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x68C0;&#x67E5;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x662F;&#x4E0D;&#x662F;&#x521B;&#x5EFA;&#x4E86;&#x76F8;&#x5173;&#x7684;&#x7C7B;&#xFF0C;&#x9996;&#x5148;&#x4ECE;handlers&#x7F13;&#x5B58;&#x4E2D;&#x67E5;&#x627E;&#xFF0C;&#x5982;&#x679C;&#x627E;&#x5230;&#x4E86;&#xFF0C;&#x5219;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#xFF0C;&#x65E0;&#x8BBA;&#x5F53;&#x524D;&#x7684;hander&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x521B;&#x5EFA;&#xFF0C;&#x90FD;&#x76F4;&#x63A5;&#x4E22;&#x5F03;&#x5F53;&#x524D;&#x7684;handler&#x5BF9;&#x8C61;&#xFF0C;&#x5982;&#x679C;&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x5219;&#x68C0;&#x67E5;&#x5176;&#x4ED6;&#x7EBF;&#x7A0B;&#x662F;&#x4E0D;&#x662F;&#x521B;&#x5EFA;&#x4E86;factory&#x5BF9;&#x8C61;&#xFF0C;&#x8FD9;&#x4E2A;&#x524D;&#x63D0;&#x6761;&#x4EF6;&#x662F;&#x6700;&#x5F00;&#x59CB;&#x65F6;factory&#x5E76;&#x6CA1;&#x6709;&#x88AB;&#x521B;&#x5EFA;&#xFF0C;&#x4ECE;&#x800C;&#x907F;&#x514D;&#x91CD;&#x590D;&#x521B;&#x5EFA;handler&#x3002;&#x5982;&#x679C;&#x8FD9;&#x65F6;&#x5019;&#x68C0;&#x67E5;&#x7684;handler2&#x4E0D;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x5C06;&#x5176;&#x8D4B;&#x503C;&#x7ED9;handler&#xFF0C;&#x5E76;&#x4E14;&#x5C06;handler&#x5BF9;&#x8C61;&#x5B58;&#x5165;handlers&#x7F13;&#x5B58;&#x4E2D;&#xFF0C;&#x5C06;hanler&#x5BF9;&#x8C61;&#x8FD4;&#x56DE;&#x3002;</li></ol><p>&#x4ECE;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x5F88;&#x5FEB;&#x7684;&#x627E;&#x5230;&#x6211;&#x4EEC;&#x6709;&#x4E24;&#x4E2A;&#x5207;&#x5165;&#x70B9;</p><ul><li>&#x6211;&#x4EEC;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x4ECE;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x4F20;&#x5165;URLStreamHandler&#x5BF9;&#x8C61;&#xFF0C;&#x4EE3;&#x7406;&#x6240;&#x6709;&#x8BF7;&#x6C42;</li><li>&#x6211;&#x4EEC;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x5168;&#x5C40;&#x4EE3;&#x7406;&#x6389;URLStreamHandler&#x7684;&#x521B;&#x5EFA;</li></ul><p>&#x5BF9;&#x4E8E;&#x7B2C;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x67E5;&#x627E;URL&#x6784;&#x9020;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#xFF0C;&#x786E;&#x5B9E;&#x5B58;&#x5728;&#x8FD9;&#x4E48;&#x4E00;&#x4E2A;&#x6784;&#x9020;&#x51FD;&#x6570;&#xFF0C;&#x800C;&#x4E14;&#x8FD8;&#x4E0D;&#x6B62;&#x4E00;&#x4E2A;</p><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> URL(String protocol, String host, <span class="keyword">int</span> port, String file,</span><br><span class="line">               URLStreamHandler <span class="keyword">handler</span>) <span class="keyword">throws</span> MalformedURLException {</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="keyword">public</span> URL(URL context, String spec, URLStreamHandler <span class="keyword">handler</span>)</span><br><span class="line">        <span class="keyword">throws</span> MalformedURLException {</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4F46;&#x662F;&#x8FD9;&#x5DF2;&#x7ECF;&#x8FDD;&#x80CC;&#x4E86;&#x6211;&#x4EEC;&#x4E0D;&#x4FEE;&#x6539;&#x73B0;&#x6709;&#x4EE3;&#x7801;&#x7684;&#x539F;&#x5219;&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x6784;&#x9020;URL&#x5BF9;&#x8C61;&#x7684;&#x4EE3;&#x7801;&#x4E86;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x653E;&#x5F03;&#x5B83;&#x3002;</p><p>&#x90A3;&#x4E48;&#x95EE;&#x9898;&#x5C31;&#x5230;&#x4E86;&#x7B2C;&#x4E8C;&#x4E2A;&#x4E0A;&#xFF0C;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x5168;&#x5C40;&#x4EE3;&#x7406;&#x6389;URLStreamHandler&#x7684;&#x521B;&#x5EFA;&#xFF0C;&#x7ECF;&#x8FC7;&#x521A;&#x624D;&#x7684;&#x4E00;&#x756A;&#x5206;&#x6790;&#xFF0C;&#x4E0D;&#x96BE;&#x53D1;&#x73B0;&#xFF0C;&#x786E;&#x5B9E;&#x662F;&#x6709;&#x90A3;&#x4E48;&#x4E00;&#x4E2A;&#x89D2;&#x8272;&#xFF0C;&#x8D1F;&#x8D23;&#x5168;&#x5C40;&#x4EE3;&#x7406;URLStreamHandler&#x7684;&#x521B;&#x5EFA;&#xFF0C;&#x5E76;&#x4E14;&#x5176;&#x4F18;&#x5148;&#x7EA7;&#x662F;&#x76F8;&#x5F53;&#x7684;&#x9AD8;&#x7684;&#x3002;&#x6CA1;&#x9519;&#xFF0C;&#x5C31;&#x662F;factory&#x5BF9;&#x8C61;&#x53CA;&#x5176;createURLStreamHandler&#x65B9;&#x6CD5;</p><h4 id="URLStreamHandlerFactory"><a href="#URLStreamHandlerFactory" class="headerlink" title="URLStreamHandlerFactory"></a>URLStreamHandlerFactory</h4><p>&#x90A3;&#x4E48;factory&#x5BF9;&#x8C61;&#x662F;&#x600E;&#x4E48;&#x6765;&#x7684;&#x5462;&#xFF0C;&#x5B83;&#x5176;&#x5B9E;&#x662F;&#x4E00;&#x4E2A;&#x9759;&#x6001;&#x53D8;&#x91CF;</p><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> URLStreamHandlerFactory <span class="keyword">factory</span>;</span><br></pre></td></tr></table></figure><p>&#x9ED8;&#x8BA4;&#x4E3A;&#x7A7A;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x4E0D;&#x8BBE;&#x7F6E;&#xFF0C;&#x5B83;&#x5C31;&#x4F1A;&#x4E00;&#x76F4;&#x4E3A;&#x7A7A;&#xFF0C;&#x8FD9;&#x4E0D;&#x5C31;&#x662F;&#x4E13;&#x95E8;&#x7528;&#x4E8E;&#x81EA;&#x5B9A;&#x4E49;&#x7528;&#x7684;&#x5417;&#xFF01;&#x770B;&#x4E0B;&#x5B83;&#x7684;&#x8BBE;&#x7F6E;&#x65B9;&#x6CD5;</p><figure class="highlight aspectj"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">void</span> <span class="title">setURLStreamHandlerFactory</span><span class="params">(URLStreamHandlerFactory fac)</span> </span>{</span><br><span class="line">    <span class="keyword">synchronized</span> (streamHandlerLock) {</span><br><span class="line">        <span class="keyword">if</span> (factory != <span class="keyword">null</span>) {</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Error(<span class="string">&quot;factory already defined&quot;</span>);</span><br><span class="line">        }</span><br><span class="line">        SecurityManager security = System.getSecurityManager();</span><br><span class="line">        <span class="keyword">if</span> (security != <span class="keyword">null</span>) {</span><br><span class="line">            security.checkSetFactory();</span><br><span class="line">        }</span><br><span class="line">        handlers.clear();</span><br><span class="line">        factory = fac;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><ol><li>&#x9996;&#x5148;&#x4F1A;&#x5224;&#x65AD;factory&#x662F;&#x4E0D;&#x662F;null&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x4E3A;null&#xFF0C;&#x5219;&#x4F1A;&#x629B;&#x51FA;&#x4E00;&#x4E2A;Error&#xFF0C;&#x4ECE;&#x8FD9;&#x91CC;&#x770B;&#x51FA;&#xFF0C;factory&#x6700;&#x591A;&#x4EC5;&#x4E14;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x4E00;&#x6B21;</li><li>&#x8C03;&#x7528;handlers&#x7684;clear&#x65B9;&#x6CD5;&#xFF0C;&#x6E05;&#x7A7A;&#x4E4B;&#x524D;&#x7F13;&#x5B58;&#x7684;&#x6240;&#x6709;handler&#x5BF9;&#x8C61;&#xFF0C;&#x8FD9;&#x4E2A;&#x76EE;&#x7684;&#x662F;&#x5565;&#x5462;&#xFF1F;&#x5F53;&#x7136;&#x662F;&#x4E3A;&#x4E86;&#x8BA9;&#x8BBE;&#x7F6E;&#x7684;factory&#x751F;&#x6548;&#x5566;&#xFF0C;&#x6BD5;&#x7ADF;&#x5B83;&#x662F;&#x9AD8;&#x4F18;&#x5148;&#x7EA7;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x53EF;&#x80FD;&#x5728;&#x8BBE;&#x7F6E;&#x5B83;&#x4E4B;&#x524D;&#xFF0C;&#x5DF2;&#x7ECF;&#x6709;&#x4E00;&#x4E9B;handler&#x88AB;&#x521B;&#x5EFA;&#x4E86;&#xFF0C;&#x8BA9;&#x90A3;&#x4E9B;&#x5DF2;&#x7ECF;&#x521B;&#x5EFA;&#x7684;handler&#x5931;&#x6548;&#x3002;</li></ol><h3 id="&#x5168;&#x5C40;&#x4EE3;&#x7406;&#x8BF7;&#x6C42;&#x5230;OkHttp"><a href="#&#x5168;&#x5C40;&#x4EE3;&#x7406;&#x8BF7;&#x6C42;&#x5230;OkHttp" class="headerlink" title="&#x5168;&#x5C40;&#x4EE3;&#x7406;&#x8BF7;&#x6C42;&#x5230;OkHttp"></a>&#x5168;&#x5C40;&#x4EE3;&#x7406;&#x8BF7;&#x6C42;&#x5230;OkHttp</h3><p>okhttp&#x6709;&#x5BF9;httpurlconnection&#x7684;&#x652F;&#x6301;&#x6A21;&#x5757;&#xFF0C;&#x4E0D;&#x8FC7;&#x5176;&#x5DF2;&#x7ECF;&#x88AB;square&#x5E9F;&#x5F03;&#x4E86;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5C06;&#x6765;&#x4E0D;&#x518D;&#x7EF4;&#x62A4;&#x4E86;&#x3002;&#x4E0D;&#x8FC7;&#x6211;&#x4EEC;&#x8FD8;&#x662F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7684;</p><p>&#x5F15;&#x5165;okhttp&#x53CA;okhttp-httpurlconnection&#x7684;&#x6A21;&#x5757;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">&apos;com.squareup.okhttp3:okhttp:3.8.1&apos;</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">&apos;com.squareup.okhttp3:okhttp-urlconnection:3.8.1&apos;</span></span><br></pre></td></tr></table></figure><p>&#x8BBE;&#x7F6E;URLStreamHandlerFactory&#x5BF9;&#x8C61;&#x4E3A;OkUrlFactory</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> {</span><br><span class="line">    OkUrlFactory okUrlFactory = <span class="keyword">new</span> <span class="constructor">OkUrlFactory(<span class="params">client</span>)</span>;</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">URL</span>.</span></span>set<span class="constructor">URLStreamHandlerFactory(<span class="params">okUrlFactory</span>)</span>;</span><br><span class="line">} catch(Exception e) {</span><br><span class="line">    <span class="comment">//ignore</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x65F6;&#x5019;&#x4F60;&#x7684;&#x8BF7;&#x6C42;&#x5C31;&#x88AB;&#x4EE3;&#x7406;&#x5230;okhttp&#x4E0A;&#x4E86;&#x3002;</p><h4 id="&#x5982;&#x4F55;&#x8BA9;OkHttp&#x652F;&#x6301;Http-2-0"><a href="#&#x5982;&#x4F55;&#x8BA9;OkHttp&#x652F;&#x6301;Http-2-0" class="headerlink" title="&#x5982;&#x4F55;&#x8BA9;OkHttp&#x652F;&#x6301;Http/2.0"></a>&#x5982;&#x4F55;&#x8BA9;OkHttp&#x652F;&#x6301;Http/2.0</h4><p>&#x4E0D;&#x7528;&#x8BBE;&#x7F6E;&#xFF0C;&#x9ED8;&#x8BA4;5.0&#x4EE5;&#x4E0A;&#x652F;&#x6301;&#xFF0C;&#x53EA;&#x8981;&#x540E;&#x7AEF;&#x670D;&#x52A1;&#x5668;&#x652F;&#x6301;alpn&#x9009;&#x62E9;&#x534F;&#x8BAE;&#xFF0C;&#x5B83;&#x5C31;&#x80FD;&#x652F;&#x6301;&#x3002;</p><h4 id="&#x5982;&#x4F55;&#x8BA9;OkHttp&#x652F;&#x6301;HttpDNS"><a href="#&#x5982;&#x4F55;&#x8BA9;OkHttp&#x652F;&#x6301;HttpDNS" class="headerlink" title="&#x5982;&#x4F55;&#x8BA9;OkHttp&#x652F;&#x6301;HttpDNS"></a>&#x5982;&#x4F55;&#x8BA9;OkHttp&#x652F;&#x6301;HttpDNS</h4><p>&#x4F7F;&#x7528;OkHttp&#x7684;Dns&#x63A5;&#x53E3;&#x5373;&#x53EF;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">OkHttpClient client = <span class="keyword">new</span> OkHttpClient.<span class="constructor">Builder()</span></span><br><span class="line">    .dns(<span class="keyword">new</span> <span class="constructor">Dns()</span> {</span><br><span class="line">        @Override</span><br><span class="line">        public List&lt;InetAddress&gt; lookup(String hostname) throws UnknownHostException {</span><br><span class="line">            <span class="keyword">if</span> (httpdns) {</span><br><span class="line">                return get<span class="constructor">HttpdnsByHost(<span class="params">hostname</span>)</span>;</span><br><span class="line">            }</span><br><span class="line">            return <span class="module-access"><span class="module"><span class="identifier">Dns</span>.</span><span class="module"><span class="identifier">SYSTEM</span>.</span></span>lookup(hostname);</span><br><span class="line">        }</span><br><span class="line">    })</span><br><span class="line">    .build<span class="literal">()</span>;</span><br><span class="line">OkUrlFactory okUrlFactory = <span class="keyword">new</span> <span class="constructor">OkUrlFactory(<span class="params">client</span>)</span>;</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">URL</span>.</span></span>set<span class="constructor">URLStreamHandlerFactory(<span class="params">okUrlFactory</span>)</span>;</span><br></pre></td></tr></table></figure><h4 id="&#x5751;&#x70B9;"><a href="#&#x5751;&#x70B9;" class="headerlink" title="&#x5751;&#x70B9;"></a>&#x5751;&#x70B9;</h4><p>&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x7684;OkHttp&#x4EE3;&#x7406;&#xFF0C;&#x5207;&#x8BB0;&#x4E0D;&#x8981;&#x4F7F;&#x7528;&#x4EFB;&#x4F55;&#x62E6;&#x622A;&#x5668;&#xFF0C;&#x56E0;&#x4E3A;&#x8BBE;&#x7F6E;&#x4E86;&#x4E5F;&#x6CA1;&#x6709;&#x7528;&#xFF0C;&#x5728;<a href="https://github.com/square/okhttp/blob/master/okhttp-urlconnection/src/main/java/okhttp3/internal/huc/OkHttpURLConnection.java" target="_blank" rel="noopener">OkHttpURLConnection.java</a>&#x4E2D;&#x6709;&#x4E2A;buildCall()&#x65B9;&#x6CD5;&#xFF0C;&#x8D1F;&#x8D23;&#x521B;&#x5EFA;OkHttp&#x7684;Call&#x5BF9;&#x8C61;&#xFF0C;&#x5728;&#x8BE5;&#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;&#x4F1A;&#x5C06;&#x6211;&#x4EEC;&#x8BBE;&#x7F6E;&#x8FDB;&#x53BB;&#x7684;client&#x7684;&#x62E6;&#x622A;&#x5668;&#x5168;&#x90E8;&#x6E05;&#x7A7A;&#xFF0C;&#x5982;&#x4E0B;&#x4EE3;&#x7801;</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">private <span class="keyword">Call</span> buildCall() throws IOException {</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">call</span> != <span class="keyword">null</span>) {</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">call</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    //&#x6B64;&#x5904;&#x7701;&#x7565;n&#x884C;&#x4EE3;&#x7801;</span><br><span class="line">    OkHttpClient.Builder clientBuilder = client.newBuilder();</span><br><span class="line">    clientBuilder.interceptors().clear();</span><br><span class="line">    clientBuilder.interceptors().<span class="keyword">add</span>(UnexpectedException.INTERCEPTOR);</span><br><span class="line">    clientBuilder.networkInterceptors().clear();</span><br><span class="line">    clientBuilder.networkInterceptors().<span class="keyword">add</span>(networkInterceptor);</span><br><span class="line"></span><br><span class="line">    // Use a separate dispatcher so that limits aren<span class="string">&apos;t impacted. But use the same executor service!</span></span><br><span class="line"><span class="string">    clientBuilder.dispatcher(new Dispatcher(client.dispatcher().executorService()));</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    // If we&apos;</span>re currently <span class="keyword">not</span> <span class="keyword">using</span> caches, make sure the engin<span class="string">e&apos;s client doesn&apos;</span>t have one.</span><br><span class="line">    <span class="keyword">if</span> (!getUseCaches()) {</span><br><span class="line">      clientBuilder.cache(<span class="keyword">null</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">call</span> = clientBuilder.build().newCall(request);</span><br><span class="line">  }</span><br></pre></td></tr></table></figure><p>&#x6240;&#x4EE5;&#x5C06;OkHttp&#x7684;OkUrlFactory&#x8BBE;&#x7F6E;&#x4E3A;URLStreamHandlerFactory&#x65F6;&#xFF0C;&#x8BBE;&#x7F6E;&#x7684;OkHttpClient&#x4E0D;&#x8981;&#x6DFB;&#x52A0;&#x4EFB;&#x4F55;&#x62E6;&#x622A;&#x5668;&#x5373;&#x53EF;&#xFF0C;&#x6DFB;&#x52A0;&#x4E86;&#x4E5F;&#x4F1A;&#x5931;&#x6548;&#xFF0C;&#x6216;&#x8BB8;&#x8FD9;&#x5C31;&#x662F;Square&#x6BD4;&#x8F83;&#x5751;&#x7684;&#x5730;&#x65B9;&#xFF0C;&#x548C;Google&#x7238;&#x7238;&#x4E00;&#x6837;&#x5751;&#x3002;</p><h3 id="chromium&#x7F51;&#x7EDC;&#x6808;&#x7684;&#x4EE3;&#x7406;"><a href="#chromium&#x7F51;&#x7EDC;&#x6808;&#x7684;&#x4EE3;&#x7406;" class="headerlink" title="chromium&#x7F51;&#x7EDC;&#x6808;&#x7684;&#x4EE3;&#x7406;"></a>chromium&#x7F51;&#x7EDC;&#x6808;&#x7684;&#x4EE3;&#x7406;</h3><p>&#x5982;&#x679C;&#x4F60;&#x7684;&#x9879;&#x76EE;&#x5F15;&#x7528;&#x4E86;chromium&#x7684;&#x7F51;&#x7EDC;&#x6808;&#xFF0C;&#x90A3;&#x4E48;&#x4E5F;&#x662F;&#x652F;&#x6301;&#x5168;&#x5C40;&#x4EE3;&#x7406;HttpUrlConnection&#x7684;&#x8BF7;&#x6C42;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;chromium&#x4E5F;&#x662F;&#x6709;URLStreamHandlerFactory&#x6A21;&#x5757;&#x7684;&#x652F;&#x6301;&#xFF0C;&#x53C2;&#x8003; <a href="http://fucknmb.com/2017/06/12/Chromium-%E7%BD%91%E7%BB%9C%E6%A0%88%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%8E%E4%BD%BF%E7%94%A8/">Chromium &#x7F51;&#x7EDC;&#x6808;&#x7684;&#x7F16;&#x8BD1;&#x4E0E;&#x4F7F;&#x7528;</a></p><p>&#x5F15;&#x5165;cronet&#x4F9D;&#x8D56;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">&apos;io.github.lizhangqu:cronet:0.0.1&apos;</span></span><br></pre></td></tr></table></figure><p>&#x8BBE;&#x7F6E;URLStreamHandlerFactory&#x5BF9;&#x8C61;&#x4E3A;CronetURLStreamHandlerFactory</p><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">CronetEngine.Builder builder = <span class="keyword">new</span> <span class="type">CronetEngine</span>.Builder(context);</span><br><span class="line">builder.</span><br><span class="line">        enableHttpCache(CronetEngine.Builder.HTTP_CACHE_IN_MEMORY,</span><br><span class="line">                <span class="number">100</span> * <span class="number">1024</span>) <span class="comment">// cache</span></span><br><span class="line">        .enableHttp2(<span class="literal">true</span>)  <span class="comment">// Http/2.0 Supprot</span></span><br><span class="line">        .enableQuic(<span class="literal">true</span>)   <span class="comment">// Quic Supprot</span></span><br><span class="line">        .setHostResolver(<span class="keyword">new</span> <span class="type">HostResolver</span>() {</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> List&lt;InetAddress&gt; resolve(<span class="keyword">String</span> hostname) throws UnknownHostException {</span><br><span class="line">                <span class="keyword">if</span> (hostname == <span class="literal">null</span>)</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">UnknownHostException</span>(<span class="string">&quot;hostname == null&quot;</span>);</span><br><span class="line">                <span class="keyword">if</span> (httpdns) {</span><br><span class="line">                	<span class="keyword">return</span> getHttpdnsByHost(hostname);</span><br><span class="line">            	}</span><br><span class="line">                <span class="keyword">return</span> Arrays.asList(InetAddress.getAllByName(hostname));</span><br><span class="line">            }</span><br><span class="line">        })                  <span class="comment">// custom dns, you can use httpdns here</span></span><br><span class="line">        .enableSDCH(<span class="literal">true</span>)   <span class="comment">// SDCH Supprot</span></span><br><span class="line">        .setLibraryName(<span class="string">&quot;cronet&quot;</span>);  <span class="comment">// lib so name</span></span><br><span class="line">CronetEngine cronetEngine = builder.build();</span><br><span class="line">CronetURLStreamHandlerFactory cronetURLStreamHandlerFactory = <span class="keyword">new</span> <span class="type">CronetURLStreamHandlerFactory</span>(cronetEngine);</span><br><span class="line">URL.setURLStreamHandlerFactory(cronetURLStreamHandlerFactory);</span><br></pre></td></tr></table></figure><p>&#x5982;&#x4E0A;&#x4EE3;&#x7801;&#xFF0C;&#x5DF2;&#x7ECF;&#x5F00;&#x8D77;&#x4E86;http/2.0&#x53CA;httpdns&#x7684;&#x652F;&#x6301;</p><h3 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h3><p>&#x6B64;&#x5904;&#x6CA1;&#x6709;&#x603B;&#x7ED3;&#xFF01;&#x5751;&#x5DF2;&#x6316;&#xFF0C;&#x5C11;&#x5E74;&#x5FEB;&#x53BB;&#x586B;&#x5751;&#x5427;&#xFF01;</p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>HttpUrlConnection</tag>
        <tag>URLStreamHandlerFactory</tag>
      </tags>
  </entry>
  <entry>
    <title>又掌握了一项新技能 - 断点调试 Gradle 插件</title>
    <url>/2017/07/05/%E5%8F%88%E6%8E%8C%E6%8F%A1%E4%BA%86%E4%B8%80%E9%A1%B9%E6%96%B0%E6%8A%80%E8%83%BD-%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95Gradle%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>&#x6700;&#x521D;&#x5F00;&#x53D1;Android&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x80AF;&#x5B9A;&#x662F;&#x5728;&#x6253;log&#x8C03;&#x8BD5;&#xFF0C;&#x7136;&#x540E;&#x6162;&#x6162;&#x5730;&#x89C9;&#x5F97;&#x6253;log&#x6548;&#x7387;&#x592A;&#x4F4E;&#x4E0B;&#x4E86;&#xFF0C;&#x4E0D;&#x80FD;&#x5FEB;&#x901F;&#x5B9A;&#x4F4D;&#x95EE;&#x9898;&#xFF0C;&#x4E8E;&#x662F;&#x8D70;&#x4E0A;&#x4E86;&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x4E4B;&#x8DEF;&#x3002;Gradle&#x63D2;&#x4EF6;&#x4E5F;&#x4E00;&#x6837;&#xFF0C;&#x4ECE;&#x4F1A;&#x5199;&#x63D2;&#x4EF6;&#x90A3;&#x4E00;&#x523B;&#x8D77;&#x5230;&#x73B0;&#x5728;&#xFF0C;&#x4E00;&#x76F4;&#x7528;&#x7684;&#x662F;&#x6253;log&#x8C03;&#x8BD5;&#x529F;&#x80FD;&#xFF0C;&#x4F46;&#x662F;&#x540C;&#x6837;&#x7684;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x6548;&#x7387;&#x4E5F;&#x592A;&#x4F4E;&#x4E0B;&#x4E86;&#xFF0C;&#x8FD9;&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4E5F;&#x5C1D;&#x8BD5;&#x8FC7;&#x5BFB;&#x627E;&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x4F46;&#x662F;&#x4E00;&#x76F4;&#x6CA1;&#x6709;&#x6210;&#x529F;&#xFF0C;&#x6628;&#x5929;&#x5076;&#x7136;&#x4E4B;&#x95F4;&#x8C03;&#x901A;&#x4E86;&#xFF0C;&#x4E8E;&#x662F;&#x8BB0;&#x5F55;&#x4E00;&#x53D1;&#x3002;</p><a id="more"></a><h3 id="&#x4E4B;&#x524D;&#x5931;&#x8D25;&#x7684;&#x65B9;&#x5F0F;"><a href="#&#x4E4B;&#x524D;&#x5931;&#x8D25;&#x7684;&#x65B9;&#x5F0F;" class="headerlink" title="&#x4E4B;&#x524D;&#x5931;&#x8D25;&#x7684;&#x65B9;&#x5F0F;"></a>&#x4E4B;&#x524D;&#x5931;&#x8D25;&#x7684;&#x65B9;&#x5F0F;</h3><p>&#x4E4B;&#x524D;&#x6D4B;&#x8BD5;&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x7684;&#x529F;&#x80FD;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E00;&#x76F4;&#x5728;build.gradle&#x4E2D;&#x76F4;&#x63A5;&#x6D4B;&#x4EE3;&#x7801;&#xFF0C;&#x6D4B;&#x8BD5;&#x7684;&#x4EE3;&#x7801;&#x4E5F;&#x662F;&#x5728;project.afterEvaluate&#x4E4B;&#x540E;&#xFF0C;&#x7136;&#x540E;&#x904D;&#x5386;android..applicationVariants&#xFF0C;&#x83B7;&#x53D6;&#x5404;&#x4E2A;&#x4FE1;&#x606F;&#xFF0C;&#x5C31;&#x50CF;&#x8FD9;&#x6837;&#x5B50;</p><figure class="highlight roboconf"><table><tr><td class="code"><pre><span class="line">buildscript {</span><br><span class="line">    <span class="attribute">repositories {</span></span><br><span class="line"><span class="attribute">        jcenter()</span></span><br><span class="line"><span class="attribute">    }</span></span><br><span class="line"><span class="attribute">    dependencies {</span></span><br><span class="line"><span class="attribute">        classpath &apos;com.android.tools.build</span>:gradle:2.3.3&apos;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">dependencies {</span><br><span class="line">    compile gradleApi()</span><br><span class="line">    compile localGroovy()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">import com<span class="variable">.android</span><span class="variable">.build</span><span class="variable">.gradle</span><span class="variable">.api</span><span class="variable">.TestVariant</span></span><br><span class="line">import com<span class="variable">.android</span><span class="variable">.build</span><span class="variable">.gradle</span><span class="variable">.api</span><span class="variable">.UnitTestVariant</span></span><br><span class="line">import com<span class="variable">.android</span><span class="variable">.build</span><span class="variable">.gradle</span><span class="variable">.internal</span><span class="variable">.variant</span><span class="variable">.ApplicationVariantData</span></span><br><span class="line">import com<span class="variable">.android</span><span class="variable">.build</span><span class="variable">.gradle</span><span class="variable">.internal</span><span class="variable">.api</span><span class="variable">.ApplicationVariantImpl</span></span><br><span class="line"></span><br><span class="line">project<span class="variable">.afterEvaluate</span> {</span><br><span class="line">    if (project<span class="variable">.plugins</span><span class="variable">.hasPlugin</span>(&quot;com<span class="variable">.android</span><span class="variable">.application</span>&quot;)) {</span><br><span class="line">        def android = project<span class="variable">.extensions</span><span class="variable">.getByName</span>(&quot;android&quot;)</span><br><span class="line">        android<span class="variable">.applicationVariants</span><span class="variable">.all</span> {ApplicationVariantImpl variant -&gt;</span><br><span class="line">            project<span class="variable">.logger</span><span class="variable">.error</span> &quot;DebuggerPlugin:${variant}&quot;</span><br><span class="line">            ApplicationVariantData apkVariantData = variant<span class="variable">.getApkVariantData</span>()</span><br><span class="line">            ApplicationVariantData variantData = variant<span class="variable">.getVariantData</span>()</span><br><span class="line">            TestVariant testVariant = variant<span class="variable">.getTestVariant</span>()</span><br><span class="line">            UnitTestVariant unitTestVariant = variant<span class="variable">.getUnitTestVariant</span>()</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4E8E;&#x662F;&#x8FD9;&#x4E2A;&#x65AD;&#x70B9;&#x6211;&#x6253;&#x4E86;&#x4E00;&#x5E74;&#x786C;&#x662F;&#x6CA1;&#x6253;&#x4F4F;&#xFF0C;&#x6069;&#xFF0C;&#x6CA1;&#x9519;&#xFF0C;&#x8FD9;&#x4E2A;&#x4E1C;&#x897F;&#x6211;&#x65AD;&#x65AD;&#x7EED;&#x7EED;&#x5B9E;&#x9A8C;&#x4E86;&#x4E00;&#x5E74;&#x4E5F;&#x6CA1;&#x6709;&#x6210;&#x529F;&#x8FC7;&#xFF0C;&#x4E5F;&#x6709;&#x70B9;&#x65E0;&#x8BED;&#xFF0C;&#x539F;&#x56E0;&#x4E5F;&#x4E0D;&#x77E5;&#x9053;&#x3002;&#x6628;&#x65E5;&#x53D1;&#x73B0;&#xFF0C;&#x5FC5;&#x987B;&#x5F97;&#x5728;&#x5916;&#x9762;&#x5305;&#x4E00;&#x5C42;plugin&#x624D;&#x80FD;&#x6253;&#x4F4F;&#x65AD;&#x70B9;&#xFF0C;&#x5C31;&#x50CF;&#x8FD9;&#x6837;&#x5B50;</p><figure class="highlight roboconf"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">buildscript {</span><br><span class="line">    <span class="attribute">repositories {</span></span><br><span class="line"><span class="attribute">        jcenter()</span></span><br><span class="line"><span class="attribute">    }</span></span><br><span class="line"><span class="attribute">    dependencies {</span></span><br><span class="line"><span class="attribute">        classpath &apos;com.android.tools.build</span>:gradle:2.3.3&apos;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">dependencies {</span><br><span class="line">    compile gradleApi()</span><br><span class="line">    compile localGroovy()</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">apply plugin: DebuggerPlugin</span><br><span class="line"></span><br><span class="line">import com<span class="variable">.android</span><span class="variable">.build</span><span class="variable">.gradle</span><span class="variable">.api</span><span class="variable">.TestVariant</span></span><br><span class="line">import com<span class="variable">.android</span><span class="variable">.build</span><span class="variable">.gradle</span><span class="variable">.api</span><span class="variable">.UnitTestVariant</span></span><br><span class="line">import com<span class="variable">.android</span><span class="variable">.build</span><span class="variable">.gradle</span><span class="variable">.internal</span><span class="variable">.variant</span><span class="variable">.ApplicationVariantData</span></span><br><span class="line">import com<span class="variable">.android</span><span class="variable">.build</span><span class="variable">.gradle</span><span class="variable">.internal</span><span class="variable">.api</span><span class="variable">.ApplicationVariantImpl</span></span><br><span class="line"></span><br><span class="line">class DebuggerPlugin implements Plugin&lt;Project&gt; {</span><br><span class="line">    void apply(Project project) {</span><br><span class="line">        project<span class="variable">.afterEvaluate</span> {</span><br><span class="line">            if (project<span class="variable">.plugins</span><span class="variable">.hasPlugin</span>(&quot;com<span class="variable">.android</span><span class="variable">.application</span>&quot;)) {</span><br><span class="line">                def android = project<span class="variable">.extensions</span><span class="variable">.getByName</span>(&quot;android&quot;)</span><br><span class="line">                android<span class="variable">.applicationVariants</span><span class="variable">.all</span> {ApplicationVariantImpl variant -&gt;</span><br><span class="line">                    project<span class="variable">.logger</span><span class="variable">.error</span> &quot;DebuggerPlugin:${variant}&quot;</span><br><span class="line">                    ApplicationVariantData apkVariantData = variant<span class="variable">.getApkVariantData</span>()</span><br><span class="line">                    ApplicationVariantData variantData = variant<span class="variable">.getVariantData</span>()</span><br><span class="line">                    TestVariant testVariant = variant<span class="variable">.getTestVariant</span>()</span><br><span class="line">                    UnitTestVariant unitTestVariant = variant<span class="variable">.getUnitTestVariant</span>()</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5177;&#x4F53;&#x539F;&#x56E0;&#x4E5F;&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x7406;&#x8BBA;&#x4E0A;&#x6765;&#x8BB2;&#xFF0C;&#x4E24;&#x8005;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x5927;&#x7684;&#x533A;&#x522B;&#xFF0C;&#x9664;&#x975E;&#x4E0D;&#x5305;plugin&#x7684;&#x4EE3;&#x7801;&#x7F16;&#x8BD1;&#x540E;&#x4EE3;&#x7801;&#x4F4D;&#x7F6E;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;&#xFF0C;&#x5BFC;&#x81F4;&#x6253;&#x4E0D;&#x5230;&#x65AD;&#x70B9;&#x3002;</p><p>&#x5176;&#x5B9E;&#x8FD9;&#x4E8B;&#x4E5F;&#x602A;&#x81EA;&#x5DF1;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x5F00;&#x59CB;&#x76F4;&#x63A5;&#x7528;&#x63D2;&#x4EF6;&#x9879;&#x76EE;&#x6765;&#x6D4B;&#xFF0C;&#x5C06;&#x5176;&#x53D1;&#x5E03;&#x5230;&#x672C;&#x5730;maven&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C;&#x53BB;&#x6253;&#x65AD;&#x70B9;&#xFF0C;&#x4F30;&#x8BA1;&#x8001;&#x65E9;&#x5C31;&#x6210;&#x529F;&#x4E86;&#xFF0C;&#x786C;&#x662F;&#x5728;build.gradle&#x4E2D;&#x5199;&#x96F6;&#x788E;&#x7684;&#x4EE3;&#x7801;&#x6765;&#x6D4B;&#x8BD5;&#xFF0C;&#x5F80;&#x4E8B;&#x4E0D;&#x63D0;&#x4E5F;&#x7F62;&#x3002;</p><h3 id="&#x4E00;&#x4E2A;&#x5751;"><a href="#&#x4E00;&#x4E2A;&#x5751;" class="headerlink" title="&#x4E00;&#x4E2A;&#x5751;"></a>&#x4E00;&#x4E2A;&#x5751;</h3><p>&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x6267;&#x884C;&#x8FC7;&#x7A0B;&#x4F1A;&#x5148;&#x51FA;&#x73B0;&#x4E00;&#x4E2A;&#x9519;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">Error:The closure <span class="string">&apos;DebuggerPlugin$_apply_closure1$_closure2@20825b3e&apos;</span> <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">valid</span> <span class="keyword">as</span> an action <span class="keyword">for</span> argument <span class="string">&apos;com.android.build.gradle.internal.api.ApplicationVariantImpl_Decorated@1103b69d&apos;</span>. It should accept <span class="keyword">no</span> parameters, <span class="keyword">or</span> one compatible <span class="keyword">with</span> <span class="keyword">type</span> <span class="string">&apos;com.android.build.gradle.internal.api.ApplicationVariantImpl_Decorated&apos;</span>. It accepts (com.android.build.gradle.internal.api.ApplicationVariantImpl).</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x4E2A;&#x9519;&#x51FA;&#x73B0;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5C06;<strong>ApplicationVariantImpl variant</strong>&#x6539;&#x6210;<strong>def variant</strong>&#x5373;&#x53EF;&#xFF0C;&#x7136;&#x540E;&#x7EE7;&#x7EED;&#x8FD0;&#x884C;&#xFF0C;&#x4F1A;&#x51FA;&#x73B0;&#x53E6;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#x3002;</p><p>&#x5373;&#x51FA;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;<strong>cannot cast object with class A to A</strong>&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x4E0B;</p><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">Error:Cannot <span class="keyword">cast</span> <span class="keyword">object</span> <span class="string">&apos;ApplicationVariantData{debug}&apos;</span> <span class="keyword">with</span> <span class="keyword">class</span> <span class="string">&apos;com.android.build.gradle.internal.variant.ApplicationVariantData&apos;</span> <span class="keyword">to</span> <span class="keyword">class</span> <span class="string">&apos;com.android.build.gradle.internal.variant.ApplicationVariantData&apos;</span></span><br></pre></td></tr></table></figure><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x867D;&#x7136;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;obj1&#x548C;obj2&#x7684;&#x7C7B;&#x7684;&#x540D;&#x5B57;&#x76F8;&#x540C;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E24;&#x4E2A;&#x7C7B;&#x662F;&#x7531;&#x4E0D;&#x540C;&#x7684;&#x7C7B;&#x52A0;&#x8F7D;&#x5668;&#x5B9E;&#x4F8B;&#x6765;&#x52A0;&#x8F7D;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x88AB;&#x865A;&#x62DF;&#x673A;&#x8BA4;&#x4E3A;&#x662F;&#x76F8;&#x540C;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x629B;&#x51FA;&#x4E86;ClassCastException&#x5F02;&#x5E38;&#x3002;</p><p>&#x90A3;&#x4E48;&#x600E;&#x4E48;&#x89E3;&#x51B3;&#x5462;&#xFF0C;&#x5C06;&#x9879;&#x76EE;&#x4E2D;&#x6240;&#x6709;buildscript&#x4E2D;&#x7684;dependencies&#x4E0B;&#x5F15;&#x7528;&#x7684;android gradle plugin &#x7248;&#x672C;&#x90FD;&#x6539;&#x6210;&#x540C;&#x4E00;&#x4E2A;&#xFF0C;&#x5373;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">buildscript</span> {</span><br><span class="line">    <span class="keyword">repositories</span> {</span><br><span class="line">        jcenter()</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">dependencies</span> {</span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">&quot;com.android.tools.build:gradle:${global_gradle_plugin_version}&quot;</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4E4B;&#x540E;&#x5C06;~/.gradle/daemon/&#x76EE;&#x5F55;&#x4E0B;&#x5185;&#x5BB9;&#x5168;&#x90E8;&#x5220;&#x9664;&#xFF0C;&#x7136;&#x540E;&#x770B;&#x770B;&#x662F;&#x5426;&#x89E3;&#x51B3;&#x4E86;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x89E3;&#x51B3;&#xFF0C;&#x5219;&#x7EE7;&#x7EED;&#x5220;&#x9664;~/.gradle/daemon/&#xFF0C;&#x7136;&#x540E;&#x91CD;&#x542F;&#x7535;&#x8111;&#x3002;TM&#x7684;&#x5982;&#x679C;&#x8FD8;&#x6CA1;&#x597D;&#xFF0C;&#x90A3;&#x4E48;&#x8BF7;&#x786E;&#x5B9A;&#x9879;&#x76EE;&#x4E2D;&#x6240;&#x6709;&#x5F15;&#x7528;&#x7684;&#x63D2;&#x4EF6;&#x4E2D;&#x7684;compile&#x7684;android gradle plugin&#x7248;&#x672C;&#x662F;&#x5426;&#x90FD;&#x4E00;&#x81F4;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x4E00;&#x81F4;&#xFF0C;&#x8BF7;&#x4FDD;&#x6301;&#x4E00;&#x81F4;&#xFF0C;&#x4E0D;&#x7136;&#x4E5F;&#x6709;&#x95EE;&#x9898;&#x3002;</p><p>&#x8FD9;&#x95EE;&#x9898;&#x5C31;&#x7B97;&#x5B8C;&#x4E8B;&#x4E86;&#xFF0C;&#x5927;&#x6982;&#x53EF;&#x80FD;&#x548C;Gradle&#x7684;&#x5B88;&#x62A4;&#x8FDB;&#x7A0B;&#x3001;&#x63D2;&#x4EF6;&#x5F15;&#x7528;&#x7684;android gradle plugin&#x7248;&#x672C;&#x4E0D;&#x4E00;&#x81F4;&#x6709;&#x90A3;&#x4E48;&#x4E00;&#x70B9;&#x5173;&#x7CFB;&#x3002;</p><h3 id="&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x65B9;&#x5F0F;1"><a href="#&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x65B9;&#x5F0F;1" class="headerlink" title="&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x65B9;&#x5F0F;1"></a>&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x65B9;&#x5F0F;1</h3><p>&#x8BF4;&#x5B8C;&#x4E86;&#x4EE5;&#x4E0A;&#x5751;&#xFF0C;&#x6B63;&#x5F0F;&#x8FDB;&#x5165;&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x7684;&#x73AF;&#x8282;&#xFF0C;&#x65B9;&#x5F0F;&#x4E00;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x76F4;&#x63A5;&#x5229;&#x7528;gradle&#x7684;&#x53C2;&#x6570;&#x8BA9;&#x5176;&#x7B49;&#x5F85;&#x6211;&#x4EEC;&#x7684;&#x8C03;&#x8BD5;&#x8FDB;&#x7A0B;attach&#x4E0A;&#x53BB;&#x3002;&#x6BD4;&#x5982;&#x6211;&#x8981;&#x6267;&#x884C;gradle clean&#x8FD9;&#x4E2A;task&#xFF0C;&#x5219;&#x52A0;&#x4E0A;&#x4E24;&#x4E2A;&#x989D;&#x5916;&#x53C2;&#x6570;&#x5373;&#x53EF;</p><ul><li>&#x4E00;&#x4E2A;&#x662F;&#x5F00;&#x542F;debug</li><li><p>&#x4E00;&#x4E2A;&#x662F;&#x4E0D;&#x4F7F;&#x7528;&#x5B88;&#x62A4;&#x8FDB;&#x7A0B;</p><p>&#x5177;&#x4F53;&#x4F8B;&#x5B50;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">gradle</span> :app:clean -Dorg.gradle.<span class="literal">debug</span>=<span class="literal">true</span>  --<span class="literal">no</span>-daemon</span><br></pre></td></tr></table></figure><p>&#x4E4B;&#x540E;&#x8FD9;&#x4E2A;&#x8FDB;&#x7A0B;&#x5C31;&#x4F1A;&#x4E00;&#x76F4;&#x7B49;&#x5F85;&#xFF0C;&#x76F4;&#x5230;&#x6211;&#x4EEC;attach&#x6211;&#x4EEC;&#x7684;&#x8C03;&#x8BD5;&#x8FDB;&#x7A0B;&#x3002;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;&#xFF1A;</p><p><img src="/2017/07/05/%E5%8F%88%E6%8E%8C%E6%8F%A1%E4%BA%86%E4%B8%80%E9%A1%B9%E6%96%B0%E6%8A%80%E8%83%BD-%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95Gradle%E6%8F%92%E4%BB%B6/wait.png" alt="wait.png"></p></li></ul><p>&#x7136;&#x540E;&#x53C2;&#x8003;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;<a href="/2017/04/07/Intellij-IDEA&#x8FDC;&#x7A0B;&#x8C03;&#x8BD5;/">Intellij-IDEA&#x8FDC;&#x7A0B;&#x8C03;&#x8BD5;</a>&#xFF0C;&#x5229;&#x7528;Android Studio&#x6216;&#x8005;Intellij IDEA&#x7684;remote debug&#x8FDB;&#x884C;&#x8C03;&#x8BD5;&#xFF0C;&#x7AEF;&#x53E3;&#x53F7;&#x586B;5005.</p><p>&#x5982;&#x56FE;</p><p><img src="/2017/07/05/%E5%8F%88%E6%8E%8C%E6%8F%A1%E4%BA%86%E4%B8%80%E9%A1%B9%E6%96%B0%E6%8A%80%E8%83%BD-%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95Gradle%E6%8F%92%E4%BB%B6/remote_config.png" alt="remote_config.png"></p><p>&#x7136;&#x540E;&#x8FD0;&#x884C;remote</p><p><img src="/2017/07/05/%E5%8F%88%E6%8E%8C%E6%8F%A1%E4%BA%86%E4%B8%80%E9%A1%B9%E6%96%B0%E6%8A%80%E8%83%BD-%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95Gradle%E6%8F%92%E4%BB%B6/start_debug.png" alt="start_debug.png"></p><p>&#x4E4B;&#x540E;&#x5C31;&#x4F1A;attach&#x4E0A;&#x53BB;&#x6211;&#x4EEC;&#x7684;&#x8FDB;&#x7A0B;</p><p><img src="/2017/07/05/%E5%8F%88%E6%8E%8C%E6%8F%A1%E4%BA%86%E4%B8%80%E9%A1%B9%E6%96%B0%E6%8A%80%E8%83%BD-%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95Gradle%E6%8F%92%E4%BB%B6/attach_debug.png" alt="attach_debug.png"></p><p>&#x7136;&#x540E;&#x770B;&#x770B;&#x6548;&#x679C;</p><p><img src="/2017/07/05/%E5%8F%88%E6%8E%8C%E6%8F%A1%E4%BA%86%E4%B8%80%E9%A1%B9%E6%96%B0%E6%8A%80%E8%83%BD-%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95Gradle%E6%8F%92%E4%BB%B6/result.png" alt="result.png"></p><p>&#x4ECE;&#x6B64;&#x53EF;&#x4EE5;&#x6109;&#x5FEB;&#x7684;&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x4E86;&#x3002;</p><h3 id="&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x65B9;&#x5F0F;2"><a href="#&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x65B9;&#x5F0F;2" class="headerlink" title="&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x65B9;&#x5F0F;2"></a>&#x65AD;&#x70B9;&#x8C03;&#x8BD5;&#x65B9;&#x5F0F;2</h3><p>&#x548C;&#x65B9;&#x5F0F;&#x4E00;&#x5DEE;&#x4E0D;&#x591A;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x4E0D;&#x662F;&#x7528;gradle&#x7684;&#x53C2;&#x6570;&#x6765;&#x5F00;&#x542F;debug&#xFF0C;&#x800C;&#x662F;&#x7528;&#x73AF;&#x5883;&#x53D8;&#x91CF;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">GRADLE_OPTS</span>=<span class="string">&quot;-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005&quot;</span></span><br></pre></td></tr></table></figure><p>&#x4E4B;&#x540E;&#x5C31;&#x8DDF;&#x6B63;&#x5E38;&#x6267;&#x884C;&#x4EFB;&#x52A1;&#x4E00;&#x6837;</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">gradle clean</span></span><br></pre></td></tr></table></figure><p>&#x5269;&#x4E0B;&#x7684;&#x64CD;&#x4F5C;&#x548C;&#x65B9;&#x5F0F;1&#x4E00;&#x6837;&#x3002;</p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Debug</tag>
        <tag>Android Gradle Plugin</tag>
      </tags>
  </entry>
  <entry>
    <title>cmake 交叉编译</title>
    <url>/2017/06/27/cmake-%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><h4 id="Android&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;"><a href="#Android&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;" class="headerlink" title="Android&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;"></a>Android&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;</h4><ul><li><a href="https://android.googlesource.com/platform/tools/cmake-utils/+/cmake-master-dev/android.toolchain.cmake" target="_blank" rel="noopener">google&#x5B98;&#x65B9;&#x51FA;&#x7684;android.toolchain.cmake</a></li><li><a href="https://github.com/taka-no-me/android-cmake" target="_blank" rel="noopener">&#x7B2C;&#x4E09;&#x65B9;android-cmake&#xFF0C;&#x53EF;&#x4EE5;&#x88AB;android.toolchain.cmake&#x517C;&#x5BB9;</a><br><a href="http://gitlab.vdian.net/WD-INPUT/toolchain/" target="_blank" rel="noopener">http://gitlab.vdian.net/WD-INPUT/toolchain/</a></li></ul><h4 id="iOS&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;"><a href="#iOS&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;" class="headerlink" title="iOS&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;"></a>iOS&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;</h4><ul><li><a href="https://github.com/cristeab/ios-cmake" target="_blank" rel="noopener">cristeab/ios-cmake&#xFF0C;&#x4E24;&#x4E09;&#x5E74;&#x6CA1;&#x66F4;&#x65B0;&#x4E86;</a></li><li><a href="https://github.com/leetal/ios-cmake" target="_blank" rel="noopener">leetal/ios-cmake&#xFF0C;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;</a></li></ul><a id="more"></a><h3 id="&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x524D;&#x7684;&#x51C6;&#x5907;"><a href="#&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x524D;&#x7684;&#x51C6;&#x5907;" class="headerlink" title="&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x524D;&#x7684;&#x51C6;&#x5907;"></a>&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x524D;&#x7684;&#x51C6;&#x5907;</h3><p>clone&#x9879;&#x76EE;&#x5230;&#x672C;&#x5730;&#x67D0;&#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C;android&#x7684;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;ndk&#x76EE;&#x5F55;&#x4E0B;&#x7684;cmake&#xFF0C;&#x4F4D;&#x4E8E;ndk/build/cmake/android.toolchain.cmake&#xFF1B;iOS&#x53EF;&#x4EE5;&#x4F7F;&#x7528;<a href="https://github.com/leetal/ios-cmake&#xFF0C;&#x5C06;&#x5176;clone&#x5230;&#x672C;&#x5730;&#x3002;" target="_blank" rel="noopener">https://github.com/leetal/ios-cmake&#xFF0C;&#x5C06;&#x5176;clone&#x5230;&#x672C;&#x5730;&#x3002;</a></p><h3 id="Android&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;"><a href="#Android&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;" class="headerlink" title="Android&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;"></a>Android&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;</h3><p><strong>android&#x7684;cmake&#x5FC5;&#x987B;&#x4F7F;&#x7528;sdk&#x76EE;&#x5F55;&#x4E0B;&#x7684;cmake&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#xFF0C;google&#x5BF9;&#x5176;&#x4FEE;&#x6539;&#x4E86;&#x6E90;&#x7801;&#xFF0C;&#x5982;&#x679C;&#x4F7F;&#x7528;&#x7CFB;&#x7EDF;&#x7684;cmake&#xFF0C;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;&#x7F16;&#x8BD1;&#x51FA;&#x9519;</strong></p><p>&#x751F;&#x6210;cmake&#x7F16;&#x8BD1;&#x6240;&#x9700;&#x7684;&#x6587;&#x4EF6;<br></p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta">#-H&#x6307;&#x5411;CMakeLists.txt&#x6587;&#x4EF6;&#x7236;&#x7EA7;&#x76EE;&#x5F55;</span></span><br><span class="line"><span class="meta">#-B&#x6307;&#x5411;&#x4E2D;&#x95F4;&#x4EA7;&#x7269;&#x76EE;&#x5F55;</span></span><br><span class="line"><span class="meta">#-DCMAKE_LIBRARY_OUTPUT_DIRECTORY&#x6307;&#x5411;so&#x8F93;&#x51FA;&#x76EE;&#x5F55;</span></span><br><span class="line"><span class="meta">#-DCMAKE_TOOLCHAIN_FILE&#x6307;&#x5411;android.toolchain.cmake&#x6587;&#x4EF6;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;ndk&#x81EA;&#x5E26;&#x7684;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;clone&#x4E0B;&#x6765;&#x7684;&#x9879;&#x76EE;&#x4E2D;&#x7684;&#x6587;&#x4EF6;</span></span><br><span class="line"><span class="meta">#-DANDROID_NDK&#x6307;&#x5411;ndk&#x76EE;&#x5F55;</span></span><br><span class="line"><span class="meta">#-DANDROID_ABI&#x5B9A;&#x4E49;&#x76EE;&#x6807;cpu&#x7ED3;&#x6784;&#xFF0C;&#x53D6;&#x503C;armeabi&#xFF0C;armeabi-v7a&#xFF0C;arm64-v8a&#xFF0C;x86&#xFF0C;x86_64&#xFF0C;mips&#xFF0C;mips64&#x4E2D;&#x7684;&#x4E00;&#x4E2A;</span></span><br><span class="line"><span class="meta">#-DCMAKE_BUILD_TYPE&#x5B9A;&#x4E49;&#x6784;&#x5EFA;&#x7C7B;&#x578B;&#xFF0C;&#x53D6;&#x503C;Debug&#x6216;Release&#xFF0C;Release&#x6784;&#x5EFA;&#x505A;-O3&#x4E09;&#x7EA7;&#x4F18;&#x5316;</span></span><br><span class="line"><span class="meta">#-DANDROID_PLATFORM&#x5B9A;&#x4E49;&#x6700;&#x4F4E;api&#x7248;&#x672C;</span></span><br><span class="line"><span class="meta">#-DANDROID_TOOLCHAIN&#x8868;&#x793A;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x94FE;&#x7C7B;&#x578B;&#xFF0C;&#x53D6;&#x503C;gcc&#x6216;&#x8005;clang&#xFF0C;gcc&#x5DF2;&#x7ECF;&#x88AB;&#x5E9F;&#x5F03;</span></span><br><span class="line"><span class="meta">#-DANDROID_STL&#x6307;&#x660E;&#x4F7F;&#x7528;&#x7684;stl</span></span><br><span class="line"><span class="meta">#-DCMAKE_C_FLAGS&#x4EE3;&#x8868;c&#x7F16;&#x8BD1;&#x5668;&#x53C2;&#x6570;</span></span><br><span class="line"><span class="meta">#-DCMAKE_CXX_FLAGS&#x4EE3;&#x8868;c++&#x7F16;&#x8BD1;&#x5668;&#x53C2;&#x6570;</span></span><br><span class="line"><span class="meta">#&#x66F4;&#x591A;&#x53C2;&#x6570;&#x89C1;google&#x5B98;&#x65B9;&#x6587;&#x6863; https://developer.android.com/ndk/guides/cmake.html</span></span><br><span class="line"><span class="meta">#&#x5982;&#x679C;&#x9700;&#x8981;&#x4F7F;&#x7528;ninja&#x6784;&#x5EFA;&#xFF0C;&#x8FFD;&#x52A0;-GAndroid Gradle - Ninja&#x53C2;&#x6570;&#xFF0C;&#x8BE5;&#x53C2;&#x6570;&#x6807;&#x51C6;cmake&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x4E0D;&#x652F;&#x6301;&#xFF0C;&#x53EA;&#x6709;sdk&#x4E0B;&#x7684;cmake&#x652F;&#x6301;</span></span><br><span class="line"> </span><br><span class="line">/Users/lizhangqu/AndroidSDK/cmake/<span class="number">3.6</span><span class="number">.3155560</span>/bin/cmake \</span><br><span class="line">-H<span class="string">&quot;../jni&quot;</span> \</span><br><span class="line">-B<span class="string">&quot;../build/android/armeabi-v7a&quot;</span> \</span><br><span class="line">-DANDROID_ABI=<span class="string">&quot;armeabi-v7a&quot;</span> \</span><br><span class="line">-DANDROID_NDK=<span class="string">&quot;/Users/lizhangqu/AndroidNDK/android-ndk-r14b&quot;</span> \</span><br><span class="line">-DCMAKE_LIBRARY_OUTPUT_DIRECTORY=<span class="string">&quot;../build/android/libs/armeabi-v7a&quot;</span> \</span><br><span class="line">-DCMAKE_BUILD_TYPE=<span class="string">&quot;Release&quot;</span> \</span><br><span class="line">-DCMAKE_TOOLCHAIN_FILE=<span class="string">&quot;/Users/lizhangqu/AndroidNDK/android-ndk-r14b/build/cmake/android.toolchain.cmake&quot;</span> \</span><br><span class="line">-DANDROID_PLATFORM=<span class="string">&quot;android-14&quot;</span> \</span><br><span class="line">-DANDROID_TOOLCHAIN=<span class="string">&quot;clang&quot;</span> \</span><br><span class="line">-DCMAKE_C_FLAGS=<span class="string">&quot;-fpic -fexceptions -frtti&quot;</span> \</span><br><span class="line">-DCMAKE_CXX_FLAGS=<span class="string">&quot;-fpic -fexceptions -frtti&quot;</span> \</span><br><span class="line">-DANDROID_STL=<span class="string">&quot;c++_static&quot;</span> \</span><br><span class="line"><span class="meta">#-GAndroid Gradle - Ninja  #&#x9700;&#x8981;&#x652F;&#x6301;&#x81EA;&#x884C;&#x6253;&#x5F00;&#x6CE8;&#x91CA;</span></span><br></pre></td></tr></table></figure><p></p><p>clean&#x53CA;&#x6784;&#x5EFA;&#x76EE;&#x6807;&#x4EA7;&#x7269;<br></p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="comment">#--build&#x4EE3;&#x8868;cmake&#x751F;&#x6210;&#x7684;&#x4E2D;&#x95F4;&#x4EA7;&#x7269;&#x76EE;&#x5F55;&#xFF0C;&#x5373;&#x4E0A;&#x9762;-B&#x6307;&#x5B9A;&#x7684;&#x76EE;&#x5F55;</span></span><br><span class="line"><span class="comment">#--target&#x4EE3;&#x8868;&#x6784;&#x5EFA;&#x54EA;&#x4E2A;target</span></span><br><span class="line"><span class="comment">#-- -j4&#x4EE3;&#x8868;&#x6267;&#x884C;make&#x7684;&#x65F6;&#x5019;&#x8FFD;&#x52A0;-j4&#xFF0C;&#x5E76;&#x884C;&#x7F16;&#x8BD1;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#clean </span></span><br><span class="line"> </span><br><span class="line"><span class="string">/Users/lizhangqu/AndroidSDK/cmake/3.6.3155560/bin/cmake</span> \</span><br><span class="line"><span class="params">--build</span> <span class="string">&quot;../build/android/armeabi-v7a&quot;</span> \</span><br><span class="line"><span class="params">--target</span> clean</span><br><span class="line"> </span><br><span class="line"><span class="comment"># build your target</span></span><br><span class="line"><span class="string">/Users/lizhangqu/AndroidSDK/cmake/3.6.3155560/bin/cmake</span> \</span><br><span class="line"><span class="params">--build</span> <span class="string">&quot;../build/android/armeabi-v7a&quot;</span> \</span><br><span class="line"><span class="params">--target</span> &#x6784;&#x5EFA;&#x7684;&#x76EE;&#x6807;target \</span><br><span class="line">-- -j4</span><br></pre></td></tr></table></figure><p></p><h3 id="iOS&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;"><a href="#iOS&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;" class="headerlink" title="iOS&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;"></a>iOS&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;</h3><p>&#x751F;&#x6210;cmake&#x7F16;&#x8BD1;&#x6240;&#x9700;&#x7684;&#x6587;&#x4EF6;<br></p><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line"><span class="meta">#-H&#x6307;&#x5411;CMakeLists.txt&#x6587;&#x4EF6;&#x7236;&#x7EA7;&#x76EE;&#x5F55;</span></span><br><span class="line"><span class="meta">#-B&#x6307;&#x5411;&#x4E2D;&#x95F4;&#x4EA7;&#x7269;&#x76EE;&#x5F55;</span></span><br><span class="line"><span class="meta">#-DCMAKE_BUILD_TYPE&#x5B9A;&#x4E49;&#x6784;&#x5EFA;&#x7C7B;&#x578B;&#xFF0C;&#x53D6;&#x503C;Debug&#x6216;Release&#xFF0C;Release&#x6784;&#x5EFA;&#x505A;-O3&#x4E09;&#x7EA7;&#x4F18;&#x5316;</span></span><br><span class="line"><span class="meta">#-DIOS_PLATFORM&#x5B9A;&#x4E49;&#x6784;&#x5EFA;&#x7684;&#x76EE;&#x6807;&#x5E73;&#x53F0;&#xFF0C;OS&#x8868;&#x793A;&#x6784;&#x5EFA;iPhoneOS&#x6240;&#x9700;&#x7684;lib&#xFF0C;SIMULATOR&#x4EE3;&#x8868;&#x6784;&#x5EFA;x86&#x6A21;&#x62DF;&#x5668;&#x6240;&#x9700;&#x7684;lib&#xFF0C;SIMULATOR64&#x4EE3;&#x8868;&#x6784;&#x5EFA;x86_64&#x6A21;&#x62DF;&#x5668;&#x6240;&#x9700;&#x7684;lib</span></span><br><span class="line"><span class="meta">#-DCMAKE_TOOLCHAIN_FILE&#x6307;&#x5411;ios.toolchain.cmake&#x6587;&#x4EF6;&#xFF0C;&#x4F7F;&#x7528;clone&#x4E0B;&#x6765;&#x7684;&#x9879;&#x76EE;&#x4E2D;&#x7684;&#x6587;&#x4EF6;</span></span><br><span class="line">cmake \</span><br><span class="line">-H<span class="string">&quot;../jni&quot;</span> \</span><br><span class="line">-B<span class="string">&quot;../build/ios&quot;</span> \</span><br><span class="line">-DCMAKE_BUILD_TYPE=<span class="string">&quot;Release&quot;</span> \</span><br><span class="line">-DCMAKE_TOOLCHAIN_FILE=<span class="string">&quot;../toolchain/ios.toolchain.cmake&quot;</span> \</span><br><span class="line">-DIOS_PLATFORM=OS</span><br><span class="line"><span class="meta"># IOS_PLATFORM</span></span><br><span class="line"><span class="meta"># OS = Build for iPhoneOS.</span></span><br><span class="line"><span class="meta"># SIMULATOR = Build for x86 i386 iPhone Simulator.</span></span><br><span class="line"><span class="meta"># SIMULATOR64 = Build for x86 x86_64 iPhone Simulator.</span></span><br><span class="line"><span class="meta"># CMAKE_BUILD_TYPE</span></span><br><span class="line"><span class="meta"># Debug or Release</span></span><br></pre></td></tr></table></figure><p></p><p>clean&#x53CA;&#x6784;&#x5EFA;&#x76EE;&#x6807;&#x4EA7;&#x7269;<br></p><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">#--build&#x4EE3;&#x8868;cmake&#x751F;&#x6210;&#x7684;&#x4E2D;&#x95F4;&#x4EA7;&#x7269;&#x76EE;&#x5F55;&#xFF0C;&#x5373;&#x4E0A;&#x9762;-B&#x6307;&#x5B9A;&#x7684;&#x76EE;&#x5F55;</span></span><br><span class="line"><span class="comment">#--target&#x4EE3;&#x8868;&#x6784;&#x5EFA;&#x54EA;&#x4E2A;target</span></span><br><span class="line"><span class="comment">#-- -j4&#x4EE3;&#x8868;&#x6267;&#x884C;make&#x7684;&#x65F6;&#x5019;&#x8FFD;&#x52A0;-j4&#xFF0C;&#x5E76;&#x884C;&#x7F16;&#x8BD1;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#clean </span></span><br><span class="line"> </span><br><span class="line">cmake <span class="string">\</span></span><br><span class="line">--build <span class="string">&quot;../build/android/armeabi-v7a&quot;</span> <span class="string">\</span></span><br><span class="line">--target clean</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># build your target</span></span><br><span class="line">cmake <span class="string">\</span></span><br><span class="line">--build <span class="string">&quot;../build/ios&quot;</span> <span class="string">\</span></span><br><span class="line">--target &#x6784;&#x5EFA;&#x7684;&#x76EE;&#x6807;target <span class="string">\</span></span><br><span class="line">-- -j4</span><br></pre></td></tr></table></figure><p></p>]]></content>
      <categories>
        <category>cmake</category>
      </categories>
      <tags>
        <tag>cmake</tag>
        <tag>Android，ndk</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Gradle Plugin 源码解析之 externalNativeBuild</title>
    <url>/2017/06/24/Android-Gradle-Plugin%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B9%8BexternalNativeBuild/</url>
    <content><![CDATA[<p>&#x5728;Android Studio 2.2&#x5F00;&#x59CB;&#x7684;Android Gradle Plugin&#x7248;&#x672C;&#x4E2D;&#xFF0C;Google&#x96C6;&#x6210;&#x4E86;&#x5BF9;cmake&#x7684;&#x5B8C;&#x7F8E;&#x652F;&#x6301;&#xFF0C;&#x800C;&#x539F;&#x5148;&#x7684;ndkBuild&#x7684;&#x65B9;&#x5F0F;&#x652F;&#x6301;&#x4E5F;&#x53D8;&#x5F97;&#x66F4;&#x52A0;&#x826F;&#x597D;&#x3002;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x5C31;&#x6765;&#x8BF4;&#x8BF4;Android Gradle Plugin&#x4E0E;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x4E4B;&#x95F4;&#x7684;&#x4E00;&#x4E9B;&#x4E8B;&#xFF0C;&#x5373;externalNativeBuild&#x76F8;&#x5173;&#x7684;task&#xFF0C;&#x4E3B;&#x8981;&#x662F;&#x89E3;&#x8BFB;&#x4E00;&#x4E0B;gradle&#x6784;&#x5EFA;&#x7CFB;&#x7EDF;&#x76F8;&#x5173;&#x7684;&#x6E90;&#x7801;&#x3002;</p><a id="more"></a><h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>&#x5982;&#x679C;&#x4F60;&#x5728;gradle&#x4E2D;&#x4F7F;&#x7528;&#x8FC7;cmake&#xFF0C;&#x4F60;&#x4F1A;&#x53D1;&#x73B0;&#x5728;gradle&#x6267;&#x884C;sync&#x64CD;&#x4F5C;&#x540E;&#xFF0C;&#x9879;&#x76EE;&#x7684;module&#x76EE;&#x5F55;&#x4E0B;&#x5C31;&#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x53EB;<strong>.externalNativeBuild</strong>&#x7684;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x8BE5;&#x6587;&#x4EF6;&#x5939;&#x7528;&#x6765;&#x8FDB;&#x884C;C/C++&#x4EE3;&#x7801;&#x7684;&#x7F16;&#x8BD1;&#xFF0C;&#x5F53;&#x7136;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x7528;&#x7684;&#x662F;ndkBuild&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x8BE5;&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x7684;&#x6587;&#x4EF6;&#x4F1A;&#x53D1;&#x751F;&#x53D8;&#x5316;&#xFF0C;&#x6587;&#x4EF6;&#x8F83;cmake&#x4F1A;&#x5C11;&#x5F88;&#x591A;&#x3002;</p><p>cmake&#x65B9;&#x5F0F;&#x4EA7;&#x751F;&#x7684;&#x6587;&#x4EF6;&#x5217;&#x8868;&#x5982;&#x4E0B;&#xFF1A;</p><p><img src="/2017/06/24/Android-Gradle-Plugin%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B9%8BexternalNativeBuild/extern-build-cmake.png" alt="extern-build-cmake.png"></p><p>&#x800C;ndkBuild&#x65B9;&#x5F0F;&#x4EA7;&#x751F;&#x7684;&#x6587;&#x4EF6;&#x5217;&#x8868;&#x5982;&#x4E0B;&#xFF1A;</p><p><img src="/2017/06/24/Android-Gradle-Plugin%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90%E4%B9%8BexternalNativeBuild/extern-build-ndk.png" alt="extern-build-ndk.png"></p><p>&#x4ED6;&#x4EEC;&#x7684;&#x5171;&#x540C;&#x70B9;&#x662F;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x53EB;<strong>android_gradle_build.json</strong>&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x7528;&#x6765;&#x88AB;Android Gradle Plugin&#x4E2D;&#x7684;externalNativeBuild&#x4EFB;&#x52A1;&#x89E3;&#x6790;&#xFF0C;&#x5C06;&#x6784;&#x5EFA;&#x547D;&#x4EE4;&#x89E3;&#x6790;&#x51FA;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x7F16;&#x8BD1;C/C++&#x4EE3;&#x7801;&#xFF0C;&#x6700;&#x540E;&#x4EA7;&#x751F;&#x76EE;&#x6807;so&#x6587;&#x4EF6;&#x3002;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;&#x8FD8;&#x6709;x_build_command.txt&#x548C;x_build_output.txt&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x5176;&#x4E2D;x&#x8868;&#x793A;&#x6784;&#x5EFA;&#x65B9;&#x5F0F;&#xFF0C;&#x4F7F;&#x7528;cmake&#x7684;&#x8BDD;x&#x5C31;&#x7B49;&#x4E8E;cmake&#xFF0C;&#x4F7F;&#x7528;ndkBuild&#x7684;&#x8BDD;x&#x5C31;&#x7B49;&#x4E8E;ndkBuild&#x3002;x_build_command.txt&#x6587;&#x4EF6;&#x627F;&#x8F7D;&#x7740;&#x6784;&#x5EFA;&#x547D;&#x4EE4;&#xFF0C;android_gradle_build.json&#x7684;&#x751F;&#x6210;&#x4F9D;&#x8D56;&#x5B83;&#xFF0C;&#x800C;x_build_output.txt&#x6587;&#x4EF6;&#x662F;&#x6267;&#x884C;x_build_command.txt&#x4E2D;&#x7684;&#x6784;&#x5EFA;&#x547D;&#x4EE4;&#x540E;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#x7684;&#x5185;&#x5BB9;&#x3002;</p><h3 id="cmake"><a href="#cmake" class="headerlink" title="cmake"></a>cmake</h3><p>&#x901A;&#x8FC7;&#x67E5;&#x770B;android gradle plugin&#x7684;&#x6E90;&#x7801;&#xFF0C;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x751F;&#x6210;cmake_build_command.txt&#x6587;&#x4EF6;&#x751F;&#x6210;&#x7684;&#x65B9;&#x5F0F;&#x5176;&#x5B9E;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x4E0D;&#x65AD;&#x62FC;&#x63A5;&#x53C2;&#x6570;&#x7684;&#x8FC7;&#x7A0B;&#xFF0C;&#x5176;&#x6E90;&#x7801;&#x5728;CmakeExternalNativeJsonGenerator&#x4E2D;&#x7684;getProcessBuilder&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="meta">@NonNull</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">ProcessInfoBuilder getProcessBuilder(<span class="meta">@NonNull</span> <span class="built_in">String</span> abi, <span class="built_in">int</span> abiPlatformVersion,</span><br><span class="line">        <span class="meta">@NonNull</span> File outputJson) {</span><br><span class="line">    checkConfiguration();</span><br><span class="line">    ProcessInfoBuilder builder = <span class="keyword">new</span> ProcessInfoBuilder();</span><br><span class="line">    <span class="comment">// CMake requires a folder. Trim the filename off.</span></span><br><span class="line">    File cmakeListsFolder = getMakefile().getParentFile();</span><br><span class="line"></span><br><span class="line">    builder.setExecutable(getCmakeExecutable());</span><br><span class="line">    builder.addArgs(<span class="built_in">String</span>.format(<span class="string">&quot;-H%s&quot;</span>, cmakeListsFolder));</span><br><span class="line">    builder.addArgs(<span class="built_in">String</span>.format(<span class="string">&quot;-B%s&quot;</span>, outputJson.getParentFile()));</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> possibly remove the Android Gradle part.</span></span><br><span class="line">    <span class="comment">// Depends on how upstream CMake accepts our JSON patch.</span></span><br><span class="line">    builder.addArgs(<span class="string">&quot;-GAndroid Gradle - Ninja&quot;</span>);</span><br><span class="line">    builder.addArgs(<span class="built_in">String</span>.format(<span class="string">&quot;-DANDROID_ABI=%s&quot;</span>, abi));</span><br><span class="line">    builder.addArgs(<span class="built_in">String</span>.format(<span class="string">&quot;-DANDROID_NDK=%s&quot;</span>, getNdkFolder()));</span><br><span class="line">    builder.addArgs(</span><br><span class="line">            <span class="built_in">String</span>.format(<span class="string">&quot;-DCMAKE_LIBRARY_OUTPUT_DIRECTORY=%s&quot;</span>,</span><br><span class="line">                    <span class="keyword">new</span> File(getObjFolder(), abi)));</span><br><span class="line">    builder.addArgs(</span><br><span class="line">            <span class="built_in">String</span>.format(<span class="string">&quot;-DCMAKE_BUILD_TYPE=%s&quot;</span>, isDebuggable() ? <span class="string">&quot;Debug&quot;</span> : <span class="string">&quot;Release&quot;</span>));</span><br><span class="line">    builder.addArgs(<span class="built_in">String</span>.format(<span class="string">&quot;-DCMAKE_MAKE_PROGRAM=%s&quot;</span>,</span><br><span class="line">            getNinjaExecutable().getAbsolutePath()));</span><br><span class="line">    builder.addArgs(<span class="built_in">String</span>.format(<span class="string">&quot;-DCMAKE_TOOLCHAIN_FILE=%s&quot;</span>,</span><br><span class="line">            getToolChainFile().getAbsolutePath()));</span><br><span class="line"></span><br><span class="line">    builder.addArgs(<span class="built_in">String</span>.format(<span class="string">&quot;-DANDROID_PLATFORM=android-%s&quot;</span>, abiPlatformVersion));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!getcFlags().isEmpty()) {</span><br><span class="line">        builder.addArgs(<span class="built_in">String</span>.format(<span class="string">&quot;-DCMAKE_C_FLAGS=%s&quot;</span>, Joiner.on(<span class="string">&quot; &quot;</span>).join(getcFlags())));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!getCppFlags().isEmpty()) {</span><br><span class="line">        builder.addArgs(<span class="built_in">String</span>.format(<span class="string">&quot;-DCMAKE_CXX_FLAGS=%s&quot;</span>,</span><br><span class="line">                Joiner.on(<span class="string">&quot; &quot;</span>).join(getCppFlags())));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">String</span> argument : getBuildArguments()) {</span><br><span class="line">        builder.addArgs(argument);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> builder;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x4E3A;ProcessInfoBuilder&#xFF0C;&#x8BE5;&#x5BF9;&#x8C61;&#x4E13;&#x95E8;&#x7528;&#x4E8E;&#x643A;&#x5E26;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x4EE5;&#x53CA;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x6267;&#x884C;&#x65F6;&#x9700;&#x8981;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x4F20;&#x9012;&#x7ED9;project.exec&#x6267;&#x884C;&#x3002;</p><ul><li>&#x8BBE;&#x7F6E;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x4E3A;cmake&#xFF0C;&#x8C03;&#x7528;getCmakeExecutable&#x65B9;&#x6CD5;&#xFF0C;&#x83B7;&#x53D6;cmake&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#xFF0C;&#x8C03;&#x7528;setExecutable&#x65B9;&#x6CD5;&#x8BBE;&#x7F6E;&#x5B83;</li><li>&#x62FC;&#x63A5;-H&#x53C2;&#x6570;&#xFF0C;&#x5176;&#x503C;&#x4E3A;CMakeList.txt&#x6587;&#x4EF6;&#x6240;&#x5728;&#x76EE;&#x5F55;</li><li>&#x62FC;&#x63A5;-B&#x53C2;&#x6570;&#xFF0C;&#x5176;&#x503C;&#x4E3A;cmake&#x4EA7;&#x751F;&#x7684;&#x4E2D;&#x95F4;&#x4EA7;&#x7269;&#xFF0C;&#x4E00;&#x822C;&#x5C31;&#x662F;cmake_build_command.txt&#x6240;&#x5728;&#x76EE;&#x5F55;&#x7684;&#x7236;&#x76EE;&#x5F55;&#xFF0C;cmake&#x6784;&#x5EFA;&#x4EA7;&#x751F;&#x7684;&#x4E2D;&#x95F4;&#x4EA7;&#x7269;&#x5168;&#x90FD;&#x4F4D;&#x4E8E;&#x6B64;&#x76EE;&#x5F55;&#x3002;</li><li>&#x62FC;&#x63A5;-G&#x53C2;&#x6570;&#xFF0C;&#x5176;&#x503C;&#x4E3A;Android Gradle - Ninja&#xFF0C;&#x544A;&#x8BC9;cmake&#x751F;&#x6210;Android Gradle&#x9700;&#x8981;&#x7684;&#x9879;&#x76EE;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x4E14;&#x4F7F;&#x7528;ninja&#x6784;&#x5EFA;&#xFF0C;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x8BE5;&#x503C;&#x5728;&#x6807;&#x51C6;&#x7684;cmake&#x4E2D;&#x662F;&#x4E0D;&#x652F;&#x6301;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;as&#x4F7F;&#x7528;&#x7684;cmake&#x662F;google&#x4FEE;&#x6539;&#x8FC7;&#x7684;&#xFF0C;&#x901A;&#x8FC7;&#x67E5;&#x770B;&#x5176;&#x6CE8;&#x91CA; <strong>possibly remove the Android Gradle part. Depends on how upstream CMake accepts our JSON patch.</strong> &#x4E5F;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;google&#x53EF;&#x80FD;&#x4F1A;&#x79FB;&#x9664;&#x8BE5;&#x503C;&#x4E2D;Android Gradle&#x90E8;&#x5206;&#xFF0C;&#x4F46;&#x662F;&#x8FD8;&#x662F;&#x8981;&#x53D6;&#x51B3;&#x4E8E;cmake&#x5982;&#x679C;&#x63A5;&#x53D7;google&#x7684;patch&#x3002;</li><li>&#x8BBE;&#x7F6E;ANDROID_ABI&#x53C2;&#x6570;&#xFF0C;&#x5176;&#x503C;&#x4E3A;armeabi&#xFF0C;armeabi-v7a&#xFF0C;arm64-v8a&#xFF0C;x86&#xFF0C;x86_64&#xFF0C;mips&#xFF0C;mips64&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x3002;</li><li>&#x8BBE;&#x7F6E;ANDROID_NDK&#x53C2;&#x6570;&#xFF0C;&#x5176;&#x503C;&#x4E3A;ndk&#x7684;&#x8DEF;&#x5F84;&#x3002;</li><li>&#x8BBE;&#x7F6E;CMAKE_LIBRARY_OUTPUT_DIRECTORY&#x53C2;&#x6570;&#xFF0C;&#x5176;&#x503C;&#x4E3A;so&#x7684;&#x8F93;&#x51FA;&#x8DEF;&#x5F84;&#xFF0C;&#x4E00;&#x822C;&#x5176;&#x503C;&#x4E3A;&#x9879;&#x76EE;&#x7684;build&#x8DEF;&#x5F84;&#x4E0B;&#x7684;intermediates/cmake/debug/obj/$ANDROID_ABI</li><li>&#x8BBE;&#x7F6E;CMAKE_BUILD_TYPE&#x53C2;&#x6570;&#xFF0C;&#x662F;&#x5426;&#x662F;debug&#xFF0C;&#x5176;&#x503C;&#x4E3A;Debug&#x6216;&#x8005;Release&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#xFF0C;debug&#x542B;&#x7B26;&#x53F7;&#x4FE1;&#x606F;&#xFF0C;so&#x5F88;&#x5927;&#xFF0C;&#x4FBF;&#x4E8E;&#x8C03;&#x8BD5;&#xFF0C;Release&#x79FB;&#x9664;&#x4E86;debug&#x4FE1;&#x606F;&#xFF0C;&#x5C0F;&#x5F88;&#x591A;&#x3002;&#x5176;&#x503C;&#x6765;&#x6E90;&#x4E8E;build.gradle&#x4E2D;&#x7684;debuggable&#x503C;&#x3002;</li><li>&#x8BBE;&#x7F6E;CMAKE_MAKE_PROGRAM&#x53C2;&#x6570;&#x3002;&#x5176;&#x503C;&#x4E3A;ninja&#x8DEF;&#x5F84;&#xFF0C;&#x56E0;&#x4E3A;&#x751F;&#x6210;&#x7684;&#x662F;ninja&#x6784;&#x5EFA;&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x6307;&#x5B9A;&#x5176;&#x8DEF;&#x5F84;&#x3002;&#x8BE5;&#x503C;gradle&#x4F1A;&#x6839;&#x636E;sdk&#x548C;ndk&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x81EA;&#x52A8;&#x63A8;&#x65AD;&#x51FA;&#x3002;</li><li>&#x8BBE;&#x7F6E;CMAKE_TOOLCHAIN_FILE&#x53C2;&#x6570;&#xFF0C;&#x8BE5;&#x53C2;&#x6570;&#x662F;cmake&#x7528;&#x4E8E;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x65F6;&#x8BBE;&#x7F6E;&#x7684;&#x5FC5;&#x8981;&#x53C2;&#x6570;&#xFF0C;&#x4E3B;&#x8981;&#x8BBE;&#x7F6E;&#x4E00;&#x4E9B;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x9700;&#x8981;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x5982;CC&#xFF0C;CXX&#xFF0C;AR&#xFF0C;AS&#xFF0C;CFLAGS&#xFF0C;CXXFLAGS&#x7B49;&#xFF0C;&#x53EF;&#x4EE5;&#x67E5;&#x770B;<a href="/2017/06/22/NDK%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E5%B8%B8%E7%94%A8%E5%8F%98%E9%87%8F/">NDK &#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5E38;&#x7528;&#x53D8;&#x91CF;</a>&#xFF0C;android.toolchain.cmake&#x6587;&#x4EF6;&#x7684;&#x4EE3;&#x7801;&#x5728;<a href="https://android.googlesource.com/platform/tools/cmake-utils/+/cmake-master-dev/android.toolchain.cmake" target="_blank" rel="noopener">android.toolchain.cmake</a>&#xFF0C;&#x517C;&#x5BB9;<a href="https://github.com/taka-no-me/android-cmake" target="_blank" rel="noopener">android-cmake</a>&#xFF0C;&#x8BE5;&#x503C;gradle&#x4F1A;&#x6839;&#x636E;sdk&#x548C;ndk&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x81EA;&#x52A8;&#x63A8;&#x65AD;&#x51FA;&#x3002;</li><li>&#x8BBE;&#x7F6E;ANDROID_PLATFORM&#x53C2;&#x6570;&#xFF0C;&#x4E00;&#x822C;&#x8BBE;&#x6210;&#x548C;&#x9879;&#x76EE;&#x7684;&#x6700;&#x5C0F;api&#x7248;&#x672C;&#x4E00;&#x6837;&#x5373;&#x53EF;&#xFF0C;gradle&#x4F1A;&#x901A;&#x8FC7;&#x5B83;&#x548C;minSdk&#x67E5;&#x627E;&#x51FA;&#x5408;&#x9002;&#x7684;&#x503C;</li><li>&#x8BBE;&#x7F6E;&#x53EF;&#x9009;&#x9879;CMAKE_C_FLAGS&#x53C2;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x8BBE;&#x7F6E;&#xFF0C;&#x5176;&#x503C;&#x4E3A;&#x7F16;&#x8BD1;C&#x65F6;&#x7684;&#x4E00;&#x4E9B;&#x53C2;&#x6570;</li><li>&#x8BBE;&#x7F6E;&#x53EF;&#x9009;&#x9879;CMAKE_CXX_FLAGS&#x53C2;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x8BBE;&#x7F6E;&#xFF0C;&#x5176;&#x503C;&#x4E3A;&#x7F16;&#x8BD1;C++&#x65F6;&#x7684;&#x4E00;&#x4E9B;&#x53C2;&#x6570;</li><li>&#x8BBE;&#x7F6E;&#x53EF;&#x9009;&#x9879;arguments&#xFF0C;&#x5176;&#x503C;&#x4E3A;gradle&#x4F20;&#x8FDB;&#x6765;&#x7684;arguments&#x53C2;&#x6570;&#x3002;</li></ul><p>&#x66F4;&#x591A;&#x53C2;&#x6570;&#x8BF4;&#x660E;&#x89C1;<a href="https://developer.android.com/ndk/guides/cmake.html" target="_blank" rel="noopener">CMake</a></p><p>&#x7136;&#x540E;&#x5C06;&#x8BE5;&#x8FD4;&#x56DE;&#x503C;&#x8F6C;&#x4E3A;&#x5B57;&#x7B26;&#x4E32;&#x8F93;&#x51FA;&#x5230;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x8BE5;&#x6587;&#x4EF6;&#x5373;cmake_build_command.txt</p><p>&#x5176;&#x5185;&#x5BB9;&#x5927;&#x81F4;&#x5982;&#x4E0B;:</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="string">Executable :</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/AndroidSDK/</span>cmake<span class="regexp">/3.6.3155560/</span>bin/cmake</span><br><span class="line"><span class="string">arguments :</span> </span><br><span class="line">-Hpath<span class="regexp">/to/</span>CMakeFiles Parent Dir</span><br><span class="line">-Bpath<span class="regexp">/to/</span>moduleDir<span class="regexp">/.externalNativeBuild/</span>cmake<span class="regexp">/debug/</span>armeabi-v7a</span><br><span class="line">-GAndroid Gradle - Ninja</span><br><span class="line">-DANDROID_ABI=armeabi-v7a</span><br><span class="line">-DANDROID_NDK=<span class="regexp">/Users/</span>lizhangqu<span class="regexp">/AndroidNDK/</span>android-ndk-r14b</span><br><span class="line">-DCMAKE_LIBRARY_OUTPUT_DIRECTORY=path<span class="regexp">/to/</span>moduleDir<span class="regexp">/build/</span>intermediates<span class="regexp">/cmake/</span>debug<span class="regexp">/obj/</span>armeabi-v7a</span><br><span class="line">-DCMAKE_BUILD_TYPE=Debug</span><br><span class="line">-DCMAKE_MAKE_PROGRAM=<span class="regexp">/Users/</span>lizhangqu<span class="regexp">/AndroidSDK/</span>cmake<span class="regexp">/3.6.3155560/</span>bin/ninja</span><br><span class="line">-DCMAKE_TOOLCHAIN_FILE=<span class="regexp">/Users/</span>lizhangqu<span class="regexp">/AndroidNDK/</span>android-ndk-r14b<span class="regexp">/build/</span>cmake/android.toolchain.cmake</span><br><span class="line">-DANDROID_PLATFORM=android<span class="number">-14</span></span><br><span class="line">-DCMAKE_C_FLAGS=-fpic -fexceptions -frtti</span><br><span class="line">-DCMAKE_CXX_FLAGS=-fpic -fexceptions -frtti</span><br><span class="line">-DANDROID_STL=c++_static</span><br><span class="line"><span class="string">jvmArgs :</span></span><br></pre></td></tr></table></figure><p>&#x5F53;&#x7136;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x8C03;&#x7528;&#x4E4B;&#xFF0C;&#x751F;&#x6210;cmake&#x9879;&#x76EE;&#x7ED3;&#x6784;&#xFF0C;&#x5982;&#x4E0B;</p><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/Users/lizhangqu/AndroidSDK/cmake/3.6.3155560/bin/cmake \</span></span><br><span class="line">-<span class="ruby">H<span class="string">&quot;path/to/CMakeFiles Parent Dir&quot;</span> \</span></span><br><span class="line"><span class="ruby">-B<span class="string">&quot;path/to/moduleDir/.externalNativeBuild/cmake/debug/armeabi-v7a&quot;</span> \</span></span><br><span class="line"><span class="ruby">-G<span class="string">&quot;Android Gradle - Ninja&quot;</span> \</span></span><br><span class="line"><span class="ruby">-DANDROID_ABI=<span class="string">&quot;armeabi-v7a&quot;</span> \</span></span><br><span class="line"><span class="ruby">-DANDROID_NDK=<span class="string">&quot;/Users/lizhangqu/AndroidNDK/android-ndk-r14b&quot;</span> \</span></span><br><span class="line"><span class="ruby">-DCMAKE_LIBRARY_OUTPUT_DIRECTORY=<span class="string">&quot;path/to/moduleDir/build/intermediates/cmake/debug/obj/armeabi-v7a&quot;</span> \</span></span><br><span class="line"><span class="ruby">-DCMAKE_BUILD_TYPE=<span class="string">&quot;Debug&quot;</span> \</span></span><br><span class="line"><span class="ruby">-DCMAKE_MAKE_PROGRAM=<span class="string">&quot;/Users/lizhangqu/AndroidSDK/cmake/3.6.3155560/bin/ninja&quot;</span> \</span></span><br><span class="line"><span class="ruby">-DCMAKE_TOOLCHAIN_FILE=<span class="string">&quot;/Users/lizhangqu/AndroidNDK/android-ndk-r14b/build/cmake/android.toolchain.cmake&quot;</span> \</span></span><br><span class="line"><span class="ruby">-DANDROID_PLATFORM=<span class="string">&quot;android-14&quot;</span> \</span></span><br><span class="line"><span class="ruby">-DCMAKE_C_FLAGS=<span class="string">&quot;-fpic -fexceptions -frtti&quot;</span> \</span></span><br><span class="line"><span class="ruby">-DCMAKE_CXX_FLAGS=<span class="string">&quot;-fpic -fexceptions -frtti&quot;</span> \</span></span><br><span class="line"><span class="ruby">-DANDROID_STL=<span class="string">&quot;c++_static&quot;</span></span></span><br></pre></td></tr></table></figure><p>&#x5176;&#x5BF9;&#x5E94;&#x7684;gradle&#x8C03;&#x7528;&#x4EE3;&#x7801;&#x5927;&#x81F4;&#x5982;&#x4E0B;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">// See whether the current build command matches a previously written build command.</span></span><br><span class="line">String currentBuildCommand = processBuilder.<span class="keyword">to</span><span class="constructor">String()</span>;</span><br><span class="line">boolean rebuildDueToMissingPreviousCommand = <span class="literal">false</span>;</span><br><span class="line">File commandFile = <span class="keyword">new</span> <span class="constructor">File(<span class="params">expectedJson</span>.<span class="params">getParentFile</span>()</span>,</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>format(<span class="string">&quot;%s_build_command.txt&quot;</span>, get<span class="constructor">NativeBuildSystem()</span>.get<span class="constructor">Name()</span>));</span><br></pre></td></tr></table></figure><p>&#x5C31;&#x662F;&#x5C06;processBuilder&#x5BF9;&#x8C61;&#x4E2D;&#x643A;&#x5E26;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x8C03;&#x7528;project.exec&#x6267;&#x884C;&#x5373;&#x53EF;&#x3002;</p><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="keyword">String</span> buildOutput = executeProcess(processBuilder);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Write the captured process output to a file for diagnostic purposes.</span></span><br><span class="line"><span class="built_in">File</span> outputTextFile = <span class="keyword">new</span> <span class="built_in">File</span>(</span><br><span class="line">        expectedJson.getParentFile(),</span><br><span class="line">        <span class="keyword">String</span>.format(<span class="string">&quot;%s_build_output.txt&quot;</span>, getNativeBuildSystem().getName()));</span><br><span class="line">diagnostic(<span class="string">&quot;write build output %s&quot;</span>, outputTextFile.getAbsolutePath());</span><br><span class="line">Files.<span class="built_in">write</span>(buildOutput, outputTextFile, Charsets.UTF_8);</span><br></pre></td></tr></table></figure><p>executeProcess&#x6267;&#x884C;&#x5B8C;&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x4F1A;&#x4EA7;&#x751F;cmake_build_output.txt&#x6587;&#x4EF6;&#xFF0C;&#x8BE5;&#x6587;&#x4EF6;&#x5C31;&#x662F;&#x6267;&#x884C;cmake_build_command.txt&#x4E2D;&#x7684;&#x547D;&#x4EE4;&#x4E4B;&#x540E;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x5927;&#x81F4;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">-- Check <span class="keyword">for</span> working C <span class="string">compiler:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/AndroidNDK/</span>android-ndk-r14b<span class="regexp">/toolchains/</span>llvm<span class="regexp">/prebuilt/</span>darwin-x86_64<span class="regexp">/bin/</span>clang</span><br><span class="line">-- Check <span class="keyword">for</span> working C <span class="string">compiler:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/AndroidNDK/</span>android-ndk-r14b<span class="regexp">/toolchains/</span>llvm<span class="regexp">/prebuilt/</span>darwin-x86_64<span class="regexp">/bin/</span>clang -- works</span><br><span class="line">-- Detecting C compiler ABI info</span><br><span class="line">-- Detecting C compiler ABI info - done</span><br><span class="line">-- Detecting C compile features</span><br><span class="line">-- Detecting C compile features - done</span><br><span class="line">-- Check <span class="keyword">for</span> working CXX <span class="string">compiler:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/AndroidNDK/</span>android-ndk-r14b<span class="regexp">/toolchains/</span>llvm<span class="regexp">/prebuilt/</span>darwin-x86_64<span class="regexp">/bin/</span>clang++</span><br><span class="line">-- Check <span class="keyword">for</span> working CXX <span class="string">compiler:</span> <span class="regexp">/Users/</span>lizhangqu<span class="regexp">/AndroidNDK/</span>android-ndk-r14b<span class="regexp">/toolchains/</span>llvm<span class="regexp">/prebuilt/</span>darwin-x86_64<span class="regexp">/bin/</span>clang++ -- works</span><br><span class="line">-- Detecting CXX compiler ABI info</span><br><span class="line">-- Detecting CXX compiler ABI info - done</span><br><span class="line">-- Detecting CXX compile features</span><br><span class="line">-- Detecting CXX compile features - done</span><br><span class="line">-- Configuring done</span><br><span class="line">-- Generating done</span><br><span class="line">-- Build files have been written <span class="string">to:</span> path<span class="regexp">/to/</span>moduleDir<span class="regexp">/.externalNativeBuild/</span>cmake<span class="regexp">/debug/</span>armeabi-v7a</span><br></pre></td></tr></table></figure><p>&#x6B64;&#x5916;&#xFF0C;&#x5176;&#x4ED6;&#x6587;&#x4EF6;&#x4E5F;&#x88AB;&#x4E00;&#x5E76;&#x4EA7;&#x751F;&#xFF0C;&#x5982;android_gradle_build.json&#xFF0C;build.ninja&#xFF0C;cmake_insatll.cmake&#xFF0C;CMakeCache.txt&#xFF0C;rules.ninja&#xFF0C;CMakefiles&#x6587;&#x4EF6;&#x5939;&#x7B49;&#x7B49;&#x3002;</p><p>&#x800C;executeProcess&#x65B9;&#x6CD5;&#xFF0C;&#x6700;&#x7EC8;&#x8C03;&#x7528;&#x7684;&#x662F;GradleProcessExecutor&#x7684;execute&#x65B9;&#x6CD5;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7;&#x5176;&#x5185;&#x90E8;&#x7C7B;ExecAction&#x7684;execute&#x65B9;&#x6CD5;&#x6784;&#x9020;ExecSpec&#x5BF9;&#x8C61;&#xFF0C;&#x8C03;&#x7528;project.exec&#x65B9;&#x6CD5;&#x6267;&#x884C;&#x4E4B;&#x3002;&#x5176;&#x5927;&#x81F4;&#x6E90;&#x7801;&#x5982;&#x4E0B;:</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="meta">@NonNull</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ProcessResult execute(</span><br><span class="line">        <span class="meta">@NonNull</span> ProcessInfo processInfo,</span><br><span class="line">        <span class="meta">@NonNull</span> ProcessOutputHandler processOutputHandler) {</span><br><span class="line">    ProcessOutput output = processOutputHandler.createOutput();</span><br><span class="line"></span><br><span class="line">    ExecResult result;</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        result = project.exec(<span class="keyword">new</span> ExecAction(processInfo, output));</span><br><span class="line">    } <span class="keyword">finally</span> {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            output.close();</span><br><span class="line">        } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">            project.getLogger().warn(<span class="string">&quot;Exception while closing sub process streams&quot;</span>, e);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        processOutputHandler.handleOutput(output);</span><br><span class="line">    } <span class="keyword">catch</span> (<span class="keyword">final</span> ProcessException e) {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> OutputHandlerFailedGradleProcessResult(e);</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> GradleProcessResult(result, processInfo);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ExecAction</span> <span class="keyword">implements</span> <span class="title">Action</span>&lt;<span class="title">ExecSpec</span>&gt; {</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ProcessInfo processInfo;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ProcessOutput processOutput;</span><br><span class="line"></span><br><span class="line">    ExecAction(<span class="meta">@NonNull</span> <span class="keyword">final</span> ProcessInfo processInfo,</span><br><span class="line">            <span class="meta">@NonNull</span> <span class="keyword">final</span> ProcessOutput processOutput) {</span><br><span class="line">        <span class="keyword">this</span>.processInfo = processInfo;</span><br><span class="line">        <span class="keyword">this</span>.processOutput = processOutput;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> execute(ExecSpec execSpec) {</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * Gradle doesn&apos;t work correctly when there are empty args.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        List&lt;String&gt; args =</span><br><span class="line">                processInfo.getArgs().stream()</span><br><span class="line">                        .map(a -&gt; a.isEmpty()? &quot;\&quot;\&quot;&quot; : a)</span><br><span class="line">                        .collect(Collectors.toList());</span><br><span class="line">        execSpec.setExecutable(processInfo.getExecutable());</span><br><span class="line">        execSpec.args(args);</span><br><span class="line">        execSpec.environment(processInfo.getEnvironment());</span><br><span class="line">        execSpec.setStandardOutput(processOutput.getStandardOutput());</span><br><span class="line">        execSpec.setErrorOutput(processOutput.getErrorOutput());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// we want the caller to be able to do its own thing.</span></span><br><span class="line">        execSpec.setIgnoreExitValue(<span class="literal">true</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>json&#x6587;&#x4EF6;&#x751F;&#x6210;&#x4E86;&#xFF0C;&#x4E4B;&#x540E;&#x5C31;&#x662F;&#x751F;&#x4EA7;so&#x6587;&#x4EF6;&#x4E86;&#xFF0C;&#x751F;&#x6210;so&#x6587;&#x4EF6;&#x7531;ExternalNativeBuildTask&#x8D1F;&#x8D23;&#xFF0C;&#x5176;&#x4E3B;&#x8981;&#x804C;&#x8D23;&#x5C31;&#x662F;&#x89E3;&#x6790;&#x51FA;android_gradle_build.json&#x6587;&#x4EF6;&#x4E2D;libraries&#x7684;&#x5404;&#x9879;&#x4E2D;&#x7684;&#x7684;artifactName&#x548C;buildCommand&#xFF0C;&#x4F20;&#x5165;&#x5BF9;&#x5E94;&#x7684;executeProcessBatch&#x51FD;&#x6570;&#xFF0C;&#x6267;&#x884C;buildCommand&#x4E2D;&#x7684;&#x503C;&#xFF0C;&#x6267;&#x884C;&#x7684;&#x65B9;&#x5F0F;&#x4E5F;&#x662F;&#x901A;&#x8FC7;GradleProcessExecutor&#x7684;execute&#x65B9;&#x6CD5;&#xFF0C;&#x6700;&#x7EC8;&#x4EA7;&#x751F;so&#x3002;</p><p>&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B;android_gradle_build.json&#x7684;&#x5927;&#x81F4;&#x5185;&#x5BB9;&#xFF1A;</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">{</span><br><span class="line">	<span class="attr">&quot;buildFiles&quot;</span> : </span><br><span class="line">	[</span><br><span class="line">		<span class="string">&quot;path/to/CMakeLists.txt&quot;</span></span><br><span class="line">	],</span><br><span class="line">	<span class="attr">&quot;cleanCommands&quot;</span> : </span><br><span class="line">	[</span><br><span class="line">		<span class="string">&quot;/Users/lizhangqu/AndroidSDK/cmake/3.6.3155560/bin/cmake --build path/to/.externalNativeBuild/cmake/debug/armeabi-v7a --target clean&quot;</span></span><br><span class="line">	],</span><br><span class="line">	<span class="attr">&quot;cppFileExtensions&quot;</span> : [<span class="string">&quot;cpp&quot;</span> ],</span><br><span class="line">	<span class="attr">&quot;libraries&quot;</span> : </span><br><span class="line">	{</span><br><span class="line">		<span class="attr">&quot;so&#x540D;&#x5B57;-Debug-armeabi-v7a&quot;</span> : </span><br><span class="line">		{</span><br><span class="line">			<span class="attr">&quot;abi&quot;</span> : <span class="string">&quot;armeabi-v7a&quot;</span>,</span><br><span class="line">			<span class="attr">&quot;artifactName&quot;</span> : <span class="string">&quot;so&#x540D;&#x5B57;&quot;</span>,</span><br><span class="line">			<span class="attr">&quot;buildCommand&quot;</span> : <span class="string">&quot;/Users/lizhangqu/AndroidSDK/cmake/3.6.3155560/bin/cmake --build path/to/.externalNativeBuild/cmake/debug/armeabi-v7a --target so&#x540D;&#x5B57;&quot;</span>,</span><br><span class="line">			<span class="attr">&quot;buildType&quot;</span> : <span class="string">&quot;debug&quot;</span>,</span><br><span class="line">			<span class="attr">&quot;files&quot;</span> : </span><br><span class="line">			[</span><br><span class="line">				</span><br><span class="line">				{</span><br><span class="line">					<span class="attr">&quot;flags&quot;</span> : <span class="string">&quot;&#x5185;&#x5BB9;&quot;</span>,</span><br><span class="line">					<span class="attr">&quot;src&quot;</span> : <span class="string">&quot;&#x5185;&#x5BB9;&quot;</span>,</span><br><span class="line">					<span class="attr">&quot;workingDirectory&quot;</span> : <span class="string">&quot;path/to/.externalNativeBuild/cmake/debug/armeabi-v7a&quot;</span></span><br><span class="line">				},</span><br><span class="line">				{</span><br><span class="line">					<span class="attr">&quot;flags&quot;</span> : <span class="string">&quot;&#x5185;&#x5BB9;&quot;</span>,</span><br><span class="line">					<span class="attr">&quot;src&quot;</span> : <span class="string">&quot;&#x5185;&#x5BB9;&quot;</span>,</span><br><span class="line">					<span class="attr">&quot;workingDirectory&quot;</span> : <span class="string">&quot;path/to/.externalNativeBuild/cmake/debug/armeabi-v7a&quot;</span></span><br><span class="line">				},</span><br><span class="line">				{</span><br><span class="line">					<span class="attr">&quot;flags&quot;</span> : <span class="string">&quot;&#x5185;&#x5BB9;&quot;</span>,</span><br><span class="line">					<span class="attr">&quot;src&quot;</span> : <span class="string">&quot;&#x5185;&#x5BB9;&quot;</span>,</span><br><span class="line">					<span class="attr">&quot;workingDirectory&quot;</span> : <span class="string">&quot;path/to/.externalNativeBuild/cmake/debug/armeabi-v7a&quot;</span></span><br><span class="line">				}</span><br><span class="line">			],</span><br><span class="line">			<span class="attr">&quot;output&quot;</span> : <span class="string">&quot;path/to/build/intermediates/cmake/debug/obj/armeabi-v7a/so&#x540D;&#x5B57;.so&quot;</span>,</span><br><span class="line">			<span class="attr">&quot;toolchain&quot;</span> : <span class="string">&quot;12644252315582812689&quot;</span></span><br><span class="line">		}</span><br><span class="line">	},</span><br><span class="line">	<span class="attr">&quot;toolchains&quot;</span> : </span><br><span class="line">	{</span><br><span class="line">		<span class="attr">&quot;12644252315582812689&quot;</span> : </span><br><span class="line">		{</span><br><span class="line">			<span class="attr">&quot;cCompilerExecutable&quot;</span> : <span class="string">&quot;/Users/lizhangqu/AndroidNDK/android-ndk-r14b/toolchains/llvm/prebuilt/darwin-x86_64/bin/clang&quot;</span>,</span><br><span class="line">			<span class="attr">&quot;cppCompilerExecutable&quot;</span> : <span class="string">&quot;/Users/lizhangqu/AndroidNDK/android-ndk-r14b/toolchains/llvm/prebuilt/darwin-x86_64/bin/clang++&quot;</span></span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6CA1;&#x9519;&#x89E3;&#x6790;&#x7684;&#x5C31;&#x662F;libraries&#x4E0B;&#x201D;so&#x540D;&#x5B57;-Debug-armeabi-v7a&#x201D;&#x4E0B;&#x7684;artifactName&#x548C;buildCommand&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BD5;&#x8BD5;&#x76F4;&#x63A5;&#x5C06;buildCommand&#x4E2D;&#x7684;&#x547D;&#x4EE4;&#x590D;&#x5236;&#x5230;&#x547D;&#x4EE4;&#x884C;&#x6267;&#x884C;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;so&#x5C31;&#x4F1A;&#x7F16;&#x8BD1;&#x4EA7;&#x751F;&#x3002;</p><p>&#x9664;&#x4E86;&#x76F4;&#x63A5;&#x590D;&#x5236;buildCommand&#x4E2D;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x8FDB;&#x5165;&#x5230;cmake&#x751F;&#x6210;&#x7684;&#x6587;&#x4EF6;&#x76EE;&#x5F55;&#xFF0C;&#x5373;-B&#x6307;&#x5B9A;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x8C03;&#x7528;ninja&#x8FDB;&#x884C;&#x6784;&#x5EFA;&#x3002;&#x5982;&#xFF1A;</p><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">/Users<span class="meta-keyword">/lizhangqu/</span>AndroidSDK<span class="meta-keyword">/cmake/</span><span class="number">3.6</span><span class="number">.3155560</span><span class="meta-keyword">/bin/</span>ninja clean</span><br><span class="line"></span><br><span class="line">/Users<span class="meta-keyword">/lizhangqu/</span>AndroidSDK<span class="meta-keyword">/cmake/</span><span class="number">3.6</span><span class="number">.3155560</span><span class="meta-keyword">/bin/</span>ninja</span><br></pre></td></tr></table></figure><p>ninja&#x662F;chromium&#x7684;&#x6838;&#x5FC3;&#x6784;&#x5EFA;&#x5DE5;&#x5177;&#xFF0C;&#x53EF;&#x4EE5;&#x53C2;&#x8003;<a href="http://www.cnblogs.com/x_wukong/p/4846179.html" target="_blank" rel="noopener">Ninja - chromium&#x6838;&#x5FC3;&#x6784;&#x5EFA;&#x5DE5;&#x5177;</a>&#x5B66;&#x4E60;&#x4E0B;&#x76F8;&#x5173;&#x7684;&#x5185;&#x5BB9;&#x3002;</p><p>&#x800C;clean&#x64CD;&#x4F5C;&#xFF0C;&#x5219;&#x7531;ExternalNativeCleanTask&#x8D1F;&#x8D23;&#xFF0C;&#x5176;&#x4E3B;&#x8981;&#x804C;&#x8D23;&#x5C31;&#x662F;&#x89E3;&#x6790;&#x51FA;android_gradle_build.json&#x4E2D;&#x7684;cleanCommands&#x547D;&#x4EE4;&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C;&#x3002;</p><h3 id="ndkBuild"><a href="#ndkBuild" class="headerlink" title="ndkBuild"></a>ndkBuild</h3><p>&#x548C;cmake&#x7C7B;&#x4F3C;&#xFF0C;&#x9996;&#x5148;&#x5C31;&#x662F;ndkBuild_build_command.txt&#x7684;&#x751F;&#x6210;&#xFF0C;&#x5176;&#x751F;&#x6210;&#x6240;&#x9700;&#x7684;&#x5173;&#x952E;&#x53C2;&#x6570;&#x7531;NdkBuildExternalNativeJsonGenerator&#x4E2D;&#x7684;getProcessBuilder&#x51FD;&#x6570;&#x548C;getBaseArgs&#x51FD;&#x6570;&#x8D1F;&#x8D23;&#xFF0C;&#x5176;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight processing"><table><tr><td class="code"><pre><span class="line">@NonNull</span><br><span class="line">@Override</span><br><span class="line">ProcessInfoBuilder getProcessBuilder(@NonNull <span class="keyword">String</span> abi, <span class="built_in">int</span> abiPlatformVersion,</span><br><span class="line">        @NonNull File outputJson) {</span><br><span class="line">    checkConfiguration();</span><br><span class="line">    <span class="comment">// Discover Application.mk if one exists next to Android.mk</span></span><br><span class="line">    <span class="comment">// If there is an Application.mk file next to Android.mk then pick it up.</span></span><br><span class="line">    File applicationMk = <span class="keyword">new</span> File(getMakeFile().getParent(), <span class="string">&quot;Application.mk&quot;</span>);</span><br><span class="line">    ProcessInfoBuilder builder = <span class="keyword">new</span> ProcessInfoBuilder();</span><br><span class="line">    builder.setExecutable(getNdkBuild())</span><br><span class="line">            .addArgs(getBaseArgs(abi, abiPlatformVersion, applicationMk))</span><br><span class="line">            <span class="comment">// Disable response files so we can parse the command line.</span></span><br><span class="line">            .addArgs(<span class="string">&quot;APP_SHORT_COMMANDS=false&quot;</span>)</span><br><span class="line">            .addArgs(<span class="string">&quot;LOCAL_SHORT_COMMANDS=false&quot;</span>)</span><br><span class="line">            .addArgs(<span class="string">&quot;-B&quot;</span>) <span class="comment">// Build as if clean</span></span><br><span class="line">            .addArgs(<span class="string">&quot;-n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> builder;</span><br><span class="line">}</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get the base list of arguments for invoking ndk-build.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@NonNull</span><br><span class="line"><span class="keyword">private</span> List&lt;<span class="keyword">String</span>&gt; getBaseArgs(@NonNull <span class="keyword">String</span> abi, <span class="built_in">int</span> abiPlatformVersion,</span><br><span class="line">        @NonNull File applicationMk) {</span><br><span class="line">    List&lt;<span class="keyword">String</span>&gt; result = Lists.newArrayList();</span><br><span class="line">    result.<span class="built_in">add</span>(<span class="string">&quot;NDK_PROJECT_PATH=null&quot;</span>);</span><br><span class="line">    result.<span class="built_in">add</span>(<span class="string">&quot;APP_BUILD_SCRIPT=&quot;</span> + getMakeFile());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (applicationMk.exists()) {</span><br><span class="line">        <span class="comment">// NDK_APPLICATION_MK specifies the Application.mk file.</span></span><br><span class="line">        result.<span class="built_in">add</span>(<span class="string">&quot;NDK_APPLICATION_MK=&quot;</span> + applicationMk.getAbsolutePath());</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// APP_ABI and NDK_ALL_ABIS work together. APP_ABI is the specific ABI for this build.</span></span><br><span class="line">    <span class="comment">// NDK_ALL_ABIS is the universe of all ABIs for this build. NDK_ALL_ABIS is set to just the</span></span><br><span class="line">    <span class="comment">// current ABI. If we don&apos;t do this, then ndk-build will erase build artifacts for all abis</span></span><br><span class="line">    <span class="comment">// aside from the current.</span></span><br><span class="line">    result.<span class="built_in">add</span>(<span class="string">&quot;APP_ABI=&quot;</span> + abi);</span><br><span class="line">    result.<span class="built_in">add</span>(<span class="string">&quot;NDK_ALL_ABIS=&quot;</span> + abi);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isDebuggable()) {</span><br><span class="line">        result.<span class="built_in">add</span>(<span class="string">&quot;NDK_DEBUG=1&quot;</span>);</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        result.<span class="built_in">add</span>(<span class="string">&quot;NDK_DEBUG=0&quot;</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    result.<span class="built_in">add</span>(<span class="string">&quot;APP_PLATFORM=android-&quot;</span> + abiPlatformVersion);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// getObjFolder is set to the &quot;local&quot; subfolder in the user specified directory, therefore,</span></span><br><span class="line">    <span class="comment">// NDK_OUT should be set to getObjFolder().getParent() instead of getObjFolder().</span></span><br><span class="line">    <span class="keyword">String</span> ndkOut = getObjFolder().getParent();</span><br><span class="line">    <span class="keyword">if</span> (CURRENT_PLATFORM == PLATFORM_WINDOWS) {</span><br><span class="line">        <span class="comment">// Due to b.android.com/219225, NDK_OUT on Windows requires forward slashes.</span></span><br><span class="line">        <span class="comment">// ndk-build.cmd is supposed to escape the back-slashes but it doesn&apos;t happen.</span></span><br><span class="line">        <span class="comment">// Workaround here by replacing back slash with forward.</span></span><br><span class="line">        <span class="comment">// ndk-build will have a fix for this bug in r14 but this gradle fix will make it</span></span><br><span class="line">        <span class="comment">// work back to r13, r12, r11, and r10.</span></span><br><span class="line">        ndkOut = ndkOut.replace(<span class="string">&apos;\\&apos;</span>, <span class="string">&apos;/&apos;</span>);</span><br><span class="line">    }</span><br><span class="line">    result.<span class="built_in">add</span>(<span class="string">&quot;NDK_OUT=&quot;</span> + ndkOut);</span><br><span class="line"></span><br><span class="line">    result.<span class="built_in">add</span>(<span class="string">&quot;NDK_LIBS_OUT=&quot;</span> + getSoFolder().getAbsolutePath());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">String</span> flag : getcFlags()) {</span><br><span class="line">        result.<span class="built_in">add</span>(<span class="keyword">String</span>.format(<span class="string">&quot;APP_CFLAGS+=\&quot;%s\&quot;&quot;</span>, flag));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">String</span> flag : getCppFlags()) {</span><br><span class="line">        result.<span class="built_in">add</span>(<span class="keyword">String</span>.format(<span class="string">&quot;APP_CPPFLAGS+=\&quot;%s\&quot;&quot;</span>, flag));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">String</span> argument : getBuildArguments()) {</span><br><span class="line">        result.<span class="built_in">add</span>(argument);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><ul><li>&#x8BBE;&#x7F6E;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x4E3A;ndk-Build</li><li>&#x8BBE;&#x7F6E;NDK_PROJECT_PATH=null</li><li>&#x8BBE;&#x7F6E;APP_BUILD_SCRIPT&#x53C2;&#x6570;&#xFF0C;&#x5176;&#x503C;&#x6307;&#x5411;Android.mk&#x6587;&#x4EF6;</li><li>&#x8BBE;&#x7F6E;NDK_APPLICATION_MK&#x53C2;&#x6570;&#xFF0C;&#x5176;&#x503C;&#x6307;&#x5411;Application.mk&#x6587;&#x4EF6;&#xFF08;&#x5982;&#x679C;&#x5B58;&#x5728;&#x7684;&#x8BDD;&#xFF0C;&#x4E0D;&#x5B58;&#x5728;&#x5C31;&#x4E0D;&#x4F1A;&#x8BBE;&#x7F6E;&#x8BE5;&#x53C2;&#x6570;&#xFF09;</li><li>&#x8BBE;&#x7F6E;APP_ABI&#x53C2;&#x6570;&#xFF0C;&#x5176;&#x503C;&#x4E3A;armeabi&#xFF0C;armeabi-v7a&#xFF0C;arm64-v8a&#xFF0C;x86&#xFF0C;x86_64&#xFF0C;mips&#xFF0C;mips64&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x3002;</li><li>&#x8BBE;&#x7F6E;NDK_ALL_ABIS&#x53C2;&#x6570;&#xFF0C;&#x5176;&#x503C;&#x7B49;&#x540C;&#x4E8E;APP_ABI</li><li>&#x8BBE;&#x7F6E;NDK_DEBUG&#x53C2;&#x6570;&#xFF0C;&#x8868;&#x793A;&#x5341;&#x5206;&#x662F;debug&#x6784;&#x5EFA;&#xFF0C;debug&#x542B;&#x7B26;&#x53F7;&#x4FE1;&#x606F;&#xFF0C;so&#x5F88;&#x5927;&#xFF0C;&#x4FBF;&#x4E8E;&#x8C03;&#x8BD5;&#xFF0C;release&#x79FB;&#x9664;&#x4E86;debug&#x4FE1;&#x606F;&#xFF0C;&#x5C0F;&#x5F88;&#x591A;&#x3002;&#x5176;&#x503C;&#x6765;&#x6E90;&#x4E8E;build.gradle&#x4E2D;&#x7684;debuggable&#x503C;&#x3002;</li><li>&#x8BBE;&#x7F6E;APP_PLATFORM&#x53C2;&#x6570;&#xFF0C;&#x4E00;&#x822C;&#x8BBE;&#x6210;&#x548C;&#x9879;&#x76EE;&#x7684;&#x6700;&#x5C0F;api&#x7248;&#x672C;&#x4E00;&#x6837;&#x5373;&#x53EF;&#xFF0C;gradle&#x4F1A;&#x901A;&#x8FC7;&#x5B83;&#x548C;minSdk&#x67E5;&#x627E;&#x51FA;&#x5408;&#x9002;&#x7684;&#x503C;</li><li>&#x8BBE;&#x7F6E;NDK_OUT&#x53C2;&#x6570;&#xFF0C;&#x5176;&#x503C;&#x4E3A;obj&#x6587;&#x4EF6;&#x4EA7;&#x751F;&#x76EE;&#x5F55;&#xFF0C;&#x4E00;&#x822C;&#x6307;&#x5411;&#x9879;&#x76EE;&#x7684;build&#x8DEF;&#x5F84;&#x4E0B;&#x7684;intermediates/ndkBuild/$buildType/obj&#x76EE;&#x5F55;</li><li>&#x8BBE;&#x7F6E;NDK_LIBS_OUT&#x53C2;&#x6570;&#xFF0C;&#x5176;&#x503C;&#x4E3A;libs&#x53C2;&#x6570;&#x76EE;&#x5F55;&#xFF0C;&#x7528;&#x4E8E;so&#x7684;&#x5B58;&#x50A8;&#xFF0C;&#x4E00;&#x822C;&#x6307;&#x5411;&#x9879;&#x76EE;&#x7684;build&#x8DEF;&#x5F84;&#x4E0B;&#x7684;intermediates/ndkBuild/$buildType/lib&#x76EE;&#x5F55;</li><li>&#x8BBE;&#x7F6E;&#x53EF;&#x9009;&#x9879;APP_CFLAGS&#x53C2;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x8BBE;&#x7F6E;&#xFF0C;&#x5176;&#x503C;&#x4E3A;&#x7F16;&#x8BD1;C&#x65F6;&#x7684;&#x4E00;&#x4E9B;&#x53C2;&#x6570;</li><li>&#x8BBE;&#x7F6E;&#x53EF;&#x9009;&#x9879;APP_CPPFLAGS&#x53C2;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x8BBE;&#x7F6E;&#xFF0C;&#x5176;&#x503C;&#x4E3A;&#x7F16;&#x8BD1;C++&#x65F6;&#x7684;&#x4E00;&#x4E9B;&#x53C2;&#x6570;</li><li>&#x8BBE;&#x7F6E;&#x53EF;&#x9009;&#x9879;arguments&#xFF0C;&#x5176;&#x503C;&#x4E3A;gradle&#x4F20;&#x8FDB;&#x6765;&#x7684;arguments&#x53C2;&#x6570;&#x3002;</li><li>&#x8BBE;&#x7F6E;APP_SHORT_COMMANDS=false</li><li>&#x8BBE;&#x7F6E;LOCAL_SHORT_COMMANDS=false</li><li>&#x6DFB;&#x52A0;-B&#x53C2;&#x6570;</li><li>&#x6DFB;&#x52A0;-n&#x53C2;&#x6570;</li></ul><p>&#x6700;&#x7EC8;&#x751F;&#x6210;&#x7684;&#x6587;&#x4EF6;&#x5927;&#x81F4;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">Executable : /Users/lizhangqu/AndroidSDK/ndk-bundle/ndk-build</span><br><span class="line">arguments : </span><br><span class="line">NDK_PROJECT_PATH=null</span><br><span class="line">APP_BUILD_SCRIPT=path/to/Android.mk</span><br><span class="line">NDK_APPLICATION_MK=path/to/Application.mk</span><br><span class="line">APP_ABI=armeabi</span><br><span class="line">NDK_ALL_ABIS=armeabi</span><br><span class="line">NDK_DEBUG=1</span><br><span class="line">APP_PLATFORM=android-14</span><br><span class="line">NDK_OUT=path/to/moduleDir/build/intermediates/ndkBuild/debug/obj</span><br><span class="line">NDK_LIBS_OUT=path/to/moduleDir/build/intermediates/ndkBuild/debug/lib</span><br><span class="line">APP_CFLAGS+=<span class="string">&quot;-fpic -fexceptions -frtti&quot;</span></span><br><span class="line">APP_CPPFLAGS+=<span class="string">&quot;-fpic -fexceptions -frtti&quot;</span></span><br><span class="line">APP_SHORT_COMMANDS=false</span><br><span class="line">LOCAL_SHORT_COMMANDS=false</span><br><span class="line">-B</span><br><span class="line">-n</span><br><span class="line">jvmArgs :</span><br></pre></td></tr></table></figure><p>&#x540C;&#x7406;&#x6211;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x8C03;&#x7528;&#x4ED6;&#x4EEC;&#x6267;&#x884C;</p><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">/Users/lizhangqu/AndroidSDK/ndk-bundle/ndk-build \</span><br><span class="line">NDK_PROJECT_PATH=null \</span><br><span class="line">APP_BUILD_SCRIPT=path/to/Android.mk \</span><br><span class="line">NDK_APPLICATION_MK=path/to/Application.mk \</span><br><span class="line">APP_ABI=armeabi \</span><br><span class="line">NDK_ALL_ABIS=armeabi \</span><br><span class="line">NDK_DEBUG=1 \</span><br><span class="line">APP_PLATFORM=android-14 \</span><br><span class="line">NDK_OUT=path/to/moduleDir/build/intermediates/ndkBuild/debug/obj \</span><br><span class="line">NDK_LIBS_OUT=path/to/moduleDir/build/intermediates/ndkBuild/debug/lib \</span><br><span class="line">APP_CFLAGS+=<span class="string">&quot;-fpic -fexceptions -frtti&quot;</span> \</span><br><span class="line">APP_CPPFLAGS+=<span class="string">&quot;-fpic -fexceptions -frtti&quot;</span> \</span><br><span class="line">APP_SHORT_COMMANDS=false \</span><br><span class="line">LOCAL_SHORT_COMMANDS=false \</span><br><span class="line">-B \</span><br><span class="line">-n \</span><br></pre></td></tr></table></figure><p>&#x5176;&#x4EE3;&#x7801;&#x8C03;&#x7528;&#x8FC7;&#x7A0B;&#x540C;cmake&#xFF0C;&#x6700;&#x7EC8;&#x751F;&#x6210;ndkBuild_build_output.txt&#xFF0C;&#x8BE5;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x5C31;&#x662F;&#x8C03;&#x7528;ndkBuild_build_command.txt&#x4E2D;&#x7684;&#x547D;&#x4EE4;&#x540E;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;&#x7684;&#x5185;&#x5BB9;&#x3002;</p><p>&#x800C;&#x540C;cmake&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF0C;android_gradle_build.json&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x4E0D;&#x518D;&#x662F;&#x7531;cmake&#x6784;&#x5EFA;&#x7CFB;&#x7EDF;&#x4EA7;&#x751F;&#xFF0C;&#x800C;&#x662F;gradle&#x89E3;&#x6790;ndkBuild_build_command.txt&#x4EA7;&#x751F;&#x7684;&#x3002;</p><p>&#x5176;&#x4EE3;&#x7801;&#x5927;&#x81F4;&#x5982;&#x4E0B;</p><figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line">NativeBuildConfigValue buildConfig = <span class="keyword">new</span> NativeBuildConfigValueBuilder(</span><br><span class="line">            getMakeFile(),</span><br><span class="line">            projectDir)</span><br><span class="line">        .addCommands(</span><br><span class="line">                getBuildCommand(abi, abiPlatformVersion, applicationMk),</span><br><span class="line">                variantName,</span><br><span class="line">                buildOutput,</span><br><span class="line">                isWindows())</span><br><span class="line">        .build();</span><br><span class="line"></span><br><span class="line"><span class="built_in">if</span> (applicationMk.<span class="built_in">exists</span>()) {</span><br><span class="line">    diagnostic(<span class="string">&quot;found application make file %s&quot;</span>, applicationMk.getAbsolutePath());</span><br><span class="line">    Preconditions.checkNotNull(buildConfig.buildFiles);</span><br><span class="line">    buildConfig.buildFiles.add(applicationMk);</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">String</span> actualResult = <span class="keyword">new</span> GsonBuilder()</span><br><span class="line">        .registerTypeAdapter(<span class="built_in">File</span>.class, <span class="keyword">new</span> PlainFileGsonTypeAdaptor())</span><br><span class="line">        .setPrettyPrinting()</span><br><span class="line">        .create()</span><br><span class="line">        .toJson(buildConfig);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Write the captured ndk-build output to JSON file</span></span><br><span class="line"><span class="built_in">File</span> expectedJson = ExternalNativeBuildTaskUtils.getOutputJson(getJsonFolder(), abi);</span><br><span class="line">Files.<span class="built_in">write</span>(actualResult, expectedJson, Charsets.UTF_8);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ExternalNativeBuildTaskUtils.getOutputJson</span></span><br><span class="line"><span class="comment"> * Utility function that gets the name of the output JSON for a particular ABI.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@NonNull</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">File</span> getOutputJson(@NonNull <span class="built_in">File</span> jsonFolder, @NonNull <span class="keyword">String</span> abi) {</span><br><span class="line">    <span class="built_in">return</span> <span class="keyword">new</span> <span class="built_in">File</span>(getOutputFolder(jsonFolder, abi), <span class="string">&quot;android_gradle_build.json&quot;</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>NativeBuildConfigValue&#x7684;build&#x65B9;&#x6CD5;&#x5982;&#x4E0B;&#xFF0C;&#x603B;&#x800C;&#x8A00;&#x4E4B;&#x5C31;&#x662F;&#x8C03;&#x7528;&#x5404;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x83B7;&#x53D6;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x3002;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Builds the {@link NativeBuildConfigValue} from the given information.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@NonNull</span><br><span class="line">public NativeBuildConfigValue build<span class="literal">()</span> {</span><br><span class="line">    find<span class="constructor">LibraryNames()</span>;</span><br><span class="line">    find<span class="constructor">ToolchainNames()</span>;</span><br><span class="line">    find<span class="constructor">ToolChainCompilers()</span>;</span><br><span class="line"></span><br><span class="line">    NativeBuildConfigValue config = <span class="keyword">new</span> <span class="constructor">NativeBuildConfigValue()</span>;</span><br><span class="line">    <span class="comment">// Sort by library name so that output is stable</span></span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">Collections</span>.</span></span>sort(outputs, (o1, o2) -&gt; o1.libraryName.compare<span class="constructor">To(<span class="params">o2</span>.<span class="params">libraryName</span>)</span>);</span><br><span class="line">    config.cleanCommands = generate<span class="constructor">CleanCommands()</span>;</span><br><span class="line">    config.buildFiles = <span class="module-access"><span class="module"><span class="identifier">Lists</span>.</span></span><span class="keyword">new</span><span class="constructor">ArrayList(<span class="params">androidMk</span>)</span>;</span><br><span class="line">    config.libraries = generate<span class="constructor">Libraries()</span>;</span><br><span class="line">    config.toolchains = generate<span class="constructor">Toolchains()</span>;</span><br><span class="line">    config.cFileExtensions = generate<span class="constructor">Extensions(<span class="params">cFileExtensions</span>)</span>;</span><br><span class="line">    config.cppFileExtensions = generate<span class="constructor">Extensions(<span class="params">cppFileExtensions</span>)</span>;</span><br><span class="line">    return config;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x751F;&#x6210;&#x7684;json&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x5C31;&#x4E0D;&#x8D34;&#x4E86;&#xFF0C;&#x540C;cmake&#x3002;</p>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>NDK</tag>
        <tag>Android Gradle Plugin</tag>
      </tags>
  </entry>
  <entry>
    <title>NDK 交叉编译常用变量</title>
    <url>/2017/06/22/NDK%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91%E5%B8%B8%E7%94%A8%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<p>&#x603B;&#x7ED3;&#x4E00;&#x53D1;NDK&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x7684;&#x5957;&#x8DEF;</p><a id="more"></a><h3 id="&#x5DE5;&#x5177;&#x8BF4;&#x660E;"><a href="#&#x5DE5;&#x5177;&#x8BF4;&#x660E;" class="headerlink" title="&#x5DE5;&#x5177;&#x8BF4;&#x660E;"></a>&#x5DE5;&#x5177;&#x8BF4;&#x660E;</h3><ul><li>addr2line &#x628A;&#x7A0B;&#x5E8F;&#x5730;&#x5740;&#x8F6C;&#x6362;&#x4E3A;&#x6587;&#x4EF6;&#x540D;&#x548C;&#x884C;&#x53F7;&#x3002;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x4E2D;&#x7ED9;&#x5B83;&#x4E00;&#x4E2A;&#x5730;&#x5740;&#x548C;&#x4E00;&#x4E2A;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x540D;&#xFF0C;&#x5B83;&#x5C31;&#x4F1A;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x7684;&#x8C03;&#x8BD5;&#x4FE1;&#x606F;&#x6307;&#x51FA;&#x5728;&#x7ED9;&#x51FA;&#x7684;&#x5730;&#x5740;&#x4E0A;&#x662F;&#x54EA;&#x4E2A;&#x6587;&#x4EF6;&#x4EE5;&#x53CA;&#x884C;&#x53F7;&#x3002;</li><li>ar &#x5EFA;&#x7ACB;&#x3001;&#x4FEE;&#x6539;&#x3001;&#x63D0;&#x53D6;&#x5F52;&#x6863;&#x6587;&#x4EF6;&#x3002;&#x5F52;&#x6863;&#x6587;&#x4EF6;&#x662F;&#x5305;&#x542B;&#x591A;&#x4E2A;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x7684;&#x4E00;&#x4E2A;&#x5927;&#x6587;&#x4EF6;&#xFF0C;&#x5176;&#x7ED3;&#x6784;&#x4FDD;&#x8BC1;&#x4E86;&#x53EF;&#x4EE5;&#x6062;&#x590D;&#x539F;&#x59CB;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x3002;</li><li>as &#x4E3B;&#x8981;&#x7528;&#x6765;&#x7F16;&#x8BD1;GNU C&#x7F16;&#x8BD1;&#x5668;gcc&#x8F93;&#x51FA;&#x7684;&#x6C47;&#x7F16;&#x6587;&#x4EF6;&#xFF0C;&#x4EA7;&#x751F;&#x7684;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x7531;&#x8FDE;&#x63A5;&#x5668;ld&#x8FDE;&#x63A5;&#x3002;</li><li>c++filt &#x8FDE;&#x63A5;&#x5668;&#x4F7F;&#x7528;&#x5B83;&#x6765;&#x8FC7;&#x6EE4; C++ &#x548C; Java &#x7B26;&#x53F7;&#xFF0C;&#x9632;&#x6B62;&#x91CD;&#x8F7D;&#x51FD;&#x6570;&#x51B2;&#x7A81;&#x3002;</li><li>gprof &#x663E;&#x793A;&#x7A0B;&#x5E8F;&#x8C03;&#x7528;&#x6BB5;&#x7684;&#x5404;&#x79CD;&#x6570;&#x636E;&#x3002;</li><li>ld &#x662F;&#x8FDE;&#x63A5;&#x5668;&#xFF0C;&#x5B83;&#x628A;&#x4E00;&#x4E9B;&#x76EE;&#x6807;&#x548C;&#x5F52;&#x6863;&#x6587;&#x4EF6;&#x7ED3;&#x5408;&#x5728;&#x4E00;&#x8D77;&#xFF0C;&#x91CD;&#x5B9A;&#x4F4D;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x8FDE;&#x63A5;&#x7B26;&#x53F7;&#x5F15;&#x7528;&#x3002;&#x901A;&#x5E38;&#xFF0C;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x65B0;&#x7F16;&#x8BD1;&#x7A0B;&#x5E8F;&#x7684;&#x6700;&#x540E;&#x4E00;&#x6B65;&#x5C31;&#x662F;&#x8C03;&#x7528;ld&#x3002;</li><li>nm &#x5217;&#x51FA;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x7B26;&#x53F7;&#x3002;</li><li>objcopy &#x628A;&#x4E00;&#x79CD;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x590D;&#x5236;&#x5230;&#x53E6;&#x4E00;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x4E2D;&#x3002;</li><li>objdump &#x663E;&#x793A;&#x4E00;&#x4E2A;&#x6216;&#x8005;&#x66F4;&#x591A;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x7684;&#x4FE1;&#x606F;&#x3002;&#x4F7F;&#x7528;&#x9009;&#x9879;&#x6765;&#x63A7;&#x5236;&#x5176;&#x663E;&#x793A;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5B83;&#x6240;&#x663E;&#x793A;&#x7684;&#x4FE1;&#x606F;&#x901A;&#x5E38;&#x53EA;&#x6709;&#x7F16;&#x5199;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x7684;&#x4EBA;&#x624D;&#x611F;&#x5174;&#x8DA3;&#x3002;</li><li>ranlib &#x4EA7;&#x751F;&#x5F52;&#x6863;&#x6587;&#x4EF6;&#x7D22;&#x5F15;&#xFF0C;&#x5E76;&#x5C06;&#x5176;&#x4FDD;&#x5B58;&#x5230;&#x8FD9;&#x4E2A;&#x5F52;&#x6863;&#x6587;&#x4EF6;&#x4E2D;&#x3002;&#x5728;&#x7D22;&#x5F15;&#x4E2D;&#x5217;&#x51FA;&#x4E86;&#x5F52;&#x6863;&#x6587;&#x4EF6;&#x5404;&#x6210;&#x5458;&#x6240;&#x5B9A;&#x4E49;&#x7684;&#x53EF;&#x91CD;&#x5206;&#x914D;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x3002;</li><li>readelf &#x663E;&#x793A;elf&#x683C;&#x5F0F;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x7684;&#x4FE1;&#x606F;&#x3002;</li><li>size &#x5217;&#x51FA;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x6BCF;&#x4E00;&#x6BB5;&#x7684;&#x5927;&#x5C0F;&#x4EE5;&#x53CA;&#x603B;&#x4F53;&#x7684;&#x5927;&#x5C0F;&#x3002;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x5F52;&#x6863;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x6A21;&#x5757;&#x53EA;&#x4EA7;&#x751F;&#x4E00;&#x884C;&#x8F93;&#x51FA;&#x3002;</li><li>strings &#x6253;&#x5370;&#x67D0;&#x4E2A;&#x6587;&#x4EF6;&#x7684;&#x53EF;&#x6253;&#x5370;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x8FD9;&#x4E9B;&#x5B57;&#x7B26;&#x4E32;&#x6700;&#x5C11;4&#x4E2A;&#x5B57;&#x7B26;&#x957F;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x9009;&#x9879;-n&#x8BBE;&#x7F6E;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x6700;&#x5C0F;&#x957F;&#x5EA6;&#x3002;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5B83;&#x53EA;&#x6253;&#x5370;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x521D;&#x59CB;&#x5316;&#x548C;&#x53EF;&#x52A0;&#x8F7D;&#x6BB5;&#x4E2D;&#x7684;&#x53EF;&#x6253;&#x5370;&#x5B57;&#x7B26;&#xFF1B;&#x5BF9;&#x4E8E;&#x5176;&#x5B83;&#x7C7B;&#x578B;&#x7684;&#x6587;&#x4EF6;&#x5B83;&#x6253;&#x5370;&#x6574;&#x4E2A;&#x6587;&#x4EF6;&#x7684;&#x53EF;&#x6253;&#x5370;&#x5B57;&#x7B26;&#x3002;&#x8FD9;&#x4E2A;&#x7A0B;&#x5E8F;&#x5BF9;&#x4E8E;&#x4E86;&#x89E3;&#x975E;&#x6587;&#x672C;&#x6587;&#x4EF6;&#x7684;&#x5185;&#x5BB9;&#x5F88;&#x6709;&#x5E2E;&#x52A9;&#x3002;</li><li>strip &#x4E22;&#x5F03;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x5168;&#x90E8;&#x6216;&#x8005;&#x7279;&#x5B9A;&#x7B26;&#x53F7;&#x3002;</li></ul><h3 id="make-&#x73AF;&#x5883;&#x53D8;&#x91CF;"><a href="#make-&#x73AF;&#x5883;&#x53D8;&#x91CF;" class="headerlink" title="make &#x73AF;&#x5883;&#x53D8;&#x91CF;"></a>make &#x73AF;&#x5883;&#x53D8;&#x91CF;</h3><p>&#x89C1; <a href="https://www.gnu.org/software/make/manual/html_node/Implicit-Variables.html" target="_blank" rel="noopener">https://www.gnu.org/software/make/manual/html_node/Implicit-Variables.html</a></p><h3 id="&#x901A;&#x7528;&#x811A;&#x672C;"><a href="#&#x901A;&#x7528;&#x811A;&#x672C;" class="headerlink" title="&#x901A;&#x7528;&#x811A;&#x672C;"></a>&#x901A;&#x7528;&#x811A;&#x672C;</h3><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#ANDROID_HOME&#x76EE;&#x5F55;&#x4E0B;&#x5B58;&#x5728;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;toolchain&#x76EE;&#x5F55;&#xFF0C;&#x7531;make-standalone-toolchain.sh&#x751F;&#x6210;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x5404;cpu&#x67B6;&#x6784;&#x7684;&#x53C2;&#x6570;&#x89C1;&#x4E0B;&#x65B9;</span></span><br><span class="line"><span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=arm <span class="attribute">--install-dir</span>=./toolchain</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOL</span>=arm-linux-androideabi</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ANDROID_HOME</span>=`pwd`</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOLCHAIN</span>=<span class="variable">$ANDROID_HOME</span>/toolchain</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$TOOLCHAIN</span>/bin:$PATH</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PKG_CONFIG_LIBDIR</span>=<span class="variable">$TOOLCHAIN</span>/lib/pkgconfig</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CC</span>=<span class="variable">$TOOLCHAIN</span>/bin/$TOOL-gcc</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CXX</span>=<span class="variable">$TOOLCHAIN</span>/bin/$TOOL-g++</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">LINK</span>=<span class="variable">$CXX</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">LD</span>=<span class="variable">$TOOLCHAIN</span>/bin/$TOOL-ld</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">AR</span>=<span class="variable">$TOOLCHAIN</span>/bin/$TOOL-ar</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">AS</span>=<span class="variable">$TOOLCHAIN</span>/bin/$TOOL-as</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">NM</span>=<span class="variable">$TOOLCHAIN</span>/bin/$TOOL-nm</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">RANLIB</span>=<span class="variable">$TOOLCHAIN</span>/bin/$TOOL-ranlib</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">STRIP</span>=<span class="variable">$TOOLCHAIN</span>/bin/$TOOL-strip</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">OBJDUMP</span>=<span class="variable">$TOOLCHAIN</span>/bin/$TOOL-objdump</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">OBJCOPE</span>=<span class="variable">$TOOLCHAIN</span>/bin/$TOOL-objcopy</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ADDR2LINE</span>=<span class="variable">$TOOLCHAIN</span>/bin/$TOOL-addr2line</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ELFEDIT</span>=<span class="variable">$TOOLCHAIN</span>/bin/$TOOL-elfedit</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">READELF</span>=<span class="variable">$TOOLCHAIN</span>/bin/$TOOL-readelf</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">SIZE</span>=<span class="variable">$TOOLCHAIN</span>/bin/$TOOL-size</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">STRINGS</span>=<span class="variable">$TOOLCHAIN</span>/bin/$TOOL-strings</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># &#x5404;cpu&#x67B6;&#x6784;&#x7684;&#x53C2;&#x6570;&#x89C1;&#x4E0B;&#x65B9;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_FLAGS</span>=<span class="string">&quot;-mthumb&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> ARCH_LINK=</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CFLAGS</span>=<span class="string">&quot;<span class="variable">${ARCH_FLAGS}</span> -fpic -ffunction-sections -funwind-tables -fstack-protector -fno-strict-aliasing -finline-limit=64&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CXXFLAGS</span>=<span class="string">&quot;<span class="variable">${CFLAGS}</span> -frtti -fexceptions&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">LDFLAGS</span>=<span class="string">&quot;<span class="variable">${ARCH_LINK}</span>&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> ARFLAGS=</span><br><span class="line"><span class="builtin-name">export</span> LIBS=</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#CFLAGS&#xFF1A;&#x8868;&#x793A;&#x7528;&#x4E8E; C &#x7F16;&#x8BD1;&#x5668;&#x7684;&#x9009;&#x9879;&#x3002;</span></span><br><span class="line"><span class="comment">#&#x5982;&#x6307;&#x5B9A;&#x5934;&#x6587;&#x4EF6;&#xFF08;.h&#x6587;&#x4EF6;&#xFF09;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x5982;&#xFF1A;CFLAGS=-I/usr/include -I/path/include&#x3002;&#x540C;&#x6837;&#x5730;&#xFF0C;&#x5B89;&#x88C5;&#x4E00;&#x4E2A;&#x5305;&#x65F6;&#x4F1A;&#x5728;&#x5B89;&#x88C5;&#x8DEF;&#x5F84;&#x4E0B;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;include&#x76EE;&#x5F55;&#xFF0C;&#x5F53;&#x5B89;&#x88C5;&#x8FC7;&#x7A0B;&#x4E2D;&#x51FA;&#x73B0;&#x95EE;&#x9898;&#x65F6;&#xFF0C;&#x8BD5;&#x7740;&#x628A;&#x4EE5;&#x524D;&#x5B89;&#x88C5;&#x7684;&#x5305;&#x7684;include&#x76EE;&#x5F55;&#x52A0;&#x5165;&#x5230;&#x8BE5;&#x53D8;&#x91CF;&#x4E2D;&#x6765;&#x3002;</span></span><br><span class="line"><span class="comment">#CXXFLAGS&#xFF1A;&#x8868;&#x793A;&#x7528;&#x4E8E; C++ &#x7F16;&#x8BD1;&#x5668;&#x7684;&#x9009;&#x9879;&#x3002;</span></span><br><span class="line"><span class="comment">#&#x5982;&#x6267;&#x884C;&#x4E09;&#x7EA7;&#x4F18;&#x5316; CXXFLAGS=&quot;-O3&quot;</span></span><br><span class="line"><span class="comment">#LDFLAGS&#xFF1A;gcc &#x7B49;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x7528;&#x5230;&#x7684;&#x4E00;&#x4E9B;&#x94FE;&#x63A5;&#x53C2;&#x6570;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5728;&#x91CC;&#x9762;&#x6307;&#x5B9A;&#x5E93;&#x6587;&#x4EF6;&#x7684;&#x4F4D;&#x7F6E;&#x3002;&#x7528;&#x6CD5;&#xFF1A;LDFLAGS=-L/usr/lib -L/path/to/your/lib&#x3002;&#x6BCF;&#x5B89;&#x88C5;&#x4E00;&#x4E2A;&#x5305;&#x90FD;&#x51E0;&#x4E4E;&#x4E00;&#x5B9A;&#x7684;&#x4F1A;&#x5728;&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x91CC;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;lib&#x76EE;&#x5F55;&#x3002;&#x5982;&#x679C;&#x660E;&#x660E;&#x5B89;&#x88C5;&#x4E86;&#x67D0;&#x4E2A;&#x5305;&#xFF0C;&#x800C;&#x5B89;&#x88C5;&#x53E6;&#x4E00;&#x4E2A;&#x5305;&#x65F6;&#xFF0C;&#x5B83;&#x5374;&#x662F;&#x8BF4;&#x627E;&#x4E0D;&#x5230;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x90A3;&#x4E2A;&#x5305;&#x7684;lib&#x8DEF;&#x5F84;&#x52A0;&#x5165;&#x7684;LDFALGS&#x4E2D;&#x8BD5;&#x4E00;&#x4E0B;&#x3002;</span></span><br><span class="line"><span class="comment">#LIBS&#xFF1A;&#x544A;&#x8BC9;&#x94FE;&#x63A5;&#x5668;&#x8981;&#x94FE;&#x63A5;&#x54EA;&#x4E9B;&#x5E93;&#x6587;&#x4EF6;&#xFF0C;&#x5982;LIBS = -lpthread -liconv -llibz -llog</span></span><br><span class="line"><span class="comment">#LDFLAGS&#x662F;&#x544A;&#x8BC9;&#x94FE;&#x63A5;&#x5668;&#x4ECE;&#x54EA;&#x91CC;&#x5BFB;&#x627E;&#x5E93;&#x6587;&#x4EF6;&#xFF0C;&#x800C;LIBS&#x662F;&#x544A;&#x8BC9;&#x94FE;&#x63A5;&#x5668;&#x8981;&#x94FE;&#x63A5;&#x54EA;&#x4E9B;&#x5E93;&#x6587;&#x4EF6;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">autoreconf -i</span><br><span class="line">./configure <span class="attribute">--prefix</span>=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/local \</span><br><span class="line">			<span class="attribute">--with-sysroot</span>=<span class="variable">$TOOLCHAIN</span>/sysroot \</span><br><span class="line"><span class="comment">#			--host=$TOOL \</span></span><br><span class="line"><span class="comment">#			--enable-shared \ </span></span><br><span class="line"><span class="comment">#			--enable-static \</span></span><br><span class="line"><span class="comment">#			--disable-shared \</span></span><br><span class="line"><span class="comment">#			--disable-static</span></span><br><span class="line"></span><br><span class="line">make -j4</span><br><span class="line">make install</span><br><span class="line">make uninstall</span><br></pre></td></tr></table></figure><p>armeabi</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=arm <span class="attribute">--install-dir</span>=./toolchain</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOL</span>=arm-linux-androideabi</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_FLAGS</span>=<span class="string">&quot;-mthumb&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> ARCH_LINK=</span><br></pre></td></tr></table></figure><p>armeabi-v7a</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=arm <span class="attribute">--install-dir</span>=./toolchain</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOL</span>=arm-linux-androideabi</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_FLAGS</span>=<span class="string">&quot;-march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_LINK</span>=<span class="string">&quot;-march=armv7-a -Wl,--fix-cortex-a8&quot;</span></span><br></pre></td></tr></table></figure><p>arm64-v8a</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=arm64 <span class="attribute">--install-dir</span>=./toolchain</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOL</span>=aarch64-linux-android</span><br><span class="line"><span class="builtin-name">export</span> ARCH_FLAGS=</span><br><span class="line"><span class="builtin-name">export</span> ARCH_LINK=</span><br></pre></td></tr></table></figure><p>x86</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=x86 <span class="attribute">--install-dir</span>=./toolchain</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOL</span>=i686-linux-android</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_FLAGS</span>=<span class="string">&quot;-march=i686 -msse3 -mstackrealign -mfpmath=sse&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> ARCH_LINK=</span><br></pre></td></tr></table></figure><p>x86_64</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=x86_64 <span class="attribute">--install-dir</span>=./toolchain</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOL</span>=<span class="string">&quot;x86_64-linux-android&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_FLAGS</span>=<span class="string">&quot;-march=x86-64 -msse4.2 -mpopcnt -m64 -mtune=intel&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_LINK</span>=<span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>mips</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=mips <span class="attribute">--install-dir</span>=./toolchain</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOL</span>=mipsel-linux-android</span><br><span class="line"><span class="builtin-name">export</span> ARCH_FLAGS=</span><br><span class="line"><span class="builtin-name">export</span> ARCH_LINK=</span><br></pre></td></tr></table></figure><p>mips64</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=mips64 <span class="attribute">--install-dir</span>=./toolchain</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOL</span>=mips64el-linux-android</span><br><span class="line"><span class="builtin-name">export</span> ARCH_FLAGS=</span><br><span class="line"><span class="builtin-name">export</span> ARCH_LINK=</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>NDK</category>
      </categories>
      <tags>
        <tag>NDK</tag>
        <tag>交叉编译</tag>
      </tags>
  </entry>
  <entry>
    <title>Chromium 网络栈的编译与使用</title>
    <url>/2017/06/12/Chromium-%E7%BD%91%E7%BB%9C%E6%A0%88%E7%9A%84%E7%BC%96%E8%AF%91%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>&#x5F88;&#x4E45;&#x5F88;&#x4E45;&#x4E4B;&#x524D;&#xFF0C;&#x5C31;&#x770B;&#x5230;&#x67D0;&#x67D0;&#x516C;&#x53F8;&#x8BF4;&#x63D0;&#x53D6;&#x4E86;Chromium&#x7684;&#x7F51;&#x7EDC;&#x6808;&#x505A;App&#x7684;&#x7F51;&#x7EDC;&#x5E93;&#xFF0C;&#x5F53;&#x65F6;&#x81EA;&#x5DF1;&#x8FD8;&#x5E74;&#x5C11;&#x4E0D;&#x61C2;&#x4E8B;&#xFF0C;&#x4E00;&#x76F4;&#x89C9;&#x5F97;&#x4E0D;&#x660E;&#x89C9;&#x5389;&#xFF0C;&#x6700;&#x8FD1;&#x4E00;&#x5468;&#x5229;&#x7528;&#x4E0B;&#x73ED;&#x65F6;&#x95F4;&#xFF0C;&#x5B66;&#x4E60;&#x4E86;&#x4E0B;GN&#x6784;&#x5EFA;&#x5DE5;&#x5177;&#x548C;ninja&#x6784;&#x5EFA;&#x5DE5;&#x5177;&#xFF0C;&#x53C2;&#x8003;&#xFF1A;</p><ul><li><a href="http://hanpfei.github.io/2016/11/16/ChromiumGN%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/" target="_blank" rel="noopener">Chromium GN&#x6784;&#x5EFA;&#x5DE5;&#x5177;&#x7684;&#x4F7F;&#x7528;</a></li></ul><p>&#x611F;&#x89C9;&#x662F;&#x65F6;&#x5019;&#x81EA;&#x5DF1;&#x7F16;&#x8BD1;&#x4E00;&#x4E2A;Chromium&#x7684;&#x7F51;&#x7EDC;&#x6808;&#x51FA;&#x6765;&#x4E86;&#x3002;</p><a id="more"></a><h3 id="&#x7F16;&#x8BD1;"><a href="#&#x7F16;&#x8BD1;" class="headerlink" title="&#x7F16;&#x8BD1;"></a>&#x7F16;&#x8BD1;</h3><p>&#x7F16;&#x8BD1;&#x8FC7;&#x7A0B;&#x6781;&#x5176;&#x590D;&#x6742;&#xFF0C;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x4E0D;&#x6253;&#x7B97;&#x8BE6;&#x7EC6;&#x63CF;&#x8FF0;&#xFF0C;&#x76EE;&#x524D;&#xFF0C;Chromium&#x8FD8;&#x4E0D;&#x652F;&#x6301;Mac&#x4E0A;&#x7F16;&#x8BD1;&#xFF0C;&#x56E0;&#x6B64;&#x4E3A;&#x4E86;&#x7F16;&#x8BD1;&#x5B83;&#xFF0C;&#x7279;&#x5B9A;&#x7528;&#x4E86;&#x6C89;&#x7761;&#x4E86;1&#x5E74;&#x4E4B;&#x4E45;&#x7684;Windows&#x673A;&#xFF0C;&#x88C5;&#x4E86;&#x4E2A;Windows+Ubuntu&#x53CC;&#x7CFB;&#x7EDF;&#xFF0C;&#x5C31;&#x8FD9;&#x6837;&#x5F00;&#x59CB;&#x5C1D;&#x8BD5;&#x7F16;&#x8BD1;&#x3002;</p><p>&#x7F16;&#x8BD1;&#x8FC7;&#x7A0B;&#x4E2D;&#x9047;&#x5230;&#x4E86;&#x5F88;&#x591A;&#x95EE;&#x9898;&#xFF0C;&#x603B;&#x4E4B;&#xFF0C;&#x9700;&#x8981;&#x611F;&#x8C22;&#x4EE5;&#x4E0B;&#x51E0;&#x7BC7;&#x6587;&#x7AE0;&#xFF1A;</p><ul><li><a href="http://hanpfei.github.io/2016/10/18/chromium-net-android-porting/" target="_blank" rel="noopener">chromium net&#x5230;android&#x5E73;&#x53F0;&#x7684;&#x79FB;&#x690D;</a></li><li><a href="http://hanpfei.github.io/2016/10/16/Chromium_Android%E7%BC%96%E8%AF%91%E6%8C%87%E5%8D%97/" target="_blank" rel="noopener">Chromium Android&#x7F16;&#x8BD1;&#x6307;&#x5357;</a></li><li><a href="http://hanpfei.github.io/2016/11/11/lazy-chromium-net-android-porting-guide/" target="_blank" rel="noopener">&#x61D2;&#x4EBA;chromium net android&#x79FB;&#x690D;&#x6307;&#x5357;</a></li><li><a href="http://hanpfei.github.io/2016/11/16/ChromiumGN%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/" target="_blank" rel="noopener">Chromium GN&#x6784;&#x5EFA;&#x5DE5;&#x5177;&#x7684;&#x4F7F;&#x7528;</a></li></ul><p>&#x7F16;&#x8BD1;&#x8FC7;&#x7A0B;&#x4E2D;&#x7684;&#x5176;&#x4ED6;&#x7EC6;&#x8282;&#x95EE;&#x9898;&#xFF0C;&#x8BF7;&#x81EA;&#x884C;Google&#xFF0C;&#x4E5F;&#x6B22;&#x8FCE;&#x4E0E;&#x6211;&#x4EA4;&#x6D41;&#x3002;</p><h3 id="&#x9879;&#x76EE;&#x5730;&#x5740;"><a href="#&#x9879;&#x76EE;&#x5730;&#x5740;" class="headerlink" title="&#x9879;&#x76EE;&#x5730;&#x5740;"></a>&#x9879;&#x76EE;&#x5730;&#x5740;</h3><p>&#x76EE;&#x524D;&#x6211;&#x7F16;&#x8BD1;&#x7684;Chromium&#x7F51;&#x7EDC;&#x6808;&#x5DF2;&#x7ECF;&#x53D1;&#x5E03;&#x6210;&#x4E86;aar&#xFF0C;&#x9879;&#x76EE;&#x5730;&#x5740;&#x89C1;</p><ul><li><a href="https://github.com/lizhangqu/chromium-net-for-android" target="_blank" rel="noopener">chromium-net-for-android</a></li></ul><h3 id="&#x4F8B;&#x5B50;"><a href="#&#x4F8B;&#x5B50;" class="headerlink" title="&#x4F8B;&#x5B50;"></a>&#x4F8B;&#x5B50;</h3><p>&#x6211;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x7684;&#x5DE5;&#x7A0B;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4ECE; <a href="https://github.com/lizhangqu/chromium-net-for-android/tree/master/sample" target="_blank" rel="noopener">sample on Github</a> &#x770B;&#x5230;&#x4EE3;&#x7801;&#x3002;</p><p>&#x4F60;&#x53EA;&#x9700;&#x8981;&#x5C06;&#x5176;clone&#x5230;&#x672C;&#x5730;&#xFF0C;&#x7136;&#x540E;&#x4F7F;&#x7528;&#x6700;&#x65B0;&#x7248;&#x672C;&#x7684;andorid studio&#x53BB;&#x7F16;&#x8BD1;&#xFF0C;&#x5C06;&#x5176;&#x5B89;&#x88C5;&#x5230;&#x4F60;&#x7684;&#x8BBE;&#x5907;&#x4E0A;&#x5373;&#x53EF;&#x3002;</p><h3 id="Chromium-Net-&#x6E90;&#x7801;"><a href="#Chromium-Net-&#x6E90;&#x7801;" class="headerlink" title="Chromium Net &#x6E90;&#x7801;"></a>Chromium Net &#x6E90;&#x7801;</h3><p>&#x6211;&#x4ECE;<a href="https://chromium.googlesource.com/chromium/src/net/+/master" target="_blank" rel="noopener">chromium/src/net</a>&#x4E0A;&#x590D;&#x5236;&#x4E86;&#x4E00;&#x4EFD;&#x548C;&#x672C;&#x5E93;&#x76F8;&#x5173;&#x7684;Java&#x6E90;&#x7801;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4ECE;<a href="https://github.com/lizhangqu/chromium-net-for-android/tree/master/cronet-source" target="_blank" rel="noopener">&#x6E90;&#x7801; on Github</a>&#x770B;&#x5230; &#x3002;</p><p>&#x5F53;&#x7136;&#xFF0C;&#x8FD9;&#x4EFD;&#x6E90;&#x7801;&#x53EA;&#x662F;&#x4E3A;&#x4E86;&#x66F4;&#x65B9;&#x4FBF;&#x7684;&#x9605;&#x8BFB;&#x4E00;&#x4E9B;Java&#x5C42;&#x76F8;&#x5173;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5B83;&#x5E76;&#x4E0D;&#x80FD;&#x88AB;&#x76F4;&#x63A5;&#x7F16;&#x8BD1;&#x3002;</p><h3 id="&#x7279;&#x6027;"><a href="#&#x7279;&#x6027;" class="headerlink" title="&#x7279;&#x6027;"></a>&#x7279;&#x6027;</h3><ul><li><p>&#x5168;&#x5E73;&#x53F0;&#x652F;&#x6301;&#x6700;&#x65B0;&#x7248;TLS&#x3002;&#x4E0D;&#x50CF;OkHttp&#x8FD9;&#x6837;&#x4F9D;&#x8D56;&#x7CFB;&#x7EDF;&#x63D0;&#x4F9B;SSL/TLS&#x52A0;&#x89E3;&#x5BC6;&#x529F;&#x80FD;&#x7684;&#x7F51;&#x7EDC;&#x5E93;&#xFF0C;chromium&#x7F51;&#x7EDC;&#x6808;&#x81EA;&#x8EAB;&#x5305;&#x542B;SSL&#x5E93;&#xFF0C;&#x56E0;&#x800C;&#x53EF;&#x4EE5;&#x5168;&#x5E73;&#x53F0;&#x652F;&#x6301;&#x5B89;&#x5168;&#x6027;&#x66F4;&#x9AD8;&#x7684;&#x6700;&#x65B0;&#x7248;TLS&#x3002;</p></li><li><p>&#x5168;&#x5E73;&#x53F0;&#x652F;&#x6301;HTTP/2&#x53CA;QUIC&#x7B49;&#x6700;&#x65B0;&#x7684;&#x7F51;&#x7EDC;&#x534F;&#x8BAE;&#x3002;HTTP/2&#x672C;&#x8EAB;&#x5BF9;TLS&#x7684;&#x7248;&#x672C;&#x6709;&#x8981;&#x6C42;&#xFF0C;&#x540C;&#x6837;&#x7531;&#x4E8E;&#x5185;&#x542B;SSL&#x5E93;&#xFF0C;&#x800C;&#x53EF;&#x4EE5;&#x5168;&#x5E73;&#x53F0;&#x652F;&#x6301;HTTP/2&#x3002;</p></li><li><p>&#x4E3A;&#x4E86;&#x5C3D;&#x53EF;&#x80FD;&#x7684;&#x7F29;&#x51CF;so&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x5F53;&#x524D;&#x7F16;&#x8BD1;&#x7684;&#x7248;&#x672C;&#x5E76;&#x4E0D;&#x652F;&#x6301;FTP&#xFF0C;WebSocket&#x7B49;&#x534F;&#x8BAE;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x5B83;&#x4EEC;&#xFF0C;&#x8BF7;&#x81EA;&#x884C;&#x7F16;&#x8BD1;&#x5B83;&#x4EEC;&#x3002;</p></li></ul><h3 id="&#x4F7F;&#x7528;"><a href="#&#x4F7F;&#x7528;" class="headerlink" title="&#x4F7F;&#x7528;"></a>&#x4F7F;&#x7528;</h3><h4 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.github.lizhangqu<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cronet<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="Gradle"><a href="#Gradle" class="headerlink" title="Gradle"></a>Gradle</h4><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">&apos;io.github.lizhangqu:cronet:0.0.1&apos;</span></span><br></pre></td></tr></table></figure><h4 id="Proguard"><a href="#Proguard" class="headerlink" title="Proguard"></a>Proguard</h4><p>&#x5982;&#x679C;&#x4F60;&#x8FDB;&#x884C;&#x4E86;&#x6DF7;&#x6DC6;&#xFF0C;&#x8BF7;&#x5728;&#x6DF7;&#x6DC6;&#x6587;&#x4EF6;&#x4E2D;&#x52A0;&#x5165;&#x4EE5;&#x4E0B;&#x914D;&#x7F6E;</p><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">-<span class="ruby">keep <span class="class"><span class="keyword">class</span> <span class="title">org</span>.<span class="title">chromium</span>.** {*;</span>}</span></span><br><span class="line"><span class="ruby">-dontwarn org.chromium.**</span></span><br></pre></td></tr></table></figure><h4 id="NDK-abi&#x8FC7;&#x6EE4;"><a href="#NDK-abi&#x8FC7;&#x6EE4;" class="headerlink" title="NDK abi&#x8FC7;&#x6EE4;"></a>NDK abi&#x8FC7;&#x6EE4;</h4><p>&#x9ED8;&#x8BA4;&#xFF0C;&#x6B64;&#x5E93;&#x5305;&#x542B;&#x4E86;&#x6240;&#x6709;CPU&#x7ED3;&#x6784;&#x7684;so&#xFF0C;&#x5F53;&#x7136;&#x8FD9;&#x5E26;&#x6765;&#x7684;&#x540E;&#x679C;&#x5C31;&#x662F;&#x5927;&#x5C0F;&#x7279;&#x522B;&#x5927;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x53EA;&#x9700;&#x8981;&#x6DFB;&#x52A0;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;cpu&#x7ED3;&#x6784;&#x7684;so&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;abiFilters&#x8FDB;&#x884C;&#x8FC7;&#x6EE4;&#xFF0C;&#x5F53;&#x7136;&#x6211;&#x5EFA;&#x8BAE;&#x53EA;&#x6DFB;&#x52A0;armeabi-v7a&#xFF0C;&#x6BD5;&#x7ADF;&#x5B83;&#x53EF;&#x4EE5;&#x517C;&#x5BB9;&#x76EE;&#x524D;&#x5E02;&#x9762;&#x4E0A;&#x5927;&#x591A;&#x6570;&#x7684;cpu&#xFF0C;&#x800C;armeabi&#x7684;cpu&#x76EE;&#x524D;&#x5E02;&#x9762;&#x4E0A;&#x5DF2;&#x57FA;&#x672C;&#x770B;&#x4E0D;&#x89C1;&#x3002;</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">android {</span><br><span class="line">    defaultConfig {</span><br><span class="line">        ndk {</span><br><span class="line">            abiFilters <span class="string">&quot;armeabi-v7a&quot;</span></span><br><span class="line">            </span><br><span class="line"><span class="regexp">//</span>          default is no filters       </span><br><span class="line"><span class="regexp">//</span>          abiFilters <span class="string">&quot;armeabi&quot;</span></span><br><span class="line"><span class="regexp">//</span>          abiFilters <span class="string">&quot;armeabi-v7a&quot;</span></span><br><span class="line"><span class="regexp">//</span>          abiFilters <span class="string">&quot;arm64-v8a&quot;</span></span><br><span class="line"><span class="regexp">//</span>          abiFilters <span class="string">&quot;x86&quot;</span></span><br><span class="line"><span class="regexp">//</span>          abiFilters <span class="string">&quot;x86_64&quot;</span></span><br><span class="line"><span class="regexp">//</span>          abiFilters <span class="string">&quot;mips&quot;</span></span><br><span class="line"><span class="regexp">//</span>          abiFilters <span class="string">&quot;mips64&quot;</span></span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h4 id="&#x521B;&#x5EFA;Chromium-&#x7F51;&#x7EDC;&#x5F15;&#x64CE;"><a href="#&#x521B;&#x5EFA;Chromium-&#x7F51;&#x7EDC;&#x5F15;&#x64CE;" class="headerlink" title="&#x521B;&#x5EFA;Chromium &#x7F51;&#x7EDC;&#x5F15;&#x64CE;"></a>&#x521B;&#x5EFA;Chromium &#x7F51;&#x7EDC;&#x5F15;&#x64CE;</h4><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">CronetEngine.Builder builder = <span class="keyword">new</span> <span class="type">CronetEngine</span>.Builder(context);</span><br><span class="line">builder.</span><br><span class="line">        enableHttpCache(CronetEngine.Builder.HTTP_CACHE_IN_MEMORY,</span><br><span class="line">                <span class="number">100</span> * <span class="number">1024</span>) <span class="comment">// cache</span></span><br><span class="line">        .enableHttp2(<span class="literal">true</span>)  <span class="comment">// Http/2.0 Supprot</span></span><br><span class="line">        .enableQuic(<span class="literal">true</span>)   <span class="comment">// Quic Supprot</span></span><br><span class="line">        .setHostResolver(<span class="keyword">new</span> <span class="type">HostResolver</span>() {</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> List&lt;InetAddress&gt; resolve(<span class="keyword">String</span> hostname) throws UnknownHostException {</span><br><span class="line">                <span class="keyword">if</span> (hostname == <span class="literal">null</span>)</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">UnknownHostException</span>(<span class="string">&quot;hostname == null&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> Arrays.asList(InetAddress.getAllByName(hostname));</span><br><span class="line">            }</span><br><span class="line">        })                  <span class="comment">// custom dns, you can use httpdns here</span></span><br><span class="line">        .enableSDCH(<span class="literal">true</span>)   <span class="comment">// SDCH Supprot</span></span><br><span class="line">        .setLibraryName(<span class="string">&quot;cronet&quot;</span>);  <span class="comment">// lib so name</span></span><br><span class="line">CronetEngine cronetEngine = builder.build();</span><br><span class="line"><span class="comment">//see more config in the code</span></span><br></pre></td></tr></table></figure><p>&#x6B64;&#x65F6;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x5404;&#x79CD;&#x914D;&#x7F6E;&#xFF0C;&#x6BD4;&#x5982;&#x81EA;&#x5B9A;&#x4E49;dns&#x89E3;&#x6790;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;httpdns&#xFF0C;&#x4EE5;&#x53CA;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x652F;&#x6301;http/2.0&#x7B49;&#x7279;&#x6027;&#xFF0C;&#x66F4;&#x591A;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#xFF0C;&#x8BF7;&#x8BE6;&#x89C1;&#x4EE3;&#x7801;&#x3002;</p><h4 id="HttpUrlConnection&#x7684;&#x65E0;&#x7F1D;&#x4F7F;&#x7528;"><a href="#HttpUrlConnection&#x7684;&#x65E0;&#x7F1D;&#x4F7F;&#x7528;" class="headerlink" title="HttpUrlConnection&#x7684;&#x65E0;&#x7F1D;&#x4F7F;&#x7528;"></a>HttpUrlConnection&#x7684;&#x65E0;&#x7F1D;&#x4F7F;&#x7528;</h4><p>&#x5728;OkHttp&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;URL&#x7684;URLStreamHandlerFactory&#x4E3A;OkUrlFactory&#xFF0C;&#x8FD9;&#x6837;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5728;HttpUrlConnection&#x4E2D;&#x4F7F;&#x7528;OkHttp&#x7684;&#x6240;&#x6709;&#x7279;&#x6027;&#xFF0C;&#x5C31;&#x50CF;&#x8FD9;&#x6837;&#xFF1A;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">URL</span>.</span></span>set<span class="constructor">URLStreamHandlerFactory(<span class="params">new</span> OkUrlFactory(<span class="params">new</span> OkHttpClient()</span>));</span><br></pre></td></tr></table></figure><p>Chromium&#x7684;&#x7F51;&#x7EDC;&#x6808;&#x5F53;&#x7136;&#x4E5F;&#x652F;&#x6301;&#x8FD9;&#x4E2A;&#xFF1A;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">CronetURLStreamHandlerFactory cronetURLStreamHandlerFactory = <span class="keyword">new</span> <span class="constructor">CronetURLStreamHandlerFactory(<span class="params">cronetEngine</span>)</span>;</span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">URL</span>.</span></span>set<span class="constructor">URLStreamHandlerFactory(<span class="params">cronetURLStreamHandlerFactory</span>)</span>;</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x4FEE;&#x6539;&#x4EFB;&#x4F55;&#x6211;&#x4EEC;&#x73B0;&#x6709;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x50CF;&#x8FD9;&#x6837;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x5373;&#x53EF;&#x3002;</p><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">try {</span><br><span class="line">     URL url = new URL(mEditTextUrl.getText().toString())<span class="comment">;</span></span><br><span class="line">     HttpURLConnection connection = (HttpURLConnection) url.openConnection()<span class="comment">;</span></span><br><span class="line">     Log.e(<span class="string">&quot;TAG&quot;</span>, <span class="string">&quot;connection:&quot;</span> + connection)<span class="comment">;</span></span><br><span class="line">     connection.setDoInput(true)<span class="comment">;</span></span><br><span class="line">     connection.setConnectTimeout(<span class="number">10000</span>)<span class="comment">;</span></span><br><span class="line">     connection.setReadTimeout(<span class="number">10000</span>)<span class="comment">;</span></span><br><span class="line">     connection.setRequestMethod(<span class="string">&quot;GET&quot;</span>)<span class="comment">;</span></span><br><span class="line">     connection.connect()<span class="comment">;</span></span><br><span class="line">     int responseCode = connection.getResponseCode()<span class="comment">;</span></span><br><span class="line">     InputStream inputStream = connection.getInputStream()<span class="comment">;</span></span><br><span class="line">     <span class="keyword">ByteArrayOutputStream </span>output = new <span class="keyword">ByteArrayOutputStream();</span></span><br><span class="line"><span class="keyword"> </span>    copy(inputStream, output)<span class="comment">;</span></span><br><span class="line">     output.<span class="keyword">close();</span></span><br><span class="line"><span class="keyword"> </span>    inputStream.<span class="keyword">close();</span></span><br><span class="line"><span class="keyword"> </span>    <span class="keyword">byte[] </span><span class="keyword">bytes </span>= output.toByteArray()<span class="comment">;</span></span><br><span class="line">     String response = new String(<span class="keyword">bytes);</span></span><br><span class="line"><span class="keyword"> </span>    Log.e(<span class="string">&quot;TAG&quot;</span>, <span class="string">&quot;responseCode:&quot;</span> + responseCode)<span class="comment">;</span></span><br><span class="line">     Log.e(<span class="string">&quot;TAG&quot;</span>, <span class="string">&quot;response body:&quot;</span> + response)<span class="comment">;</span></span><br><span class="line"> } catch (IOException e) {</span><br><span class="line">     e.printStackTrace()<span class="comment">;</span></span><br><span class="line"> }</span><br><span class="line"> </span><br><span class="line"> public static long copy(InputStream input, OutputStream output) throws IOException {</span><br><span class="line">    return copyLarge(input, output, new <span class="keyword">byte[2048]);</span></span><br><span class="line"><span class="keyword"> </span>}</span><br><span class="line"> </span><br><span class="line"> public static long copyLarge(InputStream input, OutputStream output, <span class="keyword">byte[] </span><span class="keyword">buffer)</span></span><br><span class="line"><span class="keyword"> </span>       throws IOException {</span><br><span class="line">    long <span class="built_in">count</span> = <span class="number">0</span><span class="comment">;</span></span><br><span class="line">    int n = <span class="number">0</span><span class="comment">;</span></span><br><span class="line">    while (-<span class="number">1</span> != (n = input.read(<span class="keyword">buffer))) </span>{</span><br><span class="line">        output.write(<span class="keyword">buffer, </span><span class="number">0</span>, n)<span class="comment">;</span></span><br><span class="line">        <span class="built_in">count</span> += n<span class="comment">;</span></span><br><span class="line">    }</span><br><span class="line">    return <span class="built_in">count</span><span class="comment">;</span></span><br><span class="line"> }</span><br></pre></td></tr></table></figure><h4 id="&#x53D1;&#x9001;&#x4E00;&#x4E2A;GET&#x8BF7;&#x6C42;"><a href="#&#x53D1;&#x9001;&#x4E00;&#x4E2A;GET&#x8BF7;&#x6C42;" class="headerlink" title="&#x53D1;&#x9001;&#x4E00;&#x4E2A;GET&#x8BF7;&#x6C42;"></a>&#x53D1;&#x9001;&#x4E00;&#x4E2A;GET&#x8BF7;&#x6C42;</h4><p>&#x901A;&#x8FC7;UrlRequest.Builder&#x6784;&#x5EFA;&#x4E00;&#x4E2A;UrlRequest&#x5BF9;&#x8C61;&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;start&#x65B9;&#x6CD5;&#x5F00;&#x59CB;&#x8BF7;&#x6C42;&#x3002;</p><p>UrlRequest&#x5BF9;&#x8C61;&#x7684;&#x6784;&#x5EFA;&#x9700;&#x8981;&#x82E5;&#x5E72;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5176;&#x4E2D;&#x5FC5;&#x4E0D;&#x53EF;&#x5C11;&#x7684;&#x662F;&#x524D;&#x6587;&#x521B;&#x5EFA;&#x7684;CronetEngine&#x5F15;&#x64CE;&#x5BF9;&#x8C61;&#xFF0C;&#x4EE5;&#x53CA;&#x5F53;&#x524D;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x6267;&#x884C;&#x7684;&#x7EBF;&#x7A0B;&#x6C60;&#xFF0C;&#x5F53;&#x7136;&#x8BF7;&#x6C42;&#x7684;url&#x548C;&#x8BF7;&#x6C42;&#x56DE;&#x8C03;&#x5C31;&#x66F4;&#x4E0D;&#x7528;&#x8BF4;&#x4E86;&#x3002;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">UrlRequest.Builder builder = <span class="keyword">new</span> UrlRequest.<span class="constructor">Builder(<span class="params">mEditTextUrl</span>.<span class="params">getText</span>()</span>.<span class="keyword">to</span><span class="constructor">String()</span>, <span class="keyword">new</span> UrlRequest.<span class="constructor">Callback()</span> {</span><br><span class="line">     <span class="keyword">private</span> ByteArrayOutputStream mBytesReceived = <span class="keyword">new</span> <span class="constructor">ByteArrayOutputStream()</span>;</span><br><span class="line">     <span class="keyword">private</span> WritableByteChannel mReceiveChannel = <span class="module-access"><span class="module"><span class="identifier">Channels</span>.</span></span><span class="keyword">new</span><span class="constructor">Channel(<span class="params">mBytesReceived</span>)</span>;</span><br><span class="line"></span><br><span class="line">     @Override</span><br><span class="line">     public void on<span class="constructor">RedirectReceived(UrlRequest <span class="params">urlRequest</span>, UrlResponseInfo <span class="params">urlResponseInfo</span>, String <span class="params">s</span>)</span> throws Exception {</span><br><span class="line">         <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>i(<span class="string">&quot;TAG&quot;</span>, <span class="string">&quot;onRedirectReceived&quot;</span>);</span><br><span class="line">         urlRequest.follow<span class="constructor">Redirect()</span>;</span><br><span class="line">     }</span><br><span class="line"></span><br><span class="line">     @Override</span><br><span class="line">     public void on<span class="constructor">ResponseStarted(UrlRequest <span class="params">urlRequest</span>, UrlResponseInfo <span class="params">urlResponseInfo</span>)</span> throws Exception {</span><br><span class="line">         <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>i(<span class="string">&quot;TAG&quot;</span>, <span class="string">&quot;onResponseStarted&quot;</span>);</span><br><span class="line">         urlRequest.read(<span class="module-access"><span class="module"><span class="identifier">ByteBuffer</span>.</span></span>allocate<span class="constructor">Direct(32 <span class="operator">*</span> 1024)</span>);</span><br><span class="line">     }</span><br><span class="line"></span><br><span class="line">     @Override</span><br><span class="line">     public void on<span class="constructor">ReadCompleted(UrlRequest <span class="params">urlRequest</span>, UrlResponseInfo <span class="params">urlResponseInfo</span>, ByteBuffer <span class="params">byteBuffer</span>)</span> throws Exception {</span><br><span class="line">         <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>i(<span class="string">&quot;TAG&quot;</span>, <span class="string">&quot;onReadCompleted&quot;</span>);</span><br><span class="line">         byteBuffer.flip<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">         <span class="keyword">try</span> {</span><br><span class="line">             mReceiveChannel.write(byteBuffer);</span><br><span class="line">         } catch (IOException e) {</span><br><span class="line">             e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">         }</span><br><span class="line">         byteBuffer.clear<span class="literal">()</span>;</span><br><span class="line">         urlRequest.read(byteBuffer);</span><br><span class="line">     }</span><br><span class="line"></span><br><span class="line">     @Override</span><br><span class="line">     public void on<span class="constructor">Succeeded(UrlRequest <span class="params">urlRequest</span>, UrlResponseInfo <span class="params">urlResponseInfo</span>)</span> {</span><br><span class="line">         <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>i(<span class="string">&quot;TAG&quot;</span>, <span class="string">&quot;onSucceeded&quot;</span>);</span><br><span class="line">         <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>i(<span class="string">&quot;TAG&quot;</span>, <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>format(<span class="string">&quot;Request Completed, status code is %d, total received bytes is %d&quot;</span>,</span><br><span class="line">                 urlResponseInfo.get<span class="constructor">HttpStatusCode()</span>, urlResponseInfo.get<span class="constructor">ReceivedBytesCount()</span>));</span><br><span class="line"></span><br><span class="line">         final String receivedData = mBytesReceived.<span class="keyword">to</span><span class="constructor">String()</span>;</span><br><span class="line">         final String url = urlResponseInfo.get<span class="constructor">Url()</span>;</span><br><span class="line">         final String text = <span class="string">&quot;Completed &quot;</span> + url + <span class="string">&quot; (&quot;</span> + urlResponseInfo.get<span class="constructor">HttpStatusCode()</span> + <span class="string">&quot;)&quot;</span>;</span><br><span class="line"></span><br><span class="line">         <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>i(<span class="string">&quot;TAG&quot;</span>, <span class="string">&quot;text:&quot;</span> + text);</span><br><span class="line">         <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>i(<span class="string">&quot;TAG&quot;</span>, <span class="string">&quot;receivedData:&quot;</span> + receivedData);</span><br><span class="line">         Handler handler = <span class="keyword">new</span> <span class="constructor">Handler(Looper.<span class="params">getMainLooper</span>()</span>);</span><br><span class="line">         handler.post(<span class="keyword">new</span> <span class="constructor">Runnable()</span> {</span><br><span class="line">             @Override</span><br><span class="line">             public void run<span class="literal">()</span> {</span><br><span class="line">                 <span class="module-access"><span class="module"><span class="identifier">Toast</span>.</span></span>make<span class="constructor">Text(<span class="params">getApplicationContext</span>()</span>, <span class="string">&quot;onSucceeded&quot;</span>, Toast.LENGTH_SHORT).show<span class="literal">()</span>;</span><br><span class="line">             }</span><br><span class="line">         });</span><br><span class="line">     }</span><br><span class="line"></span><br><span class="line">     @Override</span><br><span class="line">     public void on<span class="constructor">Failed(UrlRequest <span class="params">urlRequest</span>, UrlResponseInfo <span class="params">urlResponseInfo</span>, UrlRequestException <span class="params">e</span>)</span> {</span><br><span class="line">         <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>i(<span class="string">&quot;TAG&quot;</span>, <span class="string">&quot;onFailed&quot;</span>);</span><br><span class="line">         <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>i(<span class="string">&quot;TAG&quot;</span>, <span class="string">&quot;error is: %s&quot;</span> + e.get<span class="constructor">Message()</span>);</span><br><span class="line"></span><br><span class="line">         Handler handler = <span class="keyword">new</span> <span class="constructor">Handler(Looper.<span class="params">getMainLooper</span>()</span>);</span><br><span class="line">         handler.post(<span class="keyword">new</span> <span class="constructor">Runnable()</span> {</span><br><span class="line">             @Override</span><br><span class="line">             public void run<span class="literal">()</span> {</span><br><span class="line">                 <span class="module-access"><span class="module"><span class="identifier">Toast</span>.</span></span>make<span class="constructor">Text(<span class="params">getApplicationContext</span>()</span>, <span class="string">&quot;onFailed&quot;</span>, Toast.LENGTH_SHORT).show<span class="literal">()</span>;</span><br><span class="line">             }</span><br><span class="line">         });</span><br><span class="line">     }</span><br><span class="line"> }, executor, cronetEngine);</span><br><span class="line"> builder.build<span class="literal">()</span>.start<span class="literal">()</span>;</span><br></pre></td></tr></table></figure><h4 id="&#x53D1;&#x9001;&#x4E00;&#x4E2A;POST&#x8BF7;&#x6C42;"><a href="#&#x53D1;&#x9001;&#x4E00;&#x4E2A;POST&#x8BF7;&#x6C42;" class="headerlink" title="&#x53D1;&#x9001;&#x4E00;&#x4E2A;POST&#x8BF7;&#x6C42;"></a>&#x53D1;&#x9001;&#x4E00;&#x4E2A;POST&#x8BF7;&#x6C42;</h4><p>POST&#x8BF7;&#x6C42;&#x548C;&#x4E0A;&#x9762;&#x7684;GET&#x8BF7;&#x6C42;&#x76F8;&#x6BD4;&#xFF0C;&#x5C31;&#x662F;&#x591A;&#x4E86;&#x4E00;&#x4E2A;request body&#xFF0C;&#x8FD9;&#x91CC;&#x5C06;&#x4E0A;&#x9762;&#x7684;&#x65B9;&#x6CD5;&#x7B80;&#x5355;&#x5C01;&#x88C5;&#x4E00;&#x4E0B;&#xFF0C;&#x4EE5;&#x540C;&#x65F6;&#x652F;&#x6301;GET&#x8BF7;&#x6C42;&#x548C;POST&#x8BF7;&#x6C42;&#x3002;</p><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">public</span> void startWithURL(<span class="keyword">String </span>url, UrlRequest.Callback callback, Executor executor, <span class="keyword">String </span>postData) {</span><br><span class="line">    UrlRequest.<span class="keyword">Builder </span><span class="keyword">builder </span>= new UrlRequest.<span class="keyword">Builder(url, </span>callback, executor, mCronetEngine)<span class="comment">;</span></span><br><span class="line">    applyPostDataToUrlRequestBuilder(<span class="keyword">builder, </span>executor, postData)<span class="comment">;</span></span><br><span class="line">    <span class="keyword">builder.build().start();</span></span><br><span class="line"><span class="keyword">}</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">private </span>void applyPostDataToUrlRequestBuilder(</span><br><span class="line">        UrlRequest.<span class="keyword">Builder </span><span class="keyword">builder, </span>Executor executor, <span class="keyword">String </span>postData) {</span><br><span class="line">    <span class="meta">if</span> (postData != null &amp;&amp; postData.length() &gt; <span class="number">0</span>) {</span><br><span class="line">        <span class="keyword">builder.setHttpMethod(&quot;POST&quot;);</span></span><br><span class="line"><span class="keyword"> </span>       <span class="keyword">builder.addHeader(&quot;Content-Type&quot;, </span><span class="string">&quot;application/x-www-form-urlencoded&quot;</span>)<span class="comment">;</span></span><br><span class="line">        <span class="keyword">builder.setUploadDataProvider(</span></span><br><span class="line"><span class="keyword"> </span>               UploadDataProviders.create(postData.getBytes()), executor)<span class="comment">;</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x590D;&#x7528;&#x524D;&#x6587;&#x53D1;&#x9001;GET&#x8BF7;&#x6C42;&#x7684;&#x56DE;&#x8C03;&#x5373;&#x53EF;&#x3002;</p><p>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;post&#x8BF7;&#x6C42;&#x9700;&#x8981;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;UploadDataProvider&#xFF0C;&#x8BE5;&#x5BF9;&#x8C61;&#x7528;&#x4E8E;&#x63D0;&#x4F9B;&#x53D1;&#x9001;&#x7684;&#x6570;&#x636E;&#x5305;&#xFF0C;&#x8FD9;&#x4E48;&#x505A;&#x7684;&#x597D;&#x5904;&#x662F;&#x4E00;&#x5B9A;&#x7A0B;&#x5EA6;&#x4E0A;&#x5BF9;body&#x7684;&#x6570;&#x636E;&#x683C;&#x5F0F;&#x8FDB;&#x884C;&#x6269;&#x5C55;&#xFF0C;&#x9ED8;&#x8BA4;Chromium&#x7684;&#x7F51;&#x7EDC;&#x6808;&#x4E2D;&#x5E76;&#x6CA1;&#x6709;&#x8868;&#x5355;&#x548C;Multipart&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;UploadDataProvider&#x5BF9;&#x8C61;&#xFF0C;&#x81EA;&#x884C;&#x5B9E;&#x73B0;&#x3002;</p><h3 id="&#x53C2;&#x8003;&#x94FE;&#x63A5;"><a href="#&#x53C2;&#x8003;&#x94FE;&#x63A5;" class="headerlink" title="&#x53C2;&#x8003;&#x94FE;&#x63A5;"></a>&#x53C2;&#x8003;&#x94FE;&#x63A5;</h3><ul><li><a href="http://hanpfei.github.io/2016/10/18/chromium-net-android-porting/" target="_blank" rel="noopener">chromium net&#x5230;android&#x5E73;&#x53F0;&#x7684;&#x79FB;&#x690D;</a></li><li><a href="http://hanpfei.github.io/2016/10/16/Chromium_Android%E7%BC%96%E8%AF%91%E6%8C%87%E5%8D%97/" target="_blank" rel="noopener">Chromium Android&#x7F16;&#x8BD1;&#x6307;&#x5357;</a></li><li><a href="http://hanpfei.github.io/2016/11/11/lazy-chromium-net-android-porting-guide/" target="_blank" rel="noopener">&#x61D2;&#x4EBA;chromium net android&#x79FB;&#x690D;&#x6307;&#x5357;</a></li><li><a href="http://hanpfei.github.io/2016/11/16/ChromiumGN%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E7%9A%84%E4%BD%BF%E7%94%A8/" target="_blank" rel="noopener">Chromium GN&#x6784;&#x5EFA;&#x5DE5;&#x5177;&#x7684;&#x4F7F;&#x7528;</a></li></ul>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Chromium</tag>
        <tag>Android，Network</tag>
      </tags>
  </entry>
  <entry>
    <title>Android NDK 内存泄露检测</title>
    <url>/2017/06/05/Android-NDK-%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E6%A3%80%E6%B5%8B/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>&#x6700;&#x8FD1;&#x5199;C++&#x4EE3;&#x7801;&#xFF0C;&#x8001;&#x662F;&#x62C5;&#x5FC3;&#x4EE3;&#x7801;&#x5B58;&#x5728;&#x5185;&#x5B58;&#x6CC4;&#x9732;&#xFF0C;&#x80C6;&#x6218;&#x5FC3;&#x60CA;&#x7684;&#xFF0C;Andorid&#x4E2D;Java&#x5C42;&#x4EE3;&#x7801;&#x5185;&#x5B58;&#x6CC4;&#x9732;&#x53EF;&#x4EE5;&#x501F;&#x52A9;<a href="https://github.com/square/leakcanary" target="_blank" rel="noopener">leakcanary</a>&#x8FDB;&#x884C;&#x68C0;&#x6D4B;&#xFF1B;&#x627E;&#x4E86;&#x4E00;&#x756A;&#xFF0C;&#x627E;&#x5230;&#x4E86;PC&#x4E0A;C++&#x4E0A;&#x7684;&#x5185;&#x5B58;&#x6CC4;&#x9732;&#x68C0;&#x6D4B;&#x5E93;LeakTracer&#xFF0C;&#x4E8E;&#x662F;&#x518D;&#x627E;&#x4E86;&#x4E0B;&#xFF0C;&#x627E;&#x5230;&#x4E86;Android&#x4E0A;&#x7684;&#x79FB;&#x690D;&#x7248;&#x3002;</p><a id="more"></a><p>&#x9996;&#x5148;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#xFF0C;&#x5728;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x5EFA;&#x7ACB;thirdparty&#x76EE;&#x5F55;&#xFF0C;&#x8FDB;&#x5165;&#x8BE5;&#x76EE;&#x5F55;&#xFF0C;clone&#x76F8;&#x5173;&#x5E93;&#x4EE3;&#x7801;</p><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">git</span>@github.com:lizhangqu/LeakTracer.git</span><br></pre></td></tr></table></figure><p>&#x5728;&#x9879;&#x76EE;src/main/cpp&#x4E0B;&#x5EFA;&#x7ACB;CMakeLists.txt&#xFF0C;&#x5185;&#x5BB9;&#x5982;&#x4E0B;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">project(Test)</span><br><span class="line">cmake_minimum_required (VERSION 3.6)</span><br><span class="line"></span><br><span class="line">include_directories(</span><br><span class="line">  <span class="variable">${PROJECT_SOURCE_DIR}</span>/include/</span><br><span class="line">  <span class="variable">${PROJECT_SOURCE_DIR}</span>/<span class="built_in">..</span>/<span class="built_in">..</span>/<span class="built_in">..</span>/<span class="built_in">..</span>/thirdparty/LeakTracer/libleaktracer/include/</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="builtin-name">set</span>(LEAKTRACER_SOURCES</span><br><span class="line">  <span class="variable">${PROJECT_SOURCE_DIR}</span>/<span class="built_in">..</span>/<span class="built_in">..</span>/<span class="built_in">..</span>/<span class="built_in">..</span>/thirdparty/LeakTracer/libleaktracer/src/AllocationHandlers.cpp</span><br><span class="line">  #<span class="variable">${PROJECT_SOURCE_DIR}</span>/<span class="built_in">..</span>/<span class="built_in">..</span>/<span class="built_in">..</span>/<span class="built_in">..</span>/thirdparty/LeakTracer/libleaktracer/src/LeakTracerC.c</span><br><span class="line">  #&#x68C0;&#x6D4B;c&#x4EE3;&#x7801;&#x65F6;&#x6253;&#x5F00;&#x6B64;&#x6CE8;&#x91CA;&#xFF0C;&#x5426;&#x5219;&#x4E0D;&#x8981;&#x6253;&#x5F00;</span><br><span class="line">  <span class="variable">${PROJECT_SOURCE_DIR}</span>/<span class="built_in">..</span>/<span class="built_in">..</span>/<span class="built_in">..</span>/<span class="built_in">..</span>/thirdparty/LeakTracer/libleaktracer/src/MemoryTrace.cpp</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line">add_library(leaktracer STATIC <span class="variable">${LEAKTRACER_SOURCES}</span>)</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">set</span>(TEST_FILES</span><br><span class="line">    <span class="variable">${CMAKE_SOURCE_DIR}</span>/native.cpp</span><br><span class="line">)</span><br><span class="line">add_library(</span><br><span class="line">    test-jni</span><br><span class="line">    SHARED</span><br><span class="line">    <span class="variable">${TEST_FILES}</span>)</span><br><span class="line"></span><br><span class="line">target_link_libraries(</span><br><span class="line">   test-jni</span><br><span class="line">   leaktracer</span><br><span class="line">   log</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>&#x5EFA;&#x7ACB;src/main/cpp/include/native.h&#x548C;src/main/cpp/native.cpp&#x6587;&#x4EF6;</p><p>native.h</p><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by &#x674E;&#x6A1F;&#x53D6; on 2017/6/4.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> TEST_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TEST_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="string">&quot;jni.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> NELEM</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> NELEM(x) ((int) (sizeof(x) / sizeof((x)[0])))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> CLASSNAME</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CLASSNAME <span class="string">&quot;io/github/lizhangqu/test/Test&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ANDROID</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;android/log.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TAG <span class="string">&quot;Test&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ALOGE(fmt, ...) __android_log_print(ANDROID_LOG_ERROR, TAG, fmt, ##__VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ALOGI(fmt, ...) __android_log_print(ANDROID_LOG_INFO, TAG, fmt, ##__VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ALOGD(fmt, ...) __android_log_print(ANDROID_LOG_DEBUG, TAG, fmt, ##__VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ALOGW(fmt, ...) __android_log_print(ANDROID_LOG_WARN, TAG, fmt, ##__VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ALOGE printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ALOGI printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ALOGD printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ALOGW printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//TEST_H</span></span></span><br></pre></td></tr></table></figure><p>native.cpp</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;native.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;MemoryTrace.hpp&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">(JNIEnv *env, jobject thiz)</span> </span>{</span><br><span class="line">    </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> JNINativeMethod sMethods[] = {</span><br><span class="line">        {</span><br><span class="line">                <span class="keyword">const_cast</span>&lt;<span class="keyword">char</span> *&gt;(<span class="string">&quot;test&quot;</span>),</span><br><span class="line">                <span class="keyword">const_cast</span>&lt;<span class="keyword">char</span> *&gt;(<span class="string">&quot;()V&quot;</span>),</span><br><span class="line">                <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">void</span> *&gt;(test)</span><br><span class="line">        },</span><br><span class="line"></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">registerNativeMethods</span><span class="params">(JNIEnv *env, <span class="keyword">const</span> <span class="keyword">char</span> *className, <span class="keyword">const</span> JNINativeMethod *methods,</span></span></span><br><span class="line"><span class="function"><span class="params">                          <span class="keyword">const</span> <span class="keyword">int</span> numMethods)</span> </span>{</span><br><span class="line">    jclass clazz = env-&gt;FindClass(className);</span><br><span class="line">    <span class="keyword">if</span> (!clazz) {</span><br><span class="line">        ALOGE(<span class="string">&quot;Native registration unable to find class &apos;%s&apos;\n&quot;</span>, className);</span><br><span class="line">        <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (env-&gt;RegisterNatives(clazz, methods, numMethods) != <span class="number">0</span>) {</span><br><span class="line">        ALOGE(<span class="string">&quot;RegisterNatives failed for &apos;%s&apos;\n&quot;</span>, className);</span><br><span class="line">        env-&gt;DeleteLocalRef(clazz);</span><br><span class="line">        <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    }</span><br><span class="line">    env-&gt;DeleteLocalRef(clazz);</span><br><span class="line">    <span class="keyword">return</span> JNI_TRUE;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">jint <span class="title">JNI_OnLoad</span><span class="params">(JavaVM *vm, <span class="keyword">void</span> *reserved)</span> </span>{</span><br><span class="line">    JNIEnv *env;</span><br><span class="line">    <span class="keyword">if</span> (vm-&gt;GetEnv(<span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">void</span> **&gt;(&amp;env), JNI_VERSION_1_6) != JNI_OK) {</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">    registerNativeMethods(env, CLASSNAME, sMethods, NELEM(sMethods));</span><br><span class="line">    <span class="keyword">return</span> JNI_VERSION_1_6;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7F16;&#x5199;test&#x51FD;&#x6570;&#xFF0C;&#x7B80;&#x5355;&#x8FDB;&#x884C;&#x5185;&#x6D4B;&#x6CC4;&#x9732;&#x68C0;&#x6D4B;</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MemoryTest</span> {</span></span><br><span class="line"></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">(JNIEnv *env, jobject thiz)</span> </span>{</span><br><span class="line">    leaktracer::MemoryTrace::GetInstance().startMonitoringAllThreads();</span><br><span class="line">    MemoryTest *memoryTest = <span class="keyword">new</span> MemoryTest;</span><br><span class="line">    leaktracer::MemoryTrace::GetInstance().stopAllMonitoring();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">std</span>::ofstream out;</span><br><span class="line">    out.open(<span class="string">&quot;/sdcard/leaks.out&quot;</span>, <span class="built_in">std</span>::ios_base::out);</span><br><span class="line">    <span class="keyword">if</span> (out.is_open()) {</span><br><span class="line">        leaktracer::MemoryTrace::GetInstance().writeLeaks(out);</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        ALOGE(<span class="string">&quot;Failed to write to \&quot;leaks.out\&quot;\n&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD0;&#x884C;&#x7A0B;&#x5E8F;&#x540E;&#x8C03;&#x7528;test&#x51FD;&#x6570;&#xFF0C;&#x5C06;/sdcard/leaks.out pull&#x5230;&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;</p><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">adb pull /sdcard/leaks.<span class="keyword">out</span></span><br></pre></td></tr></table></figure><p>&#x5176;&#x5185;&#x5BB9;&#x7C7B;&#x4F3C;&#x5982;&#x4E0B;&#x5185;&#x5BB9;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># LeakTracer report diff_utc_mono=1496511718.682943</span></span><br><span class="line">leak, <span class="attribute">time</span>=135120.534718, <span class="attribute">stack</span>=0x36fd6 0x35a90 0x359a4 0x32fea 0xc952d3d0, <span class="attribute">size</span>=1, <span class="attribute">data</span>=&#xFFFD;</span><br></pre></td></tr></table></figure><p>&#x501F;&#x52A9;thirdparty/LeakTracer/helper/leak-analyze-addr2line&#x5DE5;&#x5177;&#x8FD8;&#x539F;&#x5185;&#x6D4B;&#x6CC4;&#x9732;&#x5806;&#x6808;&#x3002;</p><p>&#x8FDB;&#x5165;&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x6267;&#x884C;leak-analyze-addr2line</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">.<span class="regexp">/thirdparty/</span>LeakTracer<span class="regexp">/helpers/</span>leak-analyze-addr2line .<span class="regexp">/library/</span>build<span class="regexp">/intermediates/</span>cmake<span class="regexp">/debug/</span>obj<span class="regexp">/armeabi/</span>libtest-jni.so .<span class="regexp">/leaks.out</span></span><br></pre></td></tr></table></figure><p>&#x5728;mac&#x4E0A;&#xFF0C;&#x4F1A;&#x51FA;&#x73B0;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#xFF0C;&#x539F;&#x56E0;&#x662F;leak-analyze-addr2line&#x4E2D;&#x7528;&#x5230;&#x4E86;addr2line&#x5DE5;&#x5177;&#xFF0C;&#x800C;mac&#x4E0A;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x6B64;&#x5DE5;&#x5177;&#xFF0C;&#x5C31;&#x4F1A;&#x62A5;&#x9519;&#xFF0C;&#x9519;&#x8BEF;&#x5982;&#x4E0B;&#xFF1A;</p><p><img src="/2017/06/05/Android-NDK-%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E6%A3%80%E6%B5%8B/error.png" alt="error.png"></p><p>&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C06;ndk&#x76EE;&#x5F55;&#x4E2D;&#x7684;arm-linux-androideabi-addr2line&#x62F7;&#x5230;./thirdparty/LeakTracer/helpers/&#x4E0B;&#xFF0C;&#x5E76;&#x91CD;&#x547D;&#x540D;&#x4E3A;addr2line&#xFF0C;&#x7136;&#x540E;&#x5C06;./thirdparty/LeakTracer/helpers/&#x52A0;&#x5230;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x4E2D;&#xFF0C;&#x5982;&#x4E0B;&#x4EE3;&#x7801;</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">cp <span class="variable">$ANDROID_NDK_HOME</span>/toolchains/arm-linux-androideabi-<span class="number">4.9</span>/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-addr2line ./thirdparty/LeakTracer/helpers/addr2line</span><br><span class="line">export PATH=<span class="variable">$PATH</span><span class="symbol">:`pwd`/thirdparty/LeakTracer/helpers</span></span><br></pre></td></tr></table></figure><p>$ANDROID_NDK_HOME&#x8868;&#x793A;ndk&#x7684;&#x6839;&#x76EE;&#x5F55;&#x3002;</p><p>&#x4E4B;&#x540E;&#x518D;&#x6B21;&#x8C03;&#x7528;&#x547D;&#x4EE4;</p><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">.<span class="regexp">/thirdparty/</span>LeakTracer<span class="regexp">/helpers/</span>leak-analyze-addr2line .<span class="regexp">/library/</span>build<span class="regexp">/intermediates/</span>cmake<span class="regexp">/debug/</span>obj<span class="regexp">/armeabi/</span>libtest-jni.so .<span class="regexp">/leaks.out</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x65F6;&#x5019;&#x8F93;&#x51FA;&#x5982;&#x4E0B;</p><p><img src="/2017/06/05/Android-NDK-%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E6%A3%80%E6%B5%8B/out_leak.png" alt="out_leak.png"></p><p>native.cpp:15&#x884C;&#x51FA;&#x73B0;&#x6CC4;&#x9732;&#xFF0C;&#x627E;&#x5230;15&#x884C;&#x5BF9;&#x5E94;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5373;&#x5982;&#x4E0B;&#x4EE3;&#x7801;&#x51FA;&#x73B0;&#x6CC4;&#x9732;</p><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line">MemoryTest *memoryTest = <span class="keyword">new</span> <span class="type">MemoryTest</span>;</span><br></pre></td></tr></table></figure><p>&#x52A0;&#x5165;delete&#x4EE3;&#x7801;&#xFF0C;&#x518D;&#x8DD1;&#x4E00;&#x6B21;</p><figure class="highlight abnf"><table><tr><td class="code"><pre><span class="line">MemoryTest *memoryTest = new MemoryTest<span class="comment">;</span></span><br><span class="line">delete memoryTest<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>&#x8F93;&#x51FA;&#x5982;&#x4E0B;</p><p><img src="/2017/06/05/Android-NDK-%E5%86%85%E5%AD%98%E6%B3%84%E9%9C%B2%E6%A3%80%E6%B5%8B/out_no_leak.png" alt="out_no_leak.png"></p><p>&#x53D1;&#x73B0;&#x4E4B;&#x524D;&#x7684;&#x6CC4;&#x9732;&#x4E0D;&#x89C1;&#x4E86;</p><p>&#x6700;&#x540E;&#xFF0C;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x8981;&#x60F3;&#x4F7F;&#x7528;LeakTracer&#x9700;&#x8981;&#x4FDD;&#x7559;so&#x8DB3;&#x591F;&#x591A;&#x7684;debug&#x4FE1;&#x606F;&#xFF0C;&#x5426;&#x5219;&#x53EF;&#x80FD;&#x4E0D;&#x80FD;&#x6B63;&#x5E38;&#x68C0;&#x6D4B;&#x3002;</p><p>&#x9879;&#x76EE;Demo&#x5730;&#x5740;&#x89C1;<a href="https://github.com/lizhangqu/NDKMemoryLeakSample" target="_blank" rel="noopener">NDKMemoryLeakSample</a></p>]]></content>
      <categories>
        <category>NDK</category>
      </categories>
      <tags>
        <tag>NDK</tag>
        <tag>Android，内存泄露检测</tag>
      </tags>
  </entry>
  <entry>
    <title>libuv NDK 交叉编译</title>
    <url>/2017/06/04/libuv-NDK%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<p>&#x79FB;&#x690D;libuv&#x5230;android</p><a id="more"></a><p>&#x521B;&#x5EFA;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#xFF0C;&#x5E76;&#x8FDB;&#x5165;</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> android</span><br><span class="line"><span class="built_in">cd</span> android</span><br></pre></td></tr></table></figure><p>&#x751F;&#x6210;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=arm <span class="attribute">--install-dir</span>=./toolchain</span><br></pre></td></tr></table></figure><p>clone&#x6E90;&#x7801;</p><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">git</span>@github.com:libuv/libuv.git</span><br></pre></td></tr></table></figure><p>&#x5BFC;&#x51FA;&#x73AF;&#x5883;&#x53D8;&#x91CF;(armeabi)</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">ANDROID_HOME</span>=`pwd`</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOLCHAIN</span>=<span class="variable">$ANDROID_HOME</span>/toolchain</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$TOOLCHAIN</span>/bin:$PATH</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOL</span>=arm-linux-androideabi</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CC</span>=<span class="variable">$TOOLCHAIN</span>/bin/${TOOL}-gcc</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CXX</span>=<span class="variable">$TOOLCHAIN</span>/bin/${TOOL}-g++</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">LINK</span>=<span class="variable">${CXX}</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">LD</span>=<span class="variable">$TOOLCHAIN</span>/bin/${TOOL}-ld</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">AR</span>=<span class="variable">$TOOLCHAIN</span>/bin/${TOOL}-ar</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">RANLIB</span>=<span class="variable">$TOOLCHAIN</span>/bin/${TOOL}-ranlib</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">STRIP</span>=<span class="variable">$TOOLCHAIN</span>/bin/${TOOL}-strip</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_FLAGS</span>=<span class="string">&quot;-mthumb&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> ARCH_LINK=</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CFLAGS</span>=<span class="string">&quot;<span class="variable">${ARCH_FLAGS}</span> -fpic -ffunction-sections -funwind-tables -fstack-protector -fno-strict-aliasing -finline-limit=64&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CXXFLAGS</span>=<span class="string">&quot;<span class="variable">${CFLAGS}</span> -frtti -fexceptions&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">LDFLAGS</span>=<span class="string">&quot;<span class="variable">${ARCH_LINK}</span>&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PLATFORM</span>=android</span><br></pre></td></tr></table></figure><p>&#x7F16;&#x8BD1;&#x5E76;&#x5B89;&#x88C5;<br></p><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span> libuv</span><br><span class="line"><span class="string">./autogen.sh</span></span><br><span class="line">autoreconf -i</span><br><span class="line"><span class="string">./configure</span> <span class="params">--prefix=</span>$TOOLCHAIN/sysroot/usr/local \</span><br><span class="line">       <span class="params">--with-sysroot=</span>$TOOLCHAIN/sysroot \</span><br><span class="line">       <span class="params">--host=</span>$TOOL \</span><br><span class="line">       <span class="params">--enable-static</span> \</span><br><span class="line">       <span class="params">--disable-shared</span></span><br><span class="line">make -j4</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p></p><p>&#x5378;&#x8F7D;</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">make uninstall</span></span><br></pre></td></tr></table></figure><p>armeabi-v7a</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=arm <span class="attribute">--install-dir</span>=./toolchain</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOL</span>=arm-linux-androideabi</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_FLAGS</span>=<span class="string">&quot;-march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_LINK</span>=<span class="string">&quot;-march=armv7-a -Wl,--fix-cortex-a8&quot;</span></span><br><span class="line"></span><br><span class="line">cd libuv</span><br><span class="line">./autogen.sh</span><br><span class="line">autoreconf -i</span><br><span class="line">./configure <span class="attribute">--prefix</span>=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/local \</span><br><span class="line">       <span class="attribute">--with-sysroot</span>=<span class="variable">$TOOLCHAIN</span>/sysroot \</span><br><span class="line">       <span class="attribute">--host</span>=<span class="variable">$TOOL</span> \</span><br><span class="line">       --enable-static \</span><br><span class="line">       --disable-shared</span><br></pre></td></tr></table></figure><p>x86</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=x86 <span class="attribute">--install-dir</span>=./toolchain</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOL</span>=i686-linux-android</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_FLAGS</span>=<span class="string">&quot;-march=i686 -msse3 -mstackrealign -mfpmath=sse&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_LINK</span>=<span class="string">&quot;&quot;</span></span><br><span class="line">./configure <span class="attribute">--prefix</span>=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/local \</span><br><span class="line">       <span class="attribute">--with-sysroot</span>=<span class="variable">$TOOLCHAIN</span>/sysroot \</span><br><span class="line">       <span class="attribute">--host</span>=<span class="variable">$TOOL</span> \</span><br><span class="line">       --enable-static \</span><br><span class="line">       --disable-shared</span><br></pre></td></tr></table></figure><p>demo</p><p>&#x5C06;$TOOLCHAIN/sysroot/usr/local&#x4E2D;&#x7684;&#x5934;&#x6587;&#x4EF6;&#x548C;libuv.a&#x62F7;&#x51FA;&#x6765;&#x5907;&#x7528;&#xFF0C;&#x590D;&#x5236;&#x5230;&#x9879;&#x76EE;&#x7684;thirdparty/libuv&#x76EE;&#x5F55;&#x4E0B;</p><p>cmake<br></p><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">project</span>(UV)</span><br><span class="line"><span class="keyword">cmake_minimum_required</span> (VERSION <span class="number">3.6</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">include_directories</span>(</span><br><span class="line">  <span class="variable">${PROJECT_SOURCE_DIR}</span>/<span class="keyword">include</span>/</span><br><span class="line">  <span class="variable">${PROJECT_SOURCE_DIR}</span>/../../../../thirdparty/libuv/<span class="keyword">include</span>/</span><br><span class="line">  )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_library</span>(uv STATIC IMPORTED)</span><br><span class="line"><span class="keyword">set_target_properties</span>(uv</span><br><span class="line">        PROPERTIES IMPORTED_LOCATION <span class="variable">${PROJECT_SOURCE_DIR}</span>/../../../../thirdparty/libuv/lib/libuv.a)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(UV_FILES</span><br><span class="line">    <span class="variable">${CMAKE_SOURCE_DIR}</span>/uv_native.cpp</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_library</span>(</span><br><span class="line">    uv-jni</span><br><span class="line">    SHARED</span><br><span class="line">    <span class="variable">${UV_FILES}</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">target_link_libraries</span>(</span><br><span class="line">   uv-jni</span><br><span class="line">   uv</span><br><span class="line">   log</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p></p><p>uv_native.h</p><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> UV_NATIVE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UV_NATIVE_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="string">&quot;jni.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> NELEM</span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">define</span> NELEM(x) ((int) (sizeof(x) / sizeof((x)[0])))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> CLASSNAME</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CLASSNAME <span class="string">&quot;io/github/lizhangqu/uv/UV&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> ANDROID</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;android/log.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TAG <span class="string">&quot;UV&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ALOGE(fmt, ...) __android_log_print(ANDROID_LOG_ERROR, TAG, fmt, ##__VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ALOGI(fmt, ...) __android_log_print(ANDROID_LOG_INFO, TAG, fmt, ##__VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ALOGD(fmt, ...) __android_log_print(ANDROID_LOG_DEBUG, TAG, fmt, ##__VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ALOGW(fmt, ...) __android_log_print(ANDROID_LOG_WARN, TAG, fmt, ##__VA_ARGS__)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ALOGE printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ALOGI printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ALOGD printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ALOGW printf</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">//UV_NATIVE_H</span></span></span><br></pre></td></tr></table></figure><p>uv_native.cpp</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;uv_native.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;uv.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">(JNIEnv *env, jobject thiz)</span> </span>{</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> JNINativeMethod sMethods[] = {</span><br><span class="line">        {</span><br><span class="line">                <span class="keyword">const_cast</span>&lt;<span class="keyword">char</span> *&gt;(<span class="string">&quot;test&quot;</span>),</span><br><span class="line">                <span class="keyword">const_cast</span>&lt;<span class="keyword">char</span> *&gt;(<span class="string">&quot;()V&quot;</span>),</span><br><span class="line">                <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">void</span> *&gt;(test)</span><br><span class="line">        },</span><br><span class="line"></span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">registerNativeMethods</span><span class="params">(JNIEnv *env, <span class="keyword">const</span> <span class="keyword">char</span> *className, <span class="keyword">const</span> JNINativeMethod *methods,</span></span></span><br><span class="line"><span class="function"><span class="params">                          <span class="keyword">const</span> <span class="keyword">int</span> numMethods)</span> </span>{</span><br><span class="line">    jclass clazz = env-&gt;FindClass(className);</span><br><span class="line">    <span class="keyword">if</span> (!clazz) {</span><br><span class="line">        ALOGE(<span class="string">&quot;Native registration unable to find class &apos;%s&apos;\n&quot;</span>, className);</span><br><span class="line">        <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (env-&gt;RegisterNatives(clazz, methods, numMethods) != <span class="number">0</span>) {</span><br><span class="line">        ALOGE(<span class="string">&quot;RegisterNatives failed for &apos;%s&apos;\n&quot;</span>, className);</span><br><span class="line">        env-&gt;DeleteLocalRef(clazz);</span><br><span class="line">        <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    }</span><br><span class="line">    env-&gt;DeleteLocalRef(clazz);</span><br><span class="line">    <span class="keyword">return</span> JNI_TRUE;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">jint <span class="title">JNI_OnLoad</span><span class="params">(JavaVM *vm, <span class="keyword">void</span> *reserved)</span> </span>{</span><br><span class="line">    JNIEnv *env;</span><br><span class="line">    <span class="keyword">if</span> (vm-&gt;GetEnv(<span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">void</span> **&gt;(&amp;env), JNI_VERSION_1_6) != JNI_OK) {</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">    registerNativeMethods(env, CLASSNAME, sMethods, NELEM(sMethods));</span><br><span class="line">    <span class="keyword">return</span> JNI_VERSION_1_6;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7F16;&#x5199;test&#x51FD;&#x6570;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">uv_loop_t *loop;</span><br><span class="line"></span><br><span class="line">void on<span class="constructor">_resolved(<span class="params">uv_getaddrinfo_t</span> <span class="operator">*</span><span class="params">resolver</span>, <span class="params">int</span> <span class="params">status</span>, <span class="params">struct</span> <span class="params">addrinfo</span> <span class="operator">*</span><span class="params">res</span>)</span> {</span><br><span class="line">    <span class="keyword">if</span> (status &lt; <span class="number">0</span>) {</span><br><span class="line">        <span class="constructor">ALOGE(<span class="string">&quot;getaddrinfo callback error %s\n&quot;</span>, <span class="params">uv_err_name</span>(<span class="params">status</span>)</span>);</span><br><span class="line">        return;</span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">char</span> addr<span class="literal">[<span class="number">17</span>]</span> = {<span class="character">&apos;\0&apos;</span>};</span><br><span class="line">    uv<span class="constructor">_ip4_name((<span class="params">struct</span> <span class="params">sockaddr_in</span> <span class="operator">*</span>)</span> res-&gt;ai_addr, addr, <span class="number">16</span>);</span><br><span class="line">    <span class="constructor">ALOGE(<span class="string">&quot;ipv4 :%s\n&quot;</span>, <span class="params">addr</span>)</span>;</span><br><span class="line">    uv<span class="constructor">_freeaddrinfo(<span class="params">res</span>)</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">void test(JNIEnv *env, jobject thiz) {</span><br><span class="line">    loop = uv<span class="constructor">_default_loop()</span>;</span><br><span class="line">    <span class="constructor">ALOGE(<span class="string">&quot;www.baidu.com is... &quot;</span>)</span>;</span><br><span class="line">    uv_getaddrinfo_t resolver;</span><br><span class="line">    <span class="built_in">int</span> r = uv<span class="constructor">_getaddrinfo(<span class="params">loop</span>, &amp;<span class="params">resolver</span>, <span class="params">on_resolved</span>, <span class="string">&quot;www.baidu.com&quot;</span>, <span class="string">&quot;80&quot;</span>, NULL)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (r) {</span><br><span class="line">        <span class="constructor">ALOGE(<span class="string">&quot;getaddrinfo call error %s\n&quot;</span>, <span class="params">uv_err_name</span>(<span class="params">r</span>)</span>);</span><br><span class="line">    } <span class="keyword">else</span> {</span><br><span class="line">        uv<span class="constructor">_run(<span class="params">loop</span>, UV_RUN_DEFAULT)</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD0;&#x884C;&#x540E;&#x8F93;&#x51FA;&#x7ED3;&#x679C;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">06</span><span class="number">-04</span> <span class="number">18</span>:<span class="number">51</span>:<span class="number">40.532</span> <span class="number">27196</span><span class="number">-27196</span>/io.github.lizhangqu.uv.sample E/UV: www.baidu.com <span class="keyword">is</span>... </span><br><span class="line"><span class="number">06</span><span class="number">-04</span> <span class="number">18</span>:<span class="number">51</span>:<span class="number">40.536</span> <span class="number">27196</span><span class="number">-27196</span>/io.github.lizhangqu.uv.sample E/UV: ipv4 :<span class="number">115.239</span><span class="number">.211</span><span class="number">.112</span></span><br></pre></td></tr></table></figure><p>demo&#x5730;&#x5740;</p><p><a href="https://github.com/lizhangqu/libuvSample" target="_blank" rel="noopener">libuvSample</a></p>]]></content>
      <categories>
        <category>NDK</category>
      </categories>
      <tags>
        <tag>NDK</tag>
        <tag>交叉编译</tag>
        <tag>libuv</tag>
      </tags>
  </entry>
  <entry>
    <title>当 Android 开发者遇见 TensorFlow</title>
    <url>/2017/06/02/%E5%BD%93Android%E5%BC%80%E5%8F%91%E8%80%85%E9%81%87%E8%A7%81TensorFlow/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>&#x5F53;&#x5199;&#x4E0B;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5176;&#x5B9E;&#x6211;&#x8FDE;TensorFlow&#x600E;&#x4E48;&#x7528;&#x90FD;&#x4E0D;&#x4F1A;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x4F60;&#x4EEC;&#x5C31;&#x5F53;&#x6211;&#x653E;&#x5C41;&#x597D;&#x4E86;&#x3002;&#x6211;&#x662F;&#x4E00;&#x4E2A;Android&#x5F00;&#x53D1;&#x8005;&#xFF0C;&#x4E14;&#x6211;&#x4E0D;&#x4F1A;python&#xFF08;&#x522B;&#x9119;&#x89C6;&#x6211;&#xFF09;&#xFF0C;&#x6240;&#x4EE5;&#x53D6;&#x540D;&#x4E3A;&#x300A;&#x5F53;Android&#x5F00;&#x53D1;&#x8005;&#x9047;&#x89C1;TensorFlow&#x300B;&#x3002;&#x6587;&#x7AE0;&#x5E76;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x5B9E;&#x8D28;&#x6027;&#x5185;&#x5BB9;&#xFF0C;&#x4EC5;&#x4EC5;&#x662F;&#x4E3A;&#x4E86;&#x6572;&#x5F00;&#x673A;&#x5668;&#x5B66;&#x4E60;&#x7684;&#x5927;&#x95E8;&#x3002;</p><a id="more"></a><h3 id="Java&#x8C03;&#x7528;TensorFlow"><a href="#Java&#x8C03;&#x7528;TensorFlow" class="headerlink" title="Java&#x8C03;&#x7528;TensorFlow"></a>Java&#x8C03;&#x7528;TensorFlow</h3><p>&#x524D;&#x9762;&#x8BF4;&#x4E86;&#xFF0C;&#x672C;&#x5B9D;&#x5B9D;&#x662F;&#x4E00;&#x53EA;&#x4E0D;&#x4F1A;python&#x7684;&#x5B9D;&#x5B9D;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x4E0D;&#x4F1A;&#x6D89;&#x53CA;&#x5230;&#x4EFB;&#x4F55;python&#x76F8;&#x5173;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x6240;&#x4EE5;Java&#x81EA;&#x7136;&#x800C;&#x7136;&#x5730;&#x6210;&#x4E3A;&#x4E86;&#x6211;&#x7684;&#x9996;&#x9009;&#x8BED;&#x8A00;&#x3002;</p><p>Google&#x5F00;&#x6E90;&#x7684;TensorFlow&#x7684;&#x6838;&#x5FC3;&#x4EE3;&#x7801;&#x662F;C++&#x5199;&#x7684;&#xFF0C;&#x56E0;&#x6B64;Java&#x81EA;&#x7136;&#x800C;&#x7136;&#x7684;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4ED6;&#xFF0C;&#x53EA;&#x662F;&#x4E2D;&#x95F4;&#x591A;&#x4E86;&#x4E00;&#x5C42;JNI&#x3002;&#x52A0;&#x4E0A;&#x5E73;&#x65F6;&#x6211;&#x5BF9;Gradle&#x7684;&#x63A5;&#x89E6;&#x7A0B;&#x5EA6;&#xFF0C;&#x9009;&#x62E9;Gradle&#x505A;&#x6784;&#x5EFA;&#x5DE5;&#x5177;&#xFF0C;&#x800C;&#x4E0D;&#x662F;maven&#x3002;</p><p>&#x8FD9;&#x91CC;&#x4E0D;&#x5F97;&#x4E0D;&#x518D;&#x8D5E;&#x4E00;&#x4E0B;Intellij Idea&#xFF0C;&#x4ECA;&#x5929;&#x7A81;&#x7136;&#x53D1;&#x73B0;2017.1&#x7248;&#x672C;&#x7684;Intellij Idea&#x5DF2;&#x7ECF;&#x80FD;&#x591F;&#x81EA;&#x52A8;&#x5C06;maven&#x4F9D;&#x8D56;&#x8F6C;&#x6362;&#x4E3A;gradle&#x4F9D;&#x8D56;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x590D;&#x5236;maven&#x4F9D;&#x8D56;&#x5230;gradle&#x4E2D;&#xFF0C;&#x5B83;&#x5C31;&#x4F1A;&#x81EA;&#x52A8;&#x8F6C;&#x6362;&#x4E3A;gradle&#x4F9D;&#x8D56;&#xFF0C;&#x518D;&#x4E5F;&#x4E0D;&#x7528;&#x6211;&#x4EEC;&#x624B;&#x52A8;&#x8F6C;&#x6362;&#x3002;&#x89C1;&#x8BC1;&#x5947;&#x8FF9;&#x7684;&#x65F6;&#x5019;&#x5230;&#x4E86;</p><p><img src="/2017/06/02/%E5%BD%93Android%E5%BC%80%E5%8F%91%E8%80%85%E9%81%87%E8%A7%81TensorFlow/maven2gradle.gif" alt="maven2gradle.gif"></p><p>maven &#x4F9D;&#x8D56;</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.tensorflow<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tensorflow<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>&#x8F6C;&#x6362;&#x540E;&#x7684;gradle&#x4F9D;&#x8D56;&#x4E3A;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> {</span><br><span class="line">    <span class="keyword">compile</span> <span class="string">&apos;org.tensorflow:tensorflow:1.1.0&apos;</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4E3A;&#x4E86;&#x8FD0;&#x884C;java&#x7A0B;&#x5E8F;&#xFF0C;&#x5E94;&#x7528;application&#x63D2;&#x4EF6;&#xFF0C;&#x5E76;&#x6307;&#x5B9A;mainClassName&#xFF0C;&#x5BF9;&#x5E94;&#x7684;&#x7C7B;&#x5728;&#x540E;&#x6587;&#x521B;&#x5EFA;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">apply plugin: <span class="string">&apos;application&apos;</span></span><br><span class="line">apply plugin: <span class="string">&apos;idea&apos;</span></span><br><span class="line">mainClassName = <span class="string">&quot;com.lizhangqu.application.Main&quot;</span></span><br><span class="line"><span class="keyword">sourceCompatibility</span> = <span class="number">1.8</span></span><br><span class="line"><span class="keyword">dependencies</span> {</span><br><span class="line">    <span class="keyword">compile</span> <span class="string">&apos;org.tensorflow:tensorflow:1.1.0&apos;</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x6765;&#x70B9;&#x6709;&#x96BE;&#x5EA6;&#x7684;&#xFF0C;&#x53C2;&#x8003;<a href="https://github.com/tensorflow/tensorflow/blob/r1.1/tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java" target="_blank" rel="noopener">LabelImage.java</a>&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x505A;&#x4E00;&#x4E2A;&#x56FE;&#x7247;&#x8BC6;&#x522B;&#x5DE5;&#x5177;</p><p>&#x9996;&#x5148;&#x4E0B;&#x8F7D;&#x8BAD;&#x7EC3;&#x597D;&#x7684;&#x6A21;&#x578B; <a href="https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip" target="_blank" rel="noopener">inception5h.zip</a>&#xFF0C;&#x5C06;&#x6A21;&#x578B;&#x5185;&#x5BB9;&#x89E3;&#x538B;&#x5230;src/main/resources/model&#x76EE;&#x5F55;&#xFF0C;&#x5982;&#x56FE;</p><p><img src="/2017/06/02/%E5%BD%93Android%E5%BC%80%E5%8F%91%E8%80%85%E9%81%87%E8%A7%81TensorFlow/model.png" alt="model.png"></p><p>&#x7136;&#x540E;&#x968F;&#x4FBF;&#x4E0B;&#x8F7D;&#x4E00;&#x5F20;&#x56FE;&#x4F5C;&#x4E3A;&#x5F85;&#x8BC6;&#x522B;&#x7684;&#x56FE;&#xFF0C;&#x8FD9;&#x91CC;&#x4F7F;&#x7528;&#x8FD9;&#x5F20;&#x56FE;&#xFF0C;&#x597D;&#x5927;&#x4E00;&#x5EA7;&#x5C71;</p><p><img src="/2017/06/02/%E5%BD%93Android%E5%BC%80%E5%8F%91%E8%80%85%E9%81%87%E8%A7%81TensorFlow/moutain.jpg" alt="moutain.jpg"></p><p>&#x5C06;&#x5176;&#x653E;&#x5230;src/main/resources/pic&#x76EE;&#x5F55;&#xFF0C;&#x5982;&#x56FE;</p><p><img src="/2017/06/02/%E5%BD%93Android%E5%BC%80%E5%8F%91%E8%80%85%E9%81%87%E8%A7%81TensorFlow/pic.png" alt="pic.png"></p><p>&#x7136;&#x540E;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;Main&#x7C7B;&#xFF0C;&#x62F7;&#x8D1D;&#x4E00;&#x6CE2;<a href="https://github.com/tensorflow/tensorflow/blob/r1.1/tensorflow/java/src/main/java/org/tensorflow/examples/LabelImage.java" target="_blank" rel="noopener">LabelImage.java&#x4EE3;&#x7801;</a>&#xFF0C;&#x4FEE;&#x6539;&#x5176;main&#x51FD;&#x6570;&#x4E3A;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">public static void main(String<span class="literal">[]</span> args) {</span><br><span class="line">    <span class="comment">//&#x6A21;&#x578B;&#x4E0B;&#x8F7D;</span></span><br><span class="line">    <span class="comment">//https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip</span></span><br><span class="line">    String modelPath = <span class="module-access"><span class="module"><span class="identifier">Main</span>.</span></span><span class="keyword">class</span>.get<span class="constructor">ClassLoader()</span>.get<span class="constructor">Resource(<span class="string">&quot;model&quot;</span>)</span>.get<span class="constructor">Path()</span>;</span><br><span class="line">    String picPath = <span class="module-access"><span class="module"><span class="identifier">Main</span>.</span></span><span class="keyword">class</span>.get<span class="constructor">ClassLoader()</span>.get<span class="constructor">Resource(<span class="string">&quot;pic&quot;</span>)</span>.get<span class="constructor">Path()</span>;</span><br><span class="line">    byte<span class="literal">[]</span> graphDef = read<span class="constructor">AllBytesOrExit(Paths.<span class="params">get</span>(<span class="params">modelPath</span>, <span class="string">&quot;tensorflow_inception_graph.pb&quot;</span>)</span>);</span><br><span class="line">    List&lt;String&gt; labels =</span><br><span class="line">            read<span class="constructor">AllLinesOrExit(Paths.<span class="params">get</span>(<span class="params">modelPath</span>, <span class="string">&quot;imagenet_comp_graph_label_strings.txt&quot;</span>)</span>);</span><br><span class="line">    byte<span class="literal">[]</span> imageBytes = read<span class="constructor">AllBytesOrExit(Paths.<span class="params">get</span>(<span class="params">picPath</span>, <span class="string">&quot;moutain.jpg&quot;</span>)</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> (Tensor image = construct<span class="constructor">AndExecuteGraphToNormalizeImage(<span class="params">imageBytes</span>)</span>) {</span><br><span class="line">        <span class="built_in">float</span><span class="literal">[]</span> labelProbabilities = execute<span class="constructor">InceptionGraph(<span class="params">graphDef</span>, <span class="params">image</span>)</span>;</span><br><span class="line">        <span class="built_in">int</span> bestLabelIdx = max<span class="constructor">Index(<span class="params">labelProbabilities</span>)</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(</span><br><span class="line">                <span class="module-access"><span class="module"><span class="identifier">String</span>.</span></span>format(</span><br><span class="line">                        <span class="string">&quot;BEST MATCH: %s (%.2f%% likely)&quot;</span>,</span><br><span class="line">                        labels.get(bestLabelIdx), labelProbabilities<span class="literal">[<span class="identifier">bestLabelIdx</span>]</span><span class="operator"> * </span><span class="number">100</span>f));</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x505A;&#x7684;&#x4FEE;&#x6539;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5C06;&#x53C2;&#x6570;&#x4ECE;&#x5916;&#x90E8;&#x4F20;&#x5165;&#xFF0C;&#x4FEE;&#x6539;&#x4E3A;&#x4E86;&#x4ECE;resources&#x76EE;&#x5F55;&#x8BFB;&#x53D6;</p><p>Main&#x7C7B;&#x5B8C;&#x6574;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lizhangqu.application;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.Charset;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Files;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Path;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.tensorflow.DataType;</span><br><span class="line"><span class="keyword">import</span> org.tensorflow.Graph;</span><br><span class="line"><span class="keyword">import</span> org.tensorflow.Output;</span><br><span class="line"><span class="keyword">import</span> org.tensorflow.Session;</span><br><span class="line"><span class="keyword">import</span> org.tensorflow.Tensor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class Main {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) {</span><br><span class="line">        <span class="comment">//&#x6A21;&#x578B;&#x4E0B;&#x8F7D;</span></span><br><span class="line">        <span class="comment">//https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip</span></span><br><span class="line">        <span class="keyword">String</span> modelPath = Main.class.getClassLoader().getResource(<span class="string">&quot;model&quot;</span>).getPath();</span><br><span class="line">        <span class="keyword">String</span> picPath = Main.class.getClassLoader().getResource(<span class="string">&quot;pic&quot;</span>).getPath();</span><br><span class="line">        <span class="built_in">byte</span>[] graphDef = readAllBytesOrExit(Paths.<span class="built_in">get</span>(modelPath, <span class="string">&quot;tensorflow_inception_graph.pb&quot;</span>));</span><br><span class="line">        List&lt;<span class="keyword">String</span>&gt; labels =</span><br><span class="line">                readAllLinesOrExit(Paths.<span class="built_in">get</span>(modelPath, <span class="string">&quot;imagenet_comp_graph_label_strings.txt&quot;</span>));</span><br><span class="line">        <span class="built_in">byte</span>[] imageBytes = readAllBytesOrExit(Paths.<span class="built_in">get</span>(picPath, <span class="string">&quot;moutain.jpg&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> (Tensor <span class="built_in">image</span> = constructAndExecuteGraphToNormalizeImage(imageBytes)) {</span><br><span class="line">            <span class="built_in">float</span>[] labelProbabilities = executeInceptionGraph(graphDef, <span class="built_in">image</span>);</span><br><span class="line">            <span class="built_in">int</span> bestLabelIdx = maxIndex(labelProbabilities);</span><br><span class="line">            System.out.<span class="built_in">println</span>(</span><br><span class="line">                    <span class="keyword">String</span>.format(</span><br><span class="line">                            <span class="string">&quot;BEST MATCH: %s (%.2f%% likely)&quot;</span>,</span><br><span class="line">                            labels.<span class="built_in">get</span>(bestLabelIdx), labelProbabilities[bestLabelIdx] * <span class="number">100</span>f));</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Tensor constructAndExecuteGraphToNormalizeImage(<span class="built_in">byte</span>[] imageBytes) {</span><br><span class="line">        <span class="keyword">try</span> (Graph g = <span class="keyword">new</span> Graph()) {</span><br><span class="line">            GraphBuilder b = <span class="keyword">new</span> GraphBuilder(g);</span><br><span class="line">            <span class="comment">// Some constants specific to the pre-trained model at:</span></span><br><span class="line">            <span class="comment">// https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip</span></span><br><span class="line">            <span class="comment">//</span></span><br><span class="line">            <span class="comment">// - The model was trained with images scaled to 224x224 pixels.</span></span><br><span class="line">            <span class="comment">// - The colors, represented as R, G, B in 1-byte each were converted to</span></span><br><span class="line">            <span class="comment">//   float using (value - Mean)/Scale.</span></span><br><span class="line">            <span class="keyword">final</span> <span class="built_in">int</span> H = <span class="number">224</span>;</span><br><span class="line">            <span class="keyword">final</span> <span class="built_in">int</span> W = <span class="number">224</span>;</span><br><span class="line">            <span class="keyword">final</span> <span class="built_in">float</span> mean = <span class="number">117</span>f;</span><br><span class="line">            <span class="keyword">final</span> <span class="built_in">float</span> <span class="built_in">scale</span> = <span class="number">1</span>f;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Since the graph is being constructed once per execution here, we can use a constant for the</span></span><br><span class="line">            <span class="comment">// input image. If the graph were to be re-used for multiple input images, a placeholder would</span></span><br><span class="line">            <span class="comment">// have been more appropriate.</span></span><br><span class="line">            <span class="keyword">final</span> Output input = b.constant(<span class="string">&quot;input&quot;</span>, imageBytes);</span><br><span class="line">            <span class="keyword">final</span> Output output =</span><br><span class="line">                    b.div(</span><br><span class="line">                            b.sub(</span><br><span class="line">                                    b.resizeBilinear(</span><br><span class="line">                                            b.expandDims(</span><br><span class="line">                                                    b.cast(b.decodeJpeg(input, <span class="number">3</span>), DataType.FLOAT),</span><br><span class="line">                                                    b.constant(<span class="string">&quot;make_batch&quot;</span>, <span class="number">0</span>)),</span><br><span class="line">                                            b.constant(<span class="string">&quot;size&quot;</span>, <span class="keyword">new</span> <span class="built_in">int</span>[]{H, W})),</span><br><span class="line">                                    b.constant(<span class="string">&quot;mean&quot;</span>, mean)),</span><br><span class="line">                            b.constant(<span class="string">&quot;scale&quot;</span>, <span class="built_in">scale</span>));</span><br><span class="line">            <span class="keyword">try</span> (Session s = <span class="keyword">new</span> Session(g)) {</span><br><span class="line">                <span class="keyword">return</span> s.runner().fetch(output.op().name()).run().<span class="built_in">get</span>(<span class="number">0</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">float</span>[] executeInceptionGraph(<span class="built_in">byte</span>[] graphDef, Tensor <span class="built_in">image</span>) {</span><br><span class="line">        <span class="keyword">try</span> (Graph g = <span class="keyword">new</span> Graph()) {</span><br><span class="line">            g.importGraphDef(graphDef);</span><br><span class="line">            <span class="keyword">try</span> (Session s = <span class="keyword">new</span> Session(g);</span><br><span class="line">                 Tensor result = s.runner().feed(<span class="string">&quot;input&quot;</span>, <span class="built_in">image</span>).fetch(<span class="string">&quot;output&quot;</span>).run().<span class="built_in">get</span>(<span class="number">0</span>)) {</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">long</span>[] rshape = result.<span class="built_in">shape</span>();</span><br><span class="line">                <span class="keyword">if</span> (result.numDimensions() != <span class="number">2</span> || rshape[<span class="number">0</span>] != <span class="number">1</span>) {</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(</span><br><span class="line">                            <span class="keyword">String</span>.format(</span><br><span class="line">                                    <span class="string">&quot;Expected model to produce a [1 N] shaped tensor where N is the number of labels, instead it produced one with shape %s&quot;</span>,</span><br><span class="line">                                    Arrays.toString(rshape)));</span><br><span class="line">                }</span><br><span class="line">                <span class="built_in">int</span> nlabels = (<span class="built_in">int</span>) rshape[<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">return</span> result.copyTo(<span class="keyword">new</span> <span class="built_in">float</span>[<span class="number">1</span>][nlabels])[<span class="number">0</span>];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">int</span> maxIndex(<span class="built_in">float</span>[] probabilities) {</span><br><span class="line">        <span class="built_in">int</span> best = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt; probabilities.length; ++i) {</span><br><span class="line">            <span class="keyword">if</span> (probabilities[i] &gt; probabilities[best]) {</span><br><span class="line">                best = i;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> best;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">byte</span>[] readAllBytesOrExit(Path path) {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="keyword">return</span> Files.readAllBytes(path);</span><br><span class="line">        } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">            System.err.<span class="built_in">println</span>(<span class="string">&quot;Failed to read [&quot;</span> + path + <span class="string">&quot;]: &quot;</span> + e.getMessage());</span><br><span class="line">            System.<span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;<span class="keyword">String</span>&gt; readAllLinesOrExit(Path path) {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="keyword">return</span> Files.readAllLines(path, Charset.forName(<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line">        } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">            System.err.<span class="built_in">println</span>(<span class="string">&quot;Failed to read [&quot;</span> + path + <span class="string">&quot;]: &quot;</span> + e.getMessage());</span><br><span class="line">            System.<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// In the fullness of time, equivalents of the methods of this class should be auto-generated from</span></span><br><span class="line">    <span class="comment">// the OpDefs linked into libtensorflow_jni.so. That would match what is done in other languages</span></span><br><span class="line">    <span class="comment">// like Python, C++ and Go.</span></span><br><span class="line">    <span class="keyword">static</span> class GraphBuilder {</span><br><span class="line">        GraphBuilder(Graph g) {</span><br><span class="line">            <span class="keyword">this</span>.g = g;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        Output div(Output x, Output y) {</span><br><span class="line">            <span class="keyword">return</span> binaryOp(<span class="string">&quot;Div&quot;</span>, x, y);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        Output sub(Output x, Output y) {</span><br><span class="line">            <span class="keyword">return</span> binaryOp(<span class="string">&quot;Sub&quot;</span>, x, y);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        Output resizeBilinear(Output images, Output <span class="built_in">size</span>) {</span><br><span class="line">            <span class="keyword">return</span> binaryOp(<span class="string">&quot;ResizeBilinear&quot;</span>, images, <span class="built_in">size</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        Output expandDims(Output input, Output dim) {</span><br><span class="line">            <span class="keyword">return</span> binaryOp(<span class="string">&quot;ExpandDims&quot;</span>, input, dim);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        Output cast(Output value, DataType dtype) {</span><br><span class="line">            <span class="keyword">return</span> g.opBuilder(<span class="string">&quot;Cast&quot;</span>, <span class="string">&quot;Cast&quot;</span>).addInput(value).setAttr(<span class="string">&quot;DstT&quot;</span>, dtype).build().output(<span class="number">0</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        Output decodeJpeg(Output contents, <span class="keyword">long</span> channels) {</span><br><span class="line">            <span class="keyword">return</span> g.opBuilder(<span class="string">&quot;DecodeJpeg&quot;</span>, <span class="string">&quot;DecodeJpeg&quot;</span>)</span><br><span class="line">                    .addInput(contents)</span><br><span class="line">                    .setAttr(<span class="string">&quot;channels&quot;</span>, channels)</span><br><span class="line">                    .build()</span><br><span class="line">                    .output(<span class="number">0</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        Output constant(<span class="keyword">String</span> name, <span class="keyword">Object</span> value) {</span><br><span class="line">            <span class="keyword">try</span> (Tensor t = Tensor.create(value)) {</span><br><span class="line">                <span class="keyword">return</span> g.opBuilder(<span class="string">&quot;Const&quot;</span>, name)</span><br><span class="line">                        .setAttr(<span class="string">&quot;dtype&quot;</span>, t.dataType())</span><br><span class="line">                        .setAttr(<span class="string">&quot;value&quot;</span>, t)</span><br><span class="line">                        .build()</span><br><span class="line">                        .output(<span class="number">0</span>);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Output binaryOp(<span class="keyword">String</span> type, Output in1, Output in2) {</span><br><span class="line">            <span class="keyword">return</span> g.opBuilder(type, type).addInput(in1).addInput(in2).build().output(<span class="number">0</span>);</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> Graph g;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8DD1;&#x4E00;&#x6CE2;&#xFF0C;&#x547D;&#x4EE4;&#x884C;&#x6267;&#x884C;</p><figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">./gradlew <span class="keyword">run</span><span class="bash"></span></span><br></pre></td></tr></table></figure><p>&#x770B;&#x4E0B;&#x8F93;&#x51FA;&#x5185;&#x5BB9;</p><p><img src="/2017/06/02/%E5%BD%93Android%E5%BC%80%E5%8F%91%E8%80%85%E9%81%87%E8%A7%81TensorFlow/run.png" alt="run.png"></p><p>&#x8F93;&#x51FA;&#x4E3A;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">BEST MATCH: alp (<span class="number">58.23</span>% likely)</span><br></pre></td></tr></table></figure><p>&#x6211;&#x64E6;&#xFF0C;alp&#x662F;&#x4EC0;&#x4E48;&#x9B3C;&#xFF0C;&#x67E5;&#x4E0B;&#x82F1;&#x6587;&#x5B57;&#x5178;</p><figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line">alp &#x82F1; <span class="string">[&#xE6;lp]</span> &#x7F8E; <span class="string">[&#xE6;lp]</span> &#x3000; &#x3000;</span><br><span class="line">n. &#x9AD8;&#x5C71;</span><br></pre></td></tr></table></figure><p>&#x6069;&#xFF0C;&#x6CA1;&#x9519;&#xFF0C;58.23%&#x7684;&#x6982;&#x7387;&#x8FD9;&#x5F20;&#x56FE;&#x662F;&#x5927;&#x5C71;&#x3002;&#x6CA1;&#x9519;&#xFF0C;&#x8FD9;&#x5F20;&#x56FE;&#x5C31;&#x662F;&#x5927;&#x5C71;&#x3002;&#x5F53;&#x7136;&#x8BC6;&#x522B;&#x7684;&#x56FE;&#x7684;&#x51C6;&#x786E;&#x7387;&#x8DDF;&#x8FD9;&#x4E2A;&#x8BAD;&#x7EC3;&#x597D;&#x7684;&#x6A21;&#x578B;&#x76F4;&#x63A5;&#x76F8;&#x5173;&#xFF0C;&#x6A21;&#x578B;&#x8D8A;&#x5C4C;&#xFF0C;&#x51C6;&#x786E;&#x7387;&#x5C31;&#x8D8A;&#x9AD8;&#x3002;&#x5177;&#x4F53;&#x4EE3;&#x7801;&#x4EC0;&#x4E48;&#x610F;&#x601D;&#x4F60;&#x4E5F;&#x522B;&#x95EE;&#x6211;&#xFF0C;&#x95EE;&#x6211;&#x6211;&#x4E5F;&#x4E0D;&#x77E5;&#x9053;&#xFF0C;&#x6587;&#x7AE0;&#x5F00;&#x5934;&#x5DF2;&#x7ECF;&#x8BF4;&#x8FC7;&#x4E86;&#xFF0C;&#x5199;&#x4E0B;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x8FD8;&#x4E0D;&#x4F1A;&#x7528;TensorFlow&#x3002;</p><h3 id="Android&#x8C03;&#x7528;TensorFlow"><a href="#Android&#x8C03;&#x7528;TensorFlow" class="headerlink" title="Android&#x8C03;&#x7528;TensorFlow"></a>Android&#x8C03;&#x7528;TensorFlow</h3><p>Java&#x80FD;&#x8C03;&#x7528;&#xFF0C;Android&#x81EA;&#x7136;&#x5728;&#x4E00;&#x5B9A;&#x7A0B;&#x5EA6;&#x4E0A;&#x4E5F;&#x80FD;&#x8C03;&#x7528;&#x3002;</p><p>&#x5F15;&#x5165;&#x4F9D;&#x8D56;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">&apos;org.tensorflow:tensorflow-android:1.2.0-rc0&apos;</span></span><br></pre></td></tr></table></figure><p>&#x5C06;minSdkVersion&#x8BBE;&#x6210;19&#xFF0C;&#x56E0;&#x4E3A;&#x7528;&#x5230;&#x4E86;&#x9AD8;Api&#xFF0C;&#x5F53;&#x7136;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x8BBE;&#x6210;14&#xFF0C;&#x81EA;&#x884C;&#x5C06;&#x9AD8;Api&#x7684;&#x4EE3;&#x7801;&#x5220;&#x4E86;&#xFF0C;&#x4E3B;&#x8981;&#x662F;android.os.Trace&#x7C7B;&#xFF0C;&#x53BB;&#x9664;&#x4E86;&#x4E0D;&#x5F71;&#x54CD;&#x6B63;&#x5E38;&#x4F7F;&#x7528;</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">android</span> {</span><br><span class="line">    <span class="section">defaultConfig</span> {</span><br><span class="line">        <span class="attribute">minSdkVersion</span> <span class="number">19</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD8;&#x662F;&#x4E00;&#x6837;&#x7684;&#x8BAD;&#x7EC3;&#x6A21;&#x578B;&#xFF0C;&#x8FD9;&#x6B21;&#x628A;&#x4ED6;&#x4EEC;&#x6254;&#x5230;assets/model&#x4E0B;&#xFF0C;&#x5F85;&#x8BC6;&#x522B;&#x7684;&#x56FE;&#x7247;&#x653E;&#x5728;assets/pic&#x4E0B;&#xFF0C;&#x5982;&#x56FE;</p><p><img src="/2017/06/02/%E5%BD%93Android%E5%BC%80%E5%8F%91%E8%80%85%E9%81%87%E8%A7%81TensorFlow/android_model.png" alt="android_model.png"></p><p>&#x4E0D;&#x8FC7;&#x8FD9;&#x6B21;&#x6211;&#x4EEC;&#x5F85;&#x8BC6;&#x522B;&#x7684;&#x56FE;&#x6362;&#x4E86;&#xFF0C;&#x6362;&#x6210;&#x4E86;&#x4E00;&#x4E2A;&#x5927;&#x82F9;&#x679C;</p><p><img src="/2017/06/02/%E5%BD%93Android%E5%BC%80%E5%8F%91%E8%80%85%E9%81%87%E8%A7%81TensorFlow/apple.jpg" alt="apple.jpg"></p><p>&#x8FD8;&#x662F;&#x62F7;&#x8D1D;&#x70B9;&#x4EE3;&#x7801;&#xFF0C;&#x5230;<a href="https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/android/src/org/tensorflow/demo" target="_blank" rel="noopener">android/demo</a>&#x4E0B;&#xFF0C;&#x62F7;&#x8D1D;<a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/android/src/org/tensorflow/demo/Classifier.java" target="_blank" rel="noopener">Classifier.java</a>&#x548C;<a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/android/src/org/tensorflow/demo/TensorFlowImageClassifier.java" target="_blank" rel="noopener">TensorFlowImageClassifier.java</a>&#x4E24;&#x4E2A;&#x7C7B;&#xFF0C;&#x4EE3;&#x7801;&#x5C31;&#x4E0D;&#x8D34;&#x4E86;&#x3002;</p><p>&#x7136;&#x540E;&#x53C2;&#x8003;&#x4E0B;<a href="https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/android/src/org/tensorflow/demo/ClassifierActivity.java" target="_blank" rel="noopener">ClassifierActivity.java</a>&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5C06;assets/pic/apple.jpg&#x8FDB;&#x884C;&#x8BC6;&#x522B;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">public <span class="keyword">class</span> MainActivity extends AppCompatActivity {</span><br><span class="line">    <span class="keyword">private</span> TextView result;</span><br><span class="line">    <span class="keyword">private</span> Button btn;</span><br><span class="line">    <span class="keyword">private</span> Classifier classifier;</span><br><span class="line">    <span class="keyword">private</span> static final <span class="built_in">int</span> INPUT_SIZE = <span class="number">224</span>;</span><br><span class="line">    <span class="keyword">private</span> static final <span class="built_in">int</span> IMAGE_MEAN = <span class="number">117</span>;</span><br><span class="line">    <span class="keyword">private</span> static final <span class="built_in">float</span> IMAGE_STD = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> static final String INPUT_NAME = <span class="string">&quot;input&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> static final String OUTPUT_NAME = <span class="string">&quot;output&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> static final String MODEL_FILE = <span class="string">&quot;file:///android_asset/model/tensorflow_inception_graph.pb&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> static final String LABEL_FILE =</span><br><span class="line">            <span class="string">&quot;file:///android_asset/model/imagenet_comp_graph_label_strings.txt&quot;</span>;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void on<span class="constructor">Create(Bundle <span class="params">savedInstanceState</span>)</span> {</span><br><span class="line">        super.on<span class="constructor">Create(<span class="params">savedInstanceState</span>)</span>;</span><br><span class="line">        set<span class="constructor">ContentView(R.<span class="params">layout</span>.<span class="params">activity_main</span>)</span>;</span><br><span class="line">        btn = (Button) find<span class="constructor">ViewById(R.<span class="params">id</span>.<span class="params">btn</span>)</span>;</span><br><span class="line">        result = (TextView) find<span class="constructor">ViewById(R.<span class="params">id</span>.<span class="params">result</span>)</span>;</span><br><span class="line">        classifier = <span class="module-access"><span class="module"><span class="identifier">TensorFlowImageClassifier</span>.</span></span>create(</span><br><span class="line">                get<span class="constructor">Assets()</span>,</span><br><span class="line">                MODEL_FILE,</span><br><span class="line">                LABEL_FILE,</span><br><span class="line">                INPUT_SIZE,</span><br><span class="line">                IMAGE_MEAN,</span><br><span class="line">                IMAGE_STD,</span><br><span class="line">                INPUT_NAME,</span><br><span class="line">                OUTPUT_NAME);</span><br><span class="line">        btn.set<span class="constructor">OnClickListener(<span class="params">new</span> View.OnClickListener()</span> {</span><br><span class="line">            @Override</span><br><span class="line">            public void on<span class="constructor">Click(View <span class="params">v</span>)</span> {</span><br><span class="line"></span><br><span class="line">                <span class="keyword">new</span> <span class="constructor">Thread(<span class="params">new</span> Runnable()</span> {</span><br><span class="line">                    @Override</span><br><span class="line">                    public void run<span class="literal">()</span> {</span><br><span class="line">                        <span class="keyword">try</span> {</span><br><span class="line">                            Bitmap croppedBitmap = get<span class="constructor">Bitmap(<span class="params">getApplicationContext</span>()</span>, <span class="string">&quot;pic/apple.jpg&quot;</span>, INPUT_SIZE);</span><br><span class="line">                            final List&lt;Classifier.Recognition&gt; results = classifier.recognize<span class="constructor">Image(<span class="params">croppedBitmap</span>)</span>;</span><br><span class="line">                            <span class="keyword">new</span> <span class="constructor">Handler(Looper.<span class="params">getMainLooper</span>()</span>).post(<span class="keyword">new</span> <span class="constructor">Runnable()</span> {</span><br><span class="line">                                @Override</span><br><span class="line">                                public void run<span class="literal">()</span> {</span><br><span class="line">                                    result.set<span class="constructor">Text(<span class="string">&quot;results:&quot;</span> + <span class="params">results</span>)</span>;</span><br><span class="line">                                }</span><br><span class="line">                            });</span><br><span class="line">                        } catch (IOException e) {</span><br><span class="line">                            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">                        }</span><br><span class="line">                    }</span><br><span class="line">                }).start<span class="literal">()</span>;</span><br><span class="line">            }</span><br><span class="line">        });</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> static Bitmap get<span class="constructor">Bitmap(Context <span class="params">context</span>, String <span class="params">path</span>, <span class="params">int</span> <span class="params">size</span>)</span> throws IOException {</span><br><span class="line">        Bitmap bitmap = null;</span><br><span class="line">        InputStream inputStream = null;</span><br><span class="line">        inputStream = context.get<span class="constructor">Assets()</span>.<span class="keyword">open</span>(path);</span><br><span class="line">        bitmap = <span class="module-access"><span class="module"><span class="identifier">BitmapFactory</span>.</span></span>decode<span class="constructor">Stream(<span class="params">inputStream</span>)</span>;</span><br><span class="line">        inputStream.close<span class="literal">()</span>;</span><br><span class="line">        <span class="built_in">int</span> width = bitmap.get<span class="constructor">Width()</span>;</span><br><span class="line">        <span class="built_in">int</span> height = bitmap.get<span class="constructor">Height()</span>;</span><br><span class="line">        <span class="built_in">float</span> scaleWidth = ((<span class="built_in">float</span>) size)<span class="operator"> / </span>width;</span><br><span class="line">        <span class="built_in">float</span> scaleHeight = ((<span class="built_in">float</span>) size)<span class="operator"> / </span>height;</span><br><span class="line">        Matrix matrix = <span class="keyword">new</span> <span class="constructor">Matrix()</span>;</span><br><span class="line">        matrix.post<span class="constructor">Scale(<span class="params">scaleWidth</span>, <span class="params">scaleHeight</span>)</span>;</span><br><span class="line">        return <span class="module-access"><span class="module"><span class="identifier">Bitmap</span>.</span></span>create<span class="constructor">Bitmap(<span class="params">bitmap</span>, 0, 0, <span class="params">width</span>, <span class="params">height</span>, <span class="params">matrix</span>, <span class="params">true</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8BC6;&#x522B;&#x7ED3;&#x679C;&#x5982;&#x4E0B;:</p><p><img src="/2017/06/02/%E5%BD%93Android%E5%BC%80%E5%8F%91%E8%80%85%E9%81%87%E8%A7%81TensorFlow/android_result.png" alt="android_result.png"></p><p>&#x8BC6;&#x522B;&#x7387;&#x6700;&#x9AD8;&#x7684;&#x662F;granny smith&#xFF0C;&#x4EC0;&#x4E48;&#x610F;&#x601D;&#x5462;&#xFF0C;&#x67E5;&#x4E00;&#x4E0B;&#x53D1;&#x73B0;&#x662F;&#x201C;&#x9752;&#x82F9;&#x679C;&#x201D;&#xFF0C;&#x54ED;&#x7B11;&#x4E0D;&#x5F97;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x7EA2;&#x82F9;&#x679C;&#xFF0C;&#x8FD9;&#x4E48;&#x5C0F;&#x7684;&#x8BAD;&#x7EC3;&#x6A21;&#x578B;&#xFF0C;&#x4E5F;&#x4E0D;&#x671F;&#x5F85;&#x8BC6;&#x522B;&#x7387;&#x6709;&#x591A;&#x9AD8;&#x4E86;&#x3002;</p><h3 id="NDK&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;TensorFlow"><a href="#NDK&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;TensorFlow" class="headerlink" title="NDK&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;TensorFlow"></a>NDK&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;TensorFlow</h3><p>&#x4E0A;&#x9762;&#x6211;&#x4EEC;&#x7528;&#x4E86;org.tensorflow:tensorflow-android:1.2.0-rc0&#x8FD9;&#x4E2A;&#x5E93;&#xFF0C;&#x8FD8;&#x662F;&#x5F97;&#x638C;&#x63E1;&#x4E0B;&#x5B83;&#x7684;&#x7531;&#x6765;&#xFF0C;&#x4E0B;&#x9762;&#x6211;&#x4EEC;&#x5C31;&#x7F16;&#x8BD1;&#x4ED6;&#x3002;</p><p>tensorflow&#x4F7F;&#x7528;bazel&#x6784;&#x5EFA;&#xFF0C;&#x4E14;&#x4F9D;&#x8D56;&#x4E00;&#x4E9B;python&#x5E93;&#xFF0C;&#x56E0;&#x6B64;&#x5148;&#x5B89;&#x88C5;&#x5B83;&#x4EEC;</p><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">$ <span class="keyword">brew </span><span class="keyword">install </span><span class="keyword">bazel</span></span><br><span class="line"><span class="keyword">$ </span><span class="keyword">brew </span><span class="keyword">install </span><span class="keyword">swig</span></span><br><span class="line"><span class="keyword">$ </span><span class="keyword">brew </span><span class="keyword">install </span>python</span><br><span class="line">$ sudo easy_install pip</span><br><span class="line">$ sudo pip <span class="keyword">install </span>six numpy wheel</span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x540E;&#x9762;&#x62A5;&#x5404;&#x79CD;&#x5404;&#x6837;&#x7684;&#x73AF;&#x5883;&#x7F3A;&#x5931;&#xFF0C;&#x8BF7;&#x81EA;&#x884C;Google&#x5E76;&#x8865;&#x9F50;&#x73AF;&#x5883;&#x3002;</p><h4 id="clone-TensorFlow-&#x4EE3;&#x7801;"><a href="#clone-TensorFlow-&#x4EE3;&#x7801;" class="headerlink" title="clone TensorFlow &#x4EE3;&#x7801;"></a>clone TensorFlow &#x4EE3;&#x7801;</h4><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">--recurse-submodules</span> https://github.com/tensorflow/tensorflow.git</span><br></pre></td></tr></table></figure><h4 id="&#x4FEE;&#x6539;TensorFlow&#x9879;&#x76EE;&#x6839;&#x4E0B;&#x7684;WROKSPACE&#x6587;&#x4EF6;"><a href="#&#x4FEE;&#x6539;TensorFlow&#x9879;&#x76EE;&#x6839;&#x4E0B;&#x7684;WROKSPACE&#x6587;&#x4EF6;" class="headerlink" title="&#x4FEE;&#x6539;TensorFlow&#x9879;&#x76EE;&#x6839;&#x4E0B;&#x7684;WROKSPACE&#x6587;&#x4EF6;"></a>&#x4FEE;&#x6539;TensorFlow&#x9879;&#x76EE;&#x6839;&#x4E0B;&#x7684;WROKSPACE&#x6587;&#x4EF6;</h4><p>&#x5C06;&#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#x53CD;&#x6CE8;&#x91CA;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Uncomment and update the paths in these entries to build the Android demo.</span></span><br><span class="line">android_sdk_repository(</span><br><span class="line">    name = <span class="string">&quot;androidsdk&quot;</span>,</span><br><span class="line">    api_level = 23,</span><br><span class="line">    # Ensure that you have the build_tools_version below installed <span class="keyword">in</span> the</span><br><span class="line">    # SDK manager as it updates periodically.</span><br><span class="line">    build_tools_version = <span class="string">&quot;25.0.2&quot;</span>,</span><br><span class="line">    # Replace with path <span class="keyword">to</span> Android SDK on your system</span><br><span class="line">    path = <span class="string">&quot;/Users/lizhangqu/AndroidSDK&quot;</span>,</span><br><span class="line">)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Android NDK r12b is recommended (higher may cause issues with Bazel)</span></span><br><span class="line">android_ndk_repository(</span><br><span class="line">    <span class="attribute">name</span>=<span class="string">&quot;androidndk&quot;</span>,</span><br><span class="line">    <span class="attribute">path</span>=<span class="string">&quot;/Users/lizhangqu/AndroidNDK/android-ndk-r12b&quot;</span>,</span><br><span class="line">    # This needs <span class="keyword">to</span> be 14 <span class="keyword">or</span> higher <span class="keyword">to</span> compile TensorFlow.</span><br><span class="line">    #<span class="built_in"> Note </span>that the NDK version is <span class="keyword">not</span> the API level.</span><br><span class="line">    <span class="attribute">api_level</span>=14)</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x4FEE;&#x6539;android_sdk_repository&#x4E2D;&#x7684;path&#x4E3A;&#x81EA;&#x5DF1;&#x7535;&#x8111;&#x4E2D;&#x7684;android sdk&#x76EE;&#x5F55;&#xFF0C;&#x4FEE;&#x6539;android_ndk_repository&#x4E2D;&#x7684;path&#x4E3A;&#x81EA;&#x5DF1;&#x7535;&#x8111;&#x7684;android ndk&#x76EE;&#x5F55;&#x3002;</p><p>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;ndk&#x7684;&#x7248;&#x672C;&#xFF0C;&#x5B98;&#x65B9;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;r12b&#x7248;&#x672C;&#xFF0C;&#x4E8B;&#x5B9E;&#x8BC1;&#x660E;&#xFF0C;&#x6211;&#x7528;android sdk&#x4E0B;&#x7684;ndk-bundle&#x662F;&#x7F16;&#x8BD1;&#x4E0D;&#x8FC7;&#x53BB;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x8FD8;&#x662F;&#x8001;&#x8001;&#x5B9E;&#x5B9E;&#x7528;r12b&#xFF0C;&#x4E0B;&#x8F7D;&#x5730;&#x5740;<a href="https://dl.google.com/android/repository/android-ndk-r12b-darwin-x86_64.zip?hl=zh-cn" target="_blank" rel="noopener">android-ndk-r12b-darwin-x86_64.zip</a></p><h4 id="&#x7F16;&#x8BD1;C-&#x90E8;&#x5206;&#x4EE3;&#x7801;"><a href="#&#x7F16;&#x8BD1;C-&#x90E8;&#x5206;&#x4EE3;&#x7801;" class="headerlink" title="&#x7F16;&#x8BD1;C++&#x90E8;&#x5206;&#x4EE3;&#x7801;"></a>&#x7F16;&#x8BD1;C++&#x90E8;&#x5206;&#x4EE3;&#x7801;</h4><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">bazel build -c opt //tensorflow/contrib/android:libtensorflow_inference.so \</span><br><span class="line">   -<span class="ruby">-crosstool_top=<span class="regexp">//external</span><span class="symbol">:android/crosstool</span> \</span></span><br><span class="line"><span class="ruby">   --host_crosstool_top=@bazel_tools/<span class="regexp">/tools/cpp</span><span class="symbol">:toolchain</span> \</span></span><br><span class="line"><span class="ruby">   --cpu=armeabi-v7a</span></span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x6784;&#x5EFA;&#x5176;&#x4ED6;cpu&#x7ED3;&#x6784;&#x7684;so&#xFF0C;&#x8BF7;&#x81EA;&#x884C;&#x4FEE;&#x6539;armeabi-v7a&#x4E3A;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#xFF0C;&#x6BD4;&#x5982;&#x4FEE;&#x6539;&#x4E3A;x86_64</p><p>&#x6784;&#x5EFA;&#x597D;&#x7684;so&#x4F4D;&#x4E8E; bazel-bin/tensorflow/contrib/android/libtensorflow_inference.so&#xFF0C;&#x5982;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2017/06/02/%E5%BD%93Android%E5%BC%80%E5%8F%91%E8%80%85%E9%81%87%E8%A7%81TensorFlow/so.png" alt="so.png"></p><p>&#x5C06;libtensorflow_inference.so&#x62F7;&#x8D1D;&#x51FA;&#x6765;&#x5907;&#x4EFD;&#x8D77;&#x6765;&#xFF0C;&#x56E0;&#x4E3A;&#x4E0B;&#x4E00;&#x6B65;&#x6784;&#x5EFA;java&#x4EE3;&#x7801;&#x65F6;&#xFF0C;&#x6B64;&#x6587;&#x4EF6;&#x4F1A;&#x88AB;&#x5220;&#x9664;&#x3002;</p><h4 id="&#x7F16;&#x8BD1;java&#x90E8;&#x5206;&#x4EE3;&#x7801;"><a href="#&#x7F16;&#x8BD1;java&#x90E8;&#x5206;&#x4EE3;&#x7801;" class="headerlink" title="&#x7F16;&#x8BD1;java&#x90E8;&#x5206;&#x4EE3;&#x7801;"></a>&#x7F16;&#x8BD1;java&#x90E8;&#x5206;&#x4EE3;&#x7801;</h4><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">bazel </span><span class="keyword">build </span>//tensorflow/contrib/<span class="keyword">android:android_tensorflow_inference_java</span></span><br></pre></td></tr></table></figure><p>&#x7F16;&#x8BD1;&#x597D;&#x7684;jar&#x4F4D;&#x4E8E; bazel-bin/tensorflow/contrib/android/libandroid_tensorflow_inference_java.jar&#xFF0C;&#x5982;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2017/06/02/%E5%BD%93Android%E5%BC%80%E5%8F%91%E8%80%85%E9%81%87%E8%A7%81TensorFlow/java.png" alt="java.png"></p><p>&#x7136;&#x540E;&#x5C06;libandroid_tensorflow_inference_java.jar&#x548C;libtensorflow_inference.so&#x7ED3;&#x5408;&#x8D77;&#x6765;&#xFF0C;&#x53D1;&#x5E03;&#x5230;maven&#xFF0C;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x4F9D;&#x8D56;&#x7684;org.tensorflow:tensorflow-android:1.2.0-rc0&#x4E86;&#x3002;</p><h3 id="&#x7F16;&#x8BD1;PC&#x4E0A;&#x7684;Java&#x7248;TensorFlow"><a href="#&#x7F16;&#x8BD1;PC&#x4E0A;&#x7684;Java&#x7248;TensorFlow" class="headerlink" title="&#x7F16;&#x8BD1;PC&#x4E0A;&#x7684;Java&#x7248;TensorFlow"></a>&#x7F16;&#x8BD1;PC&#x4E0A;&#x7684;Java&#x7248;TensorFlow</h3><p>&#x4E0D;&#x591A;&#x8BF4;&#xFF0C;&#x548C;NDK&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DEE;&#x4E0D;&#x591A;&#xFF0C;&#x7F16;&#x8BD1;&#x811A;&#x672C;</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">./configure</span><br><span class="line">bazel build --config opt \</span><br><span class="line">  /<span class="regexp">/tensorflow/java</span><span class="symbol">:tensorflow</span> \</span><br><span class="line">  /<span class="regexp">/tensorflow/java</span><span class="symbol">:libtensorflow_jni</span></span><br></pre></td></tr></table></figure><p>&#x7F16;&#x8BD1;&#x4EA7;&#x7269;&#x4F4D;&#x4E8E;bazel-bin/tensorflow/java&#xFF0C;&#x8BE5;&#x76EE;&#x5F55;&#x4E0B;&#x6709;</p><ul><li>libtensorflow.jar&#x6587;&#x4EF6;</li><li>libtensorflow_jni.so(linux)&#x6216;libtensorflow_jni.dylib(mac)&#x6216;tensorflow_jni.dll(windows&#xFF0C;&#x6CE8;&#xFF1A;mac&#x65E0;&#x6CD5;&#x7F16;&#x8BD1;&#x51FA;dll)&#x6587;&#x4EF6;&#xFF0C;</li></ul><p>&#x5982;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2017/06/02/%E5%BD%93Android%E5%BC%80%E5%8F%91%E8%80%85%E9%81%87%E8%A7%81TensorFlow/pc.png" alt="pc.png"></p><p>&#x7F16;&#x8BD1;&#x65F6;&#x4F9D;&#x8D56;&#xFF0C;&#x8BF7;&#x6DFB;&#x52A0;libtensorflow.jar<br></p><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">javac</span> -<span class="meta">cp</span> <span class="keyword">bazel-bin/tensorflow/java/libtensorflow.jar </span>...</span><br></pre></td></tr></table></figure><p></p><p>&#x8FD0;&#x884C;&#x671F;&#x4F9D;&#x8D56;&#xFF0C;&#x8BF7;&#x6DFB;&#x52A0;libtensorflow.jar&#x548C;libtensorflow_jni&#x7684;&#x8DEF;&#x5F84;<br></p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">java -cp bazel-bin/tensorflow/java/libtensorflow<span class="selector-class">.jar</span> \</span><br><span class="line">  -Djava<span class="selector-class">.library</span><span class="selector-class">.path</span>=bazel-bin/tensorflow/java \</span><br><span class="line">  ...</span><br></pre></td></tr></table></figure><p></p><h3 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h3><p>&#x5F53;&#x7136;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x6CA1;&#x6709;&#x5FC5;&#x8981;&#x81EA;&#x5DF1;&#x53BB;&#x7F16;&#x8BD1;TensorFlow&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x7F16;&#x8BD1;&#x597D;&#x7684;&#x73B0;&#x6210;&#x5E93;&#x5373;&#x53EF;&#x3002;</p><p>&#x5199;&#x4E86;&#x8FD9;&#x4E48;&#x591A;&#xFF0C;&#x53EF;&#x662F;&#x5B9D;&#x5B9D;&#x8FD8;&#x662F;&#x4E0D;&#x4F1A;TensorFlow~</p>]]></content>
      <categories>
        <category>TensorFlow</category>
      </categories>
      <tags>
        <tag>TensorFlow</tag>
        <tag>机器学习，Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Gradle Plugin 源码阅读与编译</title>
    <url>/2017/06/01/Android-Gradle-Plugin%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B8%8E%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>&#x4E3A;&#x4E86;&#x89E3;&#x4E00;&#x4E9B;Andorid&#x7684;&#x6784;&#x5EFA;&#x6D41;&#x7A0B;&#xFF0C;&#x6709;&#x65F6;&#x5019;&#x9700;&#x8981;&#x9605;&#x8BFB;Android Gradle Plugin&#x7684;&#x76F8;&#x5173;&#x6E90;&#x7801;&#x7684;&#x3002;&#x81EA;&#x5DF1;&#x9605;&#x8BFB;Android Gradle Plugin&#x6E90;&#x7801;&#x4E3B;&#x8981;&#x7ECF;&#x5386;&#x4E86;&#x4E09;&#x4E2A;&#x65F6;&#x671F;&#xFF1A;</p><ul><li>1&#x3001;AOSP&#x4E0A;&#x6253;&#x5305;&#x6E90;&#x7801;&#x538B;&#x7F29;&#x5305;&#xFF0C;&#x7136;&#x540E;&#x4E0B;&#x8F7D;&#x4E0B;&#x6765;&#x770B;</li><li>2&#x3001;&#x901A;&#x8FC7;&#x4F9D;&#x8D56;&#x76F8;&#x5173;&#x5E93;&#xFF0C;&#x7ED3;&#x5408;IntelliJ IDEA&#x7684;&#x5FEB;&#x6377;&#x952E;&#xFF1A;Command+&#x5DE6;&#x952E;&#x3001;Alt+Command+F7 &#x8DDF;&#x8E2A;&#x6E90;&#x7801;&#x8C03;&#x7528;&#x6765;&#x770B;</li><li>3&#x3001;repo&#x4E0B;&#x8F7D;AOSP&#x6784;&#x5EFA;&#x5DE5;&#x5177;&#x5206;&#x652F;&#x4E0A;&#x7684;&#x6E90;&#x7801;&#xFF0C;&#x5B8C;&#x6574;&#x9879;&#x76EE;&#x5BFC;&#x5165;IntelliJ IDEA&#x770B;</li></ul><a id="more"></a><h3 id="&#x65B9;&#x5F0F;1&#xFF1A;AOSP&#x4E0A;&#x6253;&#x5305;&#x6E90;&#x7801;&#x4E3A;&#x538B;&#x7F29;&#x5305;"><a href="#&#x65B9;&#x5F0F;1&#xFF1A;AOSP&#x4E0A;&#x6253;&#x5305;&#x6E90;&#x7801;&#x4E3A;&#x538B;&#x7F29;&#x5305;" class="headerlink" title="&#x65B9;&#x5F0F;1&#xFF1A;AOSP&#x4E0A;&#x6253;&#x5305;&#x6E90;&#x7801;&#x4E3A;&#x538B;&#x7F29;&#x5305;"></a>&#x65B9;&#x5F0F;1&#xFF1A;AOSP&#x4E0A;&#x6253;&#x5305;&#x6E90;&#x7801;&#x4E3A;&#x538B;&#x7F29;&#x5305;</h3><p>AOSP&#x4E0A;&#x6253;&#x4E86;tag&#x7684;&#x7248;&#x672C;&#xFF0C;&#x8C8C;&#x4F3C;&#x53EA;&#x6709;&#x6574;&#x6570;&#x7684;&#x5927;&#x7248;&#x672C;&#xFF0C;&#x6CA1;&#x6709;&#x5C0F;&#x7248;&#x672C;&#xFF0C;&#x5373;&#x53EA;&#x6709;2.3.0&#x3001;2.2.0&#x3001;2.0.0&#x3001;1.5.0&#x7B49;&#xFF0C;&#x6CA1;&#x6709;2.3.2&#x7B49;&#x7248;&#x672C;&#xFF0C;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x3002;</p><ul><li><a href="https://android.googlesource.com/platform/tools/base/+/gradle_2.3.0/build-system/" target="_blank" rel="noopener">gradle_2.3.0 &#x6E90;&#x7801;</a></li><li><a href="https://android.googlesource.com/platform/tools/base/+/gradle_2.2.0/build-system/" target="_blank" rel="noopener">gradle_2.2.0 &#x6E90;&#x7801;</a></li><li><a href="https://android.googlesource.com/platform/tools/base/+/gradle_2.0.0/build-system/" target="_blank" rel="noopener">gradle_2.0.0 &#x6E90;&#x7801;</a></li><li><a href="https://android.googlesource.com/platform/tools/base/+/gradle_1.5.0/build-system/" target="_blank" rel="noopener">gradle_1.5.0 &#x6E90;&#x7801;</a></li><li><a href="https://android.googlesource.com/platform/tools/base/+/gradle_1.2.0/build-system/" target="_blank" rel="noopener">gradle_1.2.0 &#x6E90;&#x7801;</a></li><li><a href="https://android.googlesource.com/platform/tools/base/+/gradle_1.1.0/build-system/" target="_blank" rel="noopener">gradle_1.1.0 &#x6E90;&#x7801;</a></li><li><p><a href="https://android.googlesource.com/platform/tools/base/+/gradle_1.0.0/build-system/" target="_blank" rel="noopener">gradle_1.0.0 &#x6E90;&#x7801;</a></p><p>&#x6253;&#x5F00;&#x4E0A;&#x9762;&#x81EA;&#x5DF1;&#x9700;&#x8981;&#x7684;&#x4E00;&#x4E2A;&#x7248;&#x672C;&#x7684;&#x94FE;&#x63A5;&#xFF0C;&#x70B9;&#x51FB;&#x9875;&#x9762;&#x4E0A;&#x7684;tgz&#x94FE;&#x63A5;&#xFF0C;&#x7136;&#x540E;&#x5C31;&#x4F1A;&#x4E0B;&#x8F7D;&#x4E0B;&#x6765;&#x4E00;&#x4E2A;&#x538B;&#x7F29;&#x5305;&#xFF0C;&#x89E3;&#x538B;&#x6B64;&#x538B;&#x7F29;&#x5305;&#xFF0C;&#x7136;&#x540E;&#x5BFC;&#x5165;Android Studio&#x6216;&#x8005;IntelliJ IDEA&#xFF0C;&#x5373;&#x53EF;&#x67E5;&#x770B;&#x3002;</p><p>&#x4F46;&#x662F;&#x6709;&#x7F3A;&#x9677;&#xFF0C;&#x5BFC;&#x5165;&#x9879;&#x76EE;&#x540E;&#x7531;&#x4E8E;&#x7F3A;&#x5C11;&#x4E86;&#x5F88;&#x5927;&#x4E00;&#x90E8;&#x5206;&#x4F9D;&#x8D56;&#xFF0C;&#x5BFC;&#x81F4;&#x9879;&#x76EE;&#x5927;&#x7247;&#x7206;&#x7EA2;&#xFF0C;&#x52A0;&#x4E0A;&#x6CA1;&#x6709;&#x76F8;&#x5173;&#x7684;&#x9879;&#x76EE;&#x95F4;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#xFF0C;&#x7EDD;&#x5927;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x65E0;&#x6CD5;&#x8FDB;&#x884C;&#x8DF3;&#x8F6C;&#xFF0C;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x624B;&#x52A8;&#x641C;&#x7D22;&#x4EE3;&#x7801;&#xFF0C;&#x627E;&#x5230;&#x4EE3;&#x7801;&#x8C03;&#x7528;&#x5904;&#xFF0C;&#x6781;&#x5176;&#x75DB;&#x82E6;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x4E0D;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;&#x6B64;&#x65B9;&#x6CD5;&#x9605;&#x8BFB;&#x6E90;&#x7801;&#xFF0C;&#x540E;&#x671F;&#xFF0C;&#x81EA;&#x5DF1;&#x4E5F;&#x4E0D;&#x518D;&#x901A;&#x8FC7;&#x6B64;&#x65B9;&#x6CD5;&#x67E5;&#x770B;&#x6E90;&#x7801;&#x4E86;&#xFF0C;&#x592A;&#x86CB;&#x75BC;&#x3002;</p></li></ul><h3 id="&#x65B9;&#x5F0F;2&#xFF1A;&#x901A;&#x8FC7;&#x4F9D;&#x8D56;&#x76F8;&#x5173;&#x5E93;&#x67E5;&#x770B;&#x6E90;&#x7801;"><a href="#&#x65B9;&#x5F0F;2&#xFF1A;&#x901A;&#x8FC7;&#x4F9D;&#x8D56;&#x76F8;&#x5173;&#x5E93;&#x67E5;&#x770B;&#x6E90;&#x7801;" class="headerlink" title="&#x65B9;&#x5F0F;2&#xFF1A;&#x901A;&#x8FC7;&#x4F9D;&#x8D56;&#x76F8;&#x5173;&#x5E93;&#x67E5;&#x770B;&#x6E90;&#x7801;"></a>&#x65B9;&#x5F0F;2&#xFF1A;&#x901A;&#x8FC7;&#x4F9D;&#x8D56;&#x76F8;&#x5173;&#x5E93;&#x67E5;&#x770B;&#x6E90;&#x7801;</h3><p>&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x6BD4;&#x8F83;&#x8F7B;&#x91CF;&#xFF0C;&#x5EFA;&#x8BAE;&#x521D;&#x5B66;&#x8005;&#x901A;&#x8FC7;&#x6B64;&#x65B9;&#x5F0F;&#x5B66;&#x4E60;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x7A7A;&#x7684;Gradle&#x9879;&#x76EE;&#xFF0C;&#x5728;&#x5176;&#x4F9D;&#x8D56;&#x4E2D;&#x52A0;&#x5165;&#x4E24;&#x884C;&#x4F9D;&#x8D56;&#xFF0C;&#x5982;&#x6211;&#x8981;&#x67E5;&#x770B;gradle2.3.2&#x7684;&#x6E90;&#x7801;&#x53EA;&#x9700;&#x8981;&#x52A0;&#x5165;&#x4F9D;&#x8D56;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">compile</span> gradleApi()</span><br><span class="line"><span class="keyword">compile</span> <span class="string">&apos;com.android.tools.build:gradle:2.3.2&apos;</span></span><br></pre></td></tr></table></figure><p>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x53EF;&#x80FD;&#x5E76;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x7684;android gradle plugin&#x7248;&#x672C;&#x90FD;&#x9644;&#x5E26;&#x6709;&#x6E90;&#x7801;&#x7684;jar&#xFF0C;&#x5982;&#x679C;&#x9047;&#x5230;&#x4E86;&#x4E00;&#x4E9B;&#x6CA1;&#x6709;&#x6E90;&#x7801;&#x7684;&#xFF0C;&#x5373;&#x6253;&#x5F00;&#x540E;&#x770B;&#x5230;&#x7684;&#x5185;&#x5BB9;&#x662F;&#x53CD;&#x7F16;&#x8BD1;&#x7684;class&#x6216;&#x8005;&#x662F;&#x6CA1;&#x6709;javadoc&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x4F60;&#x6700;&#x597D;&#x6362;&#x4E00;&#x4E2A;&#x7248;&#x672C;&#x3002;</p><p>&#x6211;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x793A;&#x4F8B;&#x9879;&#x76EE;<a href="https://github.com/lizhangqu/AndroidGradlePluginCodeViewer" target="_blank" rel="noopener">https://github.com/lizhangqu/AndroidGradlePluginCodeViewer</a>&#xFF0C;&#x4F7F;&#x7528;IntelliJ IDEA&#x5BFC;&#x5165;&#x5373;&#x53EF;&#xFF0C;&#x5982;&#x56FE;</p><p><img src="/2017/06/01/Android-Gradle-Plugin%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B8%8E%E7%BC%96%E8%AF%91/gradle_dep.png" alt="gradle_dep.png"></p><p><img src="/2017/06/01/Android-Gradle-Plugin%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B8%8E%E7%BC%96%E8%AF%91/gradle_src.png" alt="gradle_src.png"></p><p>&#x4E4B;&#x540E;&#xFF0C;&#x7ED3;&#x5408;Command+&#x5DE6;&#x952E;&#x6216;&#x8005;Alt+Command+F7&#x5C31;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#x6E90;&#x7801;&#x5BF9;&#x5E94;&#x7684;&#x8C03;&#x7528;&#x5904;&#xFF0C;&#x8DDF;&#x8E2A;&#x67E5;&#x770B;&#x4E86;&#x3002;</p><h3 id="&#x65B9;&#x5F0F;3&#xFF1A;repo&#x4E0B;&#x8F7D;AOSP&#x5B8C;&#x6574;gradle&#x6E90;&#x7801;"><a href="#&#x65B9;&#x5F0F;3&#xFF1A;repo&#x4E0B;&#x8F7D;AOSP&#x5B8C;&#x6574;gradle&#x6E90;&#x7801;" class="headerlink" title="&#x65B9;&#x5F0F;3&#xFF1A;repo&#x4E0B;&#x8F7D;AOSP&#x5B8C;&#x6574;gradle&#x6E90;&#x7801;"></a>&#x65B9;&#x5F0F;3&#xFF1A;repo&#x4E0B;&#x8F7D;AOSP&#x5B8C;&#x6574;gradle&#x6E90;&#x7801;</h3><p>&#x5982;&#x679C;&#x4F60;&#x6709;&#x7F16;&#x8BD1;Android Gradle Plugin&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x6B64;&#x65B9;&#x6CD5;&#x3002;&#x5F53;&#x7136;&#x7F3A;&#x70B9;&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x9879;&#x76EE;&#x5341;&#x5206;&#x5DE8;&#x5927;&#xFF0C;&#x9700;&#x8981;&#x5360;&#x7528;&#x5927;&#x91CF;&#x7684;&#x786C;&#x76D8;&#x8D44;&#x6E90;&#xFF0C;&#x5982;&#x679C;&#x786C;&#x76D8;&#x8D44;&#x6E90;&#x4E0D;&#x8DB3;&#xFF0C;&#x5EFA;&#x8BAE;&#x8FD8;&#x662F;&#x4E0D;&#x8981;&#x5C1D;&#x8BD5;&#x4E86;&#xFF0C;&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A;gradle_2.3.0&#x5206;&#x652F;&#x4E0A;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5927;&#x6982;&#x91CA;&#x653E;&#x540E;&#x6709;30G&#x5DE6;&#x53F3;&#x3002;</p><figure class="highlight x86asm"><table><tr><td class="code"><pre><span class="line">$ mkdir gradle_2<span class="meta">.3</span><span class="meta">.0</span></span><br><span class="line">$ cd gradle_2<span class="meta">.3</span><span class="meta">.0</span></span><br><span class="line">$ repo init -u https://android.googlesource.com/platform/manifest -b gradle_2<span class="meta">.3</span><span class="meta">.0</span></span><br><span class="line">$ repo sync</span><br></pre></td></tr></table></figure><p>&#x6E90;&#x7801;&#x540C;&#x6B65;&#x65F6;&#x95F4;&#x8F83;&#x957F;&#xFF0C;&#x5927;&#x6982;&#x9700;&#x8981;1-3&#x5C0F;&#x65F6;&#xFF0C;&#x8010;&#x5FC3;&#x7B49;&#x5F85;&#x3002;</p><p>&#x56FD;&#x5185;&#x5899;&#x53EF;&#x80FD;&#x592A;&#x9AD8;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E2D;&#x56FD;&#x79D1;&#x5B66;&#x6280;&#x672F;&#x5927;&#x5B66;&#x7684;AOSP&#x6E90;&#x6216;&#x8005;&#x6E05;&#x534E;&#x5927;&#x5B66;&#x7684;AOSP&#x6E90;</p><ul><li><a href="https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/" target="_blank" rel="noopener">&#x6E05;&#x534E;&#x5927;&#x5B66;&#x7684;AOSP&#x6E90;</a></li><li><a href="https://lug.ustc.edu.cn/wiki/mirrors/help/aosp" target="_blank" rel="noopener">&#x4E2D;&#x56FD;&#x79D1;&#x5B66;&#x6280;&#x672F;&#x5927;&#x5B66;&#x7684;AOSP&#x6E90;</a></li></ul><p>&#x5982;&#x679C;repo init &#x63D0;&#x793A;&#x65E0;&#x6CD5;&#x8FDE;&#x63A5;&#x5230; gerrit.googlesource.com&#xFF0C;&#x67E5;&#x770B;&#x5BF9;&#x5E94;&#x7684;&#x6E90;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x9875;&#x9762;&#x8FDB;&#x884C;&#x89E3;&#x51B3;</p><ul><li><a href="https://mirrors.tuna.tsinghua.edu.cn/help/git-repo/" target="_blank" rel="noopener">&#x6E05;&#x534E;&#x5927;&#x5B66; Git Repo &#x955C;&#x50CF;&#x4F7F;&#x7528;&#x5E2E;&#x52A9;</a></li><li><p><a href="https://lug.ustc.edu.cn/wiki/mirrors/help/aosp#&#x9644;&#x5F55;_brillo" target="_blank" rel="noopener">&#x4E2D;&#x56FD;&#x79D1;&#x5B66;&#x6280;&#x672F;&#x5927;&#x5B66; &#x9644;&#x5F55;_brillo</a></p><p>&#x540C;&#x6B65;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x8FDB;&#x5165;gradle_2.3.0/tools&#x76EE;&#x5F55;&#xFF0C;&#x7528;gradlew&#x6267;&#x884C;&#x4E00;&#x4E9B;&#x6784;&#x5EFA;&#x524D;&#x7684;&#x521D;&#x59CB;&#x5316;&#x5DE5;&#x4F5C;</p></li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> tools</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./gradlew init</span></span><br></pre></td></tr></table></figure><p>&#x4E4B;&#x540E;&#x7528;IntelliJ IDEA&#x6253;&#x5F00;tools/base&#x76EE;&#x5F55;&#x5373;&#x53EF;&#x67E5;&#x770B;&#xFF0C;&#x8BE5;&#x76EE;&#x5F55;&#x4E0B;&#x6709;&#x4E00;&#x4E2A;.idea&#x76EE;&#x5F55;&#xFF0C;&#x5DF2;&#x7ECF;&#x662F;IntelliJ IDEA&#x9879;&#x76EE;&#x4E86;&#xFF0C;&#x76F4;&#x63A5;&#x6253;&#x5F00;&#x5373;&#x53EF;</p><p>&#x5BFC;&#x5165;&#x8FC7;&#x7A0B;&#x6BD4;&#x8F83;&#x6F2B;&#x957F;&#xFF0C;&#x8010;&#x5FC3;&#x7B49;&#x5F85;&#x3002;&#x5BFC;&#x5165;&#x8FC7;&#x7A0B;&#x4F1A;&#x63D0;&#x793A;&#x662F;&#x5426;&#x5BFC;&#x5165;&#x6210;gradle&#x9879;&#x76EE;&#xFF0C;&#x5982;&#x56FE;&#xFF0C;&#x70B9;&#x51FB;Import Gradle Project&#x5373;&#x53EF;</p><p><img src="/2017/06/01/Android-Gradle-Plugin%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B8%8E%E7%BC%96%E8%AF%91/gradle_import.png" alt="gradle_import.png"></p><p>&#x7136;&#x540E;&#x52FE;&#x9009;use gradle wrapper</p><p><img src="/2017/06/01/Android-Gradle-Plugin%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B8%8E%E7%BC%96%E8%AF%91/gradle_wrapper.png" alt="gradle_wrapper.png"></p><p>&#x5BFC;&#x5165;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x5927;&#x6982;&#x5C31;&#x957F;&#x8FD9;&#x6837;&#x5B50;&#xFF0C;gradle plugin&#x7684;&#x6E90;&#x7801;&#x5728;tools/base/build-system&#x4E0B;</p><p><img src="/2017/06/01/Android-Gradle-Plugin%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%E4%B8%8E%E7%BC%96%E8%AF%91/gradle_project.png" alt="gradle_project.png"></p><p>&#x5047;&#x8BBE;&#x5F53;&#x524D;&#x76EE;&#x5F55;&#x4E3A;gradle_2.3.0/tools&#x76EE;&#x5F55;&#xFF0C;&#x8FDB;&#x884C;android gradle plugin&#x7684;&#x7F16;&#x8BD1;</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:profile</span><span class="symbol">:assemble</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:builder-model</span><span class="symbol">:assemble</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:builder-test-api</span><span class="symbol">:assemble</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:builder</span><span class="symbol">:assemble</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:transform-api</span><span class="symbol">:assemble</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:gradle-api</span><span class="symbol">:assemble</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:gradle-core</span><span class="symbol">:assemble</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:instant-run-instrumentation</span><span class="symbol">:assemble</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:gradle</span><span class="symbol">:assemble</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:gradle-experimental</span><span class="symbol">:assemble</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:integration-test</span><span class="symbol">:assemble</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:project-test-lib</span><span class="symbol">:assemble</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:project-test</span><span class="symbol">:assemble</span></span><br></pre></td></tr></table></figure><p>&#x7F16;&#x8BD1;&#x4EA7;&#x7269;&#x4F4D;&#x4E8E;gradle_2.3.0/out/build&#x76EE;&#x5F55;&#x4E0B;</p><p>&#x5047;&#x8BBE;&#x5F53;&#x524D;&#x76EE;&#x5F55;&#x4E3A;gradle_2.3.0/tools&#x76EE;&#x5F55;&#xFF0C;&#x5C06;android gradle plugin&#x90E8;&#x7F72;&#x5230;&#x672C;&#x5730;</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:profile</span><span class="symbol">:publishLocal</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:builder-model</span><span class="symbol">:publishLocal</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:builder-test-api</span><span class="symbol">:publishLocal</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:builder</span><span class="symbol">:publishLocal</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:transform-api</span><span class="symbol">:publishLocal</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:gradle-api</span><span class="symbol">:publishLocal</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:gradle-core</span><span class="symbol">:publishLocal</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:instant-run-instrumentation</span><span class="symbol">:publishLocal</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:gradle</span><span class="symbol">:publishLocal</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:gradle-experimental</span><span class="symbol">:publishLocal</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:integration-test</span><span class="symbol">:publishLocal</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:project-test-lib</span><span class="symbol">:publishLocal</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:project-test</span><span class="symbol">:publishLocal</span></span><br></pre></td></tr></table></figure><p>&#x90E8;&#x7F72;&#x4EA7;&#x7269;&#x4F4D;&#x4E8E;gradle_2.3.0/out/repo&#x76EE;&#x5F55;&#x4E0B;</p><p>&#x90A3;&#x4E48;&#x5982;&#x4F55;&#x5C06;&#x6211;&#x4EEC;&#x9879;&#x76EE;&#x4E2D;&#x7684;gradle&#x63D2;&#x4EF6;&#x66FF;&#x6362;&#x4E3A;&#x4F7F;&#x7528;&#x6784;&#x5EFA;&#x597D;&#x7684;&#x63D2;&#x4EF6;&#x5462;</p><p>&#x5047;&#x8BBE;&#x73B0;&#x6709;&#x9879;&#x76EE;&#x4E2D;&#x7684;&#x4F9D;&#x8D56;&#x662F;&#x8FD9;&#x6837;&#x7684;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">buildscript</span> {</span><br><span class="line">    <span class="keyword">repositories</span> {</span><br><span class="line">        mavenCentral()</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">dependencies</span> {</span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">&apos;com.android.tools.build:gradle:2.3.0&apos;</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x9700;&#x8981;&#x5C06;&#x5176;&#x6307;&#x5B9A;&#x5230;&#x672C;&#x5730;&#x7684;&#x90E8;&#x7F72;&#x4EA7;&#x7269;&#x6240;&#x5728;repo</p><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">buildscript</span> {</span><br><span class="line">    <span class="section">repositories</span> {</span><br><span class="line">        <span class="section">maven</span> {<span class="attribute">url</span> <span class="string">&apos;path/to/gradle_2.3.0/out/repo&apos;</span> }</span><br><span class="line">    }</span><br><span class="line">    dependencies {</span><br><span class="line">        <span class="attribute">classpath</span> <span class="string">&apos;com.android.tools.build:gradle:2.3.0&apos;</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="&#x5BF9;&#x6BD4;&#x603B;&#x7ED3;"><a href="#&#x5BF9;&#x6BD4;&#x603B;&#x7ED3;" class="headerlink" title="&#x5BF9;&#x6BD4;&#x603B;&#x7ED3;"></a>&#x5BF9;&#x6BD4;&#x603B;&#x7ED3;</h3><ul><li>&#x65B9;&#x5F0F;1&#xFF0C;&#x7F3A;&#x70B9;&#x660E;&#x663E;&#xFF0C;&#x5927;&#x7247;&#x7206;&#x7EA2;&#xFF0C;&#x4E0D;&#x80FD;&#x826F;&#x597D;&#x7684;&#x8FDB;&#x884C;&#x4EE3;&#x7801;&#x8DF3;&#x8F6C;</li><li>&#x65B9;&#x5F0F;2&#xFF0C;&#x4F18;&#x70B9;&#x662F;&#x5360;&#x7528;&#x8D44;&#x6E90;&#x5C11;&#xFF0C;&#x5FEB;&#x901F;&#xFF0C;&#x65B9;&#x4FBF;&#xFF0C;&#x56E0;&#x6B64;&#x4F18;&#x5148;&#x63A8;&#x8350;&#x6B64;&#x65B9;&#x5F0F;&#xFF0C;&#x7F3A;&#x70B9;&#x662F;&#x53EA;&#x80FD;&#x9605;&#x8BFB;&#xFF0C;&#x4E0D;&#x80FD;&#x7F16;&#x8BD1;&#x3001;debug&#x4E86;&#x89E3;&#x5176;&#x6574;&#x4E2A;&#x8BE6;&#x7EC6;&#x8FC7;&#x7A0B;</li><li>&#x65B9;&#x5F0F;3&#xFF0C;&#x4F18;&#x70B9;&#x662F;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x7F16;&#x8BD1;&#x3001;debug&#x7B49;&#x64CD;&#x4F5C;&#xFF0C;&#x7F3A;&#x70B9;&#x5F88;&#x660E;&#x663E;&#xFF0C;&#x786C;&#x76D8;&#x8D44;&#x6E90;&#x5360;&#x7528;&#x8FC7;&#x5927;&#xFF0C;&#x6CA1;&#x6709;30G&#x7684;&#x7A7A;&#x4F59;&#x7A7A;&#x95F4;&#xFF0C;&#x4E0D;&#x9002;&#x5408;&#x5C1D;&#x8BD5;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x5BF9;Mac&#x7528;&#x6237;&#x6765;&#x8BF4;&#xFF0C;SSD&#x53EF;&#x80FD;&#x8FC7;&#x5C0F;&#xFF0C;&#x6CA1;&#x6709;&#x8FD9;&#x4E48;&#x5927;&#x7684;&#x7A7A;&#x95F4;&#x3002;&#x6E90;&#x7801;&#x540C;&#x6B65;&#x65F6;&#x95F4;&#x8F83;&#x957F;&#xFF0C;&#x9700;&#x8981;&#x8017;&#x8D39;1-3&#x4E2A;&#x5C0F;&#x65F6;&#x3002;</li></ul><p>&#x56E0;&#x6B64;&#xFF0C;&#x5BF9;&#x4E8E;&#x521D;&#x5B66;&#x8005;&#x6765;&#x8BF4;&#xFF0C;&#x65B9;&#x5F0F;2&#x4E3A;&#x6700;&#x4F18;&#x9009;&#x62E9;&#x3002;</p><h3 id="&#x9898;&#x5916;&#x8BDD;&#xFF1A;instant-run&#x6E90;&#x7801;&#x7F16;&#x8BD1;&#x53CA;&#x90E8;&#x7F72;"><a href="#&#x9898;&#x5916;&#x8BDD;&#xFF1A;instant-run&#x6E90;&#x7801;&#x7F16;&#x8BD1;&#x53CA;&#x90E8;&#x7F72;" class="headerlink" title="&#x9898;&#x5916;&#x8BDD;&#xFF1A;instant run&#x6E90;&#x7801;&#x7F16;&#x8BD1;&#x53CA;&#x90E8;&#x7F72;"></a>&#x9898;&#x5916;&#x8BDD;&#xFF1A;instant run&#x6E90;&#x7801;&#x7F16;&#x8BD1;&#x53CA;&#x90E8;&#x7F72;</h3><p>&#x65E2;&#x7136;&#x90FD;&#x8BB2;&#x5230;&#x4E86;android gradle plugin&#x7684;&#x7F16;&#x8BD1;&#xFF0C;&#x800C;instant run&#x6E90;&#x7801;&#x521A;&#x597D;&#x4E5F;&#x5728;tools/base&#x4E0B;&#xFF0C;&#x987A;&#x5E26;&#x5C31;&#x8BB2;&#x8BB2;instant run&#x7684;&#x7F16;&#x8BD1;</p><p>&#x5047;&#x8BBE;&#x5F53;&#x524D;&#x76EE;&#x5F55;&#x4E3A;gradle_2.3.0/tools&#x76EE;&#x5F55;</p><p>&#x7F16;&#x8BD1;</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:instant-run</span><span class="symbol">:instant-run-annotations</span><span class="symbol">:assemble</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:instant-run</span><span class="symbol">:instant-run-common</span><span class="symbol">:assemble</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:instant-run</span><span class="symbol">:instant-run-client</span><span class="symbol">:assemble</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:instant-run</span><span class="symbol">:instant-run-runtime</span><span class="symbol">:assemble</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:instant-run</span><span class="symbol">:instant-run-server</span><span class="symbol">:assemble</span></span><br></pre></td></tr></table></figure><p>&#x90E8;&#x7F72;</p><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:instant-run</span><span class="symbol">:instant-run-annotations</span><span class="symbol">:publishLocal</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:instant-run</span><span class="symbol">:instant-run-common</span><span class="symbol">:publishLocal</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:instant-run</span><span class="symbol">:instant-run-client</span><span class="symbol">:publishLocal</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:instant-run</span><span class="symbol">:instant-run-runtime</span><span class="symbol">:publishLocal</span></span><br><span class="line">./gradlew <span class="symbol">:base</span><span class="symbol">:instant-run</span><span class="symbol">:instant-run-server</span><span class="symbol">:publishLocal</span></span><br></pre></td></tr></table></figure><h3 id="&#x53C2;&#x8003;&#x94FE;&#x63A5;"><a href="#&#x53C2;&#x8003;&#x94FE;&#x63A5;" class="headerlink" title="&#x53C2;&#x8003;&#x94FE;&#x63A5;"></a>&#x53C2;&#x8003;&#x94FE;&#x63A5;</h3><ul><li><a href="http://tools.android.com/build/gradleplugin" target="_blank" rel="noopener">http://tools.android.com/build/gradleplugin</a></li><li><a href="http://tools.android.com/build" target="_blank" rel="noopener">http://tools.android.com/build</a></li><li><a href="http://source.android.com/source/downloading.html" target="_blank" rel="noopener">http://source.android.com/source/downloading.html</a></li><li><a href="https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/help/AOSP/</a></li><li><a href="https://lug.ustc.edu.cn/wiki/mirrors/help/aosp" target="_blank" rel="noopener">https://lug.ustc.edu.cn/wiki/mirrors/help/aosp</a></li></ul>]]></content>
      <categories>
        <category>Gradle</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Gradle</tag>
        <tag>Instant Run</tag>
        <tag>AOSP</tag>
      </tags>
  </entry>
  <entry>
    <title>CURL NDK 交叉编译</title>
    <url>/2017/05/24/CURL-NDK%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<p>&#x79FB;&#x690D;curl&#x5230;android&#xFF0C;&#x4E14;&#x652F;&#x6301;https&#x548C;http2.0</p><p>&#x4F9D;&#x8D56;&#x524D;&#x4E24;&#x7BC7;&#x6587;&#x7AE0;</p><ul><li><a href="http://fucknmb.com/2017/05/24/libnghttp2-NDK%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/">libnghttp2 NDK &#x4EA4;&#x53C9;&#x7F16;&#x8BD1;</a></li><li><a href="http://fucknmb.com/2017/05/24/openssl-NDK%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/">openssl NDK &#x4EA4;&#x53C9;&#x7F16;&#x8BD1;</a><a id="more"></a></li></ul><p>&#x521B;&#x5EFA;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#xFF0C;&#x5E76;&#x8FDB;&#x5165;</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> android</span><br><span class="line"><span class="built_in">cd</span> android</span><br></pre></td></tr></table></figure><p>&#x4E0B;&#x8F7D;&#x6E90;&#x7801;<br></p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">wget https:<span class="comment">//curl.haxx.se/download/curl-7.53.1.tar.gz</span></span><br><span class="line">tar xfz url-<span class="number">7.53</span>.<span class="number">1</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure><p></p><p>&#x751F;&#x6210;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;<br></p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=arm <span class="attribute">--install-dir</span>=./toolchain</span><br></pre></td></tr></table></figure><p></p><p>&#x5BFC;&#x51FA;&#x73AF;&#x5883;&#x53D8;&#x91CF;(armeabi)</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">ANDROID_HOME</span>=`pwd`</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOLCHAIN</span>=<span class="variable">$ANDROID_HOME</span>/toolchain</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PKG_CONFIG_LIBDIR</span>=<span class="variable">$TOOLCHAIN</span>/lib/pkgconfig</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CROSS_SYSROOT</span>=<span class="variable">$TOOLCHAIN</span>/sysroot</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$TOOLCHAIN</span>/bin:$PATH</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOL</span>=arm-linux-androideabi</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CC</span>=<span class="variable">$TOOLCHAIN</span>/bin/${TOOL}-gcc</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CXX</span>=<span class="variable">$TOOLCHAIN</span>/bin/${TOOL}-g++</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">LINK</span>=<span class="variable">${CXX}</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">LD</span>=<span class="variable">$TOOLCHAIN</span>/bin/${TOOL}-ld</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">AR</span>=<span class="variable">$TOOLCHAIN</span>/bin/${TOOL}-ar</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">RANLIB</span>=<span class="variable">$TOOLCHAIN</span>/bin/${TOOL}-ranlib</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">STRIP</span>=<span class="variable">$TOOLCHAIN</span>/bin/${TOOL}-strip</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_FLAGS</span>=<span class="string">&quot;-mthumb&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> ARCH_LINK=</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CFLAGS</span>=<span class="string">&quot;<span class="variable">${ARCH_FLAGS}</span> -fpic -ffunction-sections -funwind-tables -fstack-protector -fno-strict-aliasing -finline-limit=64&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CXXFLAGS</span>=<span class="string">&quot;<span class="variable">${CFLAGS}</span> -frtti -fexceptions&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">LDFLAGS</span>=<span class="string">&quot;<span class="variable">${ARCH_LINK}</span>&quot;</span></span><br></pre></td></tr></table></figure><p>&#x7F16;&#x8BD1;&#x5E76;&#x5B89;&#x88C5;</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> curl-7.53.1</span><br><span class="line">autoreconf -i</span><br><span class="line">./configure --prefix=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/<span class="built_in">local</span> \</span><br><span class="line">       --with-sysroot=<span class="variable">$TOOLCHAIN</span>/sysroot \</span><br><span class="line">       --host=arm-linux-androideabi \</span><br><span class="line">       --with-ssl=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/<span class="built_in">local</span> \</span><br><span class="line">       --with-nghttp2=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/<span class="built_in">local</span> \</span><br><span class="line">       --<span class="built_in">enable</span>-ipv6 \</span><br><span class="line">       --<span class="built_in">enable</span>-static \</span><br><span class="line">       --<span class="built_in">enable</span>-threaded-resolver \</span><br><span class="line">       --<span class="built_in">disable</span>-dict \</span><br><span class="line">       --<span class="built_in">disable</span>-gopher \</span><br><span class="line">       --<span class="built_in">disable</span>-ldap --<span class="built_in">disable</span>-ldaps \</span><br><span class="line">       --<span class="built_in">disable</span>-manual \</span><br><span class="line">       --<span class="built_in">disable</span>-pop3 --<span class="built_in">disable</span>-smtp --<span class="built_in">disable</span>-imap \</span><br><span class="line">       --<span class="built_in">disable</span>-rtsp \</span><br><span class="line">       --<span class="built_in">disable</span>-shared \</span><br><span class="line">       --<span class="built_in">disable</span>-smb \</span><br><span class="line">       --<span class="built_in">disable</span>-telnet \</span><br><span class="line">       --<span class="built_in">disable</span>-verbose</span><br><span class="line">make -j4</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>&#x5378;&#x8F7D;</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">make uninstall</span></span><br></pre></td></tr></table></figure><p>configure&#x5B8C;&#x6210;&#x540E;&#x68C0;&#x67E5;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#x662F;&#x5426;enable ssl, enable https, enable http2.0</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">Configured</span> <span class="string">to</span> <span class="string">build</span> <span class="string">curl/libcurl:</span></span><br><span class="line"></span><br><span class="line">  <span class="string">curl</span> <span class="attr">version:</span>     <span class="number">7.53</span><span class="number">.1</span></span><br><span class="line">  <span class="string">Host</span> <span class="attr">setup:</span>       <span class="string">arm-unknown-linux-androideabi</span></span><br><span class="line">  <span class="string">Install</span> <span class="attr">prefix:</span>   <span class="string">/Users/lizhangqu/Desktop/android/toolchain/sysroot/usr/local</span></span><br><span class="line"><span class="attr">  Compiler:</span>         <span class="string">/Users/lizhangqu/Desktop/android/toolchain/bin/arm-linux-androideabi-gcc</span></span><br><span class="line">  <span class="string">SSL</span> <span class="attr">support:</span>      <span class="string">enabled</span> <span class="string">(OpenSSL)</span></span><br><span class="line">  <span class="string">SSH</span> <span class="attr">support:</span>      <span class="literal">no</span>      <span class="string">(--with-libssh2)</span></span><br><span class="line">  <span class="string">zlib</span> <span class="attr">support:</span>     <span class="string">enabled</span></span><br><span class="line">  <span class="string">GSS-API</span> <span class="attr">support:</span>  <span class="literal">no</span>      <span class="string">(--with-gssapi)</span></span><br><span class="line">  <span class="string">TLS-SRP</span> <span class="attr">support:</span>  <span class="string">enabled</span></span><br><span class="line"><span class="attr">  resolver:</span>         <span class="string">POSIX</span> <span class="string">threaded</span></span><br><span class="line">  <span class="string">IPv6</span> <span class="attr">support:</span>     <span class="string">enabled</span></span><br><span class="line">  <span class="string">Unix</span> <span class="string">sockets</span> <span class="attr">support:</span> <span class="string">enabled</span></span><br><span class="line">  <span class="string">IDN</span> <span class="attr">support:</span>      <span class="literal">no</span>      <span class="string">(--with-{libidn2,winidn})</span></span><br><span class="line">  <span class="string">Build</span> <span class="attr">libcurl:</span>    <span class="string">Shared=no,</span> <span class="string">Static=yes</span></span><br><span class="line">  <span class="string">Built-in</span> <span class="attr">manual:</span>  <span class="literal">no</span>      <span class="string">(--enable-manual)</span></span><br><span class="line"><span class="bullet">  -</span><span class="bullet">-libcurl</span> <span class="attr">option:</span> <span class="string">enabled</span> <span class="string">(--disable-libcurl-option)</span></span><br><span class="line">  <span class="string">Verbose</span> <span class="attr">errors:</span>   <span class="literal">no</span></span><br><span class="line">  <span class="string">SSPI</span> <span class="attr">support:</span>     <span class="literal">no</span>      <span class="string">(--enable-sspi)</span></span><br><span class="line">  <span class="string">ca</span> <span class="string">cert</span> <span class="attr">bundle:</span>   <span class="literal">no</span></span><br><span class="line">  <span class="string">ca</span> <span class="string">cert</span> <span class="attr">path:</span>     <span class="literal">no</span></span><br><span class="line">  <span class="string">ca</span> <span class="attr">fallback:</span>      <span class="literal">no</span></span><br><span class="line">  <span class="string">LDAP</span> <span class="attr">support:</span>     <span class="literal">no</span>      <span class="string">(--enable-ldap</span> <span class="string">/</span> <span class="bullet">--with-ldap-lib</span> <span class="string">/</span> <span class="bullet">--with-lber-lib)</span></span><br><span class="line">  <span class="string">LDAPS</span> <span class="attr">support:</span>    <span class="literal">no</span>      <span class="string">(--enable-ldaps)</span></span><br><span class="line">  <span class="string">RTSP</span> <span class="attr">support:</span>     <span class="literal">no</span>      <span class="string">(--enable-rtsp)</span></span><br><span class="line">  <span class="string">RTMP</span> <span class="attr">support:</span>     <span class="literal">no</span>      <span class="string">(--with-librtmp)</span></span><br><span class="line">  <span class="string">metalink</span> <span class="attr">support:</span> <span class="literal">no</span>      <span class="string">(--with-libmetalink)</span></span><br><span class="line">  <span class="string">PSL</span> <span class="attr">support:</span>      <span class="literal">no</span>      <span class="string">(libpsl</span> <span class="string">not</span> <span class="string">found)</span></span><br><span class="line">  <span class="string">HTTP2</span> <span class="attr">support:</span>    <span class="string">enabled</span> <span class="string">(nghttp2)</span></span><br><span class="line"><span class="attr">  Protocols:</span>        <span class="string">FILE</span> <span class="string">FTP</span> <span class="string">FTPS</span> <span class="string">HTTP</span> <span class="string">HTTPS</span> <span class="string">TFTP</span></span><br><span class="line"></span><br><span class="line">  <span class="string">SONAME</span> <span class="attr">bump:</span>     <span class="literal">yes</span> <span class="bullet">-</span> <span class="attr">WARNING:</span> <span class="string">this</span> <span class="string">library</span> <span class="string">will</span> <span class="string">be</span> <span class="string">built</span> <span class="string">with</span> <span class="string">the</span> <span class="string">SONAME</span></span><br><span class="line">                   <span class="string">number</span> <span class="string">bumped</span> <span class="string">due</span> <span class="string">to</span> <span class="string">(a</span> <span class="string">detected)</span> <span class="string">ABI</span> <span class="string">breakage.</span></span><br><span class="line">                   <span class="string">See</span> <span class="string">lib/README.curl_off_t</span> <span class="string">for</span> <span class="string">details</span> <span class="string">on</span> <span class="string">this.</span></span><br></pre></td></tr></table></figure><p>armeabi-v7a</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=arm <span class="attribute">--install-dir</span>=./toolchain</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOL</span>=arm-linux-androideabi</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_FLAGS</span>=<span class="string">&quot;-march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_LINK</span>=<span class="string">&quot;-march=armv7-a -Wl,--fix-cortex-a8&quot;</span></span><br><span class="line"></span><br><span class="line">./configure <span class="attribute">--prefix</span>=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/local \</span><br><span class="line">       <span class="attribute">--with-sysroot</span>=<span class="variable">$TOOLCHAIN</span>/sysroot \</span><br><span class="line">       <span class="attribute">--host</span>=arm-linux-androideabi \</span><br><span class="line">       <span class="attribute">--with-ssl</span>=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/local \</span><br><span class="line">       <span class="attribute">--with-nghttp2</span>=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/local \</span><br><span class="line">       --enable-ipv6 \</span><br><span class="line">       --enable-static \</span><br><span class="line">       --enable-threaded-resolver \</span><br><span class="line">       --disable-dict \</span><br><span class="line">       --disable-gopher \</span><br><span class="line">       --disable-ldap --disable-ldaps \</span><br><span class="line">       --disable-manual \</span><br><span class="line">       --disable-pop3 --disable-smtp --disable-imap \</span><br><span class="line">       --disable-rtsp \</span><br><span class="line">       --disable-shared \</span><br><span class="line">       --disable-smb \</span><br><span class="line">       --disable-telnet \</span><br><span class="line">       --disable-verbose</span><br></pre></td></tr></table></figure><p>x86</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=x86 <span class="attribute">--install-dir</span>=./toolchain</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOL</span>=i686-linux-android</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_FLAGS</span>=<span class="string">&quot;-march=i686 -msse3 -mstackrealign -mfpmath=sse&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_LINK</span>=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">./configure <span class="attribute">--prefix</span>=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/local \</span><br><span class="line">       <span class="attribute">--with-sysroot</span>=<span class="variable">$TOOLCHAIN</span>/sysroot \</span><br><span class="line">       <span class="attribute">--host</span>=i686-linux-android \</span><br><span class="line">       <span class="attribute">--with-ssl</span>=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/local \</span><br><span class="line">       <span class="attribute">--with-nghttp2</span>=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/local \</span><br><span class="line">       --enable-ipv6 \</span><br><span class="line">       --enable-static \</span><br><span class="line">       --enable-threaded-resolver \</span><br><span class="line">       --disable-dict \</span><br><span class="line">       --disable-gopher \</span><br><span class="line">       --disable-ldap --disable-ldaps \</span><br><span class="line">       --disable-manual \</span><br><span class="line">       --disable-pop3 --disable-smtp --disable-imap \</span><br><span class="line">       --disable-rtsp \</span><br><span class="line">       --disable-shared \</span><br><span class="line">       --disable-smb \</span><br><span class="line">       --disable-telnet \</span><br><span class="line">       --disable-verbose</span><br></pre></td></tr></table></figure><p>&#x4F55;&#x5927;&#x4ED9;&#x63D0;&#x4F9B;&#x7684;shell&#x811A;&#x672C;</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [! -f <span class="string">&quot;curl-7.53.1.tar.gz&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    wget https://curl.haxx.se/download/curl-7.53.1.tar.gz</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [! -d <span class="string">&quot;curl-7.53.1&quot;</span> ]; <span class="keyword">then</span> </span><br><span class="line">    tar zxf curl-7.53.1.tar.gz</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># env</span></span><br><span class="line"><span class="keyword">if</span> [-d <span class="string">&quot;out/curl&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    rm -fr <span class="string">&quot;out/curl&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">mkdir <span class="string">&quot;out&quot;</span></span><br><span class="line">mkdir <span class="string">&quot;out/curl&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_compile</span></span>() {</span><br><span class="line">    SURFIX=<span class="variable">$1</span></span><br><span class="line">    TOOL=<span class="variable">$2</span></span><br><span class="line">    ARCH_FLAGS=<span class="variable">$3</span></span><br><span class="line">    ARCH_LINK=<span class="variable">$4</span></span><br><span class="line">    ARCH=<span class="variable">$5</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [! -d <span class="string">&quot;out/curl/<span class="variable">${SURFIX}</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        mkdir <span class="string">&quot;out/curl/<span class="variable">${SURFIX}</span>&quot;</span> </span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [! -d <span class="string">&quot;toolchain_<span class="variable">${SURFIX}</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh --arch=<span class="variable">${ARCH}</span> --install-dir=./toolchain_<span class="variable">${SURFIX}</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">export</span> ANDROID_HOME=`<span class="built_in">pwd</span>`</span><br><span class="line">    <span class="built_in">export</span> TOOLCHAIN=<span class="variable">$ANDROID_HOME</span>/toolchain_<span class="variable">${SURFIX}</span></span><br><span class="line">    <span class="built_in">export</span> PKG_CONFIG_LIBDIR=<span class="variable">$TOOLCHAIN</span>/lib/pkgconfig</span><br><span class="line">    <span class="built_in">export</span> CROSS_SYSROOT=<span class="variable">$TOOLCHAIN</span>/sysroot</span><br><span class="line">    <span class="built_in">export</span> PATH=<span class="variable">$TOOLCHAIN</span>/bin:<span class="variable">$PATH</span></span><br><span class="line">    <span class="built_in">export</span> CC=<span class="variable">$TOOLCHAIN</span>/bin/<span class="variable">${TOOL}</span>-gcc</span><br><span class="line">    <span class="built_in">export</span> CXX=<span class="variable">$TOOLCHAIN</span>/bin/<span class="variable">${TOOL}</span>-g++</span><br><span class="line">    <span class="built_in">export</span> LINK=<span class="variable">${CXX}</span></span><br><span class="line">    <span class="built_in">export</span> LD=<span class="variable">$TOOLCHAIN</span>/bin/<span class="variable">${TOOL}</span>-ld</span><br><span class="line">    <span class="built_in">export</span> AR=<span class="variable">$TOOLCHAIN</span>/bin/<span class="variable">${TOOL}</span>-ar</span><br><span class="line">    <span class="built_in">export</span> RANLIB=<span class="variable">$TOOLCHAIN</span>/bin/<span class="variable">${TOOL}</span>-ranlib</span><br><span class="line">    <span class="built_in">export</span> STRIP=<span class="variable">$TOOLCHAIN</span>/bin/<span class="variable">${TOOL}</span>-strip</span><br><span class="line">    <span class="built_in">export</span> ARCH_FLAGS=<span class="variable">$ARCH_FLAGS</span></span><br><span class="line">    <span class="built_in">export</span> ARCH_LINK=<span class="variable">$ARCH_LINK</span></span><br><span class="line">    <span class="built_in">export</span> CFLAGS=<span class="string">&quot;<span class="variable">${ARCH_FLAGS}</span> -fpic -ffunction-sections -funwind-tables -fstack-protector -fno-strict-aliasing -finline-limit=64&quot;</span></span><br><span class="line">    <span class="built_in">export</span> CXXFLAGS=<span class="string">&quot;<span class="variable">${CFLAGS}</span> -frtti -fexceptions&quot;</span></span><br><span class="line">    <span class="built_in">export</span> LDFLAGS=<span class="string">&quot;<span class="variable">${ARCH_LINK}</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cd</span> curl-7.53.1/</span><br><span class="line">    autoreconf -i</span><br><span class="line">    ./configure --prefix=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/<span class="built_in">local</span> \</span><br><span class="line">       --with-sysroot=<span class="variable">$TOOLCHAIN</span>/sysroot \</span><br><span class="line">       --host=<span class="variable">${TOOL}</span> \</span><br><span class="line">       --with-ssl=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/<span class="built_in">local</span> \</span><br><span class="line">       --with-nghttp2=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/<span class="built_in">local</span> \</span><br><span class="line">       --<span class="built_in">enable</span>-ipv6 \</span><br><span class="line">       --<span class="built_in">enable</span>-static \</span><br><span class="line">       --<span class="built_in">enable</span>-threaded-resolver \</span><br><span class="line">       --<span class="built_in">disable</span>-dict \</span><br><span class="line">       --<span class="built_in">disable</span>-gopher \</span><br><span class="line">       --<span class="built_in">disable</span>-ldap --<span class="built_in">disable</span>-ldaps \</span><br><span class="line">       --<span class="built_in">disable</span>-manual \</span><br><span class="line">       --<span class="built_in">disable</span>-pop3 --<span class="built_in">disable</span>-smtp --<span class="built_in">disable</span>-imap \</span><br><span class="line">       --<span class="built_in">disable</span>-rtsp \</span><br><span class="line">       --<span class="built_in">disable</span>-shared \</span><br><span class="line">       --<span class="built_in">disable</span>-smb \</span><br><span class="line">       --<span class="built_in">disable</span>-telnet \</span><br><span class="line">       --<span class="built_in">disable</span>-verbose</span><br><span class="line">    make clean</span><br><span class="line">    make -j4</span><br><span class="line">    make install</span><br><span class="line">    <span class="built_in">cd</span> ..</span><br><span class="line">    mv curl-7.53.1/lib/.libs/libcurl.a out/curl/<span class="variable">${SURFIX}</span>/ </span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment"># arm</span></span><br><span class="line">_compile <span class="string">&quot;armeabi&quot;</span> <span class="string">&quot;arm-linux-androideabi&quot;</span> <span class="string">&quot;-mthumb&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;arm&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># armv7</span></span><br><span class="line">_compile <span class="string">&quot;armeabi-v7a&quot;</span> <span class="string">&quot;arm-linux-androideabi&quot;</span> <span class="string">&quot;-march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16&quot;</span> <span class="string">&quot;-march=armv7-a -Wl,--fix-cortex-a8&quot;</span> <span class="string">&quot;arm&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># arm64v8</span></span><br><span class="line">_compile <span class="string">&quot;arm64-v8a&quot;</span> <span class="string">&quot;aarch64-linux-android&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;arm64&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># x86</span></span><br><span class="line">_compile <span class="string">&quot;x86&quot;</span> <span class="string">&quot;i686-linux-android&quot;</span> <span class="string">&quot;-march=i686 -m32 -msse3 -mstackrealign -mfpmath=sse -mtune=intel&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;x86&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># x86_64</span></span><br><span class="line">_compile <span class="string">&quot;x86_64&quot;</span> <span class="string">&quot;x86_64-linux-android&quot;</span> <span class="string">&quot;-march=x86-64 -m64 -msse4.2 -mpopcnt  -mtune=intel&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;x86_64&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mips</span></span><br><span class="line">_compile <span class="string">&quot;mips&quot;</span> <span class="string">&quot;mipsel-linux-android&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;mips&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mips64</span></span><br><span class="line">_compile <span class="string">&quot;mips64&quot;</span> <span class="string">&quot;mips64el-linux-android&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;mips64&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;done&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>NDK</category>
      </categories>
      <tags>
        <tag>NDK</tag>
        <tag>交叉编译</tag>
        <tag>curl</tag>
      </tags>
  </entry>
  <entry>
    <title>openssl NDK 交叉编译</title>
    <url>/2017/05/24/openssl-NDK%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<p>&#x79FB;&#x690D;openssl&#x5230;android</p><a id="more"></a><p>&#x521B;&#x5EFA;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#xFF0C;&#x5E76;&#x8FDB;&#x5165;</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> android</span><br><span class="line"><span class="built_in">cd</span> android</span><br></pre></td></tr></table></figure><p>&#x4E0B;&#x8F7D;&#x6E90;&#x7801;</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">wget https:<span class="comment">//www.openssl.org/source/openssl-1.1.0e.tar.gz</span></span><br><span class="line">tar xfz openssl-<span class="number">1.1</span>.<span class="number">0</span>e<span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure><p>&#x751F;&#x6210;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=arm <span class="attribute">--install-dir</span>=./toolchain</span><br></pre></td></tr></table></figure><p>&#x5BFC;&#x51FA;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#xFF08;armeabi&#xFF09;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">ANDROID_HOME</span>=`pwd`</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOLCHAIN</span>=<span class="variable">$ANDROID_HOME</span>/toolchain</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CROSS_SYSROOT</span>=<span class="variable">$TOOLCHAIN</span>/sysroot</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$TOOLCHAIN</span>/bin:$PATH</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOL</span>=arm-linux-androideabi</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CC</span>=<span class="variable">$TOOLCHAIN</span>/bin/${TOOL}-gcc</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CXX</span>=<span class="variable">$TOOLCHAIN</span>/bin/${TOOL}-g++</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">LINK</span>=<span class="variable">${CXX}</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">LD</span>=<span class="variable">$TOOLCHAIN</span>/bin/${TOOL}-ld</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">AR</span>=<span class="variable">$TOOLCHAIN</span>/bin/${TOOL}-ar</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">RANLIB</span>=<span class="variable">$TOOLCHAIN</span>/bin/${TOOL}-ranlib</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">STRIP</span>=<span class="variable">$TOOLCHAIN</span>/bin/${TOOL}-strip</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_FLAGS</span>=<span class="string">&quot;-mthumb&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> ARCH_LINK=</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CFLAGS</span>=<span class="string">&quot;<span class="variable">${ARCH_FLAGS}</span> -fpic -ffunction-sections -funwind-tables -fstack-protector -fno-strict-aliasing -finline-limit=64&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CXXFLAGS</span>=<span class="string">&quot;<span class="variable">${CFLAGS}</span> -frtti -fexceptions&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">LDFLAGS</span>=<span class="string">&quot;<span class="variable">${ARCH_LINK}</span>&quot;</span></span><br></pre></td></tr></table></figure><p>&#x7F16;&#x8BD1;&#x5E76;&#x5B89;&#x88C5;</p><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">cd openssl-<span class="number">1.1</span>.<span class="number">0e</span>/</span><br><span class="line">./Configure android <span class="string">\</span></span><br><span class="line">          --prefix=$TOOLCHAIN/sysroot/usr/local <span class="string">\</span></span><br><span class="line">          --<span class="keyword">with</span>-zlib-include=$TOOLCHAIN/sysroot/usr/include <span class="string">\</span></span><br><span class="line">          --<span class="keyword">with</span>-zlib-lib=$TOOLCHAIN/sysroot/usr/lib <span class="string">\</span></span><br><span class="line">          zlib <span class="string">\</span></span><br><span class="line">          <span class="literal">no</span>-asm <span class="string">\</span></span><br><span class="line">          <span class="literal">no</span>-shared <span class="string">\</span></span><br><span class="line">          <span class="literal">no</span>-unit-test</span><br><span class="line">make -j4</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>&#x5378;&#x8F7D;</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">make uninstall</span></span><br></pre></td></tr></table></figure><p>armeabi-v7a</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=arm <span class="attribute">--install-dir</span>=./toolchain</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOL</span>=arm-linux-androideabi</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_FLAGS</span>=<span class="string">&quot;-march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_LINK</span>=<span class="string">&quot;-march=armv7-a -Wl,--fix-cortex-a8&quot;</span></span><br><span class="line"></span><br><span class="line">./Configure android-armv7 \</span><br><span class="line">          <span class="attribute">--prefix</span>=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/local \</span><br><span class="line">          <span class="attribute">--with-zlib-include</span>=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/include \</span><br><span class="line">          <span class="attribute">--with-zlib-lib</span>=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/lib \</span><br><span class="line">          zlib \</span><br><span class="line">          no-asm \</span><br><span class="line">          no-shared \</span><br><span class="line">          no-unit-test</span><br></pre></td></tr></table></figure><p>x86</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=x86 <span class="attribute">--install-dir</span>=./toolchain</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOL</span>=i686-linux-android</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_FLAGS</span>=<span class="string">&quot;-march=i686 -msse3 -mstackrealign -mfpmath=sse&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">ARCH_LINK</span>=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">./Configure android-x86 \</span><br><span class="line">          <span class="attribute">--prefix</span>=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/local \</span><br><span class="line">          <span class="attribute">--with-zi686lib-include</span>=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/include \</span><br><span class="line">          <span class="attribute">--with-zlib-lib</span>=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/lib \</span><br><span class="line">          zlib \</span><br><span class="line">          no-asm \</span><br><span class="line">          no-shared \</span><br><span class="line">          no-unit-test</span><br></pre></td></tr></table></figure><p>&#x4F55;&#x5927;&#x4ED9;&#x63D0;&#x4F9B;&#x7684;shell&#x811A;&#x672C;</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [! -f <span class="string">&quot;openssl-1.1.0e.tar.gz&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    wget https://www.openssl.org/<span class="built_in">source</span>/openssl-1.1.0e.tar.gz</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [! -d <span class="string">&quot;openssl-1.1.0e&quot;</span> ]; <span class="keyword">then</span> </span><br><span class="line">    tar zxf openssl-1.1.0e.tar.gz</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># env</span></span><br><span class="line"><span class="keyword">if</span> [-d <span class="string">&quot;out/openssl&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">    rm -fr <span class="string">&quot;out/openssl&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">mkdir <span class="string">&quot;out&quot;</span></span><br><span class="line">mkdir <span class="string">&quot;out/openssl&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">_compile</span></span>() {</span><br><span class="line">    SURFIX=<span class="variable">$1</span></span><br><span class="line">    TOOL=<span class="variable">$2</span></span><br><span class="line">    ARCH_FLAGS=<span class="variable">$3</span></span><br><span class="line">    ARCH_LINK=<span class="variable">$4</span></span><br><span class="line">    CFGNAME=<span class="variable">$5</span></span><br><span class="line">    ARCH=<span class="variable">$6</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [! -d <span class="string">&quot;out/openssl/<span class="variable">${SURFIX}</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        mkdir <span class="string">&quot;out/openssl/<span class="variable">${SURFIX}</span>&quot;</span> </span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [! -d <span class="string">&quot;toolchain_<span class="variable">${SURFIX}</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh --arch=<span class="variable">${ARCH}</span> --install-dir=./toolchain_<span class="variable">${SURFIX}</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">export</span> ANDROID_HOME=`<span class="built_in">pwd</span>`</span><br><span class="line">    <span class="built_in">export</span> TOOLCHAIN=<span class="variable">$ANDROID_HOME</span>/toolchain_<span class="variable">${SURFIX}</span></span><br><span class="line">    <span class="built_in">export</span> CROSS_SYSROOT=<span class="variable">$TOOLCHAIN</span>/sysroot</span><br><span class="line">    <span class="built_in">export</span> PATH=<span class="variable">$TOOLCHAIN</span>/bin:<span class="variable">$PATH</span></span><br><span class="line">    <span class="built_in">export</span> CC=<span class="variable">$TOOLCHAIN</span>/bin/<span class="variable">${TOOL}</span>-gcc</span><br><span class="line">    <span class="built_in">export</span> CXX=<span class="variable">$TOOLCHAIN</span>/bin/<span class="variable">${TOOL}</span>-g++</span><br><span class="line">    <span class="built_in">export</span> LINK=<span class="variable">${CXX}</span></span><br><span class="line">    <span class="built_in">export</span> LD=<span class="variable">$TOOLCHAIN</span>/bin/<span class="variable">${TOOL}</span>-ld</span><br><span class="line">    <span class="built_in">export</span> AR=<span class="variable">$TOOLCHAIN</span>/bin/<span class="variable">${TOOL}</span>-ar</span><br><span class="line">    <span class="built_in">export</span> RANLIB=<span class="variable">$TOOLCHAIN</span>/bin/<span class="variable">${TOOL}</span>-ranlib</span><br><span class="line">    <span class="built_in">export</span> STRIP=<span class="variable">$TOOLCHAIN</span>/bin/<span class="variable">${TOOL}</span>-strip</span><br><span class="line">    <span class="built_in">export</span> ARCH_FLAGS=<span class="variable">$ARCH_FLAGS</span></span><br><span class="line">    <span class="built_in">export</span> ARCH_LINK=<span class="variable">$ARCH_LINK</span></span><br><span class="line">    <span class="built_in">export</span> CFLAGS=<span class="string">&quot;<span class="variable">${ARCH_FLAGS}</span> -fpic -ffunction-sections -funwind-tables -fstack-protector -fno-strict-aliasing -finline-limit=64&quot;</span></span><br><span class="line">    <span class="built_in">export</span> CXXFLAGS=<span class="string">&quot;<span class="variable">${CFLAGS}</span> -frtti -fexceptions&quot;</span></span><br><span class="line">    <span class="built_in">export</span> LDFLAGS=<span class="string">&quot;<span class="variable">${ARCH_LINK}</span>&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="built_in">cd</span> openssl-1.1.0e/</span><br><span class="line">    ./Configure <span class="variable">${CFGNAME}</span> --prefix=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/<span class="built_in">local</span> --with-zlib-include=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/include --with-zlib-lib=<span class="variable">$TOOLCHAIN</span>/sysroot/usr/lib zlib no-asm no-shared no-unit-test</span><br><span class="line">    make clean</span><br><span class="line">    make -j4</span><br><span class="line">    <span class="comment">#make install</span></span><br><span class="line">    make install_sw</span><br><span class="line">    make install_ssldirs</span><br><span class="line">    <span class="built_in">cd</span> ..</span><br><span class="line">    mv openssl-1.1.0e/libssl.a out/openssl/<span class="variable">${SURFIX}</span>/ </span><br><span class="line">    mv openssl-1.1.0e/libcrypto.a out/openssl/<span class="variable">${SURFIX}</span>/</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># arm</span></span><br><span class="line">_compile <span class="string">&quot;armeabi&quot;</span> <span class="string">&quot;arm-linux-androideabi&quot;</span> <span class="string">&quot;-mthumb&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;android&quot;</span> <span class="string">&quot;arm&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># armv7</span></span><br><span class="line">_compile <span class="string">&quot;armeabi-v7a&quot;</span> <span class="string">&quot;arm-linux-androideabi&quot;</span> <span class="string">&quot;-march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16&quot;</span> <span class="string">&quot;-march=armv7-a -Wl,--fix-cortex-a8&quot;</span> <span class="string">&quot;android-armeabi&quot;</span> <span class="string">&quot;arm&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># arm64v8</span></span><br><span class="line">_compile <span class="string">&quot;arm64-v8a&quot;</span> <span class="string">&quot;aarch64-linux-android&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;android64-aarch64&quot;</span> <span class="string">&quot;arm64&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># x86</span></span><br><span class="line">_compile <span class="string">&quot;x86&quot;</span> <span class="string">&quot;i686-linux-android&quot;</span> <span class="string">&quot;-march=i686 -m32 -msse3 -mstackrealign -mfpmath=sse -mtune=intel&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;android-x86&quot;</span> <span class="string">&quot;x86&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># x86_64</span></span><br><span class="line">_compile <span class="string">&quot;x86_64&quot;</span> <span class="string">&quot;x86_64-linux-android&quot;</span> <span class="string">&quot;-march=x86-64 -m64 -msse4.2 -mpopcnt  -mtune=intel&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;android64&quot;</span> <span class="string">&quot;x86_64&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mips</span></span><br><span class="line">_compile <span class="string">&quot;mips&quot;</span> <span class="string">&quot;mipsel-linux-android&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;android-mips&quot;</span> <span class="string">&quot;mips&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mips64</span></span><br><span class="line">_compile <span class="string">&quot;mips64&quot;</span> <span class="string">&quot;mips64el-linux-android&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;linux64-mips64&quot;</span> <span class="string">&quot;mips64&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;done&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>NDK</category>
      </categories>
      <tags>
        <tag>NDK</tag>
        <tag>交叉编译</tag>
        <tag>openssl</tag>
      </tags>
  </entry>
  <entry>
    <title>libnghttp2 NDK 交叉编译</title>
    <url>/2017/05/24/libnghttp2-NDK%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/</url>
    <content><![CDATA[<p>&#x79FB;&#x690D;nghttp2&#x5230;android</p><a id="more"></a><p>&#x521B;&#x5EFA;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#xFF0C;&#x5E76;&#x8FDB;&#x5165;</p><figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> android</span><br><span class="line"><span class="built_in">cd</span> android</span><br></pre></td></tr></table></figure><p>clone&#x6E90;&#x7801;</p><figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">git</span>@github.com:nghttp2/nghttp2.git</span><br></pre></td></tr></table></figure><p>&#x751F;&#x6210;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=arm <span class="attribute">--install-dir</span>=./toolchain</span><br></pre></td></tr></table></figure><p>&#x5BFC;&#x51FA;&#x73AF;&#x5883;&#x53D8;&#x91CF;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">CURRENT_HOME</span>=`pwd`</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">TOOLCHAIN</span>=<span class="variable">$CURRENT_HOME</span>/toolchain</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$TOOLCHAIN</span>/bin:$PATH</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PKG_CONFIG_LIBDIR</span>=<span class="variable">$TOOLCHAIN</span>/lib/pkgconfig</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CPPFLAGS</span>=<span class="string">&quot;-fPIE -I<span class="variable">$TOOLCHAIN</span>/sysroot/usr/include&quot;</span></span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">LDFLAGS</span>=<span class="string">&quot;-fPIE -pie -I<span class="variable">$TOOLCHAIN</span>/sysroot/usr/lib&quot;</span></span><br></pre></td></tr></table></figure><p>&#x7F16;&#x8BD1;&#x5E76;&#x5B89;&#x88C5;</p><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">cd nghttp2</span><br><span class="line">autoreconf -i</span><br><span class="line">./configure --enable-<span class="class"><span class="keyword">lib</span>-<span class="title">only</span> \</span></span><br><span class="line">    --host=arm-linux-androideabi \</span><br><span class="line">    --build=<span class="string">`dpkg-architecture -qDEB_BUILD_GNU_TYPE`</span> \</span><br><span class="line">    --disable-shared \</span><br><span class="line">    --prefix=<span class="string">&quot;$TOOLCHAIN/sysroot/usr/local&quot;</span></span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>&#x5378;&#x8F7D;</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">make uninstall</span></span><br></pre></td></tr></table></figure><p>&#x4F55;&#x5927;&#x4ED9;&#x63D0;&#x4F9B;&#x7684;shell&#x811A;&#x672C;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [! -d <span class="string">&quot;nghttp2&quot;</span> ]; then</span><br><span class="line">    git clone git@github.com:nghttp2/nghttp2.git</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    cd nghttp2</span><br><span class="line">    git pull</span><br><span class="line">    cd <span class="built_in">..</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="comment"># env</span></span><br><span class="line"><span class="keyword">if</span> [-d <span class="string">&quot;out/nghttp2&quot;</span> ]; then</span><br><span class="line">    rm -fr <span class="string">&quot;out/nghttp2&quot;</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">mkdir <span class="string">&quot;out&quot;</span></span><br><span class="line">mkdir <span class="string">&quot;out/nghttp2&quot;</span></span><br><span class="line"></span><br><span class="line">_compile() {</span><br><span class="line">    <span class="attribute">SURFIX</span>=<span class="variable">$1</span></span><br><span class="line">    <span class="attribute">TOOL</span>=<span class="variable">$2</span></span><br><span class="line">    <span class="attribute">ARCH_FLAGS</span>=<span class="variable">$3</span></span><br><span class="line">    <span class="attribute">ARCH_LINK</span>=<span class="variable">$4</span></span><br><span class="line">    <span class="attribute">ARCH</span>=<span class="variable">$5</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [! -d <span class="string">&quot;out/nghttp2/<span class="variable">${SURFIX}</span>&quot;</span> ]; then</span><br><span class="line">        mkdir <span class="string">&quot;out/nghttp2/<span class="variable">${SURFIX}</span>&quot;</span></span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [! -d <span class="string">&quot;toolchain_<span class="variable">${SURFIX}</span>&quot;</span> ]; then</span><br><span class="line">        <span class="variable">$ANDROID_NDK</span>/build/tools/make-standalone-toolchain.sh <span class="attribute">--arch</span>=<span class="variable">${ARCH}</span> <span class="attribute">--install-dir</span>=./toolchain_${SURFIX}</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    <span class="builtin-name">export</span> <span class="attribute">CURRENT_HOME</span>=`pwd`</span><br><span class="line">    <span class="builtin-name">export</span> <span class="attribute">TOOLCHAIN</span>=<span class="variable">$CURRENT_HOME</span>/toolchain_${SURFIX}</span><br><span class="line">    <span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$TOOLCHAIN</span>/bin:$PATH</span><br><span class="line">    <span class="builtin-name">export</span> <span class="attribute">PKG_CONFIG_LIBDIR</span>=<span class="variable">$TOOLCHAIN</span>/lib/pkgconfig</span><br><span class="line">    <span class="builtin-name">export</span> <span class="attribute">ARCH_FLAGS</span>=<span class="variable">$ARCH_FLAGS</span></span><br><span class="line">    <span class="builtin-name">export</span> <span class="attribute">ARCH_LINK</span>=<span class="variable">$ARCH_LINK</span></span><br><span class="line">    <span class="builtin-name">export</span> <span class="attribute">CPPFLAGS</span>=<span class="string">&quot;-fPIE -I<span class="variable">$TOOLCHAIN</span>/sysroot/usr/include&quot;</span></span><br><span class="line">    <span class="builtin-name">export</span> <span class="attribute">LDFLAGS</span>=<span class="string">&quot;-fPIE -pie -I<span class="variable">$TOOLCHAIN</span>/sysroot/usr/lib&quot;</span></span><br><span class="line"></span><br><span class="line">    cd nghttp2/</span><br><span class="line">    autoreconf -i</span><br><span class="line">    ./configure --enable-lib-only <span class="attribute">--host</span>=<span class="variable">${TOOL}</span> <span class="attribute">--build</span>=`dpkg-architecture -qDEB_BUILD_GNU_TYPE` --disable-shared <span class="attribute">--prefix</span>=<span class="string">&quot;<span class="variable">$TOOLCHAIN</span>/sysroot/usr/local&quot;</span></span><br><span class="line">    make clean</span><br><span class="line">    make -j4</span><br><span class="line">    make install</span><br><span class="line">    cd <span class="built_in">..</span></span><br><span class="line"></span><br><span class="line">    mv nghttp2/lib/.libs/libnghttp2.a out/nghttp2/<span class="variable">${SURFIX}</span>/</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment"># arm</span></span><br><span class="line">_compile <span class="string">&quot;armeabi&quot;</span> <span class="string">&quot;arm-linux-androideabi&quot;</span> <span class="string">&quot;-mthumb&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;arm&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># armv7</span></span><br><span class="line">_compile <span class="string">&quot;armeabi-v7a&quot;</span> <span class="string">&quot;arm-linux-androideabi&quot;</span> <span class="string">&quot;-march=armv7-a -mfloat-abi=softfp -mfpu=vfpv3-d16&quot;</span> <span class="string">&quot;-march=armv7-a -Wl,--fix-cortex-a8&quot;</span> <span class="string">&quot;arm&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># arm64v8</span></span><br><span class="line">_compile <span class="string">&quot;arm64-v8a&quot;</span> <span class="string">&quot;aarch64-linux-android&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;arm64&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># x86</span></span><br><span class="line">_compile <span class="string">&quot;x86&quot;</span> <span class="string">&quot;i686-linux-android&quot;</span> <span class="string">&quot;-march=i686 -m32 -msse3 -mstackrealign -mfpmath=sse -mtune=intel&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;x86&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># x86_64</span></span><br><span class="line">_compile <span class="string">&quot;x86_64&quot;</span> <span class="string">&quot;x86_64-linux-android&quot;</span> <span class="string">&quot;-march=x86-64 -m64 -msse4.2 -mpopcnt  -mtune=intel&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;x86_64&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mips</span></span><br><span class="line">_compile <span class="string">&quot;mips&quot;</span> <span class="string">&quot;mipsel-linux-android&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;mips&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mips64</span></span><br><span class="line">_compile <span class="string">&quot;mips64&quot;</span> <span class="string">&quot;mips64el-linux-android&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;mips64&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo <span class="string">&quot;done&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>NDK</category>
      </categories>
      <tags>
        <tag>NDK</tag>
        <tag>交叉编译</tag>
        <tag>nghttp2</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio Library 模块中 Native 代码进行 debug 的一些坑</title>
    <url>/2017/05/11/Android-Studio-Library%E6%A8%A1%E5%9D%97%E4%B8%ADNative%E4%BB%A3%E7%A0%81%E8%BF%9B%E8%A1%8Cdebug%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>&#x5982;&#x679C;&#x9879;&#x76EE;&#x4E2D;&#x5B58;&#x5728;&#x591A;&#x4E2A;module&#xFF0C;&#x90A3;&#x4E48;&#x5728;application&#x6A21;&#x5757;&#x4E2D;&#x4F9D;&#x8D56;library&#x6A21;&#x5757;&#xFF0C;&#x5E76;&#x4E14;library&#x6A21;&#x5757;&#x4E2D;&#x6709;native&#x4EE3;&#x7801;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5047;&#x8BBE;&#x4F60;&#x9700;&#x8981;debug library&#x6A21;&#x5757;&#x4E2D;&#x7684;&#x8FD9;&#x4E9B;native&#x4EE3;&#x7801;&#xFF0C;&#x6B63;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FD9;&#x90E8;&#x5206;native&#x4EE3;&#x7801;&#x662F;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x88AB;debug&#x7684;&#x3002;&#x5BFC;&#x81F4;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x6839;&#x672C;&#x539F;&#x56E0;&#x662F;&#x56E0;&#x4E3A;&#x5373;&#x4F7F;&#x5728;&#x8FD0;&#x884C;application&#x6A21;&#x5757;&#x7684;debug&#x6784;&#x5EFA;&#x65F6;&#xFF0C;&#x5176;&#x4F9D;&#x8D56;&#x7684;library&#x6A21;&#x5757;&#x5E76;&#x4E0D;&#x662F;&#x4EE5;debug&#x6784;&#x5EFA;&#xFF0C;&#x800C;&#x662F;&#x4EE5;release&#x6784;&#x5EFA;&#x3002;</p><a id="more"></a><p>&#x9879;&#x76EE;&#x7ED3;&#x6784;&#x4F8B;&#x5B50;&#x5982;&#x4E0B;&#x56FE;&#x6240;&#x793A;</p><p><img src="/2017/05/11/Android-Studio-Library%E6%A8%A1%E5%9D%97%E4%B8%ADNative%E4%BB%A3%E7%A0%81%E8%BF%9B%E8%A1%8Cdebug%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/project.png" alt="project.png"></p><p>&#x89E3;&#x51B3;&#x4E0D;&#x80FD;debug&#x7684;&#x65B9;&#x5F0F;&#x6709;&#x4E24;&#x79CD;&#x3002;</p><h3 id="1&#x3001;&#x4E0D;&#x8FDB;&#x884C;StripSymbolDebug"><a href="#1&#x3001;&#x4E0D;&#x8FDB;&#x884C;StripSymbolDebug" class="headerlink" title="1&#x3001;&#x4E0D;&#x8FDB;&#x884C;StripSymbolDebug"></a>1&#x3001;&#x4E0D;&#x8FDB;&#x884C;StripSymbolDebug</h3><p>Gralde&#x4E2D;&#x6709;&#x4E00;&#x4E2A;Task&#x53EB;transformNativeLibsWithStripDebugSymbolFor${BuildType}&#xFF0C;&#x5176;&#x5BF9;&#x5E94;&#x7684;&#x4EE3;&#x7801;&#x5728;com.android.build.gradle.internal.transforms.StripDebugSymbolTransform&#x4E2D;&#xFF0C;&#x7FFB;&#x770B;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x5982;&#x4E0B;&#x4EE3;&#x7801;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (excludeMatchers.stream<span class="literal">()</span>.any<span class="constructor">Match(<span class="params">m</span> -&gt; <span class="params">m</span>.<span class="params">matches</span>(Paths.<span class="params">get</span>(<span class="params">path</span>)</span>))) {</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">FileUtils</span>.</span></span>mkdirs(strippedLib.get<span class="constructor">ParentFile()</span>);</span><br><span class="line">    <span class="module-access"><span class="module"><span class="identifier">FileUtils</span>.</span></span>copy<span class="constructor">File(<span class="params">input</span>, <span class="params">strippedLib</span>)</span>;</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">    strip<span class="constructor">File(<span class="params">input</span>, <span class="params">strippedLib</span>, <span class="params">abi</span>)</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> void strip<span class="constructor">File(@NonNull File <span class="params">input</span>, @NonNull File <span class="params">output</span>, @Nullable Abi <span class="params">abi</span>)</span></span><br><span class="line">            throws IOException {</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">FileUtils</span>.</span></span>mkdirs(output.get<span class="constructor">ParentFile()</span>);</span><br><span class="line">        <span class="keyword">if</span> (abi<span class="operator"> == </span>null) {</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">FileUtils</span>.</span></span>copy<span class="constructor">File(<span class="params">input</span>, <span class="params">output</span>)</span>;</span><br><span class="line">            return;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        ProcessInfoBuilder builder = <span class="keyword">new</span> <span class="constructor">ProcessInfoBuilder()</span>;</span><br><span class="line">        builder.set<span class="constructor">Executable(<span class="params">stripExecutables</span>.<span class="params">get</span>(<span class="params">abi</span>)</span>);</span><br><span class="line">        builder.add<span class="constructor">Args(<span class="string">&quot;--strip-unneeded&quot;</span>)</span>;</span><br><span class="line">        builder.add<span class="constructor">Args(<span class="string">&quot;-o&quot;</span>)</span>;</span><br><span class="line">        builder.add<span class="constructor">Args(<span class="params">output</span>.<span class="params">toString</span>()</span>);</span><br><span class="line">        builder.add<span class="constructor">Args(<span class="params">input</span>.<span class="params">toString</span>()</span>);</span><br><span class="line">        ILogger logger = <span class="keyword">new</span> <span class="constructor">LoggerWrapper(<span class="params">project</span>.<span class="params">getLogger</span>()</span>);</span><br><span class="line">        ProcessResult result = <span class="keyword">new</span> <span class="constructor">GradleProcessExecutor(<span class="params">project</span>)</span>.execute(</span><br><span class="line">                builder.create<span class="constructor">Process()</span>,</span><br><span class="line">                <span class="keyword">new</span> <span class="constructor">LoggedProcessOutputHandler(<span class="params">logger</span>)</span>);</span><br><span class="line">        <span class="keyword">if</span> (result.get<span class="constructor">ExitValue()</span> != <span class="number">0</span>) {</span><br><span class="line">            logger.warning(<span class="string">&quot;Unable to strip library &apos;%s&apos;, packaging it as is.&quot;</span>,</span><br><span class="line">                    input.get<span class="constructor">AbsolutePath()</span>);</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">FileUtils</span>.</span></span>copy<span class="constructor">File(<span class="params">input</span>, <span class="params">output</span>)</span>;</span><br><span class="line">        }</span><br><span class="line">    }</span><br></pre></td></tr></table></figure><p>&#x5F53;&#x6EE1;&#x8DB3;excludeMatchers&#x4E2D;&#x7684;&#x6B63;&#x5219;&#x5339;&#x914D;&#x65F6;&#xFF0C;&#x8BE5;Task&#x6267;&#x884C;&#x7684;&#x662F;&#x76F4;&#x63A5;&#x62F7;&#x8D1D;so&#x6587;&#x4EF6;&#xFF0C;&#x800C;&#x4E0D;&#x6EE1;&#x8DB3;&#x65F6;&#xFF0C;&#x5219;&#x6267;&#x884C;&#x7684;&#x662F;strip&#x64CD;&#x4F5C;&#x3002;</p><p>&#x800C;excludeMatchers&#x662F;&#x5728;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x88AB;&#x8D4B;&#x503C;&#x7684;</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="meta">@NonNull</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> Set&lt;PathMatcher&gt; excludeMatchers;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> StripDebugSymbolTransform(</span><br><span class="line">        <span class="meta">@NonNull</span> Project project,</span><br><span class="line">        <span class="meta">@NonNull</span> NdkHandler ndkHandler,</span><br><span class="line">        <span class="meta">@NonNull</span> Set&lt;String&gt; excludePattern) {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.excludeMatchers = excludePattern.stream()</span><br><span class="line">            .map(<span class="string">StripDebugSymbolTransform:</span>:compileGlob)</span><br><span class="line">            .collect(ImmutableCollectors.toImmutableSet());</span><br><span class="line">    checkArgument(ndkHandler.isConfigured());</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(Abi <span class="string">abi :</span> ndkHandler.getSupportedAbis()) {</span><br><span class="line">        stripExecutables.put(abi, ndkHandler.getStripExecutable(abi));</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">this</span>.project = project;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x67E5;&#x770B;&#x5176;&#x6784;&#x9020;&#x51FD;&#x6570;&#x88AB;&#x8C03;&#x7528;&#x7684;&#x5730;&#x65B9;</p><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">TransformManager transformManager = <span class="keyword">scope.getTransformManager();</span></span><br><span class="line"><span class="keyword">GlobalScope </span>globalScope = <span class="keyword">scope.getGlobalScope();</span></span><br><span class="line"><span class="keyword">transformManager.addTransform(</span></span><br><span class="line"><span class="keyword"> </span>       tasks,</span><br><span class="line">        <span class="keyword">scope,</span></span><br><span class="line"><span class="keyword"> </span>       new StripDebugSymbolTransform(</span><br><span class="line">                globalScope.getProject(),</span><br><span class="line">                globalScope.getNdkHandler(),</span><br><span class="line">                globalScope.getExtension().getPackagingOptions().getDoNotStrip()))<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>&#x4ECE;&#x4E0A;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5FFD;&#x7565;&#x5217;&#x8868;&#x662F;&#x4ECE;PackagingOptions&#x4E2D;&#x7684;DoNotStrip&#x4F20;&#x5165;&#x3002;</p><p>&#x90A3;&#x4E48;&#x95EE;&#x9898;&#x5C31;&#x597D;&#x529E;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x5728;library&#x6A21;&#x5757;&#x548C;application&#x6A21;&#x5757;&#x4E2D;&#x52A0;&#x5165;&#x5FFD;&#x7565;strip&#x7684;&#x6B63;&#x5219;&#x5339;&#x914D;&#x5373;&#x53EF;&#xFF0C;&#x5982;&#x4E0B;</p><figure class="highlight smalltalk"><table><tr><td class="code"><pre><span class="line">android {</span><br><span class="line">    //...</span><br><span class="line">    packagingOptions {</span><br><span class="line">        doNotStrip <span class="comment">&quot;*/armeabi/*.so&quot;</span></span><br><span class="line">        doNotStrip <span class="comment">&quot;*/armeabi-v7a/*.so&quot;</span></span><br><span class="line">        doNotStrip <span class="comment">&quot;*/arm64-v8a/*.so&quot;</span></span><br><span class="line">        doNotStrip <span class="comment">&quot;*/x86/*.so&quot;</span></span><br><span class="line">        doNotStrip <span class="comment">&quot;*/x86_64/*.so&quot;</span></span><br><span class="line">        doNotStrip <span class="comment">&quot;*/mips/*.so&quot;</span></span><br><span class="line">        doNotStrip <span class="comment">&quot;*/mips64/*.so&quot;</span></span><br><span class="line">        //...</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;library&#x6A21;&#x5757;&#x548C;application&#x6A21;&#x5757;&#x4E2D;&#x7684;gradle&#x90FD;&#x9700;&#x8981;&#x52A0;&#x5165;&#x3002;</p><p>&#x4F46;&#x662F;&#x95EE;&#x9898;&#x53C8;&#x6765;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x53D1;&#x5E03;&#x5230;maven&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x662F;&#x4E0D;&#x9700;&#x8981;&#x6267;&#x884C;&#x8FD9;&#x4E2A;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x6700;&#x597D;&#x914D;&#x7F6E;&#x4E00;&#x4E2A;&#x5F00;&#x5173;&#xFF0C;&#x4E14;&#x8FD9;&#x4E2A;&#x5F00;&#x5173;&#x4E0D;&#x4F1A;&#x88AB;&#x63D0;&#x4EA4;&#x5230;git&#x4E2D;&#x53BB;&#xFF0C;&#x56E0;&#x6B64;local.properties&#x662F;&#x6700;&#x5408;&#x9002;&#x7684;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">boolean</span> isDebug() {</span><br><span class="line">    <span class="keyword">boolean</span> ret = <span class="keyword">false</span></span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">        Properties properties = <span class="keyword">new</span> Properties()</span><br><span class="line">        <span class="keyword">File</span> <span class="keyword">file</span> = <span class="keyword">project</span>.rootProject.<span class="keyword">file</span>(<span class="string">&apos;local.properties&apos;</span>)</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">file</span>.exists()) {</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span></span><br><span class="line">        }</span><br><span class="line">        properties.load(<span class="keyword">file</span>.newDataInputStream())</span><br><span class="line">        String debugStr = properties.getProperty(<span class="string">&quot;debug&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> (debugStr != <span class="keyword">null</span> &amp;&amp; debugStr.length() &gt; <span class="number">0</span>) {</span><br><span class="line">            ret = debugStr.toBoolean()</span><br><span class="line">        }</span><br><span class="line">    } <span class="keyword">catch</span> (Throwable throwable) {</span><br><span class="line">        throwable.printStackTrace()</span><br><span class="line">        ret = <span class="keyword">false</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">project</span>.logger.error(<span class="string">&quot;[${project.name}]Debug:${ret}&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x5728;local.properties&#x4E2D;&#x52A0;&#x5165;debug=true&#xFF0C;&#x4FEE;&#x6539;packagingOptions&#x914D;&#x7F6E;&#x4E3A;</p><figure class="highlight stan"><table><tr><td class="code"><pre><span class="line">android {</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="name">if</span> (isDebug()) {</span><br><span class="line">        packagingOptions {</span><br><span class="line">            doNotStrip &quot;*/armeabi<span class="comment">/*.so&quot;</span></span><br><span class="line"><span class="comment">            doNotStrip &quot;*/</span>armeabi-v7a<span class="comment">/*.so&quot;</span></span><br><span class="line"><span class="comment">            doNotStrip &quot;*/</span>arm64-v8a<span class="comment">/*.so&quot;</span></span><br><span class="line"><span class="comment">            doNotStrip &quot;*/</span>x86<span class="comment">/*.so&quot;</span></span><br><span class="line"><span class="comment">            doNotStrip &quot;*/</span>x86_64<span class="comment">/*.so&quot;</span></span><br><span class="line"><span class="comment">            doNotStrip &quot;*/</span>mips<span class="comment">/*.so&quot;</span></span><br><span class="line"><span class="comment">            doNotStrip &quot;*/</span>mips64<span class="comment">/*.so&quot;</span></span><br><span class="line"><span class="comment">            //...</span></span><br><span class="line"><span class="comment">        }</span></span><br><span class="line"><span class="comment">    }</span></span><br><span class="line"><span class="comment">}</span></span><br></pre></td></tr></table></figure><h3 id="2&#x3001;&#x8BA9;Library&#x6A21;&#x5757;&#x7684;BuildType&#x968F;Application&#x6A21;&#x5757;&#x7684;BulidType&#x800C;&#x6784;&#x5EFA;"><a href="#2&#x3001;&#x8BA9;Library&#x6A21;&#x5757;&#x7684;BuildType&#x968F;Application&#x6A21;&#x5757;&#x7684;BulidType&#x800C;&#x6784;&#x5EFA;" class="headerlink" title="2&#x3001;&#x8BA9;Library&#x6A21;&#x5757;&#x7684;BuildType&#x968F;Application&#x6A21;&#x5757;&#x7684;BulidType&#x800C;&#x6784;&#x5EFA;"></a>2&#x3001;&#x8BA9;Library&#x6A21;&#x5757;&#x7684;BuildType&#x968F;Application&#x6A21;&#x5757;&#x7684;BulidType&#x800C;&#x6784;&#x5EFA;</h3><p>&#x9664;&#x4E86;&#x4EE5;&#x4E0A;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5176;&#x5B9E;&#x8FD8;&#x6709;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x8BA9;Library&#x4E0D;&#x8FDB;&#x884C;&#x9ED8;&#x8BA4;&#x7684;release&#x6784;&#x5EFA;&#xFF0C;&#x800C;&#x662F;&#x968F;Application&#x7684;BuildType&#x800C;&#x6539;&#x53D8;&#xFF0C;&#x5F53;Application&#x7684;BuildType&#x4E3A;debug&#x65F6;&#xFF0C;Library&#x4E5F;&#x8FDB;&#x884C;debug&#x6784;&#x5EFA;&#xFF0C;&#x5F53;Application&#x7684;BuildType&#x4E3A;release&#x65F6;&#xFF0C;Library&#x5219;&#x8FDB;&#x884C;release&#x6784;&#x5EFA;&#xFF0C;&#x8981;&#x505A;&#x5230;&#x8FD9;&#x6837;&#xFF0C;&#x9700;&#x8981;&#x663E;&#x793A;&#x58F0;&#x660E;&#x4E00;&#x4E0B;compile&#x7684;configuration&#x3002;</p><p>&#x67E5;&#x770B;Google&#x7684;&#x76F8;&#x5173;&#x6587;&#x6863;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#x600E;&#x4E48;&#x505A;&#xFF1A;<a href="http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Library-Publication" target="_blank" rel="noopener">http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Library-Publication</a></p><p>application&#x6A21;&#x5757;&#x4E2D;&#x7684;&#x4F9D;&#x8D56;&#x539F;&#x6765;&#x662F;&#x8FD9;&#x6837;&#x7684;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="keyword">project</span>(<span class="string">&apos;:library&apos;</span>)</span><br></pre></td></tr></table></figure><p>&#x5C06;&#x5176;&#x4FEE;&#x6539;&#x4E3A;</p><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">releaseCompile</span> <span class="selector-tag">project</span>(<span class="attribute">path</span>:<span class="string">&apos;:library&apos;</span>,<span class="attribute">configuration</span>:<span class="string">&apos;release&apos;</span>)</span><br><span class="line"><span class="selector-tag">debugCompile</span> <span class="selector-tag">project</span>(<span class="attribute">path</span>:<span class="string">&apos;:library&apos;</span>,<span class="attribute">configuration</span>:<span class="string">&apos;debug&apos;</span>)</span><br></pre></td></tr></table></figure><p>&#x7136;&#x540E;&#x5728;library&#x6A21;&#x5757;&#x4E2D;&#x7684;gradle&#x4E2D;&#x52A0;&#x5165;&#x4E00;&#x884C;&#x914D;&#x7F6E;&#xFF0C;&#x8868;&#x793A;&#x4E0D;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x7684;</p><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="class">android </span>{</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    <span class="class">defaultConfig </span>{</span><br><span class="line">        publishNonDefault true</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x914D;&#x7F6E;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x6109;&#x5FEB;&#x7684;debug&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x8FD8;&#x6CA1;&#x5B8C;&#xFF0C;&#x5BF9;&#x7684;&#xFF0C;&#x9700;&#x8981;&#x5224;&#x65AD;&#x662F;&#x5426;&#x662F;debug&#xFF0C;&#x90A3;&#x4E48;&#x4EE5;&#x4E0A;&#x914D;&#x7F6E;&#x5C31;&#x53D8;&#x6210;&#x4E86;&#x8FD9;&#x6837;</p><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">if</span> (isDebug()) {</span><br><span class="line">	<span class="selector-tag">releaseCompile</span> <span class="selector-tag">project</span>(<span class="attribute">path</span>:<span class="string">&apos;:library&apos;</span>,<span class="attribute">configuration</span>:<span class="string">&apos;release&apos;</span>)</span><br><span class="line">	<span class="selector-tag">debugCompile</span> <span class="selector-tag">project</span>(<span class="attribute">path</span>:<span class="string">&apos;:library&apos;</span>,<span class="attribute">configuration</span>:<span class="string">&apos;debug&apos;</span>)</span><br><span class="line">} <span class="selector-tag">else</span> {</span><br><span class="line">	<span class="selector-tag">compile</span> <span class="selector-tag">project</span>(<span class="string">&apos;:library&apos;</span>)</span><br><span class="line">}</span><br></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">android {</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    defaultConfig {</span><br><span class="line">        <span class="keyword">if</span> (is<span class="constructor">Debug()</span>) {</span><br><span class="line">	        publishNonDefault <span class="literal">true</span></span><br><span class="line">	     }</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#x4E4B;&#x6240;&#x4EE5;&#x52A0;&#x5165;debug&#x5224;&#x65AD;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x53D1;maven&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;&#x5B58;&#x5728;publishNonDefault=true&#xFF0C;Maven&#x53D1;&#x5E03;&#x63D2;&#x4EF6;&#x5C06;&#x628A;&#x8FD9;&#x4E9B;&#x989D;&#x5916;&#x7684;variant&#x4F5C;&#x4E3A;&#x989D;&#x5916;&#x7684;&#x5305;&#x53D1;&#x5E03;&#x3002;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x5B83;&#x53D1;&#x5E03;&#x5230;&#x4E00;&#x4E2A;maven&#x4ED3;&#x5E93;&#x5E76;&#x4E0D;&#x662F;&#x771F;&#x6B63;&#x7684;&#x517C;&#x5BB9;&#x3002;&#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x53EA;&#x5411;&#x4E00;&#x4E2A;&#x4ED3;&#x5E93;&#x53D1;&#x5E03;&#x4E00;&#x4E2A;&#x5355;&#x4E00;&#x7684; variant&#x3002;&#x56E0;&#x6B64;&#x53D1;&#x5E03;maven&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5173;&#x95ED;&#x8FD9;&#x4E2A;&#x914D;&#x7F6E;&#x9879;&#x3002;</p><p>&#x4F46;&#x662F;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x4ED6;&#x4EBA;&#x4E0D;&#x77E5;&#x9053;&#x8FD9;&#x4E2A;&#x60C5;&#x51B5;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x6700;&#x597D;&#x4E3B;&#x52A8;&#x505A;&#x4E00;&#x6B21;&#x68C0;&#x6D4B;&#xFF0C;&#x5728;&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x7684;build.gradle&#x52A0;&#x5165;&#x68C0;&#x6D4B;&#x4EE3;&#x7801;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">allprojects</span>.<span class="keyword">each</span> {<span class="keyword">project</span> -&gt;</span><br><span class="line">    <span class="keyword">project</span>.afterEvaluate {</span><br><span class="line">        <span class="keyword">def</span> uploadArchivesTask = <span class="keyword">project</span>.tasks.findByName(<span class="string">&quot;uploadArchives&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> (uploadArchivesTask) {</span><br><span class="line">            uploadArchivesTask.<span class="keyword">doFirst</span> {</span><br><span class="line">                <span class="keyword">if</span> (isDebug()) {</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;uploadArchives must disable debug options in local.properties first!&quot;</span>)</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4E00;&#x65E6;&#x8FD0;&#x884C;uploadArchives&#x8FD9;&#x4E2A;Task&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;&#x662F;debug&#xFF0C;&#x5219;&#x76F4;&#x63A5;&#x6254;&#x5F02;&#x5E38;&#xFF0C;&#x4E0D;&#x8BA9;&#x5176;&#x53D1;&#x5E03;&#x3002;</p>]]></content>
      <categories>
        <category>NDK</category>
      </categories>
      <tags>
        <tag>NDK</tag>
        <tag>Debug</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 在 NDK 层使用 OpenSSL 进行 RSA 加密</title>
    <url>/2017/04/09/Android%E5%9C%A8NDK%E5%B1%82%E4%BD%BF%E7%94%A8OpenSSL%E8%BF%9B%E8%A1%8CRSA%E5%8A%A0%E5%AF%86/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p><strong>&#x9700;&#x6C42;&#xFF1A;</strong>&#x9700;&#x8981;&#x5728;NDK&#x5C42;&#x5BF9;&#x4E00;&#x4E2A;Java&#x5C42;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x8FDB;&#x884C;RSA&#x52A0;&#x5BC6;&#xFF0C;&#x7136;&#x540E;&#x5BF9;&#x52A0;&#x5BC6;&#x7684;&#x7ED3;&#x679C;&#x8FDB;&#x884C;Base64&#x8FD4;&#x56DE;&#x5230;Java&#x5C42;<br><strong>&#x65B9;&#x6848;&#xFF1A;</strong>&#x9009;&#x62E9;&#x4F7F;&#x7528;OpenSSL&#x6765;&#x5B9E;&#x73B0;&#x3002;</p><a id="more"></a><h3 id="&#x7F16;&#x8BD1;libssl-a&#x548C;libcrypto-a&#x9759;&#x6001;&#x5E93;"><a href="#&#x7F16;&#x8BD1;libssl-a&#x548C;libcrypto-a&#x9759;&#x6001;&#x5E93;" class="headerlink" title="&#x7F16;&#x8BD1;libssl.a&#x548C;libcrypto.a&#x9759;&#x6001;&#x5E93;"></a>&#x7F16;&#x8BD1;libssl.a&#x548C;libcrypto.a&#x9759;&#x6001;&#x5E93;</h3><p>&#x5728;github&#x4E0A;&#x627E;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5C06;OpenSSL&#x7F16;&#x8BD1;&#x6210;Android&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7684;&#xFF0C;&#x9879;&#x76EE;&#x5730;&#x5740;&#x4E3A;</p><ul><li><a href="https://github.com/leenjewel/openssl_for_ios_and_android" target="_blank" rel="noopener">openssl_for_ios_and_android</a></li></ul><p>&#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x9879;&#x76EE;&#x6709;&#x70B9;&#x5C0F;&#x95EE;&#x9898;&#xFF0C;&#x90E8;&#x5206;&#x7F16;&#x8BD1;&#x811A;&#x672C;&#x9700;&#x8981;&#x505A;&#x70B9;&#x6539;&#x52A8;&#xFF0C;&#x6539;&#x52A8;&#x540E;&#x7684;&#x9879;&#x76EE;&#x89C1;</p><ul><li><a href="https://github.com/lizhangqu/openssl_for_ios_and_android" target="_blank" rel="noopener">openssl_for_ios_and_android</a></li></ul><p>&#x4E3B;&#x8981;&#x505A;&#x4E86;3&#x4E2A;&#x6539;&#x52A8;:</p><ol><li>&#x5C06;&#x6700;&#x4F4E;&#x7248;&#x672C;&#x652F;&#x6301;&#x4ECE;Android 21&#x6539;&#x5230;&#x4E86;Android 14</li><li>&#x4FEE;&#x590D;&#x4E00;&#x4E2A;armeabi-v7a&#x65E0;&#x6CD5;&#x7F16;&#x8BD1;&#x51FA;&#x6765;&#x7684;&#x95EE;&#x9898;</li><li>&#x5347;&#x7EA7;&#x4E86;openssl&#x7684;&#x7248;&#x672C;&#x5230;openssl-1.1.0e</li></ol><p>&#x4E4B;&#x540E;&#x5C06;&#x9879;&#x76EE;clone&#x4E0B;&#x6765;&#xFF0C;&#x8FDB;&#x5165;&#x5230;tools&#x76EE;&#x5F55;&#xFF0C;&#x6267;&#x884C;build-openssl4android.sh&#x7F16;&#x8BD1;&#x811A;&#x672C;</p><figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line">./<span class="keyword">build-openssl4android.sh </span><span class="keyword">android-armeabi </span>armeabi-v7a</span><br><span class="line">./<span class="keyword">build-openssl4android.sh </span><span class="keyword">android </span>armeabi</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x91CC;&#x53EA;&#x7F16;&#x8BD1;&#x4E86;armeabi-va7&#x548C;armeabi&#x67B6;&#x6784;CPU&#x7684;so&#xFF0C;&#x5982;&#x679C;&#x6709;&#x9700;&#x8981;&#xFF0C;&#x8BF7;&#x81EA;&#x884C;&#x66F4;&#x6539;&#x547D;&#x4EE4;&#x53C2;&#x6570;&#x7F16;&#x8BD1;X86&#x7B49;&#x67B6;&#x6784;&#x7684;so&#x3002;</p><p>&#x7ECF;&#x8FC7;&#x5F88;&#x957F;&#x65F6;&#x95F4;&#x7684;&#x7F16;&#x8BD1;&#x3002;&#x3002;&#x3002;&#x5927;&#x6982;&#x8981;10&#x6765;&#x5206;&#x949F;&#x5427;&#x3002;&#x3002;&#x3002;&#x5728;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#x7684;output&#x4F1A;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;android&#x76EE;&#x5F55;&#xFF0C;&#x91CC;&#x9762;&#x6709;openssl-armeabi&#x548C;openssl-armeabi-v7a&#x4E24;&#x4E2A;&#x6587;&#x4EF6;&#x5939;&#xFF0C;&#x5305;&#x542B;&#x4E86;openssl&#x7684;&#x5934;&#x6587;&#x4EF6;&#x4EE5;&#x53CA;&#x7F16;&#x8BD1;&#x597D;&#x7684;.a&#x9759;&#x6001;&#x5E93;</p><h3 id="&#x5B9E;&#x73B0;JNI&#x51FD;&#x6570;"><a href="#&#x5B9E;&#x73B0;JNI&#x51FD;&#x6570;" class="headerlink" title="&#x5B9E;&#x73B0;JNI&#x51FD;&#x6570;"></a>&#x5B9E;&#x73B0;JNI&#x51FD;&#x6570;</h3><p>&#x7F16;&#x8BD1;&#x597D;&#x540E;.a&#x9759;&#x6001;&#x5E93;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x521B;&#x5EFA;jni&#x9879;&#x76EE;&#x4E86;</p><h4 id="&#x8FDB;&#x5165;jni&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x521B;&#x5EFA;Application-mk&#x6587;&#x4EF6;"><a href="#&#x8FDB;&#x5165;jni&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x521B;&#x5EFA;Application-mk&#x6587;&#x4EF6;" class="headerlink" title="&#x8FDB;&#x5165;jni&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x521B;&#x5EFA;Application.mk&#x6587;&#x4EF6;"></a>&#x8FDB;&#x5165;jni&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x521B;&#x5EFA;Application.mk&#x6587;&#x4EF6;</h4><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">APP_ABI := armeabi armeabi-v7a</span><br><span class="line">APP_PLATFORM := android-14</span><br><span class="line">APP_OPTIM := release</span><br><span class="line">APP_STL := c++_static</span><br><span class="line"></span><br><span class="line">APP_THIN_ARCHIVE := true</span><br><span class="line">APP_CPPFLAGS := -fpic -fexceptions -frtti</span><br><span class="line">APP_GNUSTL_FORCE_CPP_FEATURES := pic exceptions rtti</span><br></pre></td></tr></table></figure><h3 id="&#x8FDB;&#x5165;jni&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x521B;&#x5EFA;Android-mk&#x6587;&#x4EF6;"><a href="#&#x8FDB;&#x5165;jni&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x521B;&#x5EFA;Android-mk&#x6587;&#x4EF6;" class="headerlink" title="&#x8FDB;&#x5165;jni&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x521B;&#x5EFA;Android.mk&#x6587;&#x4EF6;"></a>&#x8FDB;&#x5165;jni&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x521B;&#x5EFA;Android.mk&#x6587;&#x4EF6;</h3><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">LOCAL_PATH := <span class="variable">$(<span class="built_in">call</span> my-<span class="built_in">dir</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x5F15;&#x7528;libcrypto.a</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line">LOCAL_MODULE := libcrypto</span><br><span class="line">LOCAL_SRC_FILES := <span class="variable">$(LOCAL_PATH)</span>/openssl/<span class="variable">$(TARGET_ARCH_ABI)</span>/lib/libcrypto.a</span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(PREBUILT_STATIC_LIBRARY)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x5F15;&#x7528;libssl.a</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line">LOCAL_MODULE := libssl</span><br><span class="line">LOCAL_SRC_FILES := <span class="variable">$(LOCAL_PATH)</span>/openssl/<span class="variable">$(TARGET_ARCH_ABI)</span>/lib/libssl.a</span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(PREBUILT_STATIC_LIBRARY)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LOCAL_MODULE    		:= test</span><br><span class="line">LOCAL_SRC_FILES 		:= \</span><br><span class="line">native.cpp \</span><br><span class="line"></span><br><span class="line">LOCAL_C_INCLUDES        :=<span class="variable">$(LOCAL_PATH)</span>/openssl/openssl-<span class="variable">$(TARGET_ARCH_ABI)</span>/<span class="keyword">include</span></span><br><span class="line"></span><br><span class="line">TARGET_PLATFORM         := android-14</span><br><span class="line"></span><br><span class="line"><span class="comment">#&#x9759;&#x6001;&#x5E93;&#x4F9D;&#x8D56;</span></span><br><span class="line">LOCAL_STATIC_LIBRARIES  := libssl libcrypto</span><br><span class="line"></span><br><span class="line">LOCAL_LDLIBS += -latomic -lz -llog</span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(BUILD_SHARED_LIBRARY)</span></span><br></pre></td></tr></table></figure><h4 id="&#x8FDB;&#x5165;jni&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x62F7;&#x8D1D;&#x7F16;&#x8BD1;&#x597D;&#x7684;openssl&#x6587;&#x4EF6;"><a href="#&#x8FDB;&#x5165;jni&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x62F7;&#x8D1D;&#x7F16;&#x8BD1;&#x597D;&#x7684;openssl&#x6587;&#x4EF6;" class="headerlink" title="&#x8FDB;&#x5165;jni&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x62F7;&#x8D1D;&#x7F16;&#x8BD1;&#x597D;&#x7684;openssl&#x6587;&#x4EF6;"></a>&#x8FDB;&#x5165;jni&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x62F7;&#x8D1D;&#x7F16;&#x8BD1;&#x597D;&#x7684;openssl&#x6587;&#x4EF6;</h4><p>&#x63A5;&#x7740;&#x5C06;&#x7B2C;&#x4E00;&#x6B65;&#x7F16;&#x8BD1;&#x597D;&#x7684;&#x9759;&#x6001;&#x5E93;&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x62F7;&#x8D1D;&#xFF0C;&#x5C06;output&#x76EE;&#x5F55;&#x4E0B;android&#x6574;&#x4E2A;&#x76EE;&#x5F55;&#x8FDB;&#x884C;&#x62F7;&#x8D1D;&#xFF0C;&#x62F7;&#x8D1D;&#x5230;jni&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x62F7;&#x8D1D;&#x5B8C;&#x6210;&#x540E;&#x5C06;android&#x76EE;&#x5F55;&#x91CD;&#x547D;&#x540D;&#x4E3A;openssl</p><h4 id="&#x8FDB;&#x5165;jni&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x521B;&#x5EFA;native-cpp&#xFF0C;&#x642D;&#x5EFA;&#x57FA;&#x7840;&#x7684;&#x7ED3;&#x6784;"><a href="#&#x8FDB;&#x5165;jni&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x521B;&#x5EFA;native-cpp&#xFF0C;&#x642D;&#x5EFA;&#x57FA;&#x7840;&#x7684;&#x7ED3;&#x6784;" class="headerlink" title="&#x8FDB;&#x5165;jni&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x521B;&#x5EFA;native.cpp&#xFF0C;&#x642D;&#x5EFA;&#x57FA;&#x7840;&#x7684;&#x7ED3;&#x6784;"></a>&#x8FDB;&#x5165;jni&#x9879;&#x76EE;&#x6839;&#x76EE;&#x5F55;&#xFF0C;&#x521B;&#x5EFA;native.cpp&#xFF0C;&#x642D;&#x5EFA;&#x57FA;&#x7840;&#x7684;&#x7ED3;&#x6784;</h4><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;jni.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T, <span class="keyword">int</span> N&gt;</span><br><span class="line"><span class="keyword">char</span> (&amp;ArraySizeHelper(T (&amp;<span class="built_in">array</span>)[N]))[N];</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NELEMS(x) (sizeof(ArraySizeHelper(x)))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> CLASSNAME</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CLASSNAME <span class="meta-string">&quot;com/fucknmb/Test&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">jstring <span class="title">native_rsa</span><span class="params">(JNIEnv *env, jobject thiz, jstring base64PublicKey, jstring content)</span> </span>{</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> JNINativeMethod sMethods[] = {</span><br><span class="line">    {</span><br><span class="line">        <span class="keyword">const_cast</span>&lt;<span class="keyword">char</span> *&gt;(<span class="string">&quot;native_rsa&quot;</span>),</span><br><span class="line">        <span class="keyword">const_cast</span>&lt;<span class="keyword">char</span> *&gt;(<span class="string">&quot;(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;&quot;</span>),</span><br><span class="line">        <span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">void</span> *&gt;(native_rsa)</span><br><span class="line">    }</span><br><span class="line">};</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">registerNativeMethods</span><span class="params">(JNIEnv *env, <span class="keyword">const</span> <span class="keyword">char</span> *className, <span class="keyword">const</span> JNINativeMethod *methods,</span></span></span><br><span class="line"><span class="function"><span class="params">                          <span class="keyword">const</span> <span class="keyword">int</span> numMethods)</span> </span>{</span><br><span class="line">    jclass clazz = env-&gt;FindClass(className);</span><br><span class="line">    <span class="keyword">if</span> (!clazz) {</span><br><span class="line">        <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">if</span> (env-&gt;RegisterNatives(clazz, methods, numMethods) != <span class="number">0</span>) {</span><br><span class="line">        env-&gt;DeleteLocalRef(clazz);</span><br><span class="line">        <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    }</span><br><span class="line">    env-&gt;DeleteLocalRef(clazz);</span><br><span class="line">    <span class="keyword">return</span> JNI_TRUE;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function">jint <span class="title">JNI_OnLoad</span><span class="params">(JavaVM *vm, <span class="keyword">void</span> *reserved)</span> </span>{</span><br><span class="line">    JNIEnv *env;</span><br><span class="line">    <span class="keyword">if</span> (vm-&gt;GetEnv(<span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">void</span> **&gt;(&amp;env), JNI_VERSION_1_6) != JNI_OK) {</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    }</span><br><span class="line">    registerNativeMethods(env, CLASSNAME, sMethods, NELEMS(sMethods));</span><br><span class="line">    <span class="keyword">return</span> JNI_VERSION_1_6;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h4 id="&#x58F0;&#x660E;java&#x5C42;&#x51FD;&#x6570;"><a href="#&#x58F0;&#x660E;java&#x5C42;&#x51FD;&#x6570;" class="headerlink" title="&#x58F0;&#x660E;java&#x5C42;&#x51FD;&#x6570;"></a>&#x58F0;&#x660E;java&#x5C42;&#x51FD;&#x6570;</h4><p>&#x5728;Java&#x5C42;&#x521B;&#x5EFA;com/fucknmb/Test&#x7C7B;&#xFF0C;&#x58F0;&#x660E;&#x4E00;&#x4E2A;native&#x51FD;&#x6570;</p><figure class="highlight haxe"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.fucknmb;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>{</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> native final <span class="keyword">String</span> native_rsa(<span class="keyword">String</span> base64PublicKey, <span class="keyword">String</span> content);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> {</span><br><span class="line">        System.loadLibrary(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h4 id="&#x5B9E;&#x73B0;native-rsa&#x51FD;&#x6570;"><a href="#&#x5B9E;&#x73B0;native-rsa&#x51FD;&#x6570;" class="headerlink" title="&#x5B9E;&#x73B0;native_rsa&#x51FD;&#x6570;"></a>&#x5B9E;&#x73B0;native_rsa&#x51FD;&#x6570;</h4><p>native_rsa&#x51FD;&#x6570;&#x6709;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;base64&#x4E4B;&#x540E;&#x7684;&#x516C;&#x94A5;&#xFF08;&#x4E0D;&#x542B;&#x5934;&#x90E8;&#x548C;&#x5C3E;&#x90E8;&#xFF0C;&#x4EE5;&#x53CA;&#x6CA1;&#x6362;&#x884C;&#xFF09;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x662F;&#x5F85;&#x52A0;&#x5BC6;&#x7684;&#x660E;&#x6587;&#x5185;&#x5BB9;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x662F;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x5BC6;&#x6587;&#x8FDB;&#x884C;base64&#x3002;</p><p>&#x5BF9;&#x4E8E;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5C06;&#x5176;&#x8F6C;&#x4E3A;&#x516C;&#x94A5;&#x6587;&#x4EF6;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x8FFD;&#x52A0;&#x5934;&#x90E8;&#x548C;&#x5C3E;&#x90E8;&#xFF0C;&#x5176;&#x5B9E;&#x73B0;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x6839;&#x636E;&#x516C;&#x94A5;base64&#x5B57;&#x7B26;&#x4E32;&#xFF08;&#x6CA1;&#x6362;&#x884C;&#xFF09;&#x751F;&#x6210;&#x516C;&#x94A5;&#x6587;&#x672C;&#x5185;&#x5BB9;</span></span><br><span class="line"><span class="comment"> * @param base64EncodedKey</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">generatePublicKey</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">string</span> base64EncodedKey)</span> </span>{</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> publicKey = base64EncodedKey;</span><br><span class="line">    <span class="keyword">size_t</span> base64Length = <span class="number">64</span>;<span class="comment">//&#x6BCF;64&#x4E2A;&#x5B57;&#x7B26;&#x4E00;&#x884C;</span></span><br><span class="line">    <span class="keyword">size_t</span> publicKeyLength = base64EncodedKey.size();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = base64Length; i &lt; publicKeyLength; i += base64Length) {</span><br><span class="line">        <span class="comment">//&#x6BCF;base64Length&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x6362;&#x884C;</span></span><br><span class="line">        <span class="keyword">if</span> (base64EncodedKey[i] != <span class="string">&apos;\n&apos;</span>) {</span><br><span class="line">            publicKey.insert(i, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        }</span><br><span class="line">        i++;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x6700;&#x524D;&#x9762;&#x8FFD;&#x52A0;&#x516C;&#x94A5;begin&#x5B57;&#x7B26;&#x4E32;</span></span><br><span class="line">    publicKey.insert(<span class="number">0</span>, <span class="string">&quot;-----BEGIN PUBLIC KEY-----\n&quot;</span>);</span><br><span class="line">    <span class="comment">//&#x6700;&#x524D;&#x9762;&#x8FFD;&#x52A0;&#x516C;&#x94A5;end&#x5B57;&#x7B26;&#x4E32;</span></span><br><span class="line">    publicKey.append(<span class="string">&quot;\n-----END PUBLIC KEY-----&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> publicKey;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>openssl rsa&#x52A0;&#x5BC6;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5BF9;&#x5BC6;&#x6587;&#x8FDB;&#x884C;Base64&#xFF0C;openssl&#x540C;&#x6837;&#x63D0;&#x4F9B;&#x4E86;Base64&#x7B97;&#x6CD5;&#xFF0C;&#x5B9E;&#x73B0;&#x5982;&#x4E0B;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * base64 encode</span></span><br><span class="line"><span class="comment"> * @param decoded_bytes</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">std::<span class="built_in">string</span> base64<span class="constructor">_encode(<span class="params">const</span> <span class="params">std</span>::<span class="params">string</span> &amp;<span class="params">decoded_bytes</span>)</span> {</span><br><span class="line">    BIO *bio, *b64;</span><br><span class="line">    BUF_MEM *bufferPtr;</span><br><span class="line"></span><br><span class="line">    b64 = <span class="constructor">BIO_new(BIO_f_base64()</span>);</span><br><span class="line">    <span class="comment">//&#x4E0D;&#x6362;&#x884C;</span></span><br><span class="line">    <span class="constructor">BIO_set_flags(<span class="params">b64</span>, BIO_FLAGS_BASE64_NO_NL)</span>;</span><br><span class="line">    bio = <span class="constructor">BIO_new(BIO_s_mem()</span>);</span><br><span class="line">    bio = <span class="constructor">BIO_push(<span class="params">b64</span>, <span class="params">bio</span>)</span>;</span><br><span class="line">    <span class="comment">//encode</span></span><br><span class="line">    <span class="constructor">BIO_write(<span class="params">bio</span>, <span class="params">decoded_bytes</span>.<span class="params">c_str</span>()</span>, (<span class="built_in">int</span>) decoded_bytes.length<span class="literal">()</span>);</span><br><span class="line">    <span class="constructor">BIO_flush(<span class="params">bio</span>)</span>;</span><br><span class="line">    <span class="constructor">BIO_get_mem_ptr(<span class="params">bio</span>, &amp;<span class="params">bufferPtr</span>)</span>;</span><br><span class="line">    <span class="comment">//&#x8FD9;&#x91CC;&#x7684;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x5F88;&#x91CD;&#x8981;&#xFF0C;&#x5FC5;&#x987B;&#x8D4B;&#x503C;</span></span><br><span class="line">    std::<span class="built_in">string</span> result(bufferPtr-&gt;data, bufferPtr-&gt;length);</span><br><span class="line">    <span class="constructor">BIO_free_all(<span class="params">bio</span>)</span>;</span><br><span class="line">    return result;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p><strong>&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x6709;&#x4E00;&#x70B9;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x5C31;&#x662F;&#x8FD9;&#x4E00;&#x884C;</strong></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">result</span><span class="params">(bufferPtr-&gt;data, bufferPtr-&gt;length)</span></span>;</span><br></pre></td></tr></table></figure><p><strong>&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x8868;&#x793A;&#x957F;&#x5EA6;&#xFF0C;&#x4E0D;&#x80FD;&#x5C11;&#xFF0C;&#x5426;&#x5219;base64&#x540E;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;&#x4F1A;&#x51FA;&#x73B0;&#x5F02;&#x5E38;&#xFF0C;&#x5BFC;&#x81F4;decode&#x7684;&#x65F6;&#x5019;&#x672B;&#x5C3E;&#x4F1A;&#x51FA;&#x73B0;&#x4E00;&#x5927;&#x5806;&#x7684;&#x4E71;&#x7801;&#xFF0C;&#x800C;&#x7F51;&#x4E0A;&#x5927;&#x591A;&#x6570;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x662F;&#x7F3A;&#x5931;&#x8FD9;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x3002;</strong></p><p>&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x662F;rsa&#x7684;&#x5B9E;&#x73B0;&#x4E86;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x4F7F;&#x7528;&#x516C;&#x94A5;&#x5BF9;&#x660E;&#x6587;&#x52A0;&#x5BC6;</span></span><br><span class="line"><span class="comment"> * @param publicKey</span></span><br><span class="line"><span class="comment"> * @param from</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">std::<span class="built_in">string</span> encrypt<span class="constructor">RSA(<span class="params">const</span> <span class="params">std</span>::<span class="params">string</span> &amp;<span class="params">publicKey</span>, <span class="params">const</span> <span class="params">std</span>::<span class="params">string</span> &amp;<span class="params">from</span>)</span> {</span><br><span class="line">    BIO *bio = NULL;</span><br><span class="line">    RSA *rsa_public_key = NULL;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x4ECE;&#x5B57;&#x7B26;&#x4E32;&#x8BFB;&#x53D6;RSA&#x516C;&#x94A5;&#x4E32;</span></span><br><span class="line">    <span class="keyword">if</span> ((bio = <span class="constructor">BIO_new_mem_buf((<span class="params">void</span> <span class="operator">*</span>)</span> publicKey.c<span class="constructor">_str()</span>, -<span class="number">1</span>))<span class="operator"> == </span>NULL) {</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;BIO_new_mem_buf failed!&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        return <span class="string">&quot;&quot;</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x8BFB;&#x53D6;&#x516C;&#x94A5;</span></span><br><span class="line">    rsa_public_key = <span class="constructor">PEM_read_bio_RSA_PUBKEY(<span class="params">bio</span>, NULL, NULL, NULL)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x5F02;&#x5E38;&#x5904;&#x7406;</span></span><br><span class="line">    <span class="keyword">if</span> (rsa_public_key<span class="operator"> == </span>NULL) {</span><br><span class="line">        <span class="comment">//&#x8D44;&#x6E90;&#x91CA;&#x653E;</span></span><br><span class="line">        <span class="constructor">BIO_free_all(<span class="params">bio</span>)</span>;</span><br><span class="line">        <span class="comment">//&#x6E05;&#x9664;&#x7BA1;&#x7406;CRYPTO_EX_DATA&#x7684;&#x5168;&#x5C40;hash&#x8868;&#x4E2D;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x907F;&#x514D;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;</span></span><br><span class="line">        <span class="constructor">CRYPTO_cleanup_all_ex_data()</span>;</span><br><span class="line">        return <span class="string">&quot;&quot;</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//rsa&#x6A21;&#x7684;&#x4F4D;&#x6570;</span></span><br><span class="line">    <span class="built_in">int</span> rsa_size = <span class="constructor">RSA_size(<span class="params">rsa_public_key</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//RSA_PKCS1_PADDING &#x6700;&#x5927;&#x52A0;&#x5BC6;&#x957F;&#x5EA6; &#x4E3A; 128 -11</span></span><br><span class="line">    <span class="comment">//RSA_NO_PADDING &#x6700;&#x5927;&#x52A0;&#x5BC6;&#x957F;&#x5EA6;&#x4E3A;  128</span></span><br><span class="line">    <span class="comment">//rsa_size = rsa_size - RSA_PKCS1_PADDING_SIZE;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x52A8;&#x6001;&#x5206;&#x914D;&#x5185;&#x5B58;&#xFF0C;&#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x5BC6;&#x6587;</span></span><br><span class="line">    unsigned <span class="built_in">char</span> *<span class="keyword">to</span> = (unsigned <span class="built_in">char</span> *) malloc(rsa_size + <span class="number">1</span>);</span><br><span class="line">    <span class="comment">//&#x586B;&#x5145;0</span></span><br><span class="line">    memset(<span class="keyword">to</span>, <span class="number">0</span>, rsa_size + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x660E;&#x6587;&#x957F;&#x5EA6;</span></span><br><span class="line">    <span class="built_in">int</span> flen = from.length<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x52A0;&#x5BC6;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x4E3A;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x5BC6;&#x6587;&#x957F;&#x5EA6;&#xFF0C;-1&#x8868;&#x793A;&#x5931;&#x8D25;</span></span><br><span class="line">    <span class="built_in">int</span> status = <span class="constructor">RSA_public_encrypt(<span class="params">flen</span>, (<span class="params">const</span> <span class="params">unsigned</span> <span class="params">char</span> <span class="operator">*</span>)</span> from.c<span class="constructor">_str()</span>, <span class="keyword">to</span>, rsa_public_key,</span><br><span class="line">                                    RSA_PKCS1_PADDING);</span><br><span class="line">    <span class="comment">//&#x5F02;&#x5E38;&#x5904;&#x7406;</span></span><br><span class="line">    <span class="keyword">if</span> (status &lt; <span class="number">0</span>) {</span><br><span class="line">        <span class="comment">//&#x8D44;&#x6E90;&#x91CA;&#x653E;</span></span><br><span class="line">        free(<span class="keyword">to</span>);</span><br><span class="line">        <span class="constructor">BIO_free_all(<span class="params">bio</span>)</span>;</span><br><span class="line">        <span class="constructor">RSA_free(<span class="params">rsa_public_key</span>)</span>;</span><br><span class="line">        <span class="comment">//&#x6E05;&#x9664;&#x7BA1;&#x7406;CRYPTO_EX_DATA&#x7684;&#x5168;&#x5C40;hash&#x8868;&#x4E2D;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x907F;&#x514D;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;</span></span><br><span class="line">        <span class="constructor">CRYPTO_cleanup_all_ex_data()</span>;</span><br><span class="line">        return <span class="string">&quot;&quot;</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x8D4B;&#x503C;&#x5BC6;&#x6587;</span></span><br><span class="line">    static std::<span class="built_in">string</span> result((<span class="built_in">char</span> *) <span class="keyword">to</span>, status);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x8D44;&#x6E90;&#x91CA;&#x653E;</span></span><br><span class="line">    free(<span class="keyword">to</span>);</span><br><span class="line">    <span class="constructor">BIO_free_all(<span class="params">bio</span>)</span>;</span><br><span class="line">    <span class="constructor">RSA_free(<span class="params">rsa_public_key</span>)</span>;</span><br><span class="line">    <span class="comment">//&#x6E05;&#x9664;&#x7BA1;&#x7406;CRYPTO_EX_DATA&#x7684;&#x5168;&#x5C40;hash&#x8868;&#x4E2D;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x907F;&#x514D;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;</span></span><br><span class="line">    <span class="constructor">CRYPTO_cleanup_all_ex_data()</span>;</span><br><span class="line">    return result;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p><strong>&#x540C;&#x6837;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x4E5F;&#x6709;&#x51E0;&#x4E2A;&#x5730;&#x65B9;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF1A;</strong></p><p><strong>&#x7B2C;&#x4E00;&#x70B9;&#xFF1A;</strong></p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">result</span><span class="params">((<span class="keyword">char</span> *) to, status)</span></span>;</span><br></pre></td></tr></table></figure><p><strong>&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x8868;&#x793A;&#x5BC6;&#x6587;&#x957F;&#x5EA6;&#xFF0C;&#x4E00;&#x822C;&#x6765;&#x8BF4;&#xFF0C;&#x8FD9;&#x4E2A;&#x503C;&#x4F1A;&#x662F;128&#xFF0C;&#x5982;&#x679C;&#x7B2C;&#x4E8C;&#x4E2A;&#x503C;&#x4E0D;&#x4F20;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x5BC6;&#x6587;&#x7ECF;&#x8FC7;string&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x540E;&#xFF0C;&#x4E22;&#x5931;&#x4E00;&#x90E8;&#x5206;&#x6570;&#x636E;&#xFF0C;&#x5BFC;&#x81F4;&#x6570;&#x636E;&#x7684;&#x4E0D;&#x6B63;&#x786E;</strong></p><p><del><strong>&#x7B2C;&#x4E8C;&#x70B9;:</strong></del></p><figure class="highlight autohotkey"><table><tr><td class="code"><pre><span class="line">rs<span class="built_in">a_size</span> = rs<span class="built_in">a_size</span> - RS<span class="built_in">A_PKCS1</span>_PADDING_SIZE<span class="comment">;</span></span><br></pre></td></tr></table></figure><p><del><strong>&#x5BF9;&#x4E8E;RSA_PKCS1_PADDING_SIZE&#xFF0C;&#x6700;&#x5927;&#x52A0;&#x5BC6;&#x957F;&#x5EA6;&#x4E3A;&#x9700;&#x8981;&#x51CF;&#x53BB;11</strong></del></p><p><strong>2017.7.17&#x4FEE;&#x6539;&#xFF0C;&#x7B2C;&#x4E8C;&#x70B9;&#x7ECF;&#x8FC7;&#x8BD5;&#x9A8C;&#xFF0C;&#x5E9F;&#x5F03;!</strong></p><p><strong>&#x7B2C;&#x4E09;&#x70B9;:</strong></p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">//&#x660E;&#x6587;&#x957F;&#x5EA6;</span></span><br><span class="line"><span class="built_in">int</span> flen = from.length<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//&#x52A0;&#x5BC6;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x4E3A;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x5BC6;&#x6587;&#x957F;&#x5EA6;&#xFF0C;-1&#x8868;&#x793A;&#x5931;&#x8D25;</span></span><br><span class="line"><span class="built_in">int</span> status = <span class="constructor">RSA_public_encrypt(<span class="params">flen</span>, (<span class="params">const</span> <span class="params">unsigned</span> <span class="params">char</span> <span class="operator">*</span>)</span> from.c<span class="constructor">_str()</span>, <span class="keyword">to</span>, rsa_public_key,</span><br><span class="line">                                RSA_PKCS1_PADDING);</span><br></pre></td></tr></table></figure><p><strong>RSA_public_encrypt&#x51FD;&#x6570;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x4F20;&#x7684;&#x662F;&#x660E;&#x6587;&#x957F;&#x5EA6;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x6700;&#x5927;&#x52A0;&#x5BC6;&#x957F;&#x5EA6;rsa_size&#xFF0C;&#x7F51;&#x4E0A;&#x7684;&#x6240;&#x6709;&#x4EE3;&#x7801;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x90FD;&#x662F;&#x4F20;&#x9519;&#x7684;&#xFF0C;&#x4F20;&#x4E86;rsa_size&#xFF0C;&#x800C;&#x5B9E;&#x9645;&#x4E0A;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x53C2;&#x6570;&#x540D;&#x662F;flen&#xFF0C;&#x8868;&#x793A;from&#x5B57;&#x7B26;&#x4E32;&#x7684;length&#x3002;&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x4F20;&#x4E86;&#x6700;&#x5927;&#x52A0;&#x5BC6;&#x957F;&#x5EA6;&#xFF0C;&#x5C06;&#x76F4;&#x63A5;&#x5BFC;&#x81F4;java&#x5C42;&#x65E0;&#x6CD5;&#x6B63;&#x786E;&#x89E3;&#x5BC6;JNI&#x5C42;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x6570;&#x636E;&#x3002;</strong></p><p>&#x6700;&#x540E;&#x4E0D;&#x8981;&#x5FD8;&#x8BB0;&#x52A0;&#x5934;&#x6587;&#x4EF6;&#x7684;&#x5F15;&#x7528;</p><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/bio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/buffer.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/evp.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/rsa.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;openssl/pem.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line">using std::<span class="built_in">string</span><span class="comment">;</span></span><br></pre></td></tr></table></figure><p>&#x9700;&#x8981;&#x7684;&#x51FD;&#x6570;&#x90FD;&#x6709;&#x4E86;&#xFF0C;&#x5B9E;&#x73B0;&#x4EE5;&#x4E0B;native_rsa&#x51FD;&#x6570;&#xFF0C;&#x7B80;&#x5355;&#x7EC4;&#x88C5;&#x4E00;&#x4E0B;&#x4EE5;&#x4E0A;&#x51FD;&#x6570;&#x5373;&#x53EF;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">jstring native<span class="constructor">_rsa(JNIEnv <span class="operator">*</span><span class="params">env</span>, <span class="params">jobject</span> <span class="params">thiz</span>, <span class="params">jstring</span> <span class="params">base64PublicKey</span>, <span class="params">jstring</span> <span class="params">content</span>)</span> {</span><br><span class="line">    <span class="comment">//jstring &#x8F6C; char*</span></span><br><span class="line">    <span class="built_in">char</span> *base64PublicKeyChars = (<span class="built_in">char</span> *) env-&gt;<span class="constructor">GetStringUTFChars(<span class="params">base64PublicKey</span>, NULL)</span>;</span><br><span class="line">    <span class="comment">//char* &#x8F6C; string</span></span><br><span class="line">    <span class="built_in">string</span> base64PublicKeyString = <span class="built_in">string</span>(base64PublicKeyChars);</span><br><span class="line">    <span class="comment">//&#x751F;&#x6210;&#x516C;&#x94A5;&#x5B57;&#x7B26;&#x4E32;</span></span><br><span class="line">    <span class="built_in">string</span> generatedPublicKey = generate<span class="constructor">PublicKey(<span class="params">base64PublicKeyString</span>)</span>;</span><br><span class="line">    <span class="comment">//&#x91CA;&#x653E;</span></span><br><span class="line">    env-&gt;<span class="constructor">ReleaseStringUTFChars(<span class="params">base64PublicKey</span>, <span class="params">base64PublicKeyChars</span>)</span>;</span><br><span class="line">    <span class="comment">//jstring &#x8F6C; char*</span></span><br><span class="line">    <span class="built_in">char</span> *contentChars = (<span class="built_in">char</span> *) env-&gt;<span class="constructor">GetStringUTFChars(<span class="params">content</span>, NULL)</span>;</span><br><span class="line">    <span class="comment">//char* &#x8F6C; string</span></span><br><span class="line">    <span class="built_in">string</span> contentString = <span class="built_in">string</span>(contentChars);</span><br><span class="line">    <span class="comment">//&#x91CA;&#x653E;</span></span><br><span class="line">    env-&gt;<span class="constructor">ReleaseStringUTFChars(<span class="params">content</span>, <span class="params">contentChars</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x8C03;&#x7528;RSA&#x52A0;&#x5BC6;&#x51FD;&#x6570;&#x52A0;&#x5BC6;</span></span><br><span class="line">    <span class="built_in">string</span> rsaResult = encrypt<span class="constructor">RSA(<span class="params">generatedPublicKey</span>, <span class="params">contentString</span>)</span>;</span><br><span class="line">    <span class="keyword">if</span> (rsaResult.empty<span class="literal">()</span>) {</span><br><span class="line">        return NULL;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x5C06;&#x5BC6;&#x6587;&#x8FDB;&#x884C;base64</span></span><br><span class="line">    <span class="built_in">string</span> base64RSA = base64<span class="constructor">_encode(<span class="params">rsaResult</span>)</span>;</span><br><span class="line">    <span class="keyword">if</span> (base64RSA.empty<span class="literal">()</span>) {</span><br><span class="line">        return NULL;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//string -&gt; char* -&gt; jstring &#x8FD4;&#x56DE;</span></span><br><span class="line">    jstring result = env-&gt;<span class="constructor">NewStringUTF(<span class="params">base64RSA</span>.<span class="params">c_str</span>()</span>);</span><br><span class="line">    return result;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h4 id="&#x79C1;&#x94A5;&#x89E3;&#x5BC6;"><a href="#&#x79C1;&#x94A5;&#x89E3;&#x5BC6;" class="headerlink" title="&#x79C1;&#x94A5;&#x89E3;&#x5BC6;"></a>&#x79C1;&#x94A5;&#x89E3;&#x5BC6;</h4><p>&#x5982;&#x679C;&#x4F60;&#x8FD8;&#x9700;&#x8981;&#x7528;&#x7684;&#x79C1;&#x94A5;&#x89E3;&#x5BC6;&#x90E8;&#x5206;&#xFF0C;&#x53EF;&#x4EE5;&#x7EE7;&#x7EED;&#x5B9E;&#x73B0;base64&#x7684;decode&#x51FD;&#x6570;&#xFF0C;&#x4EE5;&#x53CA;rsa&#x7684;&#x79C1;&#x94A5;&#x4E32;&#x751F;&#x6210;&#x51FD;&#x6570;&#xFF0C;rsa&#x7684;&#x89E3;&#x5BC6;&#x51FD;&#x6570;</p><p>base64 decode&#x51FD;&#x6570;&#x7684;&#x5B9E;&#x73B0;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * base64 decode</span></span><br><span class="line"><span class="comment"> * @param encoded_bytes</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">std::<span class="built_in">string</span> base64<span class="constructor">_decode(<span class="params">const</span> <span class="params">std</span>::<span class="params">string</span> &amp;<span class="params">encoded_bytes</span>)</span> {</span><br><span class="line">    BIO *bioMem, *b64;</span><br><span class="line"></span><br><span class="line">    bioMem = <span class="constructor">BIO_new_mem_buf((<span class="params">void</span> <span class="operator">*</span>)</span> encoded_bytes.c<span class="constructor">_str()</span>, -<span class="number">1</span>);</span><br><span class="line">    b64 = <span class="constructor">BIO_new(BIO_f_base64()</span>);</span><br><span class="line">    <span class="constructor">BIO_set_flags(<span class="params">b64</span>, BIO_FLAGS_BASE64_NO_NL)</span>;</span><br><span class="line">    bioMem = <span class="constructor">BIO_push(<span class="params">b64</span>, <span class="params">bioMem</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x83B7;&#x5F97;&#x89E3;&#x7801;&#x957F;&#x5EA6;</span></span><br><span class="line">    size_t buffer_length = <span class="constructor">BIO_get_mem_data(<span class="params">bioMem</span>, NULL)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">char</span> *decode = (<span class="built_in">char</span> *) malloc(buffer_length + <span class="number">1</span>);</span><br><span class="line">    <span class="comment">//&#x586B;&#x5145;0</span></span><br><span class="line">    memset(decode, <span class="number">0</span>, buffer_length + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="constructor">BIO_read(<span class="params">bioMem</span>, (<span class="params">void</span> <span class="operator">*</span>)</span> decode, (<span class="built_in">int</span>) buffer_length);</span><br><span class="line"></span><br><span class="line">    static std::<span class="built_in">string</span> decoded<span class="constructor">_bytes(<span class="params">decode</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="constructor">BIO_free_all(<span class="params">bioMem</span>)</span>;</span><br><span class="line"></span><br><span class="line">    return decoded_bytes;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>rsa&#x7684;&#x79C1;&#x94A5;&#x4E32;&#x751F;&#x6210;&#x51FD;&#x6570;&#x7684;&#x8BD5;&#x4E0B;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x6839;&#x636E;&#x79C1;&#x94A5;base64&#x5B57;&#x7B26;&#x4E32;&#xFF08;&#x6CA1;&#x6362;&#x884C;&#xFF09;&#x751F;&#x6210;&#x79C1;&#x94A5;&#x6587;&#x672C;&#x5185;&#x5BB9;</span></span><br><span class="line"><span class="comment"> * @param base64EncodedKey</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">std</span>::<span class="function"><span class="built_in">string</span> <span class="title">generatePrivateKey</span><span class="params">(<span class="built_in">std</span>::<span class="built_in">string</span> base64EncodedKey)</span> </span>{</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> privateKey = base64EncodedKey;</span><br><span class="line">    <span class="keyword">size_t</span> base64Length = <span class="number">64</span>;<span class="comment">//&#x6BCF;64&#x4E2A;&#x5B57;&#x7B26;&#x4E00;&#x884C;</span></span><br><span class="line">    <span class="keyword">size_t</span> privateKeyLength = base64EncodedKey.size();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = base64Length; i &lt; privateKeyLength; i += base64Length) {</span><br><span class="line">        <span class="comment">//&#x6BCF;base64Length&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x6362;&#x884C;</span></span><br><span class="line">        <span class="keyword">if</span> (base64EncodedKey[i] != <span class="string">&apos;\n&apos;</span>) {</span><br><span class="line">            privateKey.insert(i, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        }</span><br><span class="line">        i++;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x6700;&#x524D;&#x9762;&#x8FFD;&#x52A0;&#x79C1;&#x94A5;begin&#x5B57;&#x7B26;&#x4E32;</span></span><br><span class="line">    privateKey.insert(<span class="number">0</span>, <span class="string">&quot;-----BEGIN PRIVATE KEY-----\n&quot;</span>);</span><br><span class="line">    <span class="comment">//&#x6700;&#x540E;&#x9762;&#x8FFD;&#x52A0;&#x79C1;&#x94A5;end&#x5B57;&#x7B26;&#x4E32;</span></span><br><span class="line">    privateKey.append(<span class="string">&quot;\n-----END PRIVATE KEY-----&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> privateKey;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x79C1;&#x94A5;&#x89E3;&#x5BC6;&#x51FD;&#x6570;&#x7684;&#x5B9E;&#x73B0;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x4F7F;&#x7528;&#x79C1;&#x94A5;&#x5BF9;&#x5BC6;&#x6587;&#x89E3;&#x5BC6;</span></span><br><span class="line"><span class="comment"> * @param privetaKey</span></span><br><span class="line"><span class="comment"> * @param from</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">std::<span class="built_in">string</span> decrypt<span class="constructor">RSA(<span class="params">const</span> <span class="params">std</span>::<span class="params">string</span> &amp;<span class="params">privetaKey</span>, <span class="params">const</span> <span class="params">std</span>::<span class="params">string</span> &amp;<span class="params">from</span>)</span> {</span><br><span class="line">    BIO *bio = NULL;</span><br><span class="line">    RSA *rsa_private_key = NULL;</span><br><span class="line">    <span class="comment">//&#x4ECE;&#x5B57;&#x7B26;&#x4E32;&#x8BFB;&#x53D6;RSA&#x516C;&#x94A5;&#x4E32;</span></span><br><span class="line">    <span class="keyword">if</span> ((bio = <span class="constructor">BIO_new_mem_buf((<span class="params">void</span> <span class="operator">*</span>)</span> privetaKey.c<span class="constructor">_str()</span>, -<span class="number">1</span>))<span class="operator"> == </span>NULL) {</span><br><span class="line">        std::cout &lt;&lt; <span class="string">&quot;BIO_new_mem_buf failed!&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        return <span class="string">&quot;&quot;</span>;</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x8BFB;&#x53D6;&#x79C1;&#x94A5;</span></span><br><span class="line">    rsa_private_key = <span class="constructor">PEM_read_bio_RSAPrivateKey(<span class="params">bio</span>, NULL, NULL, NULL)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x5F02;&#x5E38;&#x5904;&#x7406;</span></span><br><span class="line">    <span class="keyword">if</span> (rsa_private_key<span class="operator"> == </span>NULL) {</span><br><span class="line">        <span class="comment">//&#x8D44;&#x6E90;&#x91CA;&#x653E;</span></span><br><span class="line">        <span class="constructor">BIO_free_all(<span class="params">bio</span>)</span>;</span><br><span class="line">        <span class="comment">//&#x6E05;&#x9664;&#x7BA1;&#x7406;CRYPTO_EX_DATA&#x7684;&#x5168;&#x5C40;hash&#x8868;&#x4E2D;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x907F;&#x514D;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;</span></span><br><span class="line">        <span class="constructor">CRYPTO_cleanup_all_ex_data()</span>;</span><br><span class="line">        return <span class="string">&quot;&quot;</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//rsa&#x6A21;&#x7684;&#x4F4D;&#x6570;</span></span><br><span class="line">    <span class="built_in">int</span> rsa_size = <span class="constructor">RSA_size(<span class="params">rsa_private_key</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x52A8;&#x6001;&#x5206;&#x914D;&#x5185;&#x5B58;&#xFF0C;&#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x89E3;&#x5BC6;&#x540E;&#x7684;&#x660E;&#x6587;</span></span><br><span class="line">    unsigned <span class="built_in">char</span> *<span class="keyword">to</span> = (unsigned <span class="built_in">char</span> *) malloc(rsa_size + <span class="number">1</span>);</span><br><span class="line">    <span class="comment">//&#x586B;&#x5145;0</span></span><br><span class="line">    memset(<span class="keyword">to</span>, <span class="number">0</span>, rsa_size + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x5BC6;&#x6587;&#x957F;&#x5EA6;</span></span><br><span class="line">    <span class="built_in">int</span> flen = from.length<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// RSA_NO_PADDING</span></span><br><span class="line">    <span class="comment">// RSA_PKCS1_PADDING</span></span><br><span class="line">    <span class="comment">//&#x89E3;&#x5BC6;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x4E3A;&#x89E3;&#x5BC6;&#x540E;&#x7684;&#x540D;&#x6587;&#x957F;&#x5EA6;&#xFF0C;-1&#x8868;&#x793A;&#x5931;&#x8D25;</span></span><br><span class="line">    <span class="built_in">int</span> status = <span class="constructor">RSA_private_decrypt(<span class="params">flen</span>, (<span class="params">const</span> <span class="params">unsigned</span> <span class="params">char</span> <span class="operator">*</span>)</span> from.c<span class="constructor">_str()</span>, <span class="keyword">to</span>, rsa_private_key,</span><br><span class="line">                                     RSA_PKCS1_PADDING);</span><br><span class="line">    <span class="comment">//&#x5F02;&#x5E38;&#x5904;&#x7406;&#x7387;</span></span><br><span class="line">    <span class="keyword">if</span> (status &lt; <span class="number">0</span>) {</span><br><span class="line">        <span class="comment">//&#x91CA;&#x653E;&#x8D44;&#x6E90;</span></span><br><span class="line">        free(<span class="keyword">to</span>);</span><br><span class="line">        <span class="constructor">BIO_free_all(<span class="params">bio</span>)</span>;</span><br><span class="line">        <span class="constructor">RSA_free(<span class="params">rsa_private_key</span>)</span>;</span><br><span class="line">        <span class="comment">//&#x6E05;&#x9664;&#x7BA1;&#x7406;CRYPTO_EX_DATA&#x7684;&#x5168;&#x5C40;hash&#x8868;&#x4E2D;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x907F;&#x514D;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;</span></span><br><span class="line">        <span class="constructor">CRYPTO_cleanup_all_ex_data()</span>;</span><br><span class="line">        return <span class="string">&quot;&quot;</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x8D4B;&#x503C;&#x660E;&#x6587;&#xFF0C;&#x662F;&#x5426;&#x9700;&#x8981;&#x6307;&#x5B9A;to&#x7684;&#x957F;&#x5EA6;&#xFF1F;</span></span><br><span class="line">    static std::<span class="built_in">string</span> result((<span class="built_in">char</span> *) <span class="keyword">to</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//&#x91CA;&#x653E;&#x8D44;&#x6E90;</span></span><br><span class="line">    free(<span class="keyword">to</span>);</span><br><span class="line">    <span class="constructor">BIO_free_all(<span class="params">bio</span>)</span>;</span><br><span class="line">    <span class="constructor">RSA_free(<span class="params">rsa_private_key</span>)</span>;</span><br><span class="line">    <span class="comment">//&#x6E05;&#x9664;&#x7BA1;&#x7406;CRYPTO_EX_DATA&#x7684;&#x5168;&#x5C40;hash&#x8868;&#x4E2D;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x907F;&#x514D;&#x5185;&#x5B58;&#x6CC4;&#x6F0F;</span></span><br><span class="line">    <span class="constructor">CRYPTO_cleanup_all_ex_data()</span>;</span><br><span class="line">    return result;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5982;&#x679C;&#x4F60;&#x8981;&#x89E3;&#x5BC6;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x540E;&#x7684;&#x5BC6;&#x6587;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x8FD9;&#x6837;&#x8C03;&#x7528;&#x5373;&#x53EF;&#x8FD4;&#x56DE;&#x660E;&#x6587;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="comment">//&#x516C;&#x94A5;&#x4E32;&#x548C;&#x79C1;&#x94A5;&#x4E32;</span></span><br><span class="line"><span class="built_in">string</span> generatedPublicKey = generate<span class="constructor">PublicKey(<span class="params">base64PublicKey</span>)</span>;</span><br><span class="line"><span class="built_in">string</span> generatedPrivetKey = generate<span class="constructor">PrivateKey(<span class="params">base64PrivateKey</span>)</span>;</span><br><span class="line">    </span><br><span class="line"><span class="built_in">string</span> content(<span class="string">&quot;just a test&quot;</span>);</span><br><span class="line"><span class="comment">//&#x52A0;&#x5BC6;</span></span><br><span class="line"><span class="built_in">string</span> result = encrypt<span class="constructor">RSA(<span class="params">generatedPublicKey</span>, <span class="params">content</span>)</span>;</span><br><span class="line"><span class="comment">//encode</span></span><br><span class="line"><span class="built_in">string</span> base64RSA = base64<span class="constructor">_encode(<span class="params">result</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//decode</span></span><br><span class="line"><span class="built_in">string</span> decodeBase64RSA = base64<span class="constructor">_decode(<span class="params">base64RSA</span>)</span>;</span><br><span class="line"><span class="comment">//&#x89E3;&#x5BC6;</span></span><br><span class="line"><span class="built_in">string</span> origin = decrypt<span class="constructor">RSA(<span class="params">generatedPrivetKey</span>, <span class="params">decodeBase64RSA</span>)</span>;</span><br></pre></td></tr></table></figure><p>&#x6700;&#x540E;&#x6CE8;&#x610F;&#x4E00;&#x4E0B;base64PublicKey&#x548C;base64PrivateKey&#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x4E0D;&#x5305;&#x542B;&#x6362;&#x884C;&#x7684;&#xFF0C;&#x5C31;&#x662F;&#x79C1;&#x94A5;&#x548C;&#x516C;&#x94A5;&#x7684;encoded&#x4E4B;&#x540E;&#x7684;&#x5B57;&#x8282;&#x6570;&#x7EC4;base64&#x540E;&#x7684;&#x503C;&#xFF0C;&#x56E0;&#x6B64;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x8C03;&#x7528;generatePublicKey&#x548C;generatePrivateKey&#x8FFD;&#x52A0;&#x5934;&#x548C;&#x5C3E;&#x3002;</p><h4 id="RSA&#x516C;&#x94A5;&#x548C;&#x79C1;&#x94A5;&#x7684;&#x751F;&#x6210;"><a href="#RSA&#x516C;&#x94A5;&#x548C;&#x79C1;&#x94A5;&#x7684;&#x751F;&#x6210;" class="headerlink" title="RSA&#x516C;&#x94A5;&#x548C;&#x79C1;&#x94A5;&#x7684;&#x751F;&#x6210;"></a>RSA&#x516C;&#x94A5;&#x548C;&#x79C1;&#x94A5;&#x7684;&#x751F;&#x6210;</h4><p>&#x751F;&#x6210;&#x79C1;&#x94A5;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">openssl genrsa -<span class="keyword">out</span> rsa_private_key.pem <span class="number">1024</span></span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x6761;&#x547D;&#x4EE4;&#x8BA9;openssl&#x968F;&#x673A;&#x751F;&#x6210;&#x4E86;&#x4E00;&#x4EFD;&#x79C1;&#x94A5;&#xFF0C;&#x52A0;&#x5BC6;&#x957F;&#x5EA6;&#x662F;1024&#x4F4D;&#x3002;&#x52A0;&#x5BC6;&#x957F;&#x5EA6;&#x662F;&#x6307;&#x7406;&#x8BBA;&#x4E0A;&#x6700;&#x5927;&#x5141;&#x8BB8;&#x201D;&#x88AB;&#x52A0;&#x5BC6;&#x7684;&#x4FE1;&#x606F;&#x201C;&#x957F;&#x5EA6;&#x7684;&#x9650;&#x5236;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x660E;&#x6587;&#x7684;&#x957F;&#x5EA6;&#x9650;&#x5236;&#x3002;&#x968F;&#x7740;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x589E;&#x5927;&#xFF08;&#x6BD4;&#x65B9;&#x8BF4;2048&#xFF09;&#xFF0C;&#x5141;&#x8BB8;&#x7684;&#x660E;&#x6587;&#x957F;&#x5EA6;&#x4E5F;&#x4F1A;&#x589E;&#x52A0;&#xFF0C;&#x4F46;&#x540C;&#x65F6;&#x4E5F;&#x4F1A;&#x9020;&#x6210;&#x8BA1;&#x7B97;&#x590D;&#x6742;&#x5EA6;&#x7684;&#x6781;&#x901F;&#x589E;&#x957F;&#x3002;&#x4E00;&#x822C;&#x63A8;&#x8350;&#x7684;&#x957F;&#x5EA6;&#x5C31;&#x662F;1024&#x4F4D;&#xFF08;128&#x5B57;&#x8282;&#xFF0C;&#x4E4B;&#x524D;&#x7684;&#x4EE3;&#x7801;&#x7684;&#x6700;&#x5927;&#x52A0;&#x5BC6;&#x957F;&#x5EA6;128&#x5C31;&#x662F;&#x8FD9;&#x4E48;&#x6765;&#x7684;&#xFF09;&#x3002;</p><p>&#x751F;&#x6210;&#x516C;&#x94A5;</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">openssl rsa -<span class="keyword">in</span> rsa_private_key<span class="selector-class">.pem</span> -out rsa_public_key<span class="selector-class">.pem</span> -pubout</span><br></pre></td></tr></table></figure><p>&#x5BC6;&#x94A5;&#x6587;&#x4EF6;&#x6700;&#x7EC8;&#x5C06;&#x6570;&#x636E;&#x901A;&#x8FC7;Base64&#x7F16;&#x7801;&#x8FDB;&#x884C;&#x5B58;&#x50A8;&#x3002;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x4E0A;&#x8FF0;&#x751F;&#x6210;&#x7684;&#x5BC6;&#x94A5;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x6BCF;&#x4E00;&#x884C;&#x7684;&#x957F;&#x5EA6;&#x90FD;&#x5F88;&#x89C4;&#x5F8B;&#x3002;&#x8FD9;&#x662F;&#x7531;&#x4E8E;RFC2045&#x4E2D;&#x89C4;&#x5B9A;&#xFF1A;The encoded output stream must be represented in lines of no more than 76 characters each&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;Base64&#x7F16;&#x7801;&#x7684;&#x6570;&#x636E;&#x6BCF;&#x884C;&#x6700;&#x591A;&#x4E0D;&#x8D85;&#x8FC7;76&#x5B57;&#x7B26;&#xFF0C;&#x5BF9;&#x4E8E;&#x8D85;&#x957F;&#x6570;&#x636E;&#x9700;&#x8981;&#x6309;&#x884C;&#x5206;&#x5272;&#x3002;</p><p>&#x4E0A;&#x9762;&#x7684;generatePublicKey&#x548C;generatePrivateKey&#x51FD;&#x6570;&#x6211;&#x4EEC;&#x662F;&#x6309;64&#x4F4D;&#x4E00;&#x884C;&#x8FDB;&#x884C;&#x5206;&#x5272;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x6709;&#x9700;&#x8981;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x503C;&#x4FEE;&#x6539;&#x4E3A;76&#x3002;</p><p>&#x7B2C;&#x4E00;&#x6B65;&#x751F;&#x6210;&#x79C1;&#x94A5;&#x6587;&#x4EF6;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#xFF0C;&#x9700;&#x8981;&#x8FDB;&#x884C;PKCS#8&#x7F16;&#x7801;&#xFF1A;</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">openssl pkcs8 -topk8 -<span class="keyword">in</span> rsa_private_key<span class="selector-class">.pem</span> -out pkcs8_rsa_private_key<span class="selector-class">.pem</span> -nocrypt</span><br></pre></td></tr></table></figure><p>&#x7B2C;&#x4E8C;&#x6B65;&#x548C;&#x7B2C;&#x4E09;&#x6B65;&#x751F;&#x6210;&#x7684;&#x516C;&#x94A5;&#x548C;&#x79C1;&#x94A5;&#x5C31;&#x53EF;&#x4EE5;&#x7528;&#x4E86;&#xFF0C;&#x8FD9;&#x91CC;&#x6709;&#x4E2A;&#x95EE;&#x9898;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x7684;&#x516C;&#x94A5;&#x548C;&#x79C1;&#x94A5;&#x662F;&#x7C7B;&#x4F3C;&#x4E0B;&#x9762;&#x8FD9;&#x79CD;&#x683C;&#x5F0F;&#x7684;</p><figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">-----BEGIN PUBLIC KEY-----</span><br><span class="line">....</span><br><span class="line">-----END PUBLIC KEY-----</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-----BEGIN PRIVATE KEY-----</span><br><span class="line">....</span><br><span class="line">-----END PRIVATE KEY-----</span><br></pre></td></tr></table></figure><p>&#x90A3;&#x4E48;&#xFF0C;&#x4F60;&#x65E0;&#x9700;&#x8C03;&#x7528;generatePublicKey&#x6216;&#x8005;generatePrivateKey&#x51FD;&#x6570;&#xFF0C;&#x6B64;&#x65F6;&#x5DF2;&#x7ECF;&#x662F;&#x9700;&#x8981;&#x7684;&#x516C;&#x94A5;&#x4E32;&#x548C;&#x79C1;&#x94A5;&#x4E32;&#xFF0C;&#x4F46;&#x662F;&#x5982;&#x679C;&#x4F60;&#x7684;&#x516C;&#x94A5;&#x548C;&#x79C1;&#x94A5;&#x6CA1;&#x6709;&#x5934;&#x90E8;&#x548C;&#x5C3E;&#x90E8;&#xFF0C;&#x5E76;&#x4E14;&#x4E0D;&#x662F;&#x6362;&#x884C;&#x7684;&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x8C03;&#x7528;&#x4E00;&#x4E0B;&#x8FDB;&#x884C;&#x8F6C;&#x6362;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x8FD9;&#x8FB9;Java&#x5C42;&#x4F20;&#x5165;&#x7684;&#x662F;&#x540E;&#x8005;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x8C03;&#x7528;generatePublicKey&#x6216;&#x8005;generatePrivateKey&#x8FDB;&#x884C;&#x8F6C;&#x6362;&#x3002;</p><h4 id="Java&#x5C42;&#x8C03;&#x7528;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x51FD;&#x6570;&#x90E8;&#x5206;"><a href="#Java&#x5C42;&#x8C03;&#x7528;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x51FD;&#x6570;&#x90E8;&#x5206;" class="headerlink" title="Java&#x5C42;&#x8C03;&#x7528;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x51FD;&#x6570;&#x90E8;&#x5206;"></a>Java&#x5C42;&#x8C03;&#x7528;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x51FD;&#x6570;&#x90E8;&#x5206;</h4><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">String base64PublicKey = <span class="string">&quot;MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDP0tzYxBF5IGfNvuIHzAqvza/ZxfH8aEiPFA4nY/W3js+cG3JUU86Jkc7jUG9XfGdW6SJ38ANs5tyWqYkJyoUErB2PjQQQDmHhbgpBUSeOdwGr/LPtrTrotrNXwpRY9eodkcbcMlbT0gvdnohRSISCjJ2KmFcBMkeO9R2DWe6oIwIDAQAB&quot;</span>;</span><br><span class="line">String result = com.fucknmb.<span class="module-access"><span class="module"><span class="identifier">Test</span>.</span></span>native<span class="constructor">_rsa(<span class="params">base64PublicKey</span>,<span class="string">&quot;I am test&quot;</span>)</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>NDK</category>
      </categories>
      <tags>
        <tag>NDK</tag>
        <tag>OpenSSL</tag>
        <tag>RSA</tag>
        <tag>Base64</tag>
      </tags>
  </entry>
  <entry>
    <title>IntelliJ IDEA 远程调试</title>
    <url>/2017/04/07/Intellij-IDEA%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>&#x5FEB;&#x901F;&#x5B9A;&#x4F4D;&#x7EBF;&#x4E0A;&#x95EE;&#x9898;&#xFF0C;&#x6240;&#x4EE5;&#x8FDC;&#x7A0B;&#x8C03;&#x8BD5;&#x670D;&#x52A1;&#x5668;&#x662F;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x5B9E;&#x7528;&#x7684;&#x65B9;&#x5F0F;&#x3002;</p><a id="more"></a><h3 id="&#x65B0;&#x5EFA;Remote-Configuration"><a href="#&#x65B0;&#x5EFA;Remote-Configuration" class="headerlink" title="&#x65B0;&#x5EFA;Remote Configuration"></a>&#x65B0;&#x5EFA;Remote Configuration</h3><p>Edit Configurations -&gt; +&#x53F7; -&gt; Remote -&gt; &#x586B;&#x5199;&#x8FDC;&#x7A0B;Host&#x548C;&#x7AEF;&#x53E3;&#x53F7;</p><p><img src="/2017/04/07/Intellij-IDEA%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95/configuration_remote.jpeg" alt="configuration_remote.jpeg"></p><p>&#x5176;&#x4E2D;Host&#x586B;&#x5199;&#x7684;&#x662F;&#x8FDC;&#x7A0B;&#x670D;&#x52A1;&#x5668;&#x7684;IP&#x5730;&#x5740;&#xFF0C;8082&#x5C31;&#x662F;&#x8FDC;&#x7A0B;&#x8C03;&#x8BD5;&#x7684;&#x7AEF;&#x53E3;</p><h3 id="&#x670D;&#x52A1;&#x5668;&#x914D;&#x7F6E;"><a href="#&#x670D;&#x52A1;&#x5668;&#x914D;&#x7F6E;" class="headerlink" title="&#x670D;&#x52A1;&#x5668;&#x914D;&#x7F6E;"></a>&#x670D;&#x52A1;&#x5668;&#x914D;&#x7F6E;</h3><p>&#x5C06;&#x7B2C;&#x4E00;&#x6B65;IntelliJ IDEA&#x914D;&#x7F6E;&#x4E2D;&#x7684;Command line arguments for running remote JVM&#x590D;&#x5236;&#x4E0B;&#x6765;&#xFF0C;&#x5728;&#x670D;&#x52A1;&#x5668;Tomcat&#x7684;bin&#x76EE;&#x5F55;&#x4E0B;&#x7684;setenv.sh&#x4E2D;&#x589E;&#x52A0;&#x5982;&#x4E0B;&#x914D;&#x7F6E;:</p><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">CATALINA_OPTS</span>=<span class="string">&quot;${CATALINA_OPTS} -agentlib:jdwp=transport=dt_socket,server=y,address=8082,suspend=n &quot;</span></span><br></pre></td></tr></table></figure><h3 id="&#x542F;&#x52A8;&#x8C03;&#x8BD5;"><a href="#&#x542F;&#x52A8;&#x8C03;&#x8BD5;" class="headerlink" title="&#x542F;&#x52A8;&#x8C03;&#x8BD5;"></a>&#x542F;&#x52A8;&#x8C03;&#x8BD5;</h3><p><img src="/2017/04/07/Intellij-IDEA%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95/start_debug.jpeg" alt="start_debug.jpeg"></p><p><img src="/2017/04/07/Intellij-IDEA%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95/attach_debug.jpeg" alt="attach_debug.jpeg"></p><p>&#x770B;&#x5230;Connected to target VM&#x7B49;&#x4FE1;&#x606F;&#x8F93;&#x51FA;&#x5C31;&#x8868;&#x793A;&#x8FDE;&#x63A5;&#x5230;&#x4E86;&#x8FDC;&#x7A0B;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x4E4B;&#x540E;&#x5C31;&#x662F;&#x6B63;&#x5E38;&#x7684;&#x8C03;&#x8BD5;&#x4E86;</p><h3 id="&#x9000;&#x51FA;&#x8C03;&#x8BD5;"><a href="#&#x9000;&#x51FA;&#x8C03;&#x8BD5;" class="headerlink" title="&#x9000;&#x51FA;&#x8C03;&#x8BD5;"></a>&#x9000;&#x51FA;&#x8C03;&#x8BD5;</h3><p>&#x70B9;&#x51FB;&#x4E0A;&#x56FE;&#x5DE6;&#x4FA7;&#x5DE5;&#x5177;&#x680F;&#x5012;&#x6570;&#x7B2C;&#x4E8C;&#x4E2A;&#x7EA2;&#x8272;&#x7684;&#x53C9;&#x53C9;&#x9000;&#x51FA;&#x8C03;&#x8BD5;</p><p>&#x5F39;&#x51FA;&#x786E;&#x8BA4;&#x6846;&#x65F6;&#x4E0D;&#x8981;&#x9009;&#x62E9;Terminate the process after disconnect,&#x7136;&#x540E;&#x70B9;&#x51FB;disconnect&#x65AD;&#x5F00;&#x8FDE;&#x63A5;&#xFF0C;&#x91CD;&#x8981;&#x7684;&#x4E8B;&#x518D;&#x8BF4;&#x4E00;&#x904D;&#xFF0C;&#x4E0D;&#x8981;&#x9009;&#x62E9;&#x65AD;&#x5F00;&#x8FDE;&#x63A5;&#x540E;&#x7EC8;&#x6B62;&#x7A0B;&#x5E8F;<br><img src="/2017/04/07/Intellij-IDEA%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95/close_confirm.jpeg" alt="close_confirm.jpeg"></p>]]></content>
      <categories>
        <category>IDEA</category>
      </categories>
      <tags>
        <tag>IDEA</tag>
        <tag>远程调试</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS-Empty-Application-Template-For-XCode8</title>
    <url>/2017/02/10/iOS-Empty-Application-Template-For-XCode8/</url>
    <content><![CDATA[<h3 id="clone-Template"><a href="#clone-Template" class="headerlink" title="clone Template"></a>clone Template</h3><blockquote><p>git clone <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:lizhangqu/iOS-Empty-Application-Template-For-Xcode8.git</p></blockquote><h3 id="&#x590D;&#x5236;&#x5230;XCode8&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x4E2D;"><a href="#&#x590D;&#x5236;&#x5230;XCode8&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x4E2D;" class="headerlink" title="&#x590D;&#x5236;&#x5230;XCode8&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x4E2D;"></a>&#x590D;&#x5236;&#x5230;XCode8&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x4E2D;</h3><blockquote><p>{Xcode.app}/Contents/Developer/Platforms/iPhoneOS.platform/Developer/Library/Xcode/Templates<br>/Project Templates/iOS/Application/</p></blockquote><h3 id="&#x521B;&#x5EFA;Empty-Application"><a href="#&#x521B;&#x5EFA;Empty-Application" class="headerlink" title="&#x521B;&#x5EFA;Empty Application"></a>&#x521B;&#x5EFA;Empty Application</h3><p>&#x6548;&#x679C;&#x5982;&#x4E0B;</p><p><img src="/2017/02/10/iOS-Empty-Application-Template-For-XCode8/XCode8.jpeg" alt="XCode8.jpeg"></p>]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>iOS</tag>
        <tag>XCode8</tag>
      </tags>
  </entry>
  <entry>
    <title>编译时注解 5 步走</title>
    <url>/2017/02/07/%E7%BC%96%E8%AF%91%E6%97%B6%E6%B3%A8%E8%A7%A35%E6%AD%A5%E8%B5%B0/</url>
    <content><![CDATA[<h3 id="&#x524D;&#x8A00;"><a href="#&#x524D;&#x8A00;" class="headerlink" title="&#x524D;&#x8A00;"></a>&#x524D;&#x8A00;</h3><p>&#x7B80;&#x5355;&#x8BB0;&#x5F55;&#x4E00;&#x4E0B;&#xFF0C;&#x7F16;&#x5199;&#x7F16;&#x8BD1;&#x65F6;&#x6CE8;&#x89E3;&#x7684;&#x51E0;&#x4E2A;&#x6B65;&#x9AA4;&#x3002;</p><a id="more"></a><h3 id="&#x65B0;&#x5EFA;Java-Module"><a href="#&#x65B0;&#x5EFA;Java-Module" class="headerlink" title="&#x65B0;&#x5EFA;Java Module"></a>&#x65B0;&#x5EFA;Java Module</h3><p><img src="/2017/02/07/%E7%BC%96%E8%AF%91%E6%97%B6%E6%B3%A8%E8%A7%A35%E6%AD%A5%E8%B5%B0/new-module.png" alt="new-module.png"></p><h3 id="&#x5F15;&#x5165;auto-service-&#x81EA;&#x52A8;&#x751F;&#x6210;services&#x4E0B;&#x6587;&#x4EF6;-&#x548C;javapoet&#xFF08;&#x751F;&#x6210;java&#x6587;&#x4EF6;&#xFF09;"><a href="#&#x5F15;&#x5165;auto-service-&#x81EA;&#x52A8;&#x751F;&#x6210;services&#x4E0B;&#x6587;&#x4EF6;-&#x548C;javapoet&#xFF08;&#x751F;&#x6210;java&#x6587;&#x4EF6;&#xFF09;" class="headerlink" title="&#x5F15;&#x5165;auto-service(&#x81EA;&#x52A8;&#x751F;&#x6210;services&#x4E0B;&#x6587;&#x4EF6;)&#x548C;javapoet&#xFF08;&#x751F;&#x6210;java&#x6587;&#x4EF6;&#xFF09;"></a>&#x5F15;&#x5165;auto-service(&#x81EA;&#x52A8;&#x751F;&#x6210;services&#x4E0B;&#x6587;&#x4EF6;)&#x548C;javapoet&#xFF08;&#x751F;&#x6210;java&#x6587;&#x4EF6;&#xFF09;</h3><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">&apos;com.google.auto.service:auto-service:1.0-rc2&apos;</span></span><br><span class="line"><span class="keyword">compile</span> <span class="string">&apos;com.squareup:javapoet:1.8.0&apos;</span></span><br></pre></td></tr></table></figure><h3 id="&#x7F16;&#x5199;&#x6CE8;&#x89E3;"><a href="#&#x7F16;&#x5199;&#x6CE8;&#x89E3;" class="headerlink" title="&#x7F16;&#x5199;&#x6CE8;&#x89E3;"></a>&#x7F16;&#x5199;&#x6CE8;&#x89E3;</h3><figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="variable">@Target</span>(ElementType.TYPE)</span><br><span class="line"><span class="variable">@Retention</span>(RetentionPolicy.SOURCE)</span><br><span class="line"><span class="variable">@Inherited</span></span><br><span class="line">public <span class="variable">@interface</span> Api {</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">String</span> <span class="selector-tag">scope</span>();</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">String</span> <span class="selector-tag">name</span>();</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">String</span> <span class="selector-tag">version</span>();</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="&#x521B;&#x5EFA;AbstractProcessor&#x5B9E;&#x73B0;&#x7C7B;"><a href="#&#x521B;&#x5EFA;AbstractProcessor&#x5B9E;&#x73B0;&#x7C7B;" class="headerlink" title="&#x521B;&#x5EFA;AbstractProcessor&#x5B9E;&#x73B0;&#x7C7B;"></a>&#x521B;&#x5EFA;AbstractProcessor&#x5B9E;&#x73B0;&#x7C7B;</h3><p>&#x91CD;&#x5199;getSupportedSourceVersion&#xFF0C;getSupportedAnnotationTypes&#x548C;process&#x65B9;&#x6CD5;&#x3002;&#x6CE8;&#x610F;&#x5728;&#x7C7B;&#x4E0A;&#x52A0;&#x5165;&#x6CE8;&#x89E3;AutoService&#xFF0C;&#x4FBF;&#x4F1A;&#x81EA;&#x52A8;&#x751F;&#x6210;META-INF&#x4E0B;&#x7684;services&#x6587;&#x4EF6;</p><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="meta">@AutoService</span>(<span class="type">Processor</span>.<span class="keyword">class</span>)</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">AnnotationProcessor</span> <span class="keyword">extends</span> <span class="title">AbstractProcessor</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="type">SourceVersion</span> getSupportedSourceVersion() {</span><br><span class="line">        <span class="keyword">return</span> <span class="type">SourceVersion</span>.latestSupported();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="type">Set</span>&lt;<span class="type">String</span>&gt; getSupportedAnnotationTypes() {</span><br><span class="line">        <span class="type">Set</span>&lt;<span class="type">String</span>&gt; supportedAnnotationTypes = <span class="keyword">new</span> <span class="type">HashSet</span>&lt;&gt;();</span><br><span class="line">        supportedAnnotationTypes.add(<span class="type">Api</span>.<span class="keyword">class</span>.getCanonicalName());</span><br><span class="line">        <span class="keyword">return</span> supportedAnnotationTypes;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public boolean process(<span class="type">Set</span>&lt;? <span class="keyword">extends</span> <span class="type">TypeElement</span>&gt; annotations, <span class="type">RoundEnvironment</span> roundEnv) {</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="&#x5B9E;&#x73B0;process&#x65B9;&#x6CD5;&#xFF0C;&#x6839;&#x636E;&#x6CE8;&#x89E3;&#x751F;&#x6210;&#x5BF9;&#x5E94;&#x4EE3;&#x7801;"><a href="#&#x5B9E;&#x73B0;process&#x65B9;&#x6CD5;&#xFF0C;&#x6839;&#x636E;&#x6CE8;&#x89E3;&#x751F;&#x6210;&#x5BF9;&#x5E94;&#x4EE3;&#x7801;" class="headerlink" title="&#x5B9E;&#x73B0;process&#x65B9;&#x6CD5;&#xFF0C;&#x6839;&#x636E;&#x6CE8;&#x89E3;&#x751F;&#x6210;&#x5BF9;&#x5E94;&#x4EE3;&#x7801;"></a>&#x5B9E;&#x73B0;process&#x65B9;&#x6CD5;&#xFF0C;&#x6839;&#x636E;&#x6CE8;&#x89E3;&#x751F;&#x6210;&#x5BF9;&#x5E94;&#x4EE3;&#x7801;</h3><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">public boolean process(Set&lt;? extends TypeElement&gt; annotations, RoundEnvironment roundEnv) {</span><br><span class="line">    Set&lt;? extends Element&gt; elements = roundEnv.get<span class="constructor">ElementsAnnotatedWith(Api.<span class="params">class</span>)</span>;</span><br><span class="line">    for (Element e : elements) {</span><br><span class="line">    	<span class="comment">//&#x83B7;&#x5F97;&#x5BF9;&#x5E94;&#x7684;&#x6CE8;&#x89E3;</span></span><br><span class="line">        Api api = e.get<span class="constructor">Annotation(Api.<span class="params">class</span>)</span>;</span><br><span class="line">        <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        <span class="comment">//&#x4F7F;&#x7528;javapoet&#x5F00;&#x59CB;&#x751F;&#x6210;&#x4EE3;&#x7801;</span></span><br><span class="line">        TypeSpec clazz = <span class="module-access"><span class="module"><span class="identifier">TypeSpec</span>.</span></span><span class="keyword">class</span><span class="constructor">Builder(<span class="params">api</span>.<span class="params">name</span>()</span>.<span class="keyword">to</span><span class="constructor">UpperCase()</span> + <span class="string">&quot;Request&quot;</span>)</span><br><span class="line">                .add<span class="constructor">Javadoc(<span class="string">&quot;Generated request for network\n&quot;</span>)</span></span><br><span class="line">                .add<span class="constructor">Superinterface(Serializable.<span class="params">class</span>)</span></span><br><span class="line">                .build<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">        JavaFile javaFile = <span class="module-access"><span class="module"><span class="identifier">JavaFile</span>.</span></span>builder(<span class="string">&quot;com.funcknmb.api&quot;</span>, clazz)</span><br><span class="line">                .build<span class="literal">()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//&#x751F;&#x6210;&#x7684;&#x4EE3;&#x7801;&#x5199;&#x5165;&#x6587;&#x4EF6;</span></span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            JavaFileObject fileObject = processingEnv.get<span class="constructor">Filer()</span>.create<span class="constructor">SourceFile(<span class="string">&quot;com.funcknmb.api.&quot;</span> + <span class="params">api</span>.<span class="params">name</span>()</span>.<span class="keyword">to</span><span class="constructor">UpperCase()</span> + <span class="string">&quot;Request&quot;</span>);</span><br><span class="line">            processingEnv.get<span class="constructor">Messager()</span>.print<span class="constructor">Message(Diagnostic.Kind.NOTE, <span class="string">&quot;Creating &quot;</span> + <span class="params">fileObject</span>.<span class="params">toUri</span>()</span>);</span><br><span class="line">            Writer writer = fileObject.<span class="keyword">open</span><span class="constructor">Writer()</span>;</span><br><span class="line">            javaFile.write<span class="constructor">To(<span class="params">writer</span>)</span>;</span><br><span class="line">            writer.close<span class="literal">()</span>;</span><br><span class="line">        } catch (IOException x) {</span><br><span class="line">            processingEnv.get<span class="constructor">Messager()</span>.print<span class="constructor">Message(Diagnostic.Kind.ERROR, <span class="params">x</span>.<span class="params">toString</span>()</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    return <span class="literal">false</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="&#x603B;&#x7ED3;"><a href="#&#x603B;&#x7ED3;" class="headerlink" title="&#x603B;&#x7ED3;"></a>&#x603B;&#x7ED3;</h3><p>&#x7F16;&#x5199;&#x7684;&#x6CE8;&#x89E3;&#x4EE5;&#x53CA;process&#x7684;&#x5B9E;&#x73B0;&#x53EA;&#x662F;&#x505A;&#x4E2A;&#x6A21;&#x677F;&#xFF0C;&#x5177;&#x4F53;&#x60C5;&#x51B5;&#x89C6;&#x60C5;&#x51B5;&#x800C;&#x5B9A;&#x3002;</p>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>Annotation</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Https&Http2.0&HttpDNS 的那些事</title>
    <url>/2017/01/17/Https&amp;Http2.0&amp;HttpDNS%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</url>
    <content><![CDATA[<blockquote><p>&#x4EC5;&#x4EE5;&#x672C;&#x6587;&#x5907;&#x5FD8;2016&#x5E74;&#x7F51;&#x7EDC;&#x4F18;&#x5316;&#x8FC7;&#x7A0B;&#x4E2D;&#x9047;&#x5230;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x672C;&#x6587;&#x6240;&#x8BA8;&#x8BBA;&#x7684;&#x5185;&#x5BB9;&#x5168;&#x90E8;&#x57FA;&#x4E8E;OkHttp&#x6B64;&#x5F00;&#x6E90;&#x5E93;&#xFF0C;&#x7248;&#x672C;&#x53F7;&#x4E3A;3.2.0</p></blockquote><h3 id="&#x5173;&#x4E8E;Https"><a href="#&#x5173;&#x4E8E;Https" class="headerlink" title="&#x5173;&#x4E8E;Https"></a>&#x5173;&#x4E8E;Https</h3><p>&#x53D1;&#x9001;HTTPS&#x8BF7;&#x6C42;&#x9996;&#x5148;&#x8981;&#x8FDB;&#x884C;SSL/TLS&#x63E1;&#x624B;&#xFF0C;&#x63E1;&#x624B;&#x8FC7;&#x7A0B;&#x5927;&#x81F4;&#x5982;&#x4E0B;&#xFF1A;</p><ul><li>&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x8D77;&#x63E1;&#x624B;&#x8BF7;&#x6C42;&#xFF0C;&#x643A;&#x5E26;&#x968F;&#x673A;&#x6570;&#x3001;&#x652F;&#x6301;&#x7B97;&#x6CD5;&#x5217;&#x8868;&#x7B49;&#x53C2;&#x6570;&#x3002;</li><li>&#x670D;&#x52A1;&#x7AEF;&#x6536;&#x5230;&#x8BF7;&#x6C42;&#xFF0C;&#x9009;&#x62E9;&#x5408;&#x9002;&#x7684;&#x7B97;&#x6CD5;&#xFF0C;&#x4E0B;&#x53D1;&#x516C;&#x94A5;&#x8BC1;&#x4E66;&#x548C;&#x968F;&#x673A;&#x6570;&#x3002;</li><li>&#x5BA2;&#x6237;&#x7AEF;&#x5BF9;&#x670D;&#x52A1;&#x7AEF;&#x8BC1;&#x4E66;&#x8FDB;&#x884C;&#x6821;&#x9A8C;&#xFF0C;&#x5E76;&#x53D1;&#x9001;&#x968F;&#x673A;&#x6570;&#x4FE1;&#x606F;&#xFF0C;&#x8BE5;&#x4FE1;&#x606F;&#x4F7F;&#x7528;&#x516C;&#x94A5;&#x52A0;&#x5BC6;&#x3002;</li><li>&#x670D;&#x52A1;&#x7AEF;&#x901A;&#x8FC7;&#x79C1;&#x94A5;&#x83B7;&#x53D6;&#x968F;&#x673A;&#x6570;&#x4FE1;&#x606F;&#x3002;</li><li>&#x53CC;&#x65B9;&#x6839;&#x636E;&#x4EE5;&#x4E0A;&#x4EA4;&#x4E92;&#x7684;&#x4FE1;&#x606F;&#x751F;&#x6210;session ticket&#xFF0C;&#x7528;&#x4F5C;&#x8BE5;&#x8FDE;&#x63A5;&#x540E;&#x7EED;&#x6570;&#x636E;&#x4F20;&#x8F93;&#x7684;&#x52A0;&#x5BC6;&#x5BC6;&#x94A5;&#x3002;</li></ul><a id="more"></a><p>&#x4E0A;&#x8FF0;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x7B2C;3&#x6B65;&#x4E2D;&#x5BA2;&#x6237;&#x7AEF;&#x9700;&#x8981;&#x9A8C;&#x8BC1;&#x670D;&#x52A1;&#x7AEF;&#x4E0B;&#x53D1;&#x7684;&#x8BC1;&#x4E66;&#xFF0C;&#x9A8C;&#x8BC1;&#x8FC7;&#x7A0B;&#x6709;&#x4EE5;&#x4E0B;&#x4E24;&#x4E2A;&#x8981;&#x70B9;&#xFF1A;</p><ul><li>&#x5BA2;&#x6237;&#x7AEF;&#x7528;&#x672C;&#x5730;&#x4FDD;&#x5B58;&#x7684;&#x6839;&#x8BC1;&#x4E66;&#x89E3;&#x5F00;&#x8BC1;&#x4E66;&#x94FE;&#xFF0C;&#x786E;&#x8BA4;&#x670D;&#x52A1;&#x7AEF;&#x4E0B;&#x53D1;&#x7684;&#x8BC1;&#x4E66;&#x662F;&#x7531;&#x53EF;&#x4FE1;&#x4EFB;&#x7684;&#x673A;&#x6784;&#x9881;&#x53D1;&#x7684;&#x3002;</li><li>&#x5BA2;&#x6237;&#x7AEF;&#x9700;&#x8981;&#x68C0;&#x67E5;&#x8BC1;&#x4E66;&#x7684;domain&#x57DF;&#x548C;&#x6269;&#x5C55;&#x57DF;&#xFF0C;&#x770B;&#x662F;&#x5426;&#x5305;&#x542B;&#x672C;&#x6B21;&#x8BF7;&#x6C42;&#x7684;host&#x3002;</li></ul><p>&#x5982;&#x679C;&#x4E0A;&#x8FF0;&#x4E24;&#x70B9;&#x90FD;&#x6821;&#x9A8C;&#x901A;&#x8FC7;&#xFF0C;&#x5C31;&#x8BC1;&#x660E;&#x5F53;&#x524D;&#x7684;&#x670D;&#x52A1;&#x7AEF;&#x662F;&#x53EF;&#x4FE1;&#x4EFB;&#x7684;&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x662F;&#x4E0D;&#x53EF;&#x4FE1;&#x4EFB;&#xFF0C;&#x5E94;&#x5F53;&#x4E2D;&#x65AD;&#x5F53;&#x524D;&#x8FDE;&#x63A5;&#x3002;</p><h3 id="&#x5173;&#x4E8E;Http-2-0"><a href="#&#x5173;&#x4E8E;Http-2-0" class="headerlink" title="&#x5173;&#x4E8E;Http/2.0"></a>&#x5173;&#x4E8E;Http/2.0</h3><ul><li><a href="https://imququ.com/post/http2-resource.html" target="_blank" rel="noopener">HTTP/2 &#x8D44;&#x6599;&#x6C47;&#x603B;</a></li><li><a href="http://mrpeak.cn/blog/http2/" target="_blank" rel="noopener">HTTP 2.0&#x7684;&#x90A3;&#x4E9B;&#x4E8B;</a></li></ul><h3 id="&#x5173;&#x4E8E;HttpDNS"><a href="#&#x5173;&#x4E8E;HttpDNS" class="headerlink" title="&#x5173;&#x4E8E;HttpDNS"></a>&#x5173;&#x4E8E;HttpDNS</h3><p>HttpDNS&#x662F;&#x4F7F;&#x7528;HTTP&#x534F;&#x8BAE;&#x5411;DNS&#x670D;&#x52A1;&#x5668;&#x7684;80&#x7AEF;&#x53E3;&#x8FDB;&#x884C;&#x8BF7;&#x6C42;&#xFF0C;&#x4EE3;&#x66FF;&#x4F20;&#x7EDF;&#x7684;DNS&#x534F;&#x8BAE;&#x5411;DNS&#x670D;&#x52A1;&#x5668;&#x7684;53&#x7AEF;&#x53E3;&#x8FDB;&#x884C;&#x8BF7;&#x6C42;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x4F7F;&#x7528;Http&#x534F;&#x8BAE;&#x53BB;&#x8FDB;&#x884C;dns&#x89E3;&#x6790;&#x8BF7;&#x6C42;&#xFF0C;&#x5C06;&#x670D;&#x52A1;&#x5668;&#x8FD4;&#x56DE;&#x7684;&#x89E3;&#x6790;&#x7ED3;&#x679C;DnsList&#xFF0C;&#x5373;&#x57DF;&#x540D;&#x5BF9;&#x5E94;&#x7684;&#x670D;&#x52A1;&#x5668;ip&#x83B7;&#x5F97;&#xFF0C;&#x76F4;&#x63A5;&#x5411;&#x8BE5;ip&#x53D1;&#x8D77;&#x5BF9;&#x5E94;&#x7684;api&#x670D;&#x52A1;&#x8BF7;&#x6C42;&#xFF0C;&#x4EE3;&#x66FF;&#x4F7F;&#x7528;&#x57DF;&#x540D;&#x3002;</p><p>HttpDNS&#x4E3B;&#x8981;&#x89E3;&#x51B3;&#x4E24;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;</p><ul><li>&#x8FD0;&#x8425;&#x5546;&#x57DF;&#x540D;&#x52AB;&#x6301;</li><li>DNS&#x89E3;&#x6790;0RT</li></ul><h3 id="OkHttp&#x5BF9;Http-2-0&#x7684;&#x652F;&#x6301;"><a href="#OkHttp&#x5BF9;Http-2-0&#x7684;&#x652F;&#x6301;" class="headerlink" title="OkHttp&#x5BF9;Http/2.0&#x7684;&#x652F;&#x6301;"></a>OkHttp&#x5BF9;Http/2.0&#x7684;&#x652F;&#x6301;</h3><p>OkHttp&#x5929;&#x7136;&#x652F;&#x6301;Http/2.0&#xFF0C;&#x4F46;&#x662F;&#x5728;&#x8F83;&#x65B0;&#x7684;&#x7248;&#x672C;&#x4E2D;&#xFF0C;OkHttp&#x79FB;&#x9664;&#x4E86;&#x5BF9;NPN&#x9009;&#x62E9;&#x534F;&#x8BAE;&#x7684;&#x652F;&#x6301;&#xFF0C;&#x8F6C;&#x800C;&#x53EA;&#x652F;&#x6301;ALPN&#x9009;&#x62E9;&#x534F;&#x8BAE;&#x3002;&#x89C1;&#x63D0;&#x4EA4;&#x8BB0;&#x5F55; <a href="https://github.com/square/okhttp/commit/4d068212aa1d0bcf0afc45b41a272c772a5b955c" target="_blank" rel="noopener">Remove NPN support from OkHttp</a></p><blockquote><p>NPN&#xFF08;Next Protocol Negotiation&#xFF0C;&#x4E0B;&#x4E00;&#x4EE3;&#x534F;&#x8BAE;&#x534F;&#x5546;&#xFF09;&#xFF0C;&#x662F;&#x4E00;&#x4E2A; TLS &#x6269;&#x5C55;&#xFF0C;&#x7531; Google &#x5728;&#x5F00;&#x53D1; SPDY &#x534F;&#x8BAE;&#x65F6;&#x63D0;&#x51FA;&#x3002;&#x968F;&#x7740; SPDY &#x88AB; HTTP/2 &#x53D6;&#x4EE3;&#xFF0C;NPN &#x4E5F;&#x88AB;&#x4FEE;&#x8BA2;&#x4E3A; ALPN&#xFF08;Application Layer Protocol Negotiation&#xFF0C;&#x5E94;&#x7528;&#x5C42;&#x534F;&#x8BAE;&#x534F;&#x5546;&#xFF09;&#x3002;&#x4E8C;&#x8005;&#x76EE;&#x6807;&#x4E00;&#x81F4;&#xFF0C;&#x4F46;&#x5B9E;&#x73B0;&#x7EC6;&#x8282;&#x4E0D;&#x4E00;&#x6837;&#xFF0C;&#x76F8;&#x4E92;&#x4E0D;&#x517C;&#x5BB9;&#x3002;&#x4EE5;&#x4E0B;&#x662F;&#x5B83;&#x4EEC;&#x4E3B;&#x8981;&#x5DEE;&#x522B;&#xFF1A;<br>NPN &#x662F;&#x670D;&#x52A1;&#x7AEF;&#x53D1;&#x9001;&#x6240;&#x652F;&#x6301;&#x7684; HTTP &#x534F;&#x8BAE;&#x5217;&#x8868;&#xFF0C;&#x7531;&#x5BA2;&#x6237;&#x7AEF;&#x9009;&#x62E9;&#xFF1B;&#x800C; ALPN &#x662F;&#x5BA2;&#x6237;&#x7AEF;&#x53D1;&#x9001;&#x6240;&#x652F;&#x6301;&#x7684; HTTP &#x534F;&#x8BAE;&#x5217;&#x8868;&#xFF0C;&#x7531;&#x670D;&#x52A1;&#x7AEF;&#x9009;&#x62E9;&#xFF1B;<br>NPN &#x7684;&#x534F;&#x5546;&#x7ED3;&#x679C;&#x662F;&#x5728; Change Cipher Spec &#x4E4B;&#x540E;&#x52A0;&#x5BC6;&#x53D1;&#x9001;&#x7ED9;&#x670D;&#x52A1;&#x7AEF;&#xFF1B;&#x800C; ALPN &#x7684;&#x534F;&#x5546;&#x7ED3;&#x679C;&#x662F;&#x901A;&#x8FC7; Server Hello &#x660E;&#x6587;&#x53D1;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#xFF1B;</p></blockquote><p>&#x4F46;&#x662F;&#x6709;&#x4EE5;&#x4E0B;&#x51E0;&#x79CD;&#x573A;&#x666F;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x8FD8;&#x9700;&#x8981;&#x4F7F;&#x7528;NPN&#xFF1A;</p><ul><li>ALPN&#x53EA;&#x652F;&#x6301;Android 5.0&#x4EE5;&#x4E0A;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x5728;Android 5.0&#x4EE5;&#x4E0B;&#x652F;&#x6301;Http/2.0&#xFF0C;&#x5FC5;&#x987B;&#x4F7F;&#x7528;NPN</li><li>&#x7406;&#x8BBA;&#x4E0A;nginx&#x53EF;&#x4EE5;&#x5BF9;ALPN&#x548C;NPN&#x540C;&#x65F6;&#x652F;&#x6301;&#xFF0C;&#x4F46;&#x662F;&#x90E8;&#x5206;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x7684;&#x914D;&#x7F6E;&#x53EF;&#x80FD;&#x53EA;&#x652F;&#x6301;NPN&#xFF0C;&#x5E76;&#x4E14;&#x77ED;&#x65F6;&#x95F4;&#x5185;&#x4E0D;&#x4F1A;&#x652F;&#x6301;ALPN&#xFF0C;&#x5FC5;&#x987B;&#x4F7F;&#x7528;NPN</li></ul><blockquote><p>&#x5982;&#x679C;&#x8981;&#x68C0;&#x6D4B;&#x670D;&#x52A1;&#x5668;&#x662F;&#x5426;&#x652F;&#x6301;ALPN&#x6216;&#x8005;NPN&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x6B64;&#x7F51;&#x7AD9;&#x8FDB;&#x884C;&#x68C0;&#x6D4B; <a href="https://www.ssllabs.com/ssltest/analyze.html" target="_blank" rel="noopener">https://www.ssllabs.com/ssltest/analyze.html</a></p></blockquote><p>&#x68C0;&#x6D4B;&#x6548;&#x679C;&#x5982;&#x4E0B;:<br><img src="/2017/01/17/Https&amp;Http2.0&amp;HttpDNS%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/alpn_npn_detect.jpeg" alt="alpn_npn_detect.jpeg"></p><p>&#x4E5F;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528; <a href="https://tools.keycdn.com/http2-test" target="_blank" rel="noopener">https://tools.keycdn.com/http2-test</a> &#x68C0;&#x6D4B;&#x662F;&#x5426;&#x652F;&#x6301;Http2.0&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x68C0;&#x6D4B;&#x53EA;&#x4F1A;&#x5F53;ALPN&#x652F;&#x6301;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x624D;&#x4F1A;&#x8BA4;&#x4E3A;&#x652F;&#x6301;Http2.0</p><p>&#x6B64;&#x65F6;&#x7684;&#x68C0;&#x6D4B;&#x6548;&#x679C;&#x5982;&#x4E0B;:<br><img src="./http2_detect.jpeg" alt="http2_detect.jpeg"></p><p>&#x51FA;&#x4E8E;&#x4EE5;&#x4E0A;&#x4E24;&#x4E2A;&#x539F;&#x56E0;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;Http/2.0&#x5C31;&#x65E0;&#x6CD5;&#x53D1;&#x6325;&#x4F5C;&#x7528;&#x4E86;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x6709;&#x5FC5;&#x8981;&#x5C06;OkHttp&#x8FD9;&#x90E8;&#x5206;&#x4EE3;&#x7801;&#x8FD8;&#x539F;&#xFF0C;&#x4E8E;&#x662F;&#x5BF9;OkHttp&#x8FDB;&#x884C;&#x4E86;&#x5B9A;&#x5236;&#xFF0C;&#x5B9A;&#x5236;&#x65B9;&#x5F0F;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x6839;&#x636E;&#x5BF9;&#x5E94;&#x7684;&#x63D0;&#x4EA4;&#x8BB0;&#x5F55;&#xFF0C;&#x628A;&#x79FB;&#x9664;&#x7684;&#x4EE3;&#x7801;&#x8FDB;&#x884C;&#x8FD8;&#x539F;&#x5373;&#x53EF;&#x3002;</p><p>&#x6539;&#x9020;&#x7684;&#x4EE3;&#x7801;&#x5168;&#x90E8;&#x4F4D;&#x4E8E;okhttp3.internal.Platform&#x8FD9;&#x4E2A;&#x7C7B;&#x4E2D;&#xFF0C;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x6539;&#x9020;&#x5F71;&#x54CD;&#x539F;&#x6709;&#x903B;&#x8F91;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x8FD9;&#x4E2A;&#x7C7B;&#x4E2D;&#x52A0;&#x5165;&#x4E00;&#x4E2A;enableNPN&#x7684;&#x5F00;&#x5173;&#xFF0C;&#x5F53;&#x5F00;&#x5173;&#x5173;&#x95ED;&#x65F6;&#xFF0C;&#x903B;&#x8F91;&#x4E0D;&#x53D1;&#x751F;&#x53D8;&#x5316;&#xFF0C;&#x5F53;&#x5F00;&#x5173;&#x6253;&#x5F00;&#x65F6;&#xFF0C;NPN&#x9009;&#x62E9;&#x534F;&#x8BAE;&#x4F1A;&#x5728;ALPN&#x9009;&#x62E9;&#x534F;&#x8BAE;&#x4E0D;&#x652F;&#x6301;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x751F;&#x6548;&#xFF0C;&#x4F18;&#x5148;&#x4F7F;&#x7528;ALPN&#x9009;&#x62E9;&#x534F;&#x8BAE;&#x3002;&#x9ED8;&#x8BA4;&#x5F00;&#x5173;&#x5F00;&#x542F;&#x3002;</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="symbol">Platform</span> {</span><br><span class="line">  <span class="comment">//......</span></span><br><span class="line">  <span class="comment">//&#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;start</span></span><br><span class="line">  <span class="keyword">public</span> static <span class="built_in">bool</span>ean enableNPN = <span class="literal">true</span>;</span><br><span class="line">  <span class="comment">//&#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;end</span></span><br><span class="line">  <span class="comment">//......</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x63A5;&#x7740;&#x5728;&#x5185;&#x90E8;&#x7C7B;okhttp3.internal.Platform$Android&#x4E2D;&#x52A0;&#x5165;&#x4E24;&#x4E2A;&#x6210;&#x5458;&#x53D8;&#x91CF;&#xFF0C;&#x53C2;&#x8003;getAlpnSelectedProtocol&#x548C;setAlpnProtocols&#xFF0C;&#x52A0;&#x5165;getNpnSelectedProtocol&#x548C;setNpnProtocols&#x53D8;&#x91CF;</p><figure class="highlight scala"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** Android 2.3 or better. */</span></span><br><span class="line"><span class="keyword">private</span> static <span class="class"><span class="keyword">class</span> <span class="title">Android</span> <span class="keyword">extends</span> <span class="title">Platform</span> </span>{</span><br><span class="line">  <span class="comment">// Non-null on Android 5.0+.</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">OptionalMethod</span>&lt;<span class="type">Socket</span>&gt; getAlpnSelectedProtocol;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">OptionalMethod</span>&lt;<span class="type">Socket</span>&gt; setAlpnProtocols;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// &#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;start</span></span><br><span class="line">  <span class="comment">// Non-null on Android 4.1+.</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">OptionalMethod</span>&lt;<span class="type">Socket</span>&gt; getNpnSelectedProtocol;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">OptionalMethod</span>&lt;<span class="type">Socket</span>&gt; setNpnProtocols;</span><br><span class="line">  <span class="comment">// &#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;end</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x540C;&#x65F6;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x589E;&#x52A0;&#x8FD9;&#x4E24;&#x4E2A;&#x5165;&#x53C2;&#xFF0C;&#x5E76;&#x8FDB;&#x884C;&#x8D4B;&#x503C;</p><figure class="highlight pf"><table><tr><td class="code"><pre><span class="line">public Android(Class<span class="variable">&lt;?&gt;</span> sslParametersClass, OptionalMethod<span class="variable">&lt;Socket&gt;</span> <span class="built_in">set</span>UseSessionTickets,</span><br><span class="line">        OptionalMethod<span class="variable">&lt;Socket&gt;</span> <span class="built_in">set</span>Hostname, OptionalMethod<span class="variable">&lt;Socket&gt;</span> getAlpnSelectedProtocol,</span><br><span class="line">        OptionalMethod<span class="variable">&lt;Socket&gt;</span> <span class="built_in">set</span>AlpnProtocols, OptionalMethod<span class="variable">&lt;Socket&gt;</span> getNpnSelectedProtocol,</span><br><span class="line">                   OptionalMethod<span class="variable">&lt;Socket&gt;</span> <span class="built_in">set</span>NpnProtocols) {</span><br><span class="line">  this.sslParametersClass = sslParametersClass;</span><br><span class="line">  this.<span class="built_in">set</span>UseSessionTickets = <span class="built_in">set</span>UseSessionTickets;</span><br><span class="line">  this.<span class="built_in">set</span>Hostname = <span class="built_in">set</span>Hostname;</span><br><span class="line">  this.getAlpnSelectedProtocol = getAlpnSelectedProtocol;</span><br><span class="line">  this.<span class="built_in">set</span>AlpnProtocols = <span class="built_in">set</span>AlpnProtocols;</span><br><span class="line">  //&#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;start</span><br><span class="line">  this.getNpnSelectedProtocol = getNpnSelectedProtocol;</span><br><span class="line">  this.<span class="built_in">set</span>NpnProtocols = <span class="built_in">set</span>NpnProtocols;</span><br><span class="line">  //&#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;end</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4FEE;&#x6539;&#x5185;&#x90E8;&#x7C7B;okhttp3.internal.Platform$Android&#x4E2D;configureTlsExtensions&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x914D;&#x7F6E;SSLSocket&#x5BF9;&#x8C61;&#xFF0C;&#x5F00;&#x542F;&#x5176;NPN&#x76F8;&#x5173;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x6CE8;&#x610F;NPN&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;enableNPN&#x5F00;&#x5173;&#x7684;&#x6761;&#x4EF6;</p><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">public <span class="keyword">void</span> configureTlsExtensions(</span><br><span class="line">    SSLSocket sslSocket, <span class="built_in">String</span> hostname, <span class="built_in">List</span>&lt;Protocol&gt; protocols) {</span><br><span class="line">  <span class="comment">// Enable SNI and session tickets.</span></span><br><span class="line">  <span class="keyword">if</span> (hostname != <span class="keyword">null</span>) {</span><br><span class="line">    setUseSessionTickets.invokeOptionalWithoutCheckedException(sslSocket, <span class="keyword">true</span>);</span><br><span class="line">    setHostname.invokeOptionalWithoutCheckedException(sslSocket, hostname);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Enable ALPN.</span></span><br><span class="line">  <span class="keyword">if</span> (setAlpnProtocols != <span class="keyword">null</span> &amp;&amp; setAlpnProtocols.isSupported(sslSocket)) {</span><br><span class="line">    <span class="built_in">Object</span>[] parameters = {concatLengthPrefixed(protocols)};</span><br><span class="line">    setAlpnProtocols.invokeWithoutCheckedException(sslSocket, parameters);</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">//&#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;start</span></span><br><span class="line">  <span class="comment">// Enbale NPN.</span></span><br><span class="line">  <span class="keyword">if</span> (enableNPN &amp;&amp; setNpnProtocols != <span class="keyword">null</span> &amp;&amp; setNpnProtocols.isSupported(sslSocket)) {</span><br><span class="line">    <span class="built_in">Object</span>[] parameters = {concatLengthPrefixed(protocols)};</span><br><span class="line">    setNpnProtocols.invokeWithoutCheckedException(sslSocket, parameters);</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">//&#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;end</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x4FEE;&#x6539;&#x5185;&#x90E8;&#x7C7B;okhttp3.internal.Platform$Android&#x4E2D;getSelectedProtocol&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x8FD4;&#x56DE;&#x9009;&#x62E9;&#x7684;&#x534F;&#x8BAE;&#xFF0C;&#x6CE8;&#x610F;NPN&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;enableNPN&#x5F00;&#x5173;&#x7684;&#x6761;&#x4EF6;</p><figure class="highlight processing"><table><tr><td class="code"><pre><span class="line">@Override <span class="keyword">public</span> <span class="keyword">String</span> getSelectedProtocol(SSLSocket socket) {</span><br><span class="line">  <span class="built_in">boolean</span> alpnSupported = ((getAlpnSelectedProtocol != <span class="keyword">null</span>)</span><br><span class="line">          &amp;&amp; (getAlpnSelectedProtocol.isSupported(socket)));</span><br><span class="line">  <span class="built_in">boolean</span> npnSupported = ((getNpnSelectedProtocol != <span class="keyword">null</span>)</span><br><span class="line">          &amp;&amp; (getNpnSelectedProtocol.isSupported(socket)));</span><br><span class="line">  <span class="keyword">if</span> (!(alpnSupported || npnSupported)) {</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">// if support alpn ,returen it.</span></span><br><span class="line">  <span class="keyword">if</span> (alpnSupported) {</span><br><span class="line">    <span class="built_in">byte</span>[] alpnResult =</span><br><span class="line">            (<span class="built_in">byte</span>[]) getAlpnSelectedProtocol.invokeWithoutCheckedException(socket);</span><br><span class="line">    <span class="keyword">if</span> (alpnResult != <span class="keyword">null</span>) {</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">String</span>(alpnResult, Util.UTF_8);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line"></span><br><span class="line">  <span class="comment">//&#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;start</span></span><br><span class="line">  <span class="comment">// don&apos;t support alpn,try npn.</span></span><br><span class="line">  <span class="keyword">if</span> (enableNPN &amp;&amp; npnSupported) {</span><br><span class="line">    <span class="built_in">byte</span>[] npnResult =</span><br><span class="line">            (<span class="built_in">byte</span>[]) getNpnSelectedProtocol.invokeWithoutCheckedException(socket);</span><br><span class="line">    <span class="keyword">if</span> (npnResult != <span class="keyword">null</span>) {</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">String</span>(npnResult, Util.UTF_8);</span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">//&#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;end</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x800C;&#x5185;&#x90E8;&#x7C7B;okhttp3.internal.Platform$Android&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x4F20;&#x5165;&#x7684;&#x5165;&#x53C2;&#x5219;&#x662F;&#x7531;Platform.findPlatform&#x51FD;&#x6570;&#x4E2D;&#x53CD;&#x5C04;&#x5F97;&#x5230;&#x7684;&#xFF0C;</p><figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** Attempt to match the host runtime to a capable Platform implementation. */</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> Platform findPlatform() {</span><br><span class="line">    <span class="comment">// Attempt to find Android 2.3+ APIs.</span></span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">      <span class="comment">//.......some codes</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//alpn support</span></span><br><span class="line">      OptionalMethod&lt;Socket&gt; getAlpnSelectedProtocol = <span class="keyword">null</span>;</span><br><span class="line">      OptionalMethod&lt;Socket&gt; setAlpnProtocols = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//&#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;start</span></span><br><span class="line">      <span class="comment">//npn support</span></span><br><span class="line">      OptionalMethod&lt;Socket&gt; getNpnSelectedProtocol = <span class="keyword">null</span>;</span><br><span class="line">      OptionalMethod&lt;Socket&gt; setNpnProtocols = <span class="keyword">null</span> ;</span><br><span class="line">      <span class="comment">//&#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;end</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// Attempt to find Android 5.0+ APIs.</span></span><br><span class="line">      <span class="keyword">try</span> {</span><br><span class="line">        <span class="keyword">Class</span>.forName(<span class="string">&quot;android.net.Network&quot;</span>); <span class="comment">// Arbitrary class added in Android 5.0.</span></span><br><span class="line">        getAlpnSelectedProtocol = <span class="keyword">new</span> OptionalMethod&lt;&gt;(<span class="keyword">byte</span>[].<span class="keyword">class</span>, <span class="string">&quot;getAlpnSelectedProtocol&quot;</span>);</span><br><span class="line">        setAlpnProtocols = <span class="keyword">new</span> OptionalMethod&lt;&gt;(<span class="keyword">null</span>, <span class="string">&quot;setAlpnProtocols&quot;</span>, <span class="keyword">byte</span>[].<span class="keyword">class</span>);</span><br><span class="line">      } <span class="keyword">catch</span> (ClassNotFoundException ignored) {</span><br><span class="line">      }</span><br><span class="line"></span><br><span class="line">      <span class="comment">//&#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;start</span></span><br><span class="line">      <span class="comment">//to make NPN Support</span></span><br><span class="line">      <span class="keyword">try</span> {</span><br><span class="line">        getNpnSelectedProtocol = <span class="keyword">new</span> OptionalMethod&lt;Socket&gt;(<span class="keyword">byte</span>[].<span class="keyword">class</span>,</span><br><span class="line">                <span class="string">&quot;getNpnSelectedProtocol&quot;</span>);</span><br><span class="line">        setNpnProtocols = <span class="keyword">new</span> OptionalMethod&lt;Socket&gt;(<span class="keyword">null</span>, <span class="string">&quot;setNpnProtocols&quot;</span>,</span><br><span class="line">                <span class="keyword">byte</span>[].<span class="keyword">class</span>);</span><br><span class="line">      } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">        <span class="comment">//ignore</span></span><br><span class="line">      }</span><br><span class="line">      <span class="comment">//&#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;end</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//&#x4F20;&#x5165;getNpnSelectedProtocol&#x548C;setNpnProtocols</span></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> Android(sslParametersClass, setUseSessionTickets, setHostname,</span><br><span class="line">          getAlpnSelectedProtocol, setAlpnProtocols, getNpnSelectedProtocol, setNpnProtocols);</span><br><span class="line">    } <span class="keyword">catch</span> (ClassNotFoundException ignored) {</span><br><span class="line">      <span class="comment">// This isn&apos;t an Android runtime.</span></span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//......</span></span><br><span class="line">    <span class="comment">// Probably an Oracle JDK like OpenJDK.</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Platform();</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="&#x68C0;&#x6D4B;&#x5BA2;&#x6237;&#x7AEF;&#x4F7F;&#x7528;&#x7684;Http&#x534F;&#x8BAE;"><a href="#&#x68C0;&#x6D4B;&#x5BA2;&#x6237;&#x7AEF;&#x4F7F;&#x7528;&#x7684;Http&#x534F;&#x8BAE;" class="headerlink" title="&#x68C0;&#x6D4B;&#x5BA2;&#x6237;&#x7AEF;&#x4F7F;&#x7528;&#x7684;Http&#x534F;&#x8BAE;"></a>&#x68C0;&#x6D4B;&#x5BA2;&#x6237;&#x7AEF;&#x4F7F;&#x7528;&#x7684;Http&#x534F;&#x8BAE;</h3><p>&#x5982;&#x679C;&#x901A;&#x8FC7;&#x8089;&#x773C;&#x67E5;&#x770B;&#xFF0C;&#x57FA;&#x672C;&#x4E0A;&#x4E0D;&#x53EF;&#x80FD;&#x77E5;&#x9053;&#x5F53;&#x524D;&#x7684;&#x8BF7;&#x6C42;&#x662F;Http/2.0&#x8FD8;&#x662F;Http/1.1&#x6216;&#x8005;&#x8BF4;&#x662F;SPDY/3.1&#xFF0C;&#x5F53;&#x7136;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;nginx&#x7684;&#x65E5;&#x5FD7;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x662F;&#x4EC0;&#x4E48;&#x534F;&#x8BAE;&#xFF0C;&#x5982;&#x4E0B;:<br><img src="http2.jpeg" alt="http2.jpeg"></p><p>&#x4F46;&#x662F;&#x6211;&#x4EEC;&#x7684;&#x76EE;&#x7684;&#x4E0D;&#x662F;&#x901A;&#x8FC7;nginx&#x65E5;&#x5FD7;&#x6765;&#x770B;&#xFF0C;&#x800C;&#x662F;&#x901A;&#x8FC7;logcat&#x65E5;&#x5FD7;&#x6765;&#x770B;&#xFF0C;&#x90A3;&#x4E48;OkHttp&#x4E2D;&#x6709;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x65B9;&#x6CD5;&#x6765;&#x83B7;&#x5F97;&#x5F53;&#x524D;&#x8BF7;&#x6C42;&#x7684;&#x534F;&#x8BAE;&#x5462;&#xFF0C;&#x5176;&#x5B9E;&#x662F;&#x6709;&#x7684;&#xFF0C;&#x5728;&#x62E6;&#x622A;&#x5668;&#x4E2D;&#x5C31;&#x53EF;&#x4EE5;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x5B98;&#x65B9;&#x7684;logging-interceptor&#x6A21;&#x5757;&#x57FA;&#x7840;&#x4E0A;&#xFF0C;&#x52A0;&#x5165;&#x534F;&#x8BAE;&#x7684;&#x65E5;&#x5FD7;&#x3002;&#x5176;&#x5B9E;&#x5728;HttpLoggingInterceptor&#x4E2D;&#xFF0C;&#x5DF2;&#x7ECF;&#x6709;&#x534F;&#x8BAE;&#x76F8;&#x5173;&#x7684;&#x65E5;&#x5FD7;&#x4E86;&#xFF0C;&#x4F46;&#x662F;&#x8BE5;&#x65E5;&#x5FD7;&#x5E76;&#x4E0D;&#x51C6;&#x786E;&#xFF0C;&#x5373;&#x4F7F;&#x5728;Http/2.0&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;&#x4E5F;&#x662F;Http/1.1,&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x66F4;&#x52A0;&#x51C6;&#x786E;&#x7684;&#x65B9;&#x5F0F;&#x6253;&#x5370;&#x8FD9;&#x4E2A;&#x534F;&#x8BAE;&#xFF0C;&#x5728;HttpLoggingInterceptor&#x5408;&#x9002;&#x7684;&#x5730;&#x65B9;(&#x8FD4;&#x56DE;response&#x7684;&#x5730;&#x65B9;)&#xFF0C;&#x52A0;&#x5165;&#x4E0B;&#x9762;&#x4E24;&#x884C;&#x4EE3;&#x7801;&#x5373;&#x53EF;&#xFF1A;</p><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">Protocol responseProtocol = response.protocol()<span class="comment">;</span></span><br><span class="line">logger.log(<span class="string">&quot;&lt;-- &quot;</span> +<span class="string">&quot;responseProtocol:&quot;</span>+responseProtocol)<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>&#x6B64;&#x65F6;&#x4F1A;&#x5728;reponse&#x8FD4;&#x56DE;&#x7684;&#x65F6;&#x5019;&#x6253;&#x5370;&#x5BF9;&#x5E94;&#x7684;&#x534F;&#x8BAE;&#x65E5;&#x5FD7;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;<br><img src="http2_logcat.jpeg" alt="http2_logcat.jpeg"></p><h3 id="OkHttp&#x4F7F;&#x7528;HttpDNS&#x7684;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;"><a href="#OkHttp&#x4F7F;&#x7528;HttpDNS&#x7684;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;" class="headerlink" title="OkHttp&#x4F7F;&#x7528;HttpDNS&#x7684;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;"></a>OkHttp&#x4F7F;&#x7528;HttpDNS&#x7684;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;</h3><ul><li><a href="http://blog.csdn.net/sbsujjbcy/article/details/50532797" target="_blank" rel="noopener">Android&#x4F7F;&#x7528;OkHttp&#x652F;&#x6301;HttpDNS&#xFF08;&#x62E6;&#x622A;&#x5668;&#xFF09;</a></li><li><a href="http://blog.csdn.net/sbsujjbcy/article/details/51612832" target="_blank" rel="noopener">Android OkHttp&#x5B9E;&#x73B0;HttpDns&#x7684;&#x6700;&#x4F73;&#x5B9E;&#x8DF5;&#xFF08;&#x975E;&#x62E6;&#x622A;&#x5668;,Dns&#x63A5;&#x53E3;&#xFF09;</a></li></ul><p>&#x8FD9;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x5404;&#x6709;&#x4F18;&#x7F3A;&#x70B9;&#xFF0C;&#x4F7F;&#x7528;Dns&#x63A5;&#x53E3;&#x65B9;&#x5F0F;&#x8FC7;&#x4E8E;&#x5E95;&#x5C42;&#xFF0C;&#x5F02;&#x5E38;&#x4E0D;&#x5BB9;&#x6613;&#x63A7;&#x5236;&#xFF0C;&#x4E0A;&#x5C42;&#x65E0;&#x611F;&#x77E5;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x5341;&#x5206;&#x7CBE;&#x786E;&#x7684;&#x63A7;&#x5236;&#x5F02;&#x5E38;&#xFF0C;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;&#x62E6;&#x622A;&#x5668;&#x65B9;&#x5F0F;&#xFF0C;&#x800C;&#x4F7F;&#x7528;&#x62E6;&#x622A;&#x5668;&#x65B9;&#x5F0F;&#x4E3B;&#x8981;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x4E24;&#x6B65;&#x64CD;&#x4F5C;</p><ul><li>&#x5BF9;url&#x4E2D;&#x7684;host&#x8FDB;&#x884C;&#x66FF;&#x6362;&#xFF0C;&#x5C06;&#x57DF;&#x540D;&#x66FF;&#x6362;&#x4E3A;ip</li><li>&#x6DFB;&#x52A0;header&#x8BF7;&#x6C42;&#x5934;&#xFF0C;&#x503C;&#x4E3A;&#x66FF;&#x6362;&#x524D;&#x7684;&#x57DF;&#x540D;</li></ul><p>&#x5728;Http&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x4E0D;&#x5B58;&#x5728;&#x4EFB;&#x4F55;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x662F;&#x5728;Https&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x9700;&#x8981;&#x4FEE;&#x6539;OkHttp&#x7684;&#x76F8;&#x5173;&#x4EE3;&#x7801;&#xFF0C;&#x89E3;&#x51B3;&#x76F8;&#x5173;&#x95EE;&#x9898;&#xFF0C;&#x5177;&#x4F53;&#x95EE;&#x9898;&#x4E0B;&#x6587;&#x7EC6;&#x8BF4;&#x3002;</p><h3 id="Https&#x4E0B;&#x4F7F;&#x7528;HttpDNS&#x8BC1;&#x4E66;&#x6821;&#x9A8C;&#x95EE;&#x9898;"><a href="#Https&#x4E0B;&#x4F7F;&#x7528;HttpDNS&#x8BC1;&#x4E66;&#x6821;&#x9A8C;&#x95EE;&#x9898;" class="headerlink" title="Https&#x4E0B;&#x4F7F;&#x7528;HttpDNS&#x8BC1;&#x4E66;&#x6821;&#x9A8C;&#x95EE;&#x9898;"></a>Https&#x4E0B;&#x4F7F;&#x7528;HttpDNS&#x8BC1;&#x4E66;&#x6821;&#x9A8C;&#x95EE;&#x9898;</h3><p>&#x5728;okhttp3.internal.io.RealConnection&#x7C7B;&#x4E2D;&#x6709;&#x4E2A;&#x65B9;&#x6CD5;&#x53EB;connectTls&#xFF0C;&#x91CC;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x5982;&#x4E0B;</p><figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> connectTls(<span class="built_in">int</span> readTimeout, <span class="built_in">int</span> writeTimeout,</span><br><span class="line">      ConnectionSpecSelector connectionSpecSelector) <span class="keyword">throws</span> IOException {</span><br><span class="line">    <span class="keyword">if</span> (route.requiresTunnel()) {</span><br><span class="line">      createTunnel(readTimeout, writeTimeout);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    Address address = route.address();</span><br><span class="line">    SSLSocketFactory sslSocketFactory = address.sslSocketFactory();</span><br><span class="line">    <span class="built_in">boolean</span> success = <span class="keyword">false</span>;</span><br><span class="line">    SSLSocket sslSocket = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> {</span><br><span class="line">      <span class="comment">// Create the wrapper over the connected socket.</span></span><br><span class="line">      sslSocket = (SSLSocket) sslSocketFactory.createSocket(</span><br><span class="line">          rawSocket, address.url().host(), address.url().port(), <span class="keyword">true</span> <span class="comment">/* autoClose */</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Configure the socket&apos;s ciphers, TLS versions, and extensions.</span></span><br><span class="line">      ConnectionSpec connectionSpec = connectionSpecSelector.configureSecureSocket(sslSocket);</span><br><span class="line">      <span class="keyword">if</span> (connectionSpec.supportsTlsExtensions()) {</span><br><span class="line">        Platform.<span class="built_in">get</span>().configureTlsExtensions(</span><br><span class="line">            sslSocket, address.url().host(), address.protocols());</span><br><span class="line">      }</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Force handshake. This can throw!</span></span><br><span class="line">      sslSocket.startHandshake();</span><br><span class="line">      Handshake unverifiedHandshake = Handshake.<span class="built_in">get</span>(sslSocket.getSession());</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Verify that the socket&apos;s certificates are acceptable for the target host.</span></span><br><span class="line">      <span class="keyword">if</span> (!address.hostnameVerifier().verify(address.url().host(), sslSocket.getSession())) {</span><br><span class="line">        X509Certificate cert = (X509Certificate) unverifiedHandshake.peerCertificates().<span class="built_in">get</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> SSLPeerUnverifiedException(<span class="string">&quot;Hostname &quot;</span> + address.url().host() + <span class="string">&quot; not verified:&quot;</span></span><br><span class="line">            + <span class="string">&quot;\n    certificate: &quot;</span> + CertificatePinner.pin(cert)</span><br><span class="line">            + <span class="string">&quot;\n    DN: &quot;</span> + cert.getSubjectDN().getName()</span><br><span class="line">            + <span class="string">&quot;\n    subjectAltNames: &quot;</span> + OkHostnameVerifier.allSubjectAltNames(cert));</span><br><span class="line">      }</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Check that the certificate pinner is satisfied by the certificates presented.</span></span><br><span class="line">      address.certificatePinner().check(address.url().host(),</span><br><span class="line">          unverifiedHandshake.peerCertificates());</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Success! Save the handshake and the ALPN protocol.</span></span><br><span class="line">      <span class="keyword">String</span> maybeProtocol = connectionSpec.supportsTlsExtensions()</span><br><span class="line">          ? Platform.<span class="built_in">get</span>().getSelectedProtocol(sslSocket)</span><br><span class="line">          : <span class="keyword">null</span>;</span><br><span class="line">      socket = sslSocket;</span><br><span class="line">      source = Okio.buffer(Okio.source(socket));</span><br><span class="line">      sink = Okio.buffer(Okio.sink(socket));</span><br><span class="line">      handshake = unverifiedHandshake;</span><br><span class="line">      protocol = maybeProtocol != <span class="keyword">null</span></span><br><span class="line">          ? Protocol.<span class="built_in">get</span>(maybeProtocol)</span><br><span class="line">          : Protocol.HTTP_1_1;</span><br><span class="line">      success = <span class="keyword">true</span>;</span><br><span class="line">    } <span class="keyword">catch</span> (AssertionError e) {</span><br><span class="line">      <span class="keyword">if</span> (Util.isAndroidGetsocknameError(e)) <span class="keyword">throw</span> <span class="keyword">new</span> IOException(e);</span><br><span class="line">      <span class="keyword">throw</span> e;</span><br><span class="line">    } <span class="keyword">finally</span> {</span><br><span class="line">      <span class="keyword">if</span> (sslSocket != <span class="keyword">null</span>) {</span><br><span class="line">        Platform.<span class="built_in">get</span>().afterHandshake(sslSocket);</span><br><span class="line">      }</span><br><span class="line">      <span class="keyword">if</span> (!success) {</span><br><span class="line">        closeQuietly(sslSocket);</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">  }</span><br></pre></td></tr></table></figure><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x65E0;&#x8BBA;&#x662F;&#x8C03;&#x7528;Platform.get().configureTlsExtensions()&#x914D;&#x7F6E;SSLSocket&#x5BF9;&#x8C61;&#xFF0C;&#x8FD8;&#x662F;address.hostnameVerifier().verify()&#x8FDB;&#x884C;&#x8BC1;&#x4E66;&#x6821;&#x9A8C;&#xFF0C;&#x4EE5;&#x53CA;address.certificatePinner().check()&#x4E2D;&#xFF0C;&#x4F20;&#x5165;&#x7684;host&#x90FD;&#x662F;address.url().host()&#xFF0C;&#x800C;&#x8FD9;&#x4E2A;&#x503C;&#x5374;&#x6070;&#x6070;&#x662F;&#x6211;&#x4EEC;&#x66FF;&#x6362;&#x4E86;url&#x4E2D;&#x7684;&#x57DF;&#x540D;&#x4E3A;ip&#x7684;host&#xFF0C;&#x6240;&#x4EE5;&#x6B64;&#x65F6;&#x62FF;&#x5230;&#x7684;&#x503C;&#x4E3A;ip&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#xFF0C;&#x5E26;&#x6765;&#x4E86;&#x4E24;&#x4E2A;&#x95EE;&#x9898;&#xFF1A;</p><ul><li>&#x5F53;&#x5BA2;&#x6237;&#x7AEF;&#x4F7F;&#x7528;HttpDNS&#x65F6;&#xFF0C;&#x8BF7;&#x6C42;URL&#x4E2D;&#x7684;host&#x4F1A;&#x88AB;&#x66FF;&#x6362;&#x6210;HttpDNS&#x89E3;&#x6790;&#x51FA;&#x6765;&#x7684;ip&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x8BC1;&#x4E66;&#x9A8C;&#x8BC1;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x51FA;&#x73B0;domain&#x4E0D;&#x5339;&#x914D;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x5BFC;&#x81F4;SSL/TLS&#x63E1;&#x624B;&#x4E0D;&#x6210;&#x529F;&#x3002;</li><li>&#x5728;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x5B58;&#x5728;&#x591A;&#x5F20;&#x8BC1;&#x4E66;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4F1A;&#x5B58;&#x5728;&#x95EE;&#x9898;</li></ul><p>&#x800C;&#x5BF9;&#x4E8E;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x5B58;&#x5728;&#x591A;&#x5F20;&#x8BC1;&#x4E66;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x4F1A;&#x5B58;&#x5728;&#x95EE;&#x9898;&#x5462;&#xFF0C;&#x8FD9;&#x91CC;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x6982;&#x5FF5;&#xFF0C;&#x53EB;SNI</p><blockquote><p>SNI&#xFF08;Server Name Indication&#xFF09;&#x662F;&#x4E3A;&#x4E86;&#x89E3;&#x51B3;&#x4E00;&#x4E2A;&#x670D;&#x52A1;&#x5668;&#x4F7F;&#x7528;&#x591A;&#x4E2A;&#x57DF;&#x540D;&#x548C;&#x8BC1;&#x4E66;&#x7684;SSL/TLS&#x6269;&#x5C55;&#x3002;&#x5B83;&#x7684;&#x5DE5;&#x4F5C;&#x539F;&#x7406;&#x5982;&#x4E0B;&#xFF1A;</p></blockquote><ul><li>&#x5728;&#x8FDE;&#x63A5;&#x5230;&#x670D;&#x52A1;&#x5668;&#x5EFA;&#x7ACB;SSL&#x94FE;&#x63A5;&#x4E4B;&#x524D;&#x5148;&#x53D1;&#x9001;&#x8981;&#x8BBF;&#x95EE;&#x7AD9;&#x70B9;&#x7684;&#x57DF;&#x540D;&#xFF08;Hostname&#xFF09;&#x3002;</li><li>&#x670D;&#x52A1;&#x5668;&#x6839;&#x636E;&#x8FD9;&#x4E2A;&#x57DF;&#x540D;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x5408;&#x9002;&#x7684;&#x8BC1;&#x4E66;&#x3002;</li></ul><p>&#x76EE;&#x524D;&#xFF0C;&#x5927;&#x591A;&#x6570;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x548C;&#x6D4F;&#x89C8;&#x5668;&#x90FD;&#x5DF2;&#x7ECF;&#x5F88;&#x597D;&#x5730;&#x652F;&#x6301;SNI&#x6269;&#x5C55;&#xFF0C;OpenSSL 0.9.8&#x4E5F;&#x5DF2;&#x7ECF;&#x5185;&#x7F6E;&#x8FD9;&#x4E00;&#x529F;&#x80FD;&#x3002;</p><p>&#x4E0A;&#x8FF0;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x5F53;&#x5BA2;&#x6237;&#x7AEF;&#x4F7F;&#x7528;HttpDNS&#x65F6;&#xFF0C;&#x8BF7;&#x6C42;URL&#x4E2D;&#x7684;Host&#x4F1A;&#x88AB;&#x66FF;&#x6362;&#x6210;HttpDNS&#x89E3;&#x6790;&#x51FA;&#x6765;&#x7684;IP&#xFF0C;&#x5BFC;&#x81F4;&#x670D;&#x52A1;&#x5668;&#x83B7;&#x53D6;&#x5230;&#x7684;&#x57DF;&#x540D;&#x4E3A;&#x89E3;&#x6790;&#x540E;&#x7684;IP&#xFF0C;&#x65E0;&#x6CD5;&#x627E;&#x5230;&#x5339;&#x914D;&#x7684;&#x8BC1;&#x4E66;&#xFF0C;&#x53EA;&#x80FD;&#x8FD4;&#x56DE;&#x9ED8;&#x8BA4;&#x7684;&#x8BC1;&#x4E66;&#x6216;&#x8005;&#x4E0D;&#x8FD4;&#x56DE;&#xFF0C;&#x6240;&#x4EE5;&#x4F1A;&#x51FA;&#x73B0;SSL/TLS&#x63E1;&#x624B;&#x4E0D;&#x6210;&#x529F;&#x7684;&#x9519;&#x8BEF;&#x3002;</p><p>&#x6700;&#x5E38;&#x89C1;&#x7684;&#x4E00;&#x4E2A;&#x573A;&#x666F;&#x5C31;&#x662F;&#xFF1A;</p><blockquote><p>&#x6BD4;&#x5982;&#x5F53;&#x4F60;&#x9700;&#x8981;&#x901A;&#x8FC7;https&#x8BBF;&#x95EE;CDN&#x8D44;&#x6E90;&#x65F6;&#xFF0C;CDN&#x7684;&#x7AD9;&#x70B9;&#x5F80;&#x5F80;&#x670D;&#x52A1;&#x4E86;&#x5F88;&#x591A;&#x7684;&#x57DF;&#x540D;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x901A;&#x8FC7;SNI&#x6307;&#x5B9A;&#x5177;&#x4F53;&#x7684;&#x57DF;&#x540D;&#x8BC1;&#x4E66;&#x8FDB;&#x884C;&#x901A;&#x4FE1;&#x3002;</p></blockquote><p>&#x5176;&#x5B9E;OkHttp&#x662F;&#x652F;&#x6301;SNI&#x7684;&#xFF0C;&#x5728;Platform.configureTlsExtensions&#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;&#x8BBE;&#x7F6E;&#x4E86;SNI&#xFF0C;&#x53EA;&#x662F;&#x4F20;&#x5165;&#x7684;Host&#x53D8;&#x6210;&#x4E86;ip&#xFF0C;&#x6240;&#x4EE5;&#x5BFC;&#x81F4;&#x4E86;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;</p><figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="literal">void</span> configureTlsExtensions(</span><br><span class="line">        SSLSocket sslSocket, <span class="built_in">String</span> hostname, <span class="built_in">List</span>&lt;Protocol&gt; protocols) {</span><br><span class="line">  <span class="comment">// Enable SNI and session tickets.</span></span><br><span class="line">  <span class="keyword">if</span> (hostname != <span class="built_in">null</span>) {</span><br><span class="line">  setUseSessionTickets.invokeOptionalWithoutCheckedException(sslSocket, <span class="literal">true</span>);</span><br><span class="line">  setHostname.invokeOptionalWithoutCheckedException(sslSocket, hostname);</span><br><span class="line">  }</span><br><span class="line">  <span class="comment">//......</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x4E24;&#x4E2A;&#x95EE;&#x9898;&#x5F52;&#x6839;&#x5230;&#x5E95;&#x90FD;&#x662F;&#x66FF;&#x6362;&#x4E86;Host&#x6240;&#x9020;&#x6210;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x8FD8;&#x662F;&#x9700;&#x8981;&#x5BF9;OkHttp&#x5F00;&#x5200;&#xFF0C;&#x4FEE;&#x6539;&#x6E90;&#x7801;&#x3002;</p><p>&#x5728;okhttp3.internal.http.HttpEngine&#x4E2D;&#x627E;&#x5230;createAddress&#x65B9;&#x6CD5;&#xFF0C;&#x589E;&#x52A0;&#x4E00;&#x4E2A;&#x5165;&#x53C2;&#xFF0C;&#x4F20;&#x5165;request.url().host()&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x4F20;&#x5165;request.header(&#x201C;host&#x201D;)</p><figure class="highlight axapta"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Address createAddress(OkHttpClient <span class="keyword">client</span>, Request request) {</span><br><span class="line">    <span class="comment">//......some codes</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Address(request.url().host(), request.header(<span class="string">&quot;host&quot;</span>), request.url().port(),</span><br><span class="line">        <span class="keyword">client</span>.dns(),</span><br><span class="line">        <span class="keyword">client</span>.socketFactory(), sslSocketFactory, hostnameVerifier, certificatePinner,</span><br><span class="line">        <span class="keyword">client</span>.proxyAuthenticator(), <span class="keyword">client</span>.proxy(), <span class="keyword">client</span>.protocols(),</span><br><span class="line">        <span class="keyword">client</span>.connectionSpecs(), <span class="keyword">client</span>.proxySelector());</span><br><span class="line">  }</span><br></pre></td></tr></table></figure><p>&#x5728;Address&#x4E2D;&#x589E;&#x52A0;&#x6210;&#x5458;&#x53D8;&#x91CF;&#x548C;&#x6210;&#x5458;&#x65B9;&#x6CD5;</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">public final class<span class="built_in"> Address </span>{</span><br><span class="line">  final String headerHost;</span><br><span class="line">  public String host() {</span><br><span class="line">      return headerHost;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x5176;&#x4E2D;headerHost&#x7684;&#x503C;&#x901A;&#x8FC7;&#x6784;&#x9020;&#x51FD;&#x6570;&#x4E2D;&#x589E;&#x52A0;&#x7684;&#x53D8;&#x91CF;&#x5F97;&#x5230;</p><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">public Address(<span class="built_in">String</span> uriHost, <span class="built_in">String</span> headerHost, <span class="built_in">int</span> uriPort, Dns dns,</span><br><span class="line">     SocketFactory socketFactory,</span><br><span class="line">     SSLSocketFactory sslSocketFactory, HostnameVerifier hostnameVerifier,</span><br><span class="line">     CertificatePinner certificatePinner, Authenticator proxyAuthenticator, Proxy proxy,</span><br><span class="line">     <span class="built_in">List</span>&lt;Protocol&gt; protocols, <span class="built_in">List</span>&lt;ConnectionSpec&gt; connectionSpecs, ProxySelector proxySelector) {</span><br><span class="line">   <span class="comment">//.......some codes</span></span><br><span class="line">   <span class="keyword">this</span>.headerHost = headerHost;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//.......some codes</span></span><br><span class="line"> }</span><br></pre></td></tr></table></figure><p>&#x56DE;&#x5230;okhttp3.internal.io.RealConnection&#x4E2D;&#x7684;connectTls&#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;&#x5C06;&#x8BC1;&#x4E66;&#x9A8C;&#x8BC1;&#xFF0C;&#x8BBE;&#x7F6E;SNI&#x7684;&#x4F20;&#x5165;&#x7684;&#x53C2;&#x6570;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#xFF0C;&#x4FEE;&#x6539;&#x539F;&#x5219;&#x4E3A;&#xFF1A;&#x5F53;&#x8BF7;&#x6C42;&#x5934;&#x4E2D;&#x7684;host&#x5B58;&#x5728;&#x65F6;&#xFF0C;&#x4F7F;&#x7528;&#x8BF7;&#x6C42;&#x5934;&#x4E2D;&#x7684;host&#xFF0C;&#x5F53;&#x8BF7;&#x6C42;&#x5934;&#x4E2D;&#x7684;host&#x4E0D;&#x5B58;&#x5728;&#x65F6;&#xFF0C;&#x4F7F;&#x7528;url&#x4E2D;&#x7684;host&#xFF0C;&#x4F46;&#x662F;&#x8FDE;&#x63A5;&#x65F6;&#x4F7F;&#x7528;&#x7684;&#x4F9D;&#x7136;&#x662F;url&#x4E2D;&#x7684;host&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5B58;&#x5728;httpdns&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F7F;&#x7528;&#x7684;&#x662F;ip&#x76F4;&#x8FDE;&#x3002;</p><figure class="highlight processing"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> connectTls(<span class="built_in">int</span> readTimeout, <span class="built_in">int</span> writeTimeout,</span><br><span class="line">     ConnectionSpecSelector connectionSpecSelector) <span class="keyword">throws</span> IOException {</span><br><span class="line">   <span class="keyword">if</span> (route.requiresTunnel()) {</span><br><span class="line">     createTunnel(readTimeout, writeTimeout);</span><br><span class="line">   }</span><br><span class="line"></span><br><span class="line">   Address address = route.address();</span><br><span class="line">   SSLSocketFactory sslSocketFactory = address.sslSocketFactory();</span><br><span class="line">   <span class="built_in">boolean</span> success = <span class="keyword">false</span>;</span><br><span class="line">   SSLSocket sslSocket = <span class="keyword">null</span>;</span><br><span class="line">   <span class="keyword">try</span> {</span><br><span class="line">     <span class="comment">// Create the wrapper over the connected socket.</span></span><br><span class="line">     sslSocket = (SSLSocket) sslSocketFactory.createSocket(</span><br><span class="line">         rawSocket, address.url().host(), address.url().port(), <span class="keyword">true</span> <span class="comment">/* autoClose */</span>);</span><br><span class="line">     <span class="comment">//&#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;start</span></span><br><span class="line">     <span class="comment">//&#x83B7;&#x53D6;&#x8BF7;&#x6C42;&#x5934;&#x4E2D;&#x7684;host</span></span><br><span class="line">     <span class="keyword">String</span> host = address.host();</span><br><span class="line">     <span class="keyword">if</span> (host == <span class="keyword">null</span> || host.length() == <span class="number">0</span>) {</span><br><span class="line">       <span class="comment">//&#x5982;&#x679C;&#x8BF7;&#x6C42;&#x4E2D;&#x7684;host&#x4E3A;&#x7A7A;&#xFF0C;&#x5219;&#x4F7F;&#x7528;url&#x4E2D;&#x7684;host</span></span><br><span class="line">       host = address.url().host();</span><br><span class="line">     }</span><br><span class="line">     <span class="comment">//&#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;end</span></span><br><span class="line">     <span class="comment">// Configure the socket&apos;s ciphers, TLS versions, and extensions.</span></span><br><span class="line">     ConnectionSpec connectionSpec = connectionSpecSelector.configureSecureSocket(sslSocket);</span><br><span class="line">     <span class="keyword">if</span> (connectionSpec.supportsTlsExtensions()) {</span><br><span class="line">       <span class="comment">//&#x8BBE;&#x7F6E;SNI&#x65F6;&#x4F20;&#x5165;&#x7684;host&#x6B64;&#x65F6;&#x4E0D;&#x518D;&#x662F;ip</span></span><br><span class="line">       Platform.<span class="built_in">get</span>().configureTlsExtensions(</span><br><span class="line">           sslSocket, host, address.protocols());</span><br><span class="line">     }</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Force handshake. This can throw!</span></span><br><span class="line">     sslSocket.startHandshake();</span><br><span class="line">     Handshake unverifiedHandshake = Handshake.<span class="built_in">get</span>(sslSocket.getSession());</span><br><span class="line"></span><br><span class="line">     <span class="comment">// &#x6821;&#x9A8C;&#x65F6;&#x4F20;&#x5165;&#x7684;host&#x6B64;&#x65F6;&#x4E0D;&#x518D;&#x662F;ip</span></span><br><span class="line">     <span class="comment">// Verify that the socket&apos;s certificates are acceptable for the target host.</span></span><br><span class="line">     <span class="keyword">if</span> (!address.hostnameVerifier().verify(host, sslSocket.getSession())) {</span><br><span class="line">       X509Certificate cert = (X509Certificate) unverifiedHandshake.peerCertificates().<span class="built_in">get</span>(<span class="number">0</span>);</span><br><span class="line">       <span class="keyword">throw</span> <span class="keyword">new</span> SSLPeerUnverifiedException(<span class="string">&quot;Hostname &quot;</span> + host + <span class="string">&quot; not verified:&quot;</span></span><br><span class="line">           + <span class="string">&quot;\n    certificate: &quot;</span> + CertificatePinner.pin(cert)</span><br><span class="line">           + <span class="string">&quot;\n    DN: &quot;</span> + cert.getSubjectDN().getName()</span><br><span class="line">           + <span class="string">&quot;\n    subjectAltNames: &quot;</span> + OkHostnameVerifier.allSubjectAltNames(cert));</span><br><span class="line">     }</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Check that the certificate pinner is satisfied by the certificates presented.</span></span><br><span class="line">     address.certificatePinner().check(host,</span><br><span class="line">         unverifiedHandshake.peerCertificates());</span><br><span class="line"></span><br><span class="line">     <span class="comment">// Success! Save the handshake and the ALPN protocol.</span></span><br><span class="line">     <span class="keyword">String</span> maybeProtocol = connectionSpec.supportsTlsExtensions()</span><br><span class="line">         ? Platform.<span class="built_in">get</span>().getSelectedProtocol(sslSocket)</span><br><span class="line">         : <span class="keyword">null</span>;</span><br><span class="line">     socket = sslSocket;</span><br><span class="line">     source = Okio.buffer(Okio.source(socket));</span><br><span class="line">     sink = Okio.buffer(Okio.sink(socket));</span><br><span class="line">     handshake = unverifiedHandshake;</span><br><span class="line">     protocol = maybeProtocol != <span class="keyword">null</span></span><br><span class="line">         ? Protocol.<span class="built_in">get</span>(maybeProtocol)</span><br><span class="line">         : Protocol.HTTP_1_1;</span><br><span class="line">     success = <span class="keyword">true</span>;</span><br><span class="line">   } <span class="keyword">catch</span> (AssertionError e) {</span><br><span class="line">     <span class="keyword">if</span> (Util.isAndroidGetsocknameError(e)) <span class="keyword">throw</span> <span class="keyword">new</span> IOException(e);</span><br><span class="line">     <span class="keyword">throw</span> e;</span><br><span class="line">   } <span class="keyword">finally</span> {</span><br><span class="line">     <span class="keyword">if</span> (sslSocket != <span class="keyword">null</span>) {</span><br><span class="line">       Platform.<span class="built_in">get</span>().afterHandshake(sslSocket);</span><br><span class="line">     }</span><br><span class="line">     <span class="keyword">if</span> (!success) {</span><br><span class="line">       closeQuietly(sslSocket);</span><br><span class="line">     }</span><br><span class="line">   }</span><br><span class="line"> }</span><br></pre></td></tr></table></figure><p>&#x5F53;&#x7136;&#xFF0C;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x8FD8;&#x6709;&#x53E6;&#x4E00;&#x4E2A;&#x89E3;&#x51B3;&#x65B9;&#x5F0F;&#xFF0C;<strong>&#x5C31;&#x662F;&#x901A;&#x8FC7;OkHttp&#x7684;Dns&#x63A5;&#x53E3;&#x5B9E;&#x73B0;HttpDns&#xFF0C;&#x4E8E;&#x662F;&#x6574;&#x4E2A;&#x4E16;&#x754C;&#x5E73;&#x9759;&#x4E86;</strong>&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD9;&#x4E48;&#x8BF4;&#x5462;&#xFF0C;&#x89C1;&#x4E0B;&#x6587;&#x3002;</p><h3 id="Http-2-0-amp-amp-SPDY-3-1-&#x4E0E;HttpDNS"><a href="#Http-2-0-amp-amp-SPDY-3-1-&#x4E0E;HttpDNS" class="headerlink" title="Http/2.0 &amp;&amp; SPDY/3.1 &#x4E0E;HttpDNS"></a>Http/2.0 &amp;&amp; SPDY/3.1 &#x4E0E;HttpDNS</h3><p>&#x5F53;&#x4F60;&#x5929;&#x771F;&#x7684;&#x4EE5;&#x4E3A;&#x8FD9;&#x6837;&#x89E3;&#x51B3;&#x4E86;&#x95EE;&#x9898;&#x4E4B;&#x540E;&#xFF0C;&#x90A3;&#x4F60;&#x5C31;&#x5927;&#x9519;&#x7279;&#x9519;&#x4E86;&#xFF0C;&#x8FD9;&#x5C31;&#x662F;&#x4E0A;&#x9762;&#x8BF4;&#x7684;&#xFF0C;&#x76F4;&#x63A5;&#x901A;&#x8FC7;OkHttp&#x7684;Dns&#x63A5;&#x53E3;&#x5B9E;&#x73B0;HttpDns&#x4E00;&#x4E86;&#x767E;&#x4E86;&#x7684;&#x539F;&#x56E0;&#x4E86;&#x3002;&#x5728;SPDY&#x548C;Http2.0&#x4E2D;&#xFF0C;&#x8BF7;&#x6C42;&#x5934;&#x4E2D;&#x7684;host&#x5DF2;&#x4E0D;&#x518D;&#x662F;Http1.1&#x65F6;&#x4EE3;&#x7684;host&#x4E86;&#xFF0C;&#x901A;&#x8FC7;&#x67E5;&#x770B;&#x534F;&#x8BAE;&#x6587;&#x6863; <a href="https://tools.ietf.org/html/draft-ietf-httpbis-http2-09#section-8.1.3" target="_blank" rel="noopener">https://tools.ietf.org/html/draft-ietf-httpbis-http2-09#section-8.1.3</a>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x5728;Http2.0&#x4E2D;&#x4F7F;&#x7528;:authority&#x8BF7;&#x6C42;&#x5934;&#x4EE3;&#x66FF;Http1.1&#x4E2D;&#x7684;host</p><p><img src="http2_docs.png" alt="http2_docs.png"></p><p><strong>&#x9898;&#x5916;&#x8BDD;&#xFF0C;&#x5728;Http2.0&#x4E2D;&#xFF0C;&#x6240;&#x6709;&#x8BF7;&#x6C42;&#x5934;&#x5168;&#x90E8;&#x53D8;&#x6210;&#x5C0F;&#x5199;&#xFF0C;&#x5927;&#x5199;&#x7684;&#x8BF7;&#x6C42;&#x5934;&#x662F;&#x4E0D;&#x7B26;&#x5408;&#x89C4;&#x8303;&#x7684;&#x3002;</strong></p><p>&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x5BFC;&#x81F4;&#x7684;&#x76F4;&#x63A5;&#x7ED3;&#x679C;&#x5C31;&#x662F;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x62FF;&#x5230;&#x7684;host&#x662F;ip&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x57DF;&#x540D;&#xFF0C;&#x5982;&#x679C;&#x670D;&#x52A1;&#x5668;&#x5BF9;host&#x8FDB;&#x884C;&#x6821;&#x9A8C;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x80FD;&#x5C31;&#x4F1A;&#x51FA;&#x95EE;&#x9898;&#x3002;</p><p>&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x8BE5;&#x600E;&#x4E48;&#x89E3;&#x51B3;&#x5462;&#xFF1F;&#x540C;&#x6837;&#x9700;&#x8981;&#x5BF9;OkHttp&#x5F00;&#x5200;&#x3002;&#x4FEE;&#x6539;okhttp3.internal.http.Http2xStream&#x4E2D;&#x7684;spdy3HeadersList&#x4EE5;&#x53CA;http2HeadersList&#x65B9;&#x6CD5;&#xFF0C;&#x5C06;&#x5BF9;&#x5E94;&#x8BF7;&#x6C42;&#x5934;&#x7684;&#x503C;&#x8BBE;&#x4E3A;&#x57DF;&#x540D;&#x5373;&#x53EF;&#x3002;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">public static List&lt;Header&gt; spdy3<span class="constructor">HeadersList(Request <span class="params">request</span>)</span> {</span><br><span class="line">    Headers headers = request.headers<span class="literal">()</span>;</span><br><span class="line">    <span class="comment">//&#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;start</span></span><br><span class="line">    <span class="comment">//&#x5148;&#x53D6;header&#x4E2D;&#x7684;host</span></span><br><span class="line">    String host = request.header(<span class="string">&quot;host&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (host<span class="operator"> == </span>null<span class="operator"> || </span>host.length<span class="literal">()</span><span class="operator"> == </span><span class="number">0</span>) {</span><br><span class="line">      <span class="comment">//&#x6CA1;&#x6709;&#x5219;&#x4F7F;&#x7528;&#x539F;&#x59CB;&#x7684;request.url()</span></span><br><span class="line">      host = <span class="module-access"><span class="module"><span class="identifier">Util</span>.</span></span>host<span class="constructor">Header(<span class="params">request</span>.<span class="params">url</span>()</span>, <span class="literal">false</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;end</span></span><br><span class="line">    List&lt;Header&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;(headers.size<span class="literal">()</span> + <span class="number">5</span>);</span><br><span class="line">    result.add(<span class="keyword">new</span> <span class="constructor">Header(TARGET_METHOD, <span class="params">request</span>.<span class="params">method</span>()</span>));</span><br><span class="line">    result.add(<span class="keyword">new</span> <span class="constructor">Header(TARGET_PATH, RequestLine.<span class="params">requestPath</span>(<span class="params">request</span>.<span class="params">url</span>()</span>)));</span><br><span class="line">    result.add(<span class="keyword">new</span> <span class="constructor">Header(VERSION, <span class="string">&quot;HTTP/1.1&quot;</span>)</span>);</span><br><span class="line">    <span class="comment">//&#x4FEE;&#x6539;&#x4E3A;host&#x53D8;&#x91CF;</span></span><br><span class="line">    result.add(<span class="keyword">new</span> <span class="constructor">Header(TARGET_HOST, <span class="params">host</span>)</span>);</span><br><span class="line">    result.add(<span class="keyword">new</span> <span class="constructor">Header(TARGET_SCHEME, <span class="params">request</span>.<span class="params">url</span>()</span>.scheme<span class="literal">()</span>));</span><br><span class="line"></span><br><span class="line">    Set&lt;ByteString&gt; names = <span class="keyword">new</span> LinkedHashSet&lt;&gt;<span class="literal">()</span>;</span><br><span class="line">    for (<span class="built_in">int</span> i = <span class="number">0</span>, size = headers.size<span class="literal">()</span>; i &lt; size; i++) {</span><br><span class="line">      <span class="comment">// header names must be lowercase.</span></span><br><span class="line">      ByteString name = <span class="module-access"><span class="module"><span class="identifier">ByteString</span>.</span></span>encode<span class="constructor">Utf8(<span class="params">headers</span>.<span class="params">name</span>(<span class="params">i</span>)</span>.<span class="keyword">to</span><span class="constructor">LowerCase(Locale.US)</span>);</span><br><span class="line"></span><br><span class="line">      <span class="comment">// Drop headers that are forbidden when layering HTTP over SPDY.</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="module-access"><span class="module"><span class="identifier">SPDY_3_SKIPPED_REQUEST_HEADERS</span>.</span></span>contains(name)) continue;</span><br><span class="line"></span><br><span class="line">      <span class="comment">// If we haven&apos;t seen this name before, add the pair to the end of the list...</span></span><br><span class="line">      String value = headers.value(i);</span><br><span class="line">      <span class="keyword">if</span> (names.add(name)) {</span><br><span class="line">        result.add(<span class="keyword">new</span> <span class="constructor">Header(<span class="params">name</span>, <span class="params">value</span>)</span>);</span><br><span class="line">        continue;</span><br><span class="line">      }</span><br><span class="line"></span><br><span class="line">      <span class="comment">// ...otherwise concatenate the existing values and this value.</span></span><br><span class="line">      for (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; result.size<span class="literal">()</span>; j++) {</span><br><span class="line">        <span class="keyword">if</span> (result.get(j).name.equals(name)) {</span><br><span class="line">          String concatenated = join<span class="constructor">OnNull(<span class="params">result</span>.<span class="params">get</span>(<span class="params">j</span>)</span>.value.utf8<span class="literal">()</span>, value);</span><br><span class="line">          result.set(j, <span class="keyword">new</span> <span class="constructor">Header(<span class="params">name</span>, <span class="params">concatenated</span>)</span>);</span><br><span class="line">          break;</span><br><span class="line">        }</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    return result;</span><br><span class="line">  }</span><br></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">public static List&lt;Header&gt; http2<span class="constructor">HeadersList(Request <span class="params">request</span>)</span> {</span><br><span class="line">    Headers headers = request.headers<span class="literal">()</span>;</span><br><span class="line">    <span class="comment">//&#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;start</span></span><br><span class="line">    <span class="comment">//&#x5148;&#x53D6;header&#x4E2D;&#x7684;host</span></span><br><span class="line">    String host = request.header(<span class="string">&quot;host&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (host<span class="operator"> == </span>null<span class="operator"> || </span>host.length<span class="literal">()</span><span class="operator"> == </span><span class="number">0</span>) {</span><br><span class="line">      <span class="comment">//&#x6CA1;&#x6709;&#x5219;&#x4F7F;&#x7528;&#x539F;&#x59CB;&#x7684;request.url()</span></span><br><span class="line">      host = <span class="module-access"><span class="module"><span class="identifier">Util</span>.</span></span>host<span class="constructor">Header(<span class="params">request</span>.<span class="params">url</span>()</span>, <span class="literal">false</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//&#x52A0;&#x5165;&#x7684;&#x4EE3;&#x7801;end</span></span><br><span class="line">    List&lt;Header&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;(headers.size<span class="literal">()</span> + <span class="number">4</span>);</span><br><span class="line">    result.add(<span class="keyword">new</span> <span class="constructor">Header(TARGET_METHOD, <span class="params">request</span>.<span class="params">method</span>()</span>));</span><br><span class="line">    result.add(<span class="keyword">new</span> <span class="constructor">Header(TARGET_PATH, RequestLine.<span class="params">requestPath</span>(<span class="params">request</span>.<span class="params">url</span>()</span>)));</span><br><span class="line">    <span class="comment">//&#x4FEE;&#x6539;&#x4E3A;host&#x53D8;&#x91CF;</span></span><br><span class="line">    result.add(<span class="keyword">new</span> <span class="constructor">Header(TARGET_AUTHORITY, <span class="params">host</span>)</span>); <span class="comment">// Optional.</span></span><br><span class="line">    result.add(<span class="keyword">new</span> <span class="constructor">Header(TARGET_SCHEME, <span class="params">request</span>.<span class="params">url</span>()</span>.scheme<span class="literal">()</span>));</span><br><span class="line"></span><br><span class="line">    for (<span class="built_in">int</span> i = <span class="number">0</span>, size = headers.size<span class="literal">()</span>; i &lt; size; i++) {</span><br><span class="line">      <span class="comment">// header names must be lowercase.</span></span><br><span class="line">      ByteString name = <span class="module-access"><span class="module"><span class="identifier">ByteString</span>.</span></span>encode<span class="constructor">Utf8(<span class="params">headers</span>.<span class="params">name</span>(<span class="params">i</span>)</span>.<span class="keyword">to</span><span class="constructor">LowerCase(Locale.US)</span>);</span><br><span class="line">      <span class="keyword">if</span> (!<span class="module-access"><span class="module"><span class="identifier">HTTP_2_SKIPPED_REQUEST_HEADERS</span>.</span></span>contains(name)) {</span><br><span class="line">        result.add(<span class="keyword">new</span> <span class="constructor">Header(<span class="params">name</span>, <span class="params">headers</span>.<span class="params">value</span>(<span class="params">i</span>)</span>));</span><br><span class="line">      }</span><br><span class="line">    }</span><br><span class="line">    return result;</span><br><span class="line">  }</span><br></pre></td></tr></table></figure><h3 id="Content-Length&#x5728;Http2-0&#x4E0B;&#x7684;&#x5751;"><a href="#Content-Length&#x5728;Http2-0&#x4E0B;&#x7684;&#x5751;" class="headerlink" title="Content-Length&#x5728;Http2.0&#x4E0B;&#x7684;&#x5751;"></a>Content-Length&#x5728;Http2.0&#x4E0B;&#x7684;&#x5751;</h3><p>&#x5982;&#x679C;&#x4F7F;&#x7528;OkHttp&#x7684;&#x65F6;&#x5019;&#x4F7F;&#x7528;&#x4E86;&#x81EA;&#x5B9A;&#x4E49;&#x7684;RequestBody&#xFF0C;&#x5E76;&#x4E14;&#x4F7F;&#x7528;&#x4E86;application/octet-stream&#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#xFF0C;&#x90A3;&#x4E48;&#x5728;Http2.0&#x4E0B;&#x5C31;&#x9700;&#x8981;&#x7279;&#x522B;&#x6CE8;&#x610F;&#x4E86;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ByteRequestBody</span> <span class="keyword">extends</span> <span class="title">RequestBody</span> </span>{</span><br><span class="line">       <span class="keyword">final</span> MediaType MEDIA_TYPE = MediaType.parse(<span class="string">&quot;application/octet-stream; charset=utf-8&quot;</span>);</span><br><span class="line">       <span class="keyword">byte</span>[] bytes;</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="title">ByteRequestBody</span><span class="params">(<span class="keyword">byte</span>[] bytes)</span> </span>{</span><br><span class="line">           <span class="keyword">this</span>.bytes = bytes;</span><br><span class="line">       }</span><br><span class="line"></span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> MediaType <span class="title">contentType</span><span class="params">()</span> </span>{</span><br><span class="line">           <span class="keyword">return</span> MEDIA_TYPE;</span><br><span class="line">       }</span><br><span class="line"></span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeTo</span><span class="params">(BufferedSink sink)</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">           sink.write(bytes);</span><br><span class="line">       }</span><br><span class="line">   }</span><br></pre></td></tr></table></figure><p>&#x521D;&#x6B65;&#x770B;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x4F60;&#x4F1A;&#x53D1;&#x73B0;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x95EE;&#x9898;&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x4E0A;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x662F;&#x6709;&#x95EE;&#x9898;&#x7684;&#xFF0C;&#x5C06;&#x76F4;&#x63A5;&#x5BFC;&#x81F4;&#x7F51;&#x7EDC;&#x8BF7;&#x6C42;&#x54CD;&#x5E94;&#x53D8;&#x6162;&#xFF0C;&#x52A0;&#x5FEB;&#x670D;&#x52A1;&#x5668;I/O&#x8BBE;&#x5907;&#x8017;&#x635F;&#x3002;</p><p>&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4F1A;&#x5BFC;&#x81F4;&#x670D;&#x52A1;&#x5668;&#x5C06;&#x6240;&#x6709;&#x8BF7;&#x6C42;&#x8FDB;&#x884C;&#x786C;&#x76D8;buffer&#x5904;&#x7406;&#xFF0C;nginx&#x4F1A;&#x62A5;&#x4EE5;&#x4E0B;&#x8B66;&#x544A;</p><blockquote><p>2016/12/02 16:42:58 [warn] 20479#0: <em>77176 a client request body is buffered to a temporary file /home/www/tengine/data/client_body/0033902790, client: </em>.<em>.</em>.*, server: fucknmb.com, request: &#x201C;POST /apiName/apiVersion HTTP/2.0&#x201D;, host: &#x201C;fucknmb.com&#x201D;, referrer: &#x201C;<a href="https://fucknmb.com&quot;">https://fucknmb.com&quot;</a></p></blockquote><p>&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x6211;&#x5E76;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x6700;&#x7EC8;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x4F46;&#x662F;&#x6211;&#x627E;&#x5230;&#x4E86;&#x89E3;&#x51B3;&#x65B9;&#x5F0F;&#xFF0C;&#x5C31;&#x662F;&#x8FD9;&#x4E48;&#x795E;&#x5947;&#x3002;</p><p>&#x5F53;&#x4F7F;&#x7528;application/octet-stream&#x7C7B;&#x578B;&#x65F6;&#xFF0C;OkHttp&#x4F1A;&#x8FFD;&#x52A0;&#x8BF7;&#x6C42;&#x5934;Transfer-Encoding: chunked&#x8BF7;&#x6C42;&#x5934;&#xFF0C;&#x800C;&#x6B64;&#x65F6;&#x5982;&#x679C;&#x8BF7;&#x6C42;&#x5934;&#x91CC;&#x6709;Content-Length&#xFF0C;&#x5219;&#x95EE;&#x9898;&#x4E0D;&#x4F1A;&#x5B58;&#x5728;&#xFF0C;&#x9519;&#x5C31;&#x9519;&#x5728;&#x4E0A;&#x9762;&#x7684;&#x81EA;&#x5B9A;&#x4E49;RequestBody&#xFF0C;&#x6CA1;&#x6709;&#x91CD;&#x5199;contentLength()&#x65B9;&#x6CD5;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x91CD;&#x5199;&#xFF0C;OkHttp&#x4F1A;&#x9ED8;&#x8BA4;&#x8FD4;&#x56DE;-1&#xFF0C;&#x5728;&#x8FD4;&#x56DE;-1&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x662F;&#x4E0D;&#x4F1A;&#x8FFD;&#x52A0;Content-Length&#x8FD9;&#x4E2A;&#x8BF7;&#x6C42;&#x5934;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x7684;&#x539F;&#x56E0;&#x5728;&#x4E0E;&#x4F7F;&#x7528;&#x4E86;application/octet-stream&#x7C7B;&#x578B;&#xFF0C;&#x4F46;&#x6CA1;&#x6709;Content-Length&#xFF0C;&#x800C;&#x4E14;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x53EA;&#x6709;Http2.0&#x4E0B;&#x4F1A;&#x6709;&#x3002;Http/1.1&#x548C;SPDY/3.1&#x90FD;&#x4E0D;&#x4F1A;&#x6709;&#xFF0C;&#x521D;&#x6B65;&#x6000;&#x7591;&#x548C;Http/2.0&#x7684;&#x5E27;&#x4F20;&#x8F93;&#x6709;&#x5173;&#xFF0C;&#x90A3;&#x4E48;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;&#x4E5F;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x91CD;&#x5199;contentLength()&#x65B9;&#x6CD5;&#x5373;&#x53EF;&#x3002;&#x5982;&#x4E0B;</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ByteRequestBody</span> <span class="keyword">extends</span> <span class="title">RequestBody</span> </span>{</span><br><span class="line">       <span class="keyword">final</span> MediaType MEDIA_TYPE = MediaType.parse(<span class="string">&quot;application/octet-stream; charset=utf-8&quot;</span>);</span><br><span class="line">       <span class="keyword">byte</span>[] bytes;</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="title">ByteRequestBody</span><span class="params">(<span class="keyword">byte</span>[] bytes)</span> </span>{</span><br><span class="line">           <span class="keyword">this</span>.bytes = bytes;</span><br><span class="line">       }</span><br><span class="line">       <span class="comment">//&#x8FD4;&#x56DE;&#x5B57;&#x8282;&#x957F;&#x5EA6;</span></span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">contentLength</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">           <span class="keyword">return</span> bytes.length;</span><br><span class="line">       }</span><br><span class="line"></span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> MediaType <span class="title">contentType</span><span class="params">()</span> </span>{</span><br><span class="line">           <span class="keyword">return</span> MEDIA_TYPE;</span><br><span class="line">       }</span><br><span class="line"></span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeTo</span><span class="params">(BufferedSink sink)</span> <span class="keyword">throws</span> IOException </span>{</span><br><span class="line">           sink.write(bytes);</span><br><span class="line">       }</span><br><span class="line">   }</span><br></pre></td></tr></table></figure><p>&#x5F53;&#x7136;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5FC5;&#x8981;&#x4F7F;&#x7528;&#x81EA;&#x5B9A;&#x4E49;RequestBody&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5EFA;&#x8BAE;&#x7528;&#x4EE5;&#x4E0B;&#x65B9;&#x5F0F;&#x521B;&#x5EFA;RequestBody&#xFF0C;&#x907F;&#x514D;&#x6F0F;&#x6389;&#x9700;&#x8981;&#x91CD;&#x5199;&#x7684;&#x65B9;&#x6CD5;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="module-access"><span class="module"><span class="identifier">RequestBody</span>.</span></span>create(<span class="module-access"><span class="module"><span class="identifier">MediaType</span>.</span></span>parse(<span class="string">&quot;application/octet-stream; charset=utf-8&quot;</span>), <span class="built_in">bytes</span>);</span><br></pre></td></tr></table></figure><h3 id="&#x5176;&#x4ED6;&#x6CA1;&#x63D0;&#x5230;&#x7684;&#x5751;"><a href="#&#x5176;&#x4ED6;&#x6CA1;&#x63D0;&#x5230;&#x7684;&#x5751;" class="headerlink" title="&#x5176;&#x4ED6;&#x6CA1;&#x63D0;&#x5230;&#x7684;&#x5751;"></a>&#x5176;&#x4ED6;&#x6CA1;&#x63D0;&#x5230;&#x7684;&#x5751;</h3><ul><li>WebView&#x4E2D;&#x7684;HttpDns&#x573A;&#x666F;&#xFF0C;&#x53C2;&#x8003;<a href="https://help.aliyun.com/document_detail/48972.html?spm=5176.7947101.220063.8.3exzV5" target="_blank" rel="noopener">WebView&#x4E1A;&#x52A1;&#x573A;&#x666F;&#x201C;IP&#x76F4;&#x8FDE;&#x201D;&#x65B9;&#x6848;&#x8BF4;&#x660E;</a>&#xFF0C;&#x7531;&#x4E8E;WebView&#x62E6;&#x622A;&#x8BF7;&#x6C42;&#x5728;Andriod 5.0&#x4EE5;&#x4E0A;&#x548C;Android 5.0&#x4EE5;&#x4E0B;&#x7565;&#x6709;&#x533A;&#x522B;&#xFF0C;&#x5EFA;&#x8BAE;WebView&#x4E2D;&#x53EA;&#x5904;&#x7406;&#x9759;&#x6001;&#x8D44;&#x6E90;&#x7684;HttpDns&#xFF0C;&#x5E76;&#x4E14;&#x5EFA;&#x8BAE;&#x5728;Android 5.0&#x4EE5;&#x4E0B;&#x4E0D;&#x8981;&#x8FDB;&#x884C;&#x62E6;&#x622A;&#x3002;</li><li>Cookie&#x7684;&#x573A;&#x666F;&#xFF0C;&#x53C2;&#x8003;<a href="https://help.aliyun.com/document_detail/47317.html?spm=5176.doc30144.6.584.cP9Fbg" target="_blank" rel="noopener">HTTPDNS&#x57DF;&#x540D;&#x89E3;&#x6790;&#x573A;&#x666F;&#x4E0B;&#x5982;&#x4F55;&#x4F7F;&#x7528;Cookie&#xFF1F;</a></li><li>&#x5B58;&#x5728;&#x4EE3;&#x7406;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x7684;&#x573A;&#x666F;&#xFF0C;&#x4EE3;&#x7406;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x7531;&#x4E8E;&#x57DF;&#x540D;&#x88AB;&#x66FF;&#x6362;&#x6210;&#x4E86;ip&#xFF0C;&#x6216;&#x591A;&#x6216;&#x5C11;&#x4F1A;&#x5B58;&#x5728;&#x95EE;&#x9898;&#xFF0C;&#x5EFA;&#x8BAE;&#x68C0;&#x6D4B;&#x5230;&#x4EE3;&#x7406;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x76F4;&#x63A5;&#x5173;&#x95ED;HttpDns&#x670D;&#x52A1;&#x3002;</li></ul><p>&#x9644;&#x4E0A;Android&#x4E2D;&#x68C0;&#x6D4B;&#x662F;&#x5426;&#x5B58;&#x5728;&#x4EE3;&#x7406;&#x7684;&#x6838;&#x5FC3;&#x4EE3;&#x7801;</p><figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">public static boolean detect<span class="constructor">IfProxyExist(Context <span class="params">ctx</span>)</span> {</span><br><span class="line">      boolean IS_ICS_OR_LATER = Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.ICE_CREAM_SANDWICH;</span><br><span class="line">      String proxyHost;</span><br><span class="line">      <span class="built_in">int</span> proxyPort;</span><br><span class="line">      <span class="keyword">try</span> {</span><br><span class="line">          <span class="keyword">if</span> (IS_ICS_OR_LATER) {</span><br><span class="line">              proxyHost = <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>get<span class="constructor">Property(<span class="string">&quot;http.proxyHost&quot;</span>)</span>;</span><br><span class="line">              String port = <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>get<span class="constructor">Property(<span class="string">&quot;http.proxyPort&quot;</span>)</span>;</span><br><span class="line">              proxyPort = <span class="module-access"><span class="module"><span class="identifier">Integer</span>.</span></span>parse<span class="constructor">Int(<span class="params">port</span> != <span class="params">null</span> ? <span class="params">port</span> : <span class="string">&quot;-1&quot;</span>)</span>;</span><br><span class="line">          } <span class="keyword">else</span> {</span><br><span class="line">              proxyHost = android.net.<span class="module-access"><span class="module"><span class="identifier">Proxy</span>.</span></span>get<span class="constructor">Host(<span class="params">ctx</span>)</span>;</span><br><span class="line">              proxyPort = android.net.<span class="module-access"><span class="module"><span class="identifier">Proxy</span>.</span></span>get<span class="constructor">Port(<span class="params">ctx</span>)</span>;</span><br><span class="line"></span><br><span class="line">          }</span><br><span class="line">          return proxyHost != null<span class="operator"> &amp;&amp; </span>proxyPort != -<span class="number">1</span>;</span><br><span class="line">      } catch (Exception e) {</span><br><span class="line">          e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">      }</span><br><span class="line">      return <span class="literal">false</span>;</span><br><span class="line">  }</span><br></pre></td></tr></table></figure><h3 id="&#x53C2;&#x8003;&#x6587;&#x7AE0;"><a href="#&#x53C2;&#x8003;&#x6587;&#x7AE0;" class="headerlink" title="&#x53C2;&#x8003;&#x6587;&#x7AE0;"></a>&#x53C2;&#x8003;&#x6587;&#x7AE0;</h3><ul><li><a href="https://help.aliyun.com/document_detail/30143.html" target="_blank" rel="noopener">HTTPS&#xFF08;&#x542B;SNI&#xFF09;&#x4E1A;&#x52A1;&#x573A;&#x666F;&#x201C;IP&#x76F4;&#x8FDE;&#x201D;&#x65B9;&#x6848;&#x8BF4;&#x660E;</a></li><li><a href="https://tools.ietf.org/html/draft-ietf-httpbis-http2-09" target="_blank" rel="noopener">Http2.0&#x534F;&#x8BAE;&#x6587;&#x6863;</a></li><li><a href="https://imququ.com/post/enable-alpn-asap.html" target="_blank" rel="noopener">&#x4E3A;&#x4EC0;&#x4E48;&#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x5C3D;&#x5FEB;&#x652F;&#x6301; ALPN&#xFF1F;</a></li></ul>]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Http/2.0</tag>
        <tag>OkHttp</tag>
        <tag>HttpDNS</tag>
      </tags>
  </entry>
  <entry>
    <title>Gradle 函数复用的一点实践</title>
    <url>/2017/01/12/Gradle%E5%87%BD%E6%95%B0%E5%A4%8D%E7%94%A8%E7%9A%84%E4%B8%80%E7%82%B9%E5%AE%9E%E8%B7%B5/</url>
    <content><![CDATA[<blockquote><p>&#x9605;&#x8BFB;&#x672C;&#x7BC7;&#x6587;&#x7AE0;&#x9700;&#x8981;1~2&#x5206;&#x949F;&#xFF0C;&#x6CA1;&#x6709;&#x6280;&#x672F;&#x542B;&#x91CF;&#xFF0C;&#x53EA;&#x662F;&#x8C08;&#x8C08;&#x7ECF;&#x9A8C;&#x3002;</p></blockquote><p>&#x524D;&#x6BB5;&#x65F6;&#x95F4;&#x5728;&#x641E;&#x7EC4;&#x4EF6;&#x5316;&#xFF0C;&#x5176;&#x4E2D;&#x9047;&#x5230;&#x4E00;&#x4E2A;&#x95EE;&#x9898;&#xFF0C;&#x5404;&#x4E2A;&#x6A21;&#x5757;&#x4E2D;&#x7684;gradle&#x6587;&#x4EF6;&#x9700;&#x8981;&#x4E00;&#x4E9B;&#x8F85;&#x52A9;&#x51FD;&#x6570;&#xFF0C;&#x6BD4;&#x5982;&#x7528;&#x4E8E;&#x5224;&#x65AD;&#x5F53;&#x524D;&#x6784;&#x5EFA;&#x7684;&#x4EFB;&#x52A1;&#x662F;&#x5426;&#x5728;jenkins&#x4E0A;&#x6784;&#x5EFA;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x53EF;&#x80FD;&#x4F1A;&#x88AB;&#x591A;&#x6B21;&#x4F7F;&#x7528;&#x3002;&#x6700;&#x5F00;&#x59CB;&#x7684;&#x65F6;&#x5019;&#x53EA;&#x6709;&#x4E00;&#x4E2A;gradle&#x6587;&#x4EF6;&#x7528;&#x5230;&#x4E86;&#xFF0C;&#x5C31;&#x76F4;&#x63A5;&#x5728;&#x7528;&#x5230;&#x7684;gradle&#x6587;&#x4EF6;&#x4E2D;&#x7F16;&#x5199;&#x5BF9;&#x5E94;&#x7684;&#x51FD;&#x6570;&#x3002;&#x540E;&#x6765;&#x53D1;&#x73B0;&#xFF0C;&#x5F88;&#x591A;gradle&#x6587;&#x4EF6;&#x90FD;&#x4F1A;&#x7528;&#x5230;&#xFF0C;&#x4E00;&#x5F00;&#x59CB;&#x5E76;&#x6CA1;&#x6709;&#x8003;&#x8651;&#x592A;&#x591A;&#xFF0C;&#x7528;&#x5230;&#x7684;&#x65F6;&#x5019;&#x5C31;copy&#x4E00;&#x4E0B;&#x5BF9;&#x5E94;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x4E45;&#x800C;&#x4E45;&#x4E4B;&#xFF0C;&#x53D1;&#x73B0;&#x5F88;&#x591A;&#x6587;&#x4EF6;&#x4E2D;&#x5B58;&#x5728;&#x7740;&#x76F8;&#x540C;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5341;&#x5206;&#x4E0D;&#x597D;&#x7EF4;&#x62A4;&#xFF0C;&#x7531;&#x4E8E;&#x73B0;&#x6709;&#x7684;&#x65B9;&#x6CD5;&#x5B9E;&#x5728;&#x662F;&#x592A;&#x8822;&#x4E86;&#x4EE5;&#x81F3;&#x4E8E;&#x81EA;&#x5DF1;&#x90FD;&#x770B;&#x4E0D;&#x4E0B;&#x53BB;&#x4E86;&#xFF0C;&#x4E8E;&#x662F;&#x4E0D;&#x5F97;&#x4E0D;&#x53BB;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002;</p><a id="more"></a><p>&#x90A3;&#x4E48;&#x5728;gradle&#x4E2D;&#xFF0C;&#x6709;&#x6CA1;&#x6709;&#x4E00;&#x79CD;&#x65B9;&#x6CD5;&#x8BA9;&#x516C;&#x5171;&#x51FD;&#x6570;&#x590D;&#x7528;&#x5462;&#xFF1F;&#x7B54;&#x6848;&#x662F;&#x80AF;&#x5B9A;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x7684;&#x8BDD;&#x4E5F;&#x5C31;&#x6CA1;&#x6709;&#x6B64;&#x6587;&#x4E86;&#x3002;</p><p>&#x6211;&#x4EEC;&#x56DE;&#x60F3;&#x4E00;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x5982;&#x4F55;&#x5C06;lib&#x5E93;&#x53D1;&#x5E03;&#x5230;maven&#x79C1;&#x670D;&#xFF0C;&#x4E00;&#x822C;&#x4F1A;&#x6709;&#x4EE5;&#x4E0B;&#x51E0;&#x4E2A;&#x6B65;&#x9AA4;&#xFF1A;</p><ol><li>&#x5E94;&#x7528;maven&#x63D2;&#x4EF6;</li><li>&#x5B9A;&#x4E49;lib&#x5E93;&#x5750;&#x6807;</li><li>&#x5229;&#x7528;uploadArchives&#x8FD9;&#x4E2A;Task&#x53D1;&#x5E03;&#x5230;maven&#x79C1;&#x670D;</li></ol><p>&#x6700;&#x7B80;&#x5355;&#x7684;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF0C;&#x5C06;lib&#x5E93;&#x53D1;&#x5E03;&#x5230;&#x4E86;&#x672C;&#x5730;&#x7684;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#x3002;</p><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">apply plugin: <span class="string">&apos;maven&apos;</span></span><br><span class="line">ext {</span><br><span class="line">    PUBLISH_GROUP_ID = <span class="string">&quot;com.fucknmb&quot;</span></span><br><span class="line">    PUBLISH_ARTIFACT_ID = <span class="string">&quot;test&quot;</span></span><br><span class="line">    PUBLISH_VERSION = <span class="string">&quot;0.0.1&quot;</span></span><br><span class="line">}</span><br><span class="line">uploadArchives {</span><br><span class="line">    repositories {</span><br><span class="line">        mavenDeployer {</span><br><span class="line">            pom<span class="selector-class">.groupId</span> = PUBLISH_GROUP_ID</span><br><span class="line">            pom<span class="selector-class">.artifactId</span> = PUBLISH_ARTIFACT_ID</span><br><span class="line">            pom<span class="selector-class">.version</span> = PUBLISH_VERSION</span><br><span class="line">            repository(url: uri(<span class="string">&apos;../repo&apos;</span>))</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x6211;&#x4EEC;&#x4F1A;&#x5C06;groupId,artifactId&#x4EE5;&#x53CA;version&#x5B9A;&#x4E49;&#x5230;project.ext&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x76F4;&#x63A5;&#x901A;&#x8FC7;&#x53D8;&#x91CF;&#x540D;&#x6765;&#x8BBF;&#x95EE;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#xFF0C;&#x8FD9;&#x6837;&#x505A;&#x7684;&#x597D;&#x5904;&#x5C31;&#x662F;&#x4FBF;&#x4E8E;&#x7EDF;&#x4E00;&#x7BA1;&#x7406;&#x5404;&#x4E2A;&#x53D8;&#x91CF;&#x3002;&#x5176;&#x5B9E;&#x8FD9;&#x662F;&#x53D8;&#x91CF;&#x590D;&#x7528;&#x7684;&#x4E00;&#x79CD;&#x4F53;&#x73B0;&#xFF0C;&#x65E2;&#x7136;&#x53D8;&#x91CF;&#x53EF;&#x4EE5;&#x5982;&#x6B64;&#x590D;&#x7528;&#xFF0C;&#x90A3;&#x4E48;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x53D8;&#x91CF;&#x590D;&#x7528;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x6765;&#x590D;&#x7528;&#x51FD;&#x6570;&#x5462;&#xFF1F;</p><p>&#x5047;&#x8BBE;&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x73B0;&#x5728;&#x9700;&#x8981;&#x5224;&#x65AD;&#x5F53;&#x524D;&#x7684;&#x6784;&#x5EFA;&#x73AF;&#x5883;&#x662F;&#x5426;&#x5728;jenkins&#x4E0A;&#xFF0C;&#x4E00;&#x822C;&#x9700;&#x8981;&#x901A;&#x8FC7;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x6765;&#x5224;&#x65AD;&#x662F;&#x5426;&#x5B58;&#x5728;JOB_NAME&#x548C;BUILD_NUMBER&#x4E24;&#x4E2A;&#x53D8;&#x91CF;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x5C31;&#x4F1A;&#x6709;&#x5982;&#x4E0B;&#x51FD;&#x6570;&#xFF1A;</p><figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x662F;&#x5426;&#x5728;Jenkins&#x5E73;&#x53F0;&#x4E0A;&#x6253;&#x5305;</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">boolean</span> isJenkins() {</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt; <span class="built_in">map</span> = System.getenv()</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">map</span> == <span class="built_in">null</span>){</span><br><span class="line">    	<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">boolean</span> hasBuildJob = <span class="built_in">map</span>.containsKey(<span class="string">&quot;JOB_NAME&quot;</span>)</span><br><span class="line">    <span class="built_in">boolean</span> hasBuildNumber = <span class="built_in">map</span>.containsKey(<span class="string">&quot;BUILD_NUMBER&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> (hasBuildJob &amp;&amp; hasBuildNumber) {</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x8FD9;&#x65F6;&#x5019;A&#x6A21;&#x5757;&#x53EF;&#x80FD;&#x9700;&#x8981;&#x7528;&#x5230;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x4E8E;&#x662F;&#x6BEB;&#x4E0D;&#x72B9;&#x8C6B;&#x7684;&#x628A;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x62F7;&#x8D1D;&#x5230;&#x4E86;A&#x6A21;&#x5757;&#x4E0B;&#x7684;build.gradle&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;OK&#x5B8C;&#x4E8B;&#x3002;</p><p>&#x8FC7;&#x4E86;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#xFF0C;B&#x6A21;&#x5757;&#x8FC7;&#x6765;&#x95EE;&#xFF0C;&#x6709;&#x6CA1;&#x6709;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x5224;&#x65AD;&#x662F;&#x5426;&#x5728;Jenkins&#x4E0A;&#xFF0C;OK&#xFF0C;&#x6709;&#xFF0C;&#x53C8;&#x62F7;&#x4E86;&#x4E00;&#x6B21;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x3002;</p><p>&#x4E45;&#x800C;&#x4E45;&#x4E4B;&#xFF0C;&#x8FD9;&#x79CD;&#x76F8;&#x540C;&#x7684;&#x57FA;&#x7840;&#x51FD;&#x6570;&#xFF0C;&#x4F1A;&#x6563;&#x843D;&#x5728;&#x5404;&#x4E2A;gradle&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x975E;&#x5E38;&#x4E0D;&#x5229;&#x4E8E;&#x7EF4;&#x62A4;&#xFF0C;&#x540E;&#x671F;&#x8981;&#x4FEE;&#x6539;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x51FA;&#x73B0;&#x6539;&#x4E86;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x5FD8;&#x4E86;&#x90A3;&#x4E2A;&#x6587;&#x4EF6;&#x7684;&#x60C5;&#x51B5;&#x3002;&#x4E8E;&#x662F;&#xFF0C;&#x5FC5;&#x987B;&#x8981;&#x5BFB;&#x627E;&#x51FA;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x6765;&#x590D;&#x7528;&#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x3002;&#x53C2;&#x8003;&#x53D8;&#x91CF;&#x590D;&#x7528;&#xFF0C;&#x6211;&#x4EEC;&#x5728;ext&#x4E2D;&#x5B9A;&#x4E49;&#x51FD;&#x6570;&#x3002;</p><p>&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;common_function.gradle&#x6587;&#x4EF6;&#xFF0C;&#x7528;&#x4E8E;&#x590D;&#x7528;&#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x3002;&#x76EE;&#x524D;&#x4E3A;&#x6B62;&#xFF0C;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x4E2D;&#x6682;&#x65F6;&#x8FD8;&#x53EA;&#x6709;isJenkins&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x3002;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x505A;&#x7684;&#x5C31;&#x662F;&#x628A;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5BFC;&#x51FA;&#x3002;&#x5BFC;&#x51FA;&#x65B9;&#x5F0F;&#x4E5F;&#x5F88;&#x7B80;&#x5355;&#xFF1A;</p><figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="comment">//&#x5BFC;&#x51FA;&#x51FD;&#x6570;</span></span><br><span class="line">ext {</span><br><span class="line">    isJenkins = <span class="keyword">this</span>.&amp;isJenkins</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x600E;&#x4E48;&#x6837;&#xFF0C;&#x662F;&#x4E0D;&#x662F;&#x6709;&#x70B9;js&#x4E2D;&#x7684;ES6&#x4E2D;&#x7684;export&#x7684;&#x611F;&#x89C9;&#x3002;&#x6CE8;&#x610F;&#x5BFC;&#x51FA;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x52A0;&#x4E0A;&amp;&#xFF0C;&#x6709;&#x70B9;&#x50CF;C++&#x4E2D;&#x7684;&#x53D6;&#x5730;&#x5740;&#x3002;&#x6574;&#x4E2A;&#x6587;&#x4EF6;&#x73B0;&#x5728;&#x662F;&#x8FD9;&#x6837;&#x7684;&#xFF1A;</p><figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &#x662F;&#x5426;&#x5728;Jenkins&#x5E73;&#x53F0;&#x4E0A;&#x6253;&#x5305;</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">boolean</span> isJenkins() {</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt; <span class="built_in">map</span> = System.getenv()</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">map</span> == <span class="built_in">null</span>){</span><br><span class="line">    	<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    }</span><br><span class="line">    <span class="built_in">boolean</span> hasBuildJob = <span class="built_in">map</span>.containsKey(<span class="string">&quot;JOB_NAME&quot;</span>)</span><br><span class="line">    <span class="built_in">boolean</span> hasBuildNumber = <span class="built_in">map</span>.containsKey(<span class="string">&quot;BUILD_NUMBER&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> (hasBuildJob &amp;&amp; hasBuildNumber) {</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">}</span><br><span class="line"><span class="comment">//&#x5BFC;&#x51FA;&#x51FD;&#x6570;</span></span><br><span class="line">ext {</span><br><span class="line">    isJenkins = this.&amp;isJenkins</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x76EE;&#x524D;&#x4E3A;&#x6B62;&#xFF0C;&#x516C;&#x5171;&#x51FD;&#x6570;&#x7684;&#x5B9A;&#x4E49;&#x4EE5;&#x53CA;&#x5BFC;&#x51FA;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#x4E86;&#xFF0C;&#x63A5;&#x4E0B;&#x6765;&#x8981;&#x505A;&#x7684;&#x5C31;&#x662F;&#x5F15;&#x7528;&#x4E86;&#x3002;&#x5F15;&#x7528;&#x5C31;&#x548C;&#x5E94;&#x7528;&#x63D2;&#x4EF6;&#x662F;&#x4E00;&#x6837;&#x7684;&#x3002;&#x76F4;&#x63A5;&#x5E94;&#x7528;&#x8BE5;common_function.gradle&#x6587;&#x4EF6;&#x5373;&#x53EF;&#x3002;</p><figure class="highlight dart"><table><tr><td class="code"><pre><span class="line"><span class="comment">//&#x516C;&#x5171;&#x51FD;&#x6570;</span></span><br><span class="line">apply from: <span class="string">&quot;<span class="subst">${project.rootProject.file(<span class="string">&apos;common_function.gradle&apos;</span>)}</span>&quot;</span></span><br></pre></td></tr></table></figure><p>&#x4E4B;&#x540E;&#xFF0C;&#x4F60;&#x5C31;&#x53EF;&#x4EE5;&#x5728;&#x5BF9;&#x5E94;&#x5F15;&#x7528;&#x4E86;common_function.gradle&#x7684;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x968F;&#x610F;&#x4F7F;&#x7528;isJenkins&#x51FD;&#x6570;&#x4E86;&#x3002;</p><p>&#x6253;&#x4E2A;&#x6BD4;&#x65B9;&#xFF0C;&#x6709;&#x4E2A;&#x6700;&#x7B80;&#x5355;&#x7684;&#x573A;&#x666F;&#xFF0C;&#x6BD4;&#x5982;&#x70ED;&#x4FEE;&#x590D;&#x53EF;&#x80FD;&#x8981;&#x8BB0;&#x5F55;&#x4E00;&#x4E9B;&#x6587;&#x4EF6;&#xFF0C;&#x4F46;&#x662F;&#x8BB0;&#x5F55;&#x7684;&#x7684;&#x540C;&#x65F6;&#x53EF;&#x80FD;&#x4F1A;&#x964D;&#x4F4E;&#x7F16;&#x8BD1;&#x901F;&#x5EA6;&#xFF0C;&#x800C;&#x5728;&#x672C;&#x5730;&#x6253;&#x5305;&#x7684;&#x65F6;&#x5019;&#x53C8;&#x6070;&#x6070;&#x4E0D;&#x9700;&#x8981;&#xFF0C;&#x4E8E;&#x662F;&#x672C;&#x5730;&#x6253;&#x5305;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x4E0D;&#x9700;&#x8981;&#x5E94;&#x7528;&#x8BE5;&#x63D2;&#x4EF6;&#x3002;&#x6539;&#x9020;&#x540E;&#x7684;&#x811A;&#x672C;&#x5982;&#x4E0B;&#xFF1A;</p><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">apply <span class="string">plugin:</span> <span class="string">&apos;com.android.application&apos;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//hotpatch&#x914D;&#x7F6E;&#xFF0C;&#x53EA;&#x6709;&#x5728;&#x6253;&#x5305;&#x5E73;&#x53F0;&#x4E0A;&#x65F6;&#x624D;&#x5E94;&#x7528;</span></span><br><span class="line"><span class="keyword">if</span> (isJenkins()) {</span><br><span class="line">    apply <span class="string">plugin:</span> <span class="string">&quot;com.fucknmb.tinker&quot;</span></span><br><span class="line">    tinker {</span><br><span class="line">        <span class="comment">//...&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x914D;&#x7F6E;&#x9879;</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>&#x672C;&#x7BC7;&#x6587;&#x7AE0;&#x867D;&#x7136;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#xFF0C;&#x4F46;&#x662F;&#x638C;&#x63E1;&#x4E86;&#x7684;&#x8BDD;&#xFF0C;&#x5BF9;gradle&#x4EE3;&#x7801;&#x7684;&#x53EF;&#x7EF4;&#x62A4;&#x6027;&#x662F;&#x53EF;&#x4EE5;&#x5927;&#x5927;&#x63D0;&#x9AD8;&#x3002;</p>]]></content>
      <categories>
        <category>Gradle</category>
      </categories>
      <tags>
        <tag>Android</tag>
        <tag>Gradle</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello 区长</title>
    <url>/2017/01/12/Hello-%E5%8C%BA%E9%95%BF/</url>
    <content><![CDATA[<p><img src="/2017/01/12/Hello-%E5%8C%BA%E9%95%BF/zhuangbi.jpeg" alt="zhuangbi.jpeg"></p>]]></content>
  </entry>
</search>
